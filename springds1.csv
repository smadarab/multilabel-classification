Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Depend),Outward issue link (Depend),Outward issue link (Depends),Outward issue link (Duplicate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Relate),Outward issue link (Related),Outward issue link (Related),Outward issue link (Supersede),Outward issue link (Supersede),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Acceptance Criteria),Custom field (Actual Story Points),Custom field (Days since last comment),Custom field (Epic Link),Custom field (First Response Date),Custom field (Global Rank),Custom field (Last commented by a User),Custom field (Last updater),Custom field (Out of Scope),Custom field (Platform),Custom field (Pull Request URL),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Ranking),Custom field (Reference URL),Custom field (Spring Forum Reference),Sprint,Sprint,Sprint,Custom field (Story Points),Custom field (Virtual Machine),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Upgrade to Spring Boot 2.1.0,XD-3769,83061,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,,,Fokuo,Fokuo,16/Nov/18 3:57 PM,20/Nov/18 3:18 PM,10/Jul/21 8:33 AM,,,,,,,,,,,,,,,0,,,,,,,"We tried upgrading from Spring Boot 2.0.6 to Spring 2.1.0 and noticing a critical multi-threading bug in the WebClient.  We are using Spring WebFlux with Netty Embedded Server

In SpringBoot 2.0.6 you can see data received and published on happens on two different threads but in SpringBoot 2.1.0 all execution is happening on the same thread even data is published to same thread.  Any reason why the multi-threading behavior has changed in SpringBoot 2.1.0?  Seems like a major defect.  This flaw is preventing us from upgrading to Spring Boot 2.1.0.

It appears with Spring Boot 2.1.0 the default threading behavior of the WebClient has changed to where emissions on published on main thread as opposed to a different thread

See results below

I print the thread on the doOnRequest method of the WebClient

I also print the thread on the doOnNext of the Mono

For version 2.10 you can see emissions are published on the main thread but in earlier version

2.0.6 emissions published on a different thread.

You can see even response time increased for 2.10 because emissions are published on main thread as opposed to different thread

2.0.6.RELEASE

2018-11-15 08:49:45.626 INFO 15228 — [ctor-http-nio-5] c.c.x.n.s.handler.rest.SearchHandler : Search request received for query : 
 2018-11-15 08:49:45.630 INFO 15228 — [ctor-http-nio-5] c.c.x.n.c.s.x.impl.HttpSearchService : Request for search using query param : 
 2018-11-15 08:49:45.633 INFO 15228 — [ctor-http-nio-5] c.c.x.n.m.h.filter.RequestLoggingFilter : Executing request: GET [https://www|https://www/]
 2018-11-15 08:49:45.635 INFO 15228 — [ctor-http-nio-5] c.c.x.n.m.util.AbstractLookupService : Subscribed to request with uri [https://www|https://www/]
 2018-11-15 08:49:45.635 INFO 15228 — [ctor-http-nio-5] c.c.x.n.m.util.AbstractLookupService : Request received for uri [https://www|https://www/] [Thread[reactor-http-nio-5,5,main]]
 2018-11-15 08:49:47.069 INFO 15228 — [ctor-http-nio-4] c.c.x.n.s.f.RequestProcessingTimeFilter : Request processing time for GET 34291c26-8419-4cf9-8c50-eea84bf59d48 is 17 ms with http status null
 2018-11-15 08:49:47.253 INFO 15228 — [ctor-http-nio-8] c.c.x.n.m.util.AbstractLookupService : Time taken for request [http://www|http://www/] is : [1624] ms Thread[reactor-http-nio-8,5,main]]

2.1.0.RELEASE

2018-11-15 09:07:15.886 INFO 5932 — [ctor-http-nio-6] c.c.x.n.s.handler.rest.SearchHandler : Search request received for query : 
 2018-11-15 09:07:15.906 INFO 5932 — [ctor-http-nio-6] c.c.x.n.c.s.x.impl.HttpSearchService : Request for search using query param :
 2018-11-15 09:07:15.912 INFO 5932 — [ctor-http-nio-6] c.c.x.n.m.h.filter.RequestLoggingFilter : Executing request: GET [https://www|https://www/]
 2018-11-15 09:07:15.914 INFO 5932 — [ctor-http-nio-6] c.c.x.n.m.util.AbstractLookupService : Subscribed to request with uri [https://www|https://www/]
 2018-11-15 09:07:15.915 INFO 5932 — [ctor-http-nio-6] c.c.x.n.m.util.AbstractLookupService : Request received for uri [https://www|https://www/]  [Thread[reactor-http-nio-6,5,main]]
 2018-11-15 09:07:18.356 INFO 5932 — [ctor-http-nio-6] c.c.x.n.m.util.AbstractLookupService : Time taken for request [https://www|https://www/] is : [2447] ms  [Thread[reactor-http-nio-6,5,main]]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,83462400,,,9223372036854775807,true,Fokuo(fokuo),,,,"0|i0blt3:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
How do I make a job restartable in spring xd,XD-3768,77638,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,abhineet27,abhineet27,10/Jul/17 12:41 PM,10/Jul/17 12:41 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"The jobs that appear under Executions section of Jobs in spring xd admin ui, has restart button disabled. How do I enable this ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,126144000,,,9223372036854775807,true,abhineet27(abhineet27),,,,"0|i0aqpj:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
admin config timezone command does not work,XD-3767,77511,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,,,dr_pompeii,dr_pompeii,26/Jun/17 3:26 PM,26/Jun/17 3:26 PM,10/Jul/21 8:37 AM,,1.3.2,1.3 GA,,,,,,,,,,,,0,,,,,,,"Working with Spring-XD version 1.3.2.RELEASE

Starting the server with {{xd-singlenode}} command, the following happens for the shell

{code}
xd:>admin config
admin config info        admin config server      admin config timezone
xd:>admin config info
  -------------  -------------------------------------------
  Result         Successfully targeted http://localhost:9393
  Target         http://localhost:9393
  Timezone used  Colombia Time (UTC -5:00)
  -------------  -------------------------------------------

xd:>admin config server
Successfully targeted http://localhost:9393/
xd:>admin config timezone
Command 'admin config timezone' not found (for assistance press TAB)
xd:>
{code}

How you can see the {{admin config timezone}} command shows {{Command 'admin config timezone' not found (for assistance press TAB)}}.

Seems a bug because in the previous output this command appears how a third valid option: 

{code}
xd:>admin config
admin config info        admin config server      admin config timezone
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,127353600,,,9223372036854775807,true,dr_pompeii(dr_pompeii),,,,"0|i0apxb:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Module Upload command not pushing jar to all containers,XD-3766,77130,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,keerthikanth,keerthikanth,19/May/17 9:28 PM,19/May/17 9:28 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,,,Stream Module,,,,,0,Spring,xd,,,,,"My project 7 node cluster and in that 2 node are Admin containers and remaining are non admin containers. When i applied module upload command it created jar with md5 in custom_modules/jobs path only in admin nodes but not in other nodes. I am able to create job based on the uploaded module but job status is shown as ""Failed"" and the reason behind is jars are not placed in all nodes custom_modules/jobs/test_module.jar.
Can you anyone let us know the exact reason why module upload is pushing jars only to admin nodes but not all other nodes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,130636800,,,9223372036854775807,true,keerthikanth(keerthikanth),,,,"0|i0ankv:",9223372036854775807,9223372036854775807,,,,,,10.0,,,,,,,,,,,,,,,,,,,
SpringXD Job is still executing even after forceful Server shutdown,XD-3764,71805,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,srikar2705d,srikar2705d,06/Mar/17 8:01 PM,06/Mar/17 8:01 PM,10/Jul/21 8:37 AM,,,,,,,,,,Batch,,,,,0,,,,,,,"I'm trying to run a Job on SpringXD and the job has 7 steps, When I reach step 4 i'm shutting down the XD server. When I look into the Metadata of SpringXD I'm saving on OracleDB. I see that the Step 4 is in executing status and it will never change to failed. After restarting the server, I still see that the status of the Job is still executing and it never gets finished. If I launch the job it create a new job and the new one gets finished.

My config.xml for jdbc:

    <jdbc:initialize-database data-source=""dataSource"" 
                      enabled=""false"">
        <jdbc:script location=""org/springframework/batch/core/schema-oracle10g.sql"" />
</jdbc:initialize-database>

From org/springframework/batch/core/schema-oracle10g.sql, I see that the sql queries are for creating a table. But when the tables are already existing, as i didn't drop them from my previous job. There was no error which said tables already exist. The new job got appended to previous existing table. HOW?
How can I force the job to fail when the XD server suddenly goes down?
How can I resume the same job that was stopped from the step where it stopped?
Thank you :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,137030400,,,9223372036854775807,true,srikar2705d(srikar2705d),,,,"0|i09r73:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Duplicate entries in table XD_JOB_REGISTRY,XD-3763,71265,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,knoga,knoga,23/Jan/17 10:21 AM,23/Jan/17 10:24 AM,10/Jul/21 8:37 AM,,1.3.1,,,,,,,,,,,,,1,,,,,,,"Hello,

I have encountered following problem while using Spring XD in DIRT (distributed) mode. I have one xd-admin and two xd-containers, Redis as transportation, and SQL Server 2016 as the database. After deploying a job from UI to all available containers sometimes I get two same entries in table {{XD_JOB_REGISTRY}} for the job:
!select.png!

As a result the JOBS -> Deployments page shows nothing but an error _Error fetching data. Is the XD server running_.

There is following exception in the xd-admin log:
{noformat}
2017-01-23T11:13:11+0100 1.3.1.RELEASE ERROR qtp1854907975-29 rest.RestControllerAdvice - Caught exception while handling a request
org.springframework.dao.IncorrectResultSizeDataAccessException: Incorrect result size: expected 1, actual 2
        at org.springframework.dao.support.DataAccessUtils.requiredSingleResult(DataAccessUtils.java:74) ~[spring-tx-4.2.4.RELEASE.jar:4.2.4.RELEASE]
        at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:791) ~[spring-jdbc-4.2.4.RELEASE.jar:4.2.4.RELEASE]
        at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:814) ~[spring-jdbc-4.2.4.RELEASE.jar:4.2.4.RELEASE]
        at org.springframework.xd.dirt.plugins.job.DistributedJobLocator.isIncrementable(DistributedJobLocator.java:203) ~[spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
{noformat}

..because in {{DistributedJobLocator.java}} the query is expected to return exactly one record:
{code:java}
	public Boolean isIncrementable(String jobName) {
		return jdbcTemplate.queryForObject(JOB_INCREMENTABLE, Boolean.class, jobName);
	}
{code}

The code that adds a job in {{DistributedJobLocator.java}} seems to be susceptible to race conditions:
{code:java}
	protected void addJob(String name, boolean incrementable, boolean restartable) {
		Collection<String> jobNames = this.getJobNames();
		// XD admin server will prevent any REST client requests create a job definition with an existing name.
		// ...
		if (!jobNames.contains(name)) {
			addJobName(name, incrementable, restartable);
		}
		else {
			updateJobName(name, incrementable, restartable);
		}
	}

	private void addJobName(String name, boolean incrementable, boolean restartable) {
		jdbcTemplate.update(ADD_JOB_REGISTRY, incrementable, restartable, name);
	}
{code}

...and there are no any unique constraints on the table columns:
{code:sql}
CREATE TABLE XD_JOB_REGISTRY(
    JOB_NAME VARCHAR(100) NOT NULL,
    IS_INCREMENTABLE VARCHAR(10) NOT NULL,
    IS_RESTARTABLE VARCHAR(10) NOT NULL
);
{code}",,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 10:21 AM;knoga;select.png;https://jira.spring.io/secure/attachment/23691/select.png",,,,,,,,,,,,,140659200,,,9223372036854775807,true,knoga(knoga),,,,"0|i09ob3:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Spring XD Dynamic Module ClassLoader Issue,XD-3762,70384,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,,,Fado,Fado,07/Nov/16 9:10 AM,07/Nov/16 9:12 AM,10/Jul/21 8:37 AM,,1.3.1,,,,,,,,Documentation,Packaging,Runtime,,,0,,,,,,,"According to the documentation we can load jars dynamically at module creation time by exploiting the attribute module.classloader in the .properties file :

http://docs.spring.io/spring-xd/docs/1.3.1.RELEASE/reference/html/#module-class-loading

I spent two days trying to test this feature. It does not work. The option module.classloader seems to be simply ignored

I did not find any string named module.classloader in the XD code. But I found another one called module.classpath in this class:

https://github.com/spring-projects/spring-xd/blob/master/spring-xd-module/src/main/java/org/springframework/xd/module/options/ModuleUtils.java

The code in the above class seems to match the documentation. But unfortunalletely it does not work too. My classes are not found and I get java.lang.ClassNotFoundException

I have module option named dir4jars where I put the jars to load at creation time (when I issue job create --name xx --defintion ..). It's a directory, and I have tested the following possibilities, with both module.classpath and module.classloader :

{code:java}

module.classpath=${dir4jars}/*.jar
module.classloader=${dir4jars}/*.jar
.
.
job create --name jobName --definition ""myJobModuleName --dir4jars=C:/ELS/Flash/libxd"" --deploy

and

job create --name jobName --definition ""myJobModuleName --dir4jars=file:C:/ELS/Flash/libxd"" --deploy 

{code}

I need the dir4jars to be absolute and outside XD home.

What's the right option to use for this dynamic load? module.classpath or module.classloader ? Is't a bug in the documentation ?

How can I set an absolute directory as I mentioned above?

Many thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,147312000,,,9223372036854775807,true,Fado(fado),,,,"0|i09ivr:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
java.util.concurrent.RejectedExecutionException in InetUtils.convertAddress,XD-3761,69936,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,joe75,joe75,25/Sep/16 8:03 AM,28/Sep/16 5:31 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,Configuration,,,,,0,,,,,,,"Hi, 

We use spring config server 1.0.4-RELEASE with spring boot 1.2.5-RELEASE without any problems.

Now i update to spring boot 1.4.0.RELEASE and config 1.2.0.RELEASE.

Since then i have problems with the configserver. In the log you can see that the config server loads different configs. This is done from a start-script file to extract ports. This works fine. 
then i start my spring boot app and at the same time i see these errors (RejectedExecutionException) see attachment.

Question:
- is the config read from the configserver only read once at startup?
- could there be a concurrent issue in the config server?

I have just tested spring boot 1.3.7 with config 1.2.0 and got the same problem.
Did just another test: See ConfigServerLogV1.1.3_SpringBoot1.3.7.txt that has the same problem
",,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/16 4:09 PM;joe75;ConfigServerLogV1.1.3_SpringBoot1.3.7.txt;https://jira.spring.io/secure/attachment/23573/ConfigServerLogV1.1.3_SpringBoot1.3.7.txt","25/Sep/16 7:53 AM;joe75;ConfigServerLogWithException.txt;https://jira.spring.io/secure/attachment/23572/ConfigServerLogWithException.txt",,,,,,,,,,,,151113600,,,9223372036854775807,true,joe75(joe75),,,,"0|i09g47:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Composed job endpoint is missing from the defined authorization rules,XD-3759,69226,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,19/Jul/16 8:56 PM,23/Dec/16 2:48 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,1.3.3,,,,,,,0,,,,,,,"More details in the support ticket: https://issuetracker.springsource.com/browse/VESC-679

Following entires should be added to {{application.yml}} file.

{code}
        - POST   /tools/parseJobToGraph                      => hasRole('ROLE_CREATE')
        - POST   /tools/parseJobToGraph.*                   => hasRole('ROLE_CREATE')
        - POST   /tools/convertJobGraphToText            => hasRole('ROLE_CREATE')
        - POST   /tools/convertJobGraphToText.*          => hasRole('ROLE_CREATE')
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,156902400,,,9223372036854775807,true,mark.pollack(mark.pollack),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi0d",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Dead Letter is not created on all RabbitMQ queues for partionned stream,XD-3757,68767,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,mgervais,mgervais,27/May/16 2:13 PM,30/May/16 1:48 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,Waiting for Triage,,Runtime,,,,,0,waiting-for-reporter,,,,,,"Hi,

If I use the module.[name].producer.paritionKeyExpression, and the module as also autoBindDLG enabled, the creates RabbbitMQ queues do not have the DeadLetter policy.
The first queue has it (xdbus.<stream>.0-0) but others do not have it (xdbus.<stream>.0-N).

Thanks

Mickaël

",,,,,,,,,,,,,,,,,,,,,,,,"27/May/16 4:13 PM;grussell;Screen Shot 2016-05-27 at 12.03.11 PM.png;https://jira.spring.io/secure/attachment/23411/Screen+Shot+2016-05-27+at+12.03.11+PM.png","27/May/16 4:13 PM;grussell;Screen Shot 2016-05-27 at 12.03.39 PM.png;https://jira.spring.io/secure/attachment/23410/Screen+Shot+2016-05-27+at+12.03.39+PM.png","27/May/16 4:13 PM;grussell;Screen Shot 2016-05-27 at 12.03.59 PM.png;https://jira.spring.io/secure/attachment/23409/Screen+Shot+2016-05-27+at+12.03.59+PM.png",,,,,,,,,,,161222400,,2016-05-27 16:12:56.021,9223372036854775807,false,grussell(grussell),,,,"0|i098zz:",9223372036854775807,9223372036854775807,,,,,,4.0,,"27/May/16 4:12 PM;grussell;Can you explain further?

There is only one DLQ - failed messages from all partitions are sent to the same DLX/DLQ - you can determine the original queue from the routing key in the header.

The DLQ is not named for the first partition - it doesn't contain a partition id at all - see the attached screenshots.","30/May/16 8:23 AM;mgervais;Hi Gary,

Thanks for your answer & screenshots. 

I agree with the fact that there is only one DLQ, But when I deployed my stream, I've had only one partiionned queue with DLX/DLQ features.
Maybe it linked to on another bug, somethime I've have to delete & re create queue with RabbitMQ because DLX/DLQ features are not created correctly on deployment.

I'll do an another test to check that.

Thanks ","30/May/16 1:48 PM;grussell;If the queue exists already without the DLX arguments we just continue - RabbitMQ doesn't allow changing the arguments and we can't take the risk of deleting and recreating the queue in case a user has specifically created it with other arguments (such as TTL etc).",,,,,,,,,,,,,,,
Composed Modules Can't Have Duplicate Processors,XD-3755,68542,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,02/May/16 10:13 PM,23/Dec/16 2:47 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,1.3.3,,Runtime,,,,,1,,,,,,,"{code}
xd:>module compose foo --definition ""time --fixedDelay=5 | t1:transform --expression=payload+'a' | t2:transform --expression=payload.toUpperCase()
{code}

Produces {{2016-05-02 17:27:20aa}} - the first transform is applied twice.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,160876800,,,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|i097lz:",9223372036854775807,9223372036854775807,,,,,,5.0,,"03/Jun/16 2:14 PM;grussell;Also see [this github issue | https://github.com/spring-projects/spring-xd/issues/1823].",,,,,,,,,,,,,,,,,
Composed Module Child Module Validated Too Early,XD-3754,68541,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,grussell,grussell,02/May/16 10:09 PM,23/Dec/16 2:47 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,1.3.3,,Runtime,,,,,0,,,,,,,"{{module compose foo --definition ""time --fixedDelay=5 | shell --command=my.sh""}}

{code}
xd:>stream create bar --definition ""foo | log"" --deploy
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module foo of type source:
    command: may not be empty
    command: may not be null
{code}

The problem stems from the fact that the options metadata validation is performed on the shell module before the property from the composed module is injected.

Disabling the validation annotations on the metadata avoids the problem.

{code}
//	@NotEmpty
//	@NotNull
public String getCommand() {
	return command;
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,163641600,,,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|i097lr:",9223372036854775807,9223372036854775807,,,,,,5.0,,"02/May/16 10:16 PM;grussell;http://stackoverflow.com/questions/36990876/spring-xd-error-creating-streams-with-composite-module-with-shell-processor-in-i",,,,,,,,,,,,,,,,,
Admin UI login Page failing to load due to require.js timeout - FE,XD-3752,67986,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,,,manju4ever,manju4ever,14/Mar/16 6:09 PM,14/Mar/16 6:09 PM,10/Jul/21 8:37 AM,,1.3 GA,,,,,,,,UI,,,,,0,,,,,,,"When i use the admin-ui web portal which runs on port 9393, there is a load timeout issue by require.js, failing to load the login screen. Could the team please look into this issue ASAP, or give me some other alternative !sping-ui-issue.png|thumbnail!",,,,,,,,,,,,,,,,,,,,,,,,"14/Mar/16 6:09 PM;manju4ever;sping-ui-issue.png;https://jira.spring.io/secure/attachment/23345/sping-ui-issue.png",,,,,,,,,,,,,167875200,,,9223372036854775807,true,manju4ever(manju4ever),,,,"0|i0946v:",9223372036854775807,9223372036854775807,,,,,,20.0,,,,,,,,,,,,,,,,,,,
gpfdist may fail to shutdown with backlog,XD-3751,67863,Bug,In PR,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,jvalkeal,jvalkeal,jvalkeal,03/Mar/16 1:22 PM,03/Mar/16 6:41 PM,10/Jul/21 8:37 AM,,1.3.1,,,,,,,,,,,,,0,,,,,,,"In a case where reactor's ringbuffer is full and thus handling backpressure by blocking `onNext`, shutdown phase where `onComplete` is send will cause a deadlock.

This is shown by a thread dump during a shutdown. This will basically break further deployments for this stream in distributed mode while single node will show more errors during undeployment.

{code}
""pool-7-thread-1"" #58 prio=5 os_prio=0 tid=0x979fe800 nid=0x54de runnable [0x986ad000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:338)
	at reactor.jarjar.com.lmax.disruptor.SingleProducerSequencer.next(SingleProducerSequencer.java:122)
	at reactor.jarjar.com.lmax.disruptor.SingleProducerSequencer.next(SingleProducerSequencer.java:97)
	at reactor.jarjar.com.lmax.disruptor.RingBuffer.next(RingBuffer.java:246)
	at reactor.core.processor.util.RingBufferSubscriberUtils.onNext(RingBufferSubscriberUtils.java:30)
	at reactor.core.processor.RingBufferProcessor.onNext(RingBufferProcessor.java:575)
{code}

{code}
""main-EventThread"" #19 daemon prio=5 os_prio=0 tid=0x9b93a400 nid=0x54b1 runnable [0x9aefe000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:338)
	at reactor.jarjar.com.lmax.disruptor.SingleProducerSequencer.next(SingleProducerSequencer.java:122)
	at reactor.jarjar.com.lmax.disruptor.SingleProducerSequencer.next(SingleProducerSequencer.java:97)
	at reactor.jarjar.com.lmax.disruptor.RingBuffer.next(RingBuffer.java:246)
	at reactor.core.processor.util.RingBufferSubscriberUtils.onComplete(RingBufferSubscriberUtils.java:54)
	at reactor.core.processor.RingBufferProcessor.onComplete(RingBufferProcessor.java:585)
	at org.springframework.xd.greenplum.gpfdist.GPFDistMessageHandler.doStop(GPFDistMessageHandler.java:170)
{code}

I've been crafting workaround for this by trying to wait reactor stream/buffer to get drained by gpdb and finally as last resort, forcing processor in reactor to shutdown.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,168825600,,,9223372036854775807,true,jvalkeal(jvalkeal),,,https://github.com/spring-projects/spring-xd/pull/1901,"0|i093fj:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Cant completely remove custom module after putting properties in /config/modules/job/xx/xx.properties,XD-3750,67825,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,aliiqbal,aliiqbal,29/Feb/16 10:00 AM,13/Mar/16 10:24 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,,,,,,1,,,,,,,"if we put a custom module static properties in `/config/modules/job/module-name/module-name.properties` then we cannot completely remove the module -  you can delete module but you cannot upload new jar with the same name as it gives an error  - there is module already with the same name.

May be important to note that we had a zookeeper data corruption on which support asked us to upgrade. We couldn't upgrade just yet, so I cleaned up zookeeper and recreated all streams/job from original scripts. 

I have observed this behavior after the corruption - I cannot tell for sure if the behavior was there or not before the corruption. In case it is not easily reproducible then it could be environment specific issue.

I may update JIRA once i get time to try it on my local distributed mode.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,you should be able remove jar and upload new version regardless of module properties file in config folder.,,168825600,,,9223372036854775807,true,aliiqbal(aliiqbal),,,,"0|i09373:",9223372036854775807,9223372036854775807,,,,,,1.0,,"03/Mar/16 11:20 AM;aliiqbal;update: you have to remove custom module properties only from the admin server to be able to upload the jar back in.",,,,,,,,,,,,,,,,,
Provisioning of Custom input/output Converters is Broken,XD-3749,67810,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,grussell,grussell,26/Feb/16 3:57 PM,26/Feb/16 4:08 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"Custom conversion is broken.

If the custom {{MimeType}} does not match any of those in {{MessageConverterUtils.getJavaTypeForContentType}} then the channel configuration fails with

{code}
			throw new ModuleConfigurationException(""Content type is not supported for "" +
					channel.getComponentName() + ""Type="" + contentType);
{code}

The code needs to consult custom converters to see what {{MimeType}} (s) they support - and the output Java type.


See http://stackoverflow.com/questions/35639975/adding-a-custom-type-converter-to-spring-xd",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,169344000,,,9223372036854775807,false,grussell(grussell),,,,"0|i0933r:",9223372036854775807,9223372036854775807,,,,,,5.0,,"26/Feb/16 4:08 PM;grussell;The {{ExtensionsTests}} only tests that the custom converter is loaded (which does work); it does not attempt to deploy a stream that utilizes the custom converter.",,,,,,,,,,,,,,,,,
Unable to register the JMX bean MessageHistory from Spring Integration,XD-3748,67772,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,dgarcia,dgarcia,24/Feb/16 10:51 AM,23/Dec/16 2:49 PM,10/Jul/21 8:37 AM,23/Dec/16 2:49 PM,1.3.1,,,,,,1.3.2,,,,,,,0,,,,,,,"If I try to use <int:message-history/> when developing a Spring XD module, it fails when try to export the JMX bean. I've seen that the naming strategy used is org.springframework.xd.dirt.module.jmx.ModuleObjectNamingStrategy

The stackTrace:
{code}
2016-02-24T10:40:39+0000 1.3.1.RELEASE ERROR DeploymentsPathChildrenCache-0 container.DeploymentListener - Exception deploying module
org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [org.springframework.integration.history.MessageHistoryConfigurer@24902b5f] with key 'messageHistoryConfigurer'; nested exception is javax.management.MalformedObjectNameException: Key properties cannot be empty
	at org.springframework.integration.monitor.IntegrationMBeanExporter.registerBeanInstance(IntegrationMBeanExporter.java:375) ~[spring-integration-jmx-4.2.5.RELEASE.jar:na]
	at org.springframework.integration.monitor.IntegrationMBeanExporter.afterSingletonsInstantiated(IntegrationMBeanExporter.java:288) ~[spring-integration-jmx-4.2.5.RELEASE.jar:na]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:792) ~[spring-beans-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839) ~[spring-context-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538) ~[spring-context-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686) ~[spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320) ~[spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139) ~[spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:213) ~[spring-xd-module-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217) ~[spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200) ~[spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.server.container.DeploymentListener.deployModule(DeploymentListener.java:365) [spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.server.container.DeploymentListener.deployStreamModule(DeploymentListener.java:334) [spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.server.container.DeploymentListener.onChildAdded(DeploymentListener.java:181) [spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.xd.dirt.server.container.DeploymentListener.childEvent(DeploymentListener.java:149) [spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509) [curator-recipes-2.6.0.jar:na]
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503) [curator-recipes-2.6.0.jar:na]
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92) [curator-framework-2.6.0.jar:na]
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297) [guava-16.0.1.jar:na]
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83) [curator-framework-2.6.0.jar:na]
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500) [curator-recipes-2.6.0.jar:na]
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35) [curator-recipes-2.6.0.jar:na]
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762) [curator-recipes-2.6.0.jar:na]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_72]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_72]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_72]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_72]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_72]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_72]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_72]
Caused by: javax.management.MalformedObjectNameException: Key properties cannot be empty
	at javax.management.ObjectName.construct(ObjectName.java:483) ~[na:1.8.0_72]
	at javax.management.ObjectName.<init>(ObjectName.java:1382) ~[na:1.8.0_72]
	at javax.management.ObjectName.getInstance(ObjectName.java:1273) ~[na:1.8.0_72]
	at org.springframework.jmx.support.ObjectNameManager.getInstance(ObjectNameManager.java:62) ~[spring-context-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.xd.dirt.module.jmx.ModuleObjectNamingStrategy.getObjectName(ModuleObjectNamingStrategy.java:50) ~[spring-xd-dirt-1.3.1.RELEASE.jar:1.3.1.RELEASE]
	at org.springframework.jmx.export.MBeanExporter.getObjectName(MBeanExporter.java:751) ~[spring-context-4.2.4.RELEASE.jar:4.2.4.RELEASE]
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,169430400,,2016-02-25 14:38:26.073,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1900,"0|i092vb:",9223372036854775807,9223372036854775807,,,,,,1.0,,"25/Feb/16 2:38 PM;grussell;This is a bug in the {{ModuleObjectNamingStrategy}} - it assumes the beanKey is already formatted to call {{ObjectNameManager.getInstance()}}.

The standard naming strategy catches this exception and reformats the key...

{code}
			catch (MalformedObjectNameException ex) {
				String domain = this.defaultDomain;
				if (domain == null) {
					domain = ClassUtils.getPackageName(managedClass);
				}
				Hashtable<String, String> properties = new Hashtable<String, String>();
				properties.put(""type"", ClassUtils.getShortName(managedClass));
				properties.put(""name"", beanKey);
				return ObjectNameManager.getInstance(domain, properties);
			}
{code}

The XD custom naming strategy should subclass {{MetadataNamingStrategy}} as is done for the default Spring Integration naming strategy.",,,,,,,,,,,,,,,,,
Update to Spring Integration 4.2.5 When Available (Fix Metrics),XD-3743,67707,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,abilan,grussell,grussell,17/Feb/16 2:28 PM,21/Feb/16 2:28 AM,10/Jul/21 8:37 AM,21/Feb/16 2:28 AM,1.3 GA,,,,,,1.3.1,,Runtime,,,,,0,,,,,,,See INT-3956,,,,,,,,,,,,,INT-3956,,,,,,,,,,,,,,,,,,,,,,,,170121600,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1895,"0|i092h3:",9223372036854775807,9223372036854775807,,,Sprint 68,,,1.0,,,,,,,,,,,,,,,,,,,
[Flo] Stream creation/definitions doesn't show any component,XD-3741,67669,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,stefano.massera,stefano.massera,13/Feb/16 7:04 PM,21/Feb/16 2:28 AM,10/Jul/21 8:37 AM,21/Feb/16 2:28 AM,1.3 GA,,,,,,1.3.1,,,,,,,0,,,,,,," As a Flo for Spring XD user, I would like to be able to create a new stream using the graphicat UI. 

This flow should be shown in a graphical way also in definition tab.
!http://example.com/image.png!
Right now it doesn't happen due to a javascript error.

{code}
TypeError: this.node.getTransformToElement is not a function
    at Object.VElement.bbox (http://localhost:9393/admin-ui/lib/joint/src/vectorizer.js:323:36)
    at joint.dia.ElementView.joint.dia.CellView.extend.positionRelative (http://localhost:9393/admin-ui/lib/joint/dist/joint.all.clean.js:2740:51)
    at null.<anonymous> (http://localhost:9393/admin-ui/lib/joint/dist/joint.all.clean.js:2710:18)
    at http://localhost:9393/admin-ui/lib/lodash/lodash.compat.js:1177:23
    at eval (eval at createIterator (http://localhost:9393/admin-ui/lib/lodash/lodash.compat.js:1:0), <anonymous>:10:9)
    at Function.forEach (http://localhost:9393/admin-ui/lib/lodash/lodash.compat.js:3645:9)
    at joint.dia.ElementView.joint.dia.CellView.extend.update (http://localhost:9393/admin-ui/lib/joint/dist/joint.all.clean.js:2700:11)
    at bound [as update] (http://localhost:9393/admin-ui/lib/lodash/lodash.compat.js:1005:21)
    at joint.dia.ElementView.joint.dia.CellView.extend.render (http://localhost:9393/admin-ui/lib/joint/dist/joint.all.clean.js:2903:14)
    at joint.dia.Paper.Backbone.View.extend.addCell (http://localhost:9393/admin-ui/lib/joint/dist/joint.all.clean.js:5004:14)(anonymous function) @ :9393/admin-ui/lib/angular/angular.js:11500
:9393!attachment-name.jpg|thumbnail!
{code}
",,,,,,,,,,,,,,,,,,,,,,,,"13/Feb/16 7:03 PM;stefano.massera;Schermata 2016-02-13 alle 20.00.42.png;https://jira.spring.io/secure/attachment/23302/Schermata+2016-02-13+alle+20.00.42.png","13/Feb/16 7:04 PM;stefano.massera;Schermata 2016-02-13 alle 20.01.05.png;https://jira.spring.io/secure/attachment/23301/Schermata+2016-02-13+alle+20.01.05.png",,,,,,,,,,"Stream creation properly shows all stream components available in spring xd runtime
Stream description properly shows stream structures


",,170467200,,2016-02-13 19:08:57.752,9223372036854775807,true,sabby(sabby),,,,"0|i0928n:",9223372036854775807,9223372036854775807,,,Sprint 68,,,1.0,,"13/Feb/16 7:08 PM;sabby;Hi [~stefano.massera]: Latest Chrome update requires upgrades to Flo's JS stack. We are aware of it and the fix is targeted to be released with 1.3.1 on 2/23. In the meantime, you could try on other browsers. ",,,,,,,,,,,,,,,,,
Kafka message bus maxWait property is not set up,XD-3740,67652,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,dgarcia,dgarcia,11/Feb/16 5:45 PM,21/Feb/16 2:28 AM,10/Jul/21 8:37 AM,21/Feb/16 2:28 AM,1.3 GA,,,,,,1.3.1,,,,,,,0,,,,,,,"The maxWait property from server.yml in the message bus section for kafka is not propagated through the code, it is ignored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,170640000,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1889,"0|i0924v:",9223372036854775807,9223372036854775807,,,Sprint 68,,,1.0,,"11/Feb/16 5:49 PM;dgarcia;The property is not set up in the kafka-bus.xml.

As a workaround:

Put the file https://github.com/spring-projects/spring-xd/blob/master/spring-xd-messagebus-kafka/src/main/resources/META-INF/spring-xd/bus/kafka-bus.xml in the xd/config/META-INF/spring-xd/bus/kafka-bus.xml

Adding 

{code:java}
<property name=""defaultMaxWait"" value=""${xd.messagebus.kafka.default.maxWait}""/>
{code}

In the definition of the ""messageBus"" bean.",,,,,,,,,,,,,,,,,
Incorrect refresh period for groovy scripts,XD-3739,67557,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,david_geary,david_geary,05/Feb/16 4:01 PM,12/Feb/16 10:08 PM,10/Jul/21 8:37 AM,12/Feb/16 10:08 PM,1.3 GA,,,,,,1.3.1,,Stream Module,,,,,0,,,,,,,"All modules that allow groovy implementations (filter, script, transform, router, tcpclient) allow automatic refresh of the script when it changes. In the XD documentation it is stated that this refresh occurs every minute eg for filter at http://docs.spring.io/spring-xd/docs/1.3.0.RELEASE/reference/html/#filter ""The script is checked for updates every 60 seconds, so it may be replaced in a running system. "" 

This set up can be seen in the spring xml for the modules - eg (again for filter)

{code:xml}
<filter input-channel=""to.script"" output-channel=""output"">
	<int-groovy:script location=""${script:filter.groovy}"" script-variable-generator=""variableGenerator"" refresh-check-delay=""60""/>
</filter>
{code}

However from the spring integration documentation http://docs.spring.io/spring-integration/docs/4.2.4.RELEASE/reference/html/messaging-endpoints-chapter.html#scripting-config
it specifies that the refresh-check-delay parameter is actually in milliseconds - ie the above XD configuration would recheck the script every 60 milliseconds which may be a performance concern as it will be checking the lastmodified time of the script file. 

Ideally this parameter would be configurable - in our case we would usually eliminate the refresh check altogether (set to -1) as our scripts will not change (or if they did a redeploy of the module would pick it up)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,171158400,,,9223372036854775807,true,grussell(grussell),,,https://github.com/spring-projects/spring-xd/pull/1886,"0|i091jr:",9223372036854775807,9223372036854775807,,,Sprint 67,,,5.0,,,,,,,,,,,,,,,,,,,
REST - Do not redirect after logout,XD-3737,67516,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,02/Feb/16 5:52 PM,03/Feb/16 7:55 PM,10/Jul/21 8:37 AM,03/Feb/16 7:55 PM,1.3 GA,,,,,,1.3.1,,REST,,,,,0,,,,,,,"In the following PR we removed the *RestLogoutSuccessHandler*. 

https://github.com/spring-projects/spring-xd/pull/1562

This is necessary, though, for REST calls and the Admin UI. Otherwise some weird UI behavior might occur due to the HTTP redirect.",,,,,,,,,,,,,,,,,XD-3721,,,,,,,,,,,,,,,,,,,1.0,171331200,,2016-02-03 19:55:36.898,9223372036854775807,true,eric.bottard(eric.bottard),,,https://github.com/spring-projects/spring-xd/pull/1884,"0|i091b3:",9223372036854775807,9223372036854775807,,,Sprint 67,,,1.0,,"03/Feb/16 7:55 PM;eric.bottard;Merged as https://github.com/spring-projects/spring-xd/commit/8b89c82318a466ee2cf38ae6f945ad435a2fd340",,,,,,,,,,,,,,,,,
AutoBindDLQ Incompatible with Partitioned Streams (Producer Side).,XD-3734,67329,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,15/Jan/16 7:55 PM,12/Feb/16 10:10 PM,10/Jul/21 8:37 AM,12/Feb/16 10:10 PM,1.3 GA,,,,,,1.3.1,,,,,,,0,,,,,,,See http://stackoverflow.com/questions/34817906/spring-xd-rabbitmq-partitioned-stream-deployment-in-failure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,172972800,,,9223372036854775807,false,grussell(grussell),,,https://github.com/spring-projects/spring-xd/pull/1876,"0|i0905r:",9223372036854775807,9223372036854775807,,,Sprint 67,,,1.0,,,,,,,,,,,,,,,,,,,
Overrides to servers.yml file aren't taken into account,XD-3732,67314,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,sabby,sabby,13/Jan/16 11:26 PM,14/Jan/16 2:26 PM,10/Jul/21 8:37 AM,14/Jan/16 2:26 PM,,,,,,,,,,,,,,0,,,,,,,"As a developer, I'm adding new overrides to {{server.yml}} file; however, the overridden properties do not reflect even after the restart of server. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,173059200,,2016-01-14 13:03:34.902,9223372036854775807,true,sabby(sabby),,,,"0|i08zcr:",9223372036854775807,9223372036854775807,,,,,,2.0,,"14/Jan/16 1:03 PM;dturanski;If this is in reference to spring.redis.pool.maxActive, it is not true. I am able to override that. IIRC, there was some confusion about the property name as shown in the boot  docs.","14/Jan/16 2:26 PM;sabby;You're correct! I created this as soon as Gary had issues overriding {{redis}} properties; of course, it's due to wrong property name override, anyway. I'll close this as invalid.",,,,,,,,,,,,,,,,
NPE in spring-integration when using kafka as message bus when using aggrzgation module,XD-3730,67270,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,,VirgileD,VirgileD,08/Jan/16 3:53 PM,28/Feb/16 7:36 PM,10/Jul/21 8:37 AM,28/Feb/16 7:36 PM,1.3.1,,,,,,,,Stream Module,,,,,0,,,,,,,as stated in https://jira.spring.io/browse/INT-3908 sprint-integration in springxd can't use kafka as message bus in most case. Could it spring-xd integrat this fix for us to use it?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,169171200,,2016-02-28 19:36:17.768,9223372036854775807,true,sabby(sabby),,,,"0|i08zsv:",9223372036854775807,9223372036854775807,,,,,,3.0,,"28/Feb/16 7:36 PM;sabby;Hi [~VirgileD]: This is already addressed in 1.3.1 via XD-3743. Closing this issue. ",,,,,,,,,,,,,,,,,
batch-hive module from spring-xd-samples project is not working,XD-3728,67216,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,nachiketbondale,nachiketbondale,04/Jan/16 6:34 AM,04/Jan/16 12:38 PM,10/Jul/21 8:37 AM,,1.3 RC1,,,,,,,,Batch,Hadoop,YARN Runtime,,,0,hive,spring-batch-samples,,,,,"***Version
	Spring XD Version : spring-xd-1.3.0.RELEASE, spring-xd-1.3.0.RELEASE-yarn
	OS & Version: Linux 2.6.32-431.29.2.el6.x86_64 
	Java Version: java version ""1.7.0_65""

***Description
	The batch-hive job in the spring-xd-samples project (link: https://github.com/spring-projects/spring-xd-samples/tree/master/batch-hive ) is failing with inline error message.

***Steps to recreate the problem
1. Created a jar for batch-hive job.
	2. Once the final jar was ready, uploaded using ""module upload --name test_hive_module --type job --file /home/user/jar/batch_hive.jar""
3. After that created and deployed job using ""job create --name test_hive_job --definition test_hive_module --deploy""
	4. Finally launched using ""job launch test_hive_job"" which failed with inline error.

***Describe XD Deployment : Distributed 

Deployment Type : Distributed - YARN ( on AWS EC2 cloud )
Number of xd-admin’s and xd-container’s  : 1 Admin and 3 Containers 


***Describe Other Components

Transport: Redis 3.0.1
ZooKeeper: Version 3.4.6.2.3.2.0-2950


Hadoop deployment
Data Platform : Hortonworks HDP 2.3.2.0-2950
RDBMS: MySQL 


***Error Message: 

*****************************************************
INFO DeploymentSupervisor-0 zk.ZKJobDeploymentHandler - Deployment status for job 'test_hive_job': DeploymentStatus{state=failed,error(s)=org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hive': Cannot resolve reference to bean 'hive-tasklet' while setting bean property 'tasklet'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hive-tasklet': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/hive/service/HiveClient
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
        at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:213)
        at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
        at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
        at org.springframework.xd.dirt.server.container.DeploymentListener.deployModule(DeploymentListener.java:365)
        at org.springframework.xd.dirt.server.container.DeploymentListener.deployJobModule(DeploymentListener.java:291)
        at org.springframework.xd.dirt.server.container.DeploymentListener.onChildAdded(DeploymentListener.java:181)
        at org.springframework.xd.dirt.server.container.DeploymentListener.childEvent(DeploymentListener.java:149)
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
        at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
        at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
        at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
        at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hive-tasklet': Initialization of bean failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/hive/service/HiveClient
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
        ... 37 more
Caused by: java.lang.NoClassDefFoundError: org/apache/hadoop/hive/service/HiveClient
        at java.lang.Class.getDeclaredMethods0(Native Method)
        at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
        at java.lang.Class.getDeclaredMethods(Class.java:1975)
        at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:606)
        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:518)
        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:504)
        at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:241)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1069)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1042)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1481)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1226)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
        ... 43 more
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.hive.service.HiveClient
        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
        ... 63 more
}
*****************************************************
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,173923200,,2016-01-04 12:38:58.069,9223372036854775807,true,sabby(sabby),,,,"0|i08zgv:",9223372036854775807,9223372036854775807,,,,,,5.0,,"04/Jan/16 12:38 PM;sabby;Hi [~nachiketbondale]: Did you start the {{xd-container}} and {{xd-shell}} servers with {{--hadoopDistro}} option? This, if specified loads the right hadoop distribution libraries, which seems to the reason for this failure. More details [here|http://docs.spring.io/spring-xd/docs/1.3.1.BUILD-SNAPSHOT/reference/html/#using-hadoop].


",,,,,,,,,,,,,,,,,
xd.module.sequence Property Missing,XD-3727,67197,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,29/Dec/15 5:15 PM,20/Feb/17 10:34 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"Two separate reports of problems with this property:

http://stackoverflow.com/questions/34439296/spring-xd-stream-deployment-failure

http://stackoverflow.com/questions/34514393/issue-in-spring-xd-cluster-when-deploying-my-module",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,138240000,,,9223372036854775807,false,grussell(grussell),,,,"0|i08zcn:",9223372036854775807,9223372036854775807,,,,,,3.0,,"20/Feb/17 10:34 PM;grussell;Another instance: http://stackoverflow.com/questions/42354811/spring-xd-could-not-resolve-placeholder-xd-module-sequence",,,,,,,,,,,,,,,,,
Processor module does not load classes from custom module package,XD-3726,67131,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,spaladugu,spaladugu,18/Dec/15 4:19 PM,18/Dec/15 4:19 PM,10/Jul/21 8:37 AM,,,,,,,,,,Runtime,,,,,0,,,,,,," The processor module which is failing to load castor classes from the module path.The code works fine with eclipse DIRT based test cases. I am attaching the code to this email. The jar that it built has the jars that it need at runtime in /module../lib folder. 

The code worked fine when i put all the custom jars and application jar in xd/lib. Spoke to Thomas Risberg and confirm this is broken and need to be fixing.[^attachment-name.zip]",,,,,,,,,,,,,,,,,,,,,,,,"18/Dec/15 4:19 PM;spaladugu;faultevent-processor.zip;https://jira.spring.io/secure/attachment/23250/faultevent-processor.zip",,,,,,,,,,,,,175392000,,,9223372036854775807,true,spaladugu(spaladugu),,,,"0|i08yxz:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
EmbeddedHeadersMessageConverter Buffer Overflow,XD-3725,67117,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,grussell,grussell,grussell,17/Dec/15 6:11 PM,25/Dec/15 12:16 AM,10/Jul/21 8:37 AM,25/Dec/15 12:16 AM,,,,,,,1.3.1,,Runtime,,,,,0,PullRequest,,,,,,See https://github.com/spring-projects/spring-xd/issues/1871,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,175478400,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1872,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fnx",9223372036854775807,9223372036854775807,,,Sprint 64,,,1.0,,,,,,,,,,,,,,,,,,,
Admin UI does not respond after login in IE 11 ,XD-3722,67057,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,ali.iqbal@gmail.com,ali.iqbal@gmail.com,14/Dec/15 6:44 PM,31/Jan/16 1:30 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,UI,,,,,0,,,,,,,I have IE 11. The XD admin UI stops responding after the login prompt and I have to kill the browser every time. It's not functional. I have not tried it with security turned off. Attach is the screenshot of the version.,,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/15 6:44 PM;ali.iqbal@gmail.com;Screenshot 2015-12-14 22.16.51.png;https://jira.spring.io/secure/attachment/23244/Screenshot+2015-12-14+22.16.51.png",,,,,,,,,,,,,175737600,,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fny",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
XD Admin UI log out does not function properly,XD-3721,67056,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,ali.iqbal@gmail.com,ali.iqbal@gmail.com,14/Dec/15 6:40 PM,03/Feb/16 8:43 PM,10/Jul/21 8:37 AM,03/Feb/16 8:43 PM,1.2.1,,,,,,1.3.1,,UI,,,,,0,,,,,,,"I am using XD 1.2.1.RELEASE. I have following environment variables 

XD_CONFIG_NAME = mycompany
And 
SPRING_PROFILE_ACTIVE= prod, admin

i have XD configuration file (mycompany-prod.yml) with following security configuration

# Config to enable security on administration endpoints (consider adding ssl)
spring:
  profiles: prod
security:
  basic:
    enabled: true # false to disable security settings (default)
    realm: SpringXD
xd:
  security:
    authentication:
      file:
        enabled: true 
        users:
          xdadmin: pwd, ROLE_ADMIN,ROLE_VIEW,ROLE_CREATE

I get a login screen, login works alright. When i logout - i still see all the tabs and contents in all the tabs. See the attached screenshot.
",,,,,,,,,,,,,,,,,,,,,,,,"14/Dec/15 6:46 PM;ali.iqbal@gmail.com;Screenshot 2015-12-14 22.02.13.png;https://jira.spring.io/secure/attachment/23245/Screenshot+2015-12-14+22.02.13.png",,,,,,,,,,,,1.0,171331200,,2016-02-03 20:43:30.017,9223372036854775807,true,eric.bottard(eric.bottard),,,https://github.com/spring-projects/spring-xd-admin-ui-client/pull/12,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fnw",9223372036854775807,9223372036854775807,,,Sprint 67,,,1.0,,"14/Dec/15 6:46 PM;ali.iqbal@gmail.com;screenshot","03/Feb/16 8:43 PM;eric.bottard;Merged as a852f0d",,,,,,,,,,,,,,,,
Custom job with RabbitMq dependencies ,XD-3720,67003,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,mgervais,mgervais,09/Dec/15 11:28 AM,09/Dec/15 11:28 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Batch,Configuration,,,,0,batch,class-loader,custom,rabbitmq,,,"Hi,

I've develop a custom Job which have to publish message on RabbitMq when it's finished.

To develop this module, I'veto include this libraries:
* com.rabbitmq:amqp-client:jar
* org.springframework.amqp:spring-rabbit:jar
* org.springframework.amqp:spring-amqp:jar

My job use this writer: org.springframework.batch.item.amqp.AmqpItemWriter

I've this error log:
{noformat}
 support.DefaultAmqpHeaderMapper - skipping header 'amqp_deliveryMode' since it is not of expected type [class org.springframework.amqp.core.MessageDeliveryMode], it is [class org.springframework.amqp.core.MessageDeliveryMode]
{noformat}

This is typically due to a library loaded several times.

What is the solution to resolve this?

I'd like to use the same libraries has RabbitMq Source/Sink or the transport bus.

Does module classloader isolated from others?

Thanks

Mickaël",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,176169600,,,9223372036854775807,true,mgervais(mgervais),,,,"0|i08y5z:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Spring flo issue with unexpected char,XD-3719,67002,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,fadzi,fadzi,09/Dec/15 6:21 AM,08/Feb/16 6:36 PM,10/Jul/21 8:37 AM,08/Feb/16 6:36 PM,1.3 GA,,,,,,,,UI,,,,,0,,,,,,,In Flo when creating a stream if you use asterisk you get an error. See the image attached.,,,,,,,,,,,,,,,,,,,,,,,,"09/Dec/15 6:21 AM;fadzi;image001.png;https://jira.spring.io/secure/attachment/23236/image001.png",,,,,,,,,,,,,170899200,,2016-02-02 00:45:51.795,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fnwi",9223372036854775807,9223372036854775807,,,Sprint 67,,,2.0,,"02/Feb/16 12:45 AM;aclement;Sabby just pointed me to this but I'm having trouble recreating it. The problem to me (that i can see in the screenshot) is that the text in the box on the page shows quotes around the option value to cron ""trigger --cron='0 0 8 ? * MON' ..."" but in the popup dialog that appears when you press create stream they are not shown in the preview of what will be defined. Now I remember fixing something very like this prior to 1.3.0.  I just tried and if I enter the stream definition ""trigger --cron='0 0 8 ? * MON' | log"" into 1.2.1 then I get this problem, if I do it in 1.3.0 then I don't. If you were running 1.3.0 are you confident you fully cleared your browser cache? otherwise it might pick up the older JavaScript that had the problem.","02/Feb/16 7:18 PM;aclement;A good way to run 'clean' as a test is fire up a private browsing session and then load the page - since that won't be using cached resources.","08/Feb/16 6:36 PM;sabby;[~fadzi]: I sent you an email last week, but I didn't hear anything yet. If you still see any issues with Flo, please either reopen or create a new ticket. ",,,,,,,,,,,,,,,
The batch-hashtag-count example from spring-xd-samples is giving java.lang.ClassNotFoundException Exception,XD-3713,66879,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,thomas.risberg,nachiketbondale,nachiketbondale,27/Nov/15 1:11 PM,01/Feb/16 3:12 PM,10/Jul/21 8:37 AM,,1.3 M1,,,,,,,,Batch,Hadoop,YARN Runtime,,,0,,,,,,,"***Version
	Spring XD Version : spring-xd-1.3.0.RELEASE, spring-xd-1.3.0.RELEASE-yarn
	OS & Version: Linux 2.6.32-431.29.2.el6.x86_64 
	Java Version: java version ""1.7.0_65""

***Description
	The batch-hashtag-count example from spring-xd-samples ran using spring xd is failing with inline error message.

***Steps to recreate the problem
	1. Followed steps present in README.asciidoc present at the Git repository link given below 
		https://github.com/spring-projects/spring-xd-samples/tree/master/batch-hashtag-count
	

	

***Describe XD Deployment : Distributed 

Deployment Type : Distributed - YARN ( on AWS EC2 cloud )
Number of xd-admin’s and xd-container’s  : 1 Admin and 3 Containers 


***Describe Other Components

Transport: Redis 3.0.1
ZooKeeper: Version 3.4.6.2.3.2.0-2950


Hadoop deployment
Data Platform : Hortonworks HDP 2.3.2.0-2950
RDBMS: MySQL 


***Error Message: 

*****************************************************
2015-11-23 17:56:16,527 WARN [main] org.apache.hadoop.mapred.YarnChild: Exception running child : java.lang.RuntimeException: java.lang.ClassNotFoundException: Class or
g.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper not found
        at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2195)
        at org.apache.hadoop.mapreduce.task.JobContextImpl.getMapperClass(JobContextImpl.java:186)
        at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:745)
        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)
        at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:164)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Subject.java:422)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)
        at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:158)
Caused by: java.lang.ClassNotFoundException: Class org.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper not found
        at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2101)
        at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2193)
        ... 8 more
*****************************************************",,,,,,,,,,,,,,,,,XD-3710,,,,,,,,,,,,,,,,,,,,176774400,,2015-11-27 14:46:35.768,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fnxd",9223372036854775807,9223372036854775807,,,,,,5.0,,"27/Nov/15 2:46 PM;sabby;Hi Nachiket, 
Can you verify whether the uploaded custom module bits ({{batch-hashtag-count-1.0.0.BUILD-SNAPSHOT.jar}}) is actually present in the Hadoop instance at the path: {{/xd/yarn/custom-modules/job}}?

More details [here|http://docs.spring.io/spring-xd/docs/1.3.1.BUILD-SNAPSHOT/reference/html/#_adding_custom_modules].","30/Nov/15 8:53 AM;nachiketbondale;Hi Sabby,

We uploaded a module in xd-yarn with name as ""test_hashtag"". This module was uploaded to run ""batch-hashtag-count-1.0.0.BUILD-SNAPSHOT.jar"". Due to this, test_hashtag.jar got uploaded in /xd/yarn/custom-modules/job.

We also tried to run the job after uploading ""batch-hashtag-count-1.0.0.BUILD-SNAPSHOT.jar"" to /xd/yarn/custom-modules/job.
But, it failed with same error as earlier.

Thanks,
Nachiket","02/Dec/15 11:06 AM;nachiketbondale;Hi Sabby,

I could resolve the error by adding libs option in the spring-module.xml file for creating the hadoop job. 

Original code :

<hadoop:job id=""hashtagcountJob""
input-path=""${tweets.input.path}""
output-path=""${tweets.output.path}""
jar=""${xd.customModule.home}/job/${xd.module.name}.jar""
mapper=""org.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper""
reducer=""org.springframework.xd.examples.hadoop.HashtagCount$LongSumReducer""
scope=""step"" />
		

Updated code :

<hadoop:job id=""hashtagcountJob""
input-path=""${tweets.input.path}""
output-path=""${tweets.output.path}""
jar=""${xd.customModule.home}/job/${xd.module.name}.jar""
mapper=""org.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper""
reducer=""org.springframework.xd.examples.hadoop.HashtagCount$LongSumReducer"" 
scope=""step""
libs=""${xd.customModule.home}/job/${xd.module.name}.jar"" />

Can you please confirm if providing the libs parameter is mandatory for YARN deployment.

Thanks,
Nachiket",,,,,,,,,,,,,,,
XD  / Zookeeper connection lost.,XD-3711,66847,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,,,mgervais,mgervais,25/Nov/15 8:51 AM,09/Dec/15 11:17 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Runtime,,,,,0,container,curator,zookeeper,,,,"XD container loose connection with Zookeeper.

I'm in a distributed environnement:
- 3 XD container nodes (1.2.1)
- 1 XD admin
- 3 Zookeeper
- 3 RabbitMQ
- 3 Redis/Sentinel

Logs:

*zookeeper.log*
{noformat}
2015-11-25 06:53:07,235 [myid:3] - INFO  [QuorumPeer[myid=3]/0:0:0:0:0:0:0:0:2181:ZooKeeperServer@617] - Established session 0x251250651910006 with negotiated timeout 40000 for client /172.20.1.9:58070
2015-11-25 06:54:08,525 [myid:3] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@357] - caught end of stream exception
EndOfStreamException: Unable to read additional data from client sessionid 0x251250651910006, likely client has closed socket
        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228)
        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208)
        at java.lang.Thread.run(Thread.java:745)
2015-11-25 06:54:08,621 [myid:3] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1007] - Closed socket connection for client /172.20.1.9:58070 which had sessionid 0x251250651910006
{noformat}

*container.log*
{noformat}
2015-11-25T06:53:37+0100 1.2.1.RELEASE ERROR main-EventThread curator.ConnectionState - Connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (34187)
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
        at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:198) [curator-client-2.6.0.jar:na]
        at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:88) [curator-client-2.6.0.jar:na]
        at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:115) [curator-client-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.getZooKeeper(CuratorFrameworkImpl.java:474) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107) [curator-client-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41) [curator-framework-2.6.0.jar:na]
        at org.springframework.xd.dirt.server.container.DeploymentListener$StreamModuleWatcher.process(DeploymentListener.java:596) [spring-xd-dirt-1.2.1.RELEASE.jar:1.2.1.RELEASE]
        at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:67) [curator-framework-2.6.0.jar:na]
        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522) [zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498) [zookeeper-3.4.6.jar:3.4.6-1569965]
2015-11-25T06:53:37+0100 1.2.1.RELEASE ERROR CuratorFramework-0 curator.ConnectionState - Connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (34189)
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
        at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:198) [curator-client-2.6.0.jar:na]
        at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:88) [curator-client-2.6.0.jar:na]
        at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:115) [curator-client-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.performBackgroundOperation(CuratorFrameworkImpl.java:793) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:779) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.access$400(CuratorFrameworkImpl.java:58) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl$4.call(CuratorFrameworkImpl.java:265) [curator-framework-2.6.0.jar:na]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_60]
        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]
2015-11-25T06:53:39+0100 1.2.1.RELEASE ERROR CuratorFramework-0 curator.ConnectionState - Connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (36191)
org.apache.curator.CuratorConnectionLossException: KeeperErrorCode = ConnectionLoss
        at org.apache.curator.ConnectionState.checkTimeouts(ConnectionState.java:198) [curator-client-2.6.0.jar:na]
        at org.apache.curator.ConnectionState.getZooKeeper(ConnectionState.java:88) [curator-client-2.6.0.jar:na]
        at org.apache.curator.CuratorZookeeperClient.getZooKeeper(CuratorZookeeperClient.java:115) [curator-client-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.performBackgroundOperation(CuratorFrameworkImpl.java:793) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop(CuratorFrameworkImpl.java:779) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl.access$400(CuratorFrameworkImpl.java:58) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.CuratorFrameworkImpl$4.call(CuratorFrameworkImpl.java:265) [curator-framework-2.6.0.jar:na]
[...]
2015-11-25T06:54:34+0100 1.2.1.RELEASE INFO ConnectionStateManager-0 container.ContainerRegistrar - Waiting for supervisor to clean up prior deployments (elapsed time 26 seconds)...
2015-11-25T06:55:05+0100 1.2.1.RELEASE INFO ConnectionStateManager-0 container.ContainerRegistrar - Waiting for supervisor to clean up prior deployments (elapsed time 57 seconds)...
2015-11-25T06:56:05+0100 1.2.1.RELEASE INFO ConnectionStateManager-0 container.ContainerRegistrar - Waiting for supervisor to clean up prior deployments (elapsed time 117 seconds)...
2015-11-25T06:57:05+0100 1.2.1.RELEASE INFO ConnectionStateManager-0 container.ContainerRegistrar - Waiting for supervisor to clean up prior deployments (elapsed time 177 seconds)...
{noformat}

*admin.log*
{noformat}
2015-11-25T06:54:23+0100 1.2.1.RELEASE ERROR DeploymentSupervisor-0 cache.PathChildrenCache -
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/allocated/b1de9530-1837-42c0-a6bc-840b1b15aefc/JOB_TRIGGER.source.trigger.1
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155) ~[zookeeper-3.4.6.jar:3.4.6-1569965]
        at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302) ~[curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291) ~[curator-framework-2.6.0.jar:na]
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107) ~[curator-client-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287) ~[curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279) ~[curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41) ~[curator-framework-2.6.0.jar:na]
        at org.springframework.xd.dirt.server.admin.deployment.zk.DepartingContainerModuleRedeployer.deployModules(DepartingContainerModuleRedeployer.java:116) ~[spring-xd-dirt-1.2.1.RELEASE.jar:1.2.1.RELEASE]
        at org.springframework.xd.dirt.server.admin.deployment.zk.ContainerListener.childEvent(ContainerListener.java:140) ~[spring-xd-dirt-1.2.1.RELEASE.jar:1.2.1.RELEASE]
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509) [curator-recipes-2.6.0.jar:na]
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503) [curator-recipes-2.6.0.jar:na]
        at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92) [curator-framework-2.6.0.jar:na]
        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297) [guava-16.0.1.jar:na]
        at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83) [curator-framework-2.6.0.jar:na]
        at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500) [curator-recipes-2.6.0.jar:na]
        at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35) [curator-recipes-2.6.0.jar:na]
        at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762) [curator-recipes-2.6.0.jar:na]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_60]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_60]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_60]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_60]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_60]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_60]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_60]
        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]
{noformat}

If a module is deployed on the node which has lost the connection, it's not redeployed on one of the two others.

The only difference between node, is that the node in error has less memory.

When this occurs, node doesn't appear anymore on the admin ui. And deployed streams do not appear as incomplete, but they should if a node has disappear and deployment property _module.*.count_ is set to the number of nodes.

Thanks.

Mickaël",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,176169600,,2015-11-29 19:40:19.819,9223372036854775807,true,mgervais(mgervais),If you need more informations I can provide full logs.,,,"0|i08x7r:",9223372036854775807,9223372036854775807,,,,,,5.0,,"29/Nov/15 7:40 PM;sabby;Hi [~mgervais]: This may not be entirely related, but we recently improved the accountability of {{xd-container}}'s departure and arrival. Refer to XD-3078 and this [PR|https://github.com/spring-projects/spring-xd/pull/1764] for background and the fix specifics. This should be included in [1.3 GA release|https://spring.io/blog/2015/11/19/spring-xd-1-3-ga-and-flo-for-spring-xd-1-0-ga-released]. 

Please upgrade and let us know if you're still seeing anomalies. 

","09/Dec/15 11:17 AM;mgervais;Thanks [Sabby Anandan|https://jira.spring.io/secure/ViewProfile.jspa?name=sabby],

I'll try this as soon as possible, and I'll inform you. 

Mickaël",,,,,,,,,,,,,,,,
Facing issue while running Spring XD batch job on HDP version 2.3.2.0-2950,XD-3710,66841,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,thomas.risberg,nachiketbondale,nachiketbondale,24/Nov/15 1:59 PM,01/Feb/16 3:12 PM,10/Jul/21 8:37 AM,,1.3 M1,,,,,,,,Batch,Hadoop,YARN Runtime,,,0,,,,,,,"***Version
	Spring XD Version : spring-xd-1.3.0.RELEASE, spring-xd-1.3.0.RELEASE-yarn
	OS & Version: Linux 2.6.32-431.29.2.el6.x86_64 
	Java Version: java version ""1.7.0_65""

***Description
	The simple word count map reduce job using spring xd is failing with inline error message.

***Steps to recreate the problem
	1. Created a jar for simple word count map reduce job.
	2. Created jar using information given in ( http://docs.spring.io/spring-hadoop/docs/2.0.2.RELEASE/reference/html/hadoop.html#hadoop:tasklet )
	3. Once the final jar was ready, uploaded using ""module upload --name test_mr_module --type job --file /home/user/jar/samplemrjob.jar""
	4. After that created and deployed job using ""job create --name test_mr_job --definition test_mr_module --deploy""
	5. Finally launched using ""job launch test_mr_job"" which failed with inline error.

***Describe XD Deployment : Distributed 

Deployment Type : Distributed - YARN ( on AWS EC2 cloud )
Number of xd-admin’s and xd-container’s  : 1 Admin and 3 Containers 


***Describe Other Components

Transport: Redis 3.0.1
ZooKeeper: Version 3.4.6.2.3.2.0-2950


Hadoop deployment
Data Platform : Hortonworks HDP 2.3.2.0-2950
RDBMS: MySQL 


***Error Message: 

*****************************************************
05:29:52,673   INFO DeploymentsPathChildrenCache-0 container.DeploymentListener - Deploying job 'test_mr_job'
05:29:53,655   INFO DeploymentsPathChildrenCache-0 container.DeploymentListener - Deploying module [ModuleDescriptor@6e5af900 moduleName = 'test_mr_module', moduleLabel = 'test_mr_module', group = 'test_mr_job', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]
05:30:24,351  ERROR inbound.job:test_mr_job-redis:queue-inbound-channel-adapter1 step.AbstractStep - Encountered an error executing step teststep in job test_mr_job
java.lang.IllegalArgumentException: Unable to parse '/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework' as a URI, check the setting for mapreduce.application.framework.path
        at org.apache.hadoop.mapreduce.JobSubmitter.addMRFrameworkToDistributedCache(JobSubmitter.java:443)
 	.
	.	
	.
        at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:54)
        at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:323)
        at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:55)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.URISyntaxException: Illegal character in path at index 11: /hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework
        at java.net.URI$Parser.fail(URI.java:2848)
        at java.net.URI$Parser.checkChars(URI.java:3021)
        at java.net.URI$Parser.parseHierarchical(URI.java:3105)
        at java.net.URI$Parser.parse(URI.java:3063)
        at java.net.URI.<init>(URI.java:588)
        at org.apache.hadoop.mapreduce.JobSubmitter.addMRFrameworkToDistributedCache(JobSubmitter.java:441)
*****************************************************",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,175737600,,2015-11-24 14:31:50.561,9223372036854775807,false,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fnx9",9223372036854775807,9223372036854775807,,,,,,8.0,,"24/Nov/15 2:31 PM;sabby;Hi [~nachiketbondale]: Apart from the exception, there isn't any other info included in this ticket. It'd be great if you can share more details [[see here|https://github.com/spring-projects/spring-xd/wiki/Project-and-Community#improve-spring-xd]] about environment and the job definition that's causing this exception. ","26/Nov/15 9:16 AM;nachiketbondale;Hi Sabby, 
I have updated the description with required details.
Please let me know if any other information is required.
Thanks,
Nachiket","14/Dec/15 7:08 PM;thomas.risberg;Have you tried following the sample job here: https://github.com/spring-projects/spring-xd-samples/tree/master/batch-wordcount

You would also need to provide some HDP 2.3 specific setting as explained here: https://github.com/spring-projects/spring-xd-samples/tree/master/hadoop-config, you would need to provide a hadoop-site.xml file from here: https://github.com/spring-projects/spring-xd-samples/blob/master/hadoop-config/hdp23-2.3.2/hadoop-site.xml",,,,,,,,,,,,,,,
Duplicate MBean Names With router Sink,XD-3709,66818,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,21/Nov/15 4:59 PM,28/Jan/16 11:40 AM,10/Jul/21 8:37 AM,17/Dec/15 6:15 PM,1.3 GA,,,,,,1.3.1,,Runtime,,,,,0,,,,,,,"For some reason, the Integration {{MBeanExporterHelper}} is not preventing the standard context {{MBeanExporter}} from exporting the {{AbstractMessageRouter}}. This should be suppressed (when an IMBE is present) because it's annotated {{@IntegrationManagedResource}}.

Causes {{InstanceAlreadyExistsException}}.

Workaround in the stack overflow answer.

http://stackoverflow.com/questions/33838502/error-deploying-more-than-one-stream-with-a-router-1-3-0

Could be an SI issue, but investigation needed. However, we should probably include the stream/job name in all MBeans for the stream (as is done for the integration exporter).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,171849600,,2016-01-19 12:01:31.177,9223372036854775807,true,dokeeffe(dokeeffe),,,https://github.com/spring-projects/spring-xd/pull/1866,"0|hzzy6i:",9223372036854775807,9223372036854775807,,,Sprint 63,Sprint 64,,1.0,,"19/Jan/16 12:01 PM;dgarcia;Hi, I think it continue failing if you use Spring integration inside the modules, I was using one header-router in a more than one processor, and it continue failing. I have tried to add in the domain name the name of the module and the index instead of the job name but it is not getting the values I don't know why.

{code:xml}
<context:mbean-export default-domain=""xd.${xd.stream.name:${xd.module.name:${xd.module.index:}}}"" />

<bean id=""moduleObjectNamingStrategy""
        class=""org.springframework.xd.dirt.module.jmx.ModuleObjectNamingStrategy"">
        <constructor-arg name=""domain"" value=""xd.${xd.stream.name:${xd.module.name:${xd.module.index:}}}"" />
        <constructor-arg name=""objectNameProperties"" ref=""objectNameProperties"" />
    </bean>
{code}
I put that but when getting the error I only see in the domain name the name of the stream.","19/Jan/16 2:13 PM;grussell;You should just use

{code:xml}
<context:mbean-export default-domain=""xd.${xd.module.name:${xd.job.name:}}"" />
{code}

The syntax you have uses the module name only if the stream name is missing. The module name includes the index.

Or, add a unique {{id}} attribute to your header value routers in your processors.

Or, update the {{spring-integration-*}} libraries in {{xd/lib}} with the 4.2.4.RELEASE versions.","19/Jan/16 3:13 PM;dgarcia;Ok thanks!","28/Jan/16 9:44 AM;dokeeffe;Thanks for the work on this Gary.
Is there any workaround for this when using 1.3.0-RELEASE? We are currently blocked by it here in EMC (data-lake project).
Thanks again.
Derek

UPDATED: Found it after reading the description.... Please ignore.",,,,,,,,,,,,,,
Job definitions request limits 20 results by default,XD-3707,66740,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,hillert,sabby,sabby,15/Nov/15 9:52 PM,29/Nov/15 7:24 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a user, I'm trying to get all job definitions, but the first 20 alone are returned.

Job samples:
{code}
job create aaa --definition ""hello"" --deploy
job create bbb --definition ""hello"" --deploy
job create ccc --definition ""hello"" --deploy
job create ddd --definition ""hello"" --deploy
job create eee --definition ""hello"" --deploy
job create fff --definition ""hello"" --deploy
job create ggg --definition ""hello"" --deploy
job create hhh --definition ""hello"" --deploy
job create iii --definition ""hello"" --deploy
job create jjj --definition ""hello"" --deploy
job create kkk --definition ""hello"" --deploy
job create lll --definition ""hello"" --deploy
job create mmm --definition ""hello"" --deploy
job create nnn --definition ""hello"" --deploy
job create ooo --definition ""hello"" --deploy
job create ppp --definition ""hello"" --deploy
job create qqq --definition ""hello"" --deploy
job create rrr --definition ""hello"" --deploy
job create sss --definition ""hello"" --deploy
job create ttt --definition ""hello"" --deploy
job create uuu --definition ""hello"" --deploy
job create vvv --definition ""hello"" --deploy
job create www --definition ""hello"" --deploy
job create xxx --definition ""hello"" --deploy
job create yyy --definition ""hello"" --deploy
job create zzz --definition ""hello"" --deploy
job create aaa1 --definition ""hello"" --deploy
job create bbb1 --definition ""hello"" --deploy
job create ccc1 --definition ""hello"" --deploy
job create ddd1 --definition ""hello"" --deploy
job create eee1 --definition ""hello"" --deploy
{code}

Request:
{{http://localhost:9393/jobs/definitions.json}} - returns top 20; the other experiments with page size of either 0 or -1 still brings the top 20.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,178243200,XD-3477,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fr01zz",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Counter sink does not accept SpEL expressions,XD-3706,66693,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Deferred,eric.bottard,sabby,sabby,12/Nov/15 5:17 PM,16/Nov/15 4:13 PM,10/Jul/21 8:37 AM,14/Nov/15 4:01 PM,,,,,,,,,,,,,,0,,,,,,,"As a user, I'm trying to use {{counter}} sink with {SpEL}} expression, but I'm not able to use them in combination. It [throws|https://github.com/spring-cloud/spring-cloud-stream-modules/blob/master/counter-sink/src/main/java/org/springframework/cloud/stream/module/metrics/CounterSinkProperties.java#L77] {{exactly one of 'name' and 'nameExpression' must be set}} as error message.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,178329600,XD-3285,,9223372036854775807,true,sabby(sabby),,,,"0|hzzybe:",9223372036854775807,9223372036854775807,,,,,,1.0,,"14/Nov/15 4:01 PM;sabby;Moved to GH. ",,,,,,,,,,,,,,,,,
Gemfire modules fail to deploy when SSL enabled,XD-3704,66686,Bug,In Progress,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,dturanski,dturanski,12/Nov/15 12:27 PM,13/Nov/15 12:29 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Stream Module,,,,,0,,,,,,,"See the attatched log (xd.out) showing :
{{
Caused by: java.lang.IllegalStateException: A connection to a distributed system already exists in this VM.  It has the following configuration:
  ack-severe-alert-threshold=""0""
  ack-wait-threshold=""15""
  archive-disk-space-limit=""0""
  archive-file-size-limit=""0""
  async-distribution-timeout=""0""
  async-max-queue-size=""8""
  async-queue-timeout=""60000""
  bind-address=""""
  cache-xml-file=""cache.xml""
  cluster-ssl-ciphers=""any""
  cluster-ssl-enabled=""true""
  cluster-ssl-keystore=""/Users/dturanski/trusted.keystore""
  cluster-ssl-keystore-password=""password""
  cluster-ssl-keystore-type=""jks""
  cluster-ssl-protocols=""any""
  cluster-ssl-require-authentication=""true""
  cluster-ssl-truststore=""/Users/dturanski/trusted.keystore""
  cluster-ssl-truststore-password=""password""
...
}}

Steps to reproduce:

Refer to: http://gemfire.docs.pivotal.io/latest/managing/security/ssl_example.html

1) Install the the attached keystore
2) Install attached gemfire.properties in $XD_INSTALL/xd/config
3) Install a copy of gemfire.properties in the server path,  e.g., if using the gemfire server app installed with the distribution,  $XD_INSTALL/gemfire,  and run bin/gemfire
4) Start the gemfire server
5) Start xd singlenode
6) Start the shell and deploy a stream using a gemfire module (this was reported with gemfire-json-server sink, but in theory it will affect any since it occurs during client cache creation). 

Note: I verified this SSL configuration works with a simple SDG client against the XD server. (Use SDG 1.6.2, and gemfire 8.0.0).  Also, the gemfire-json-server example in the XD reference works as expected without the SSL configuration. 

This may to be related to the module using a its own class loader. `java.lang.IllegalStateException: A connection to a distributed system already exists in this VM` happens because there are 2 instances of DistributedSystem created (one for each class loader?). This happens even when all the module jars are moved to xd/lib to force all gemfire classes to be loaded in the parent class loader.  
 ",,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/15 12:31 PM;dturanski;StreamDeployedNoSSL.png;https://jira.spring.io/secure/attachment/23219/StreamDeployedNoSSL.png","12/Nov/15 12:33 PM;dturanski;StreamDeployedWithSSL.png;https://jira.spring.io/secure/attachment/23220/StreamDeployedWithSSL.png","12/Nov/15 11:44 AM;dturanski;gemfire.properties;https://jira.spring.io/secure/attachment/23217/gemfire.properties","12/Nov/15 11:44 AM;dturanski;trusted.keystore;https://jira.spring.io/secure/attachment/23216/trusted.keystore","12/Nov/15 11:41 AM;dturanski;xd.out;https://jira.spring.io/secure/attachment/23218/xd.out",,,,,,,,3.0,178416000,,,9223372036854775807,false,dturanski(dturanski),,,,"0|i08w8v:",9223372036854775807,9223372036854775807,,,,,,8.0,,"12/Nov/15 12:32 PM;dturanski;JVM monitor showing a single instance of DistributedSystem with no SSL configured","12/Nov/15 12:33 PM;dturanski;JVM monitor showing 2 DistributedSystem instances with SSL configured.","12/Nov/15 5:57 PM;dturanski;See https://jira.spring.io/browse/SGF-414.  The client-side configuration, i.e. $XD-INSTALL/xd/config/gemfire.properties should use `server-ssl*` properties instead of `cluster-ssl-*`
{code}
mcast-port=0
server-ssl-enabled=true
jmx-manager-ssl-enabled=false
server-ssl-keystore-type=jks
server-ssl-keystore=/Users/dturanski/trusted.keystore
server-ssl-keystore-password=password
server-ssl-truststore=/Users/dturanski/trusted.keystore
server-ssl-truststore-password=password
security-username=dturanski
security-userPassword=password 
{code}
","13/Nov/15 12:29 PM;dturanski;Reopened. Turns out the above solution does not work with SSL enabled locators.",,,,,,,,,,,,,,
Execution list page includes child jobs in pagination scope,XD-3698,66640,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,sabby,sabby,09/Nov/15 8:58 PM,13/Nov/15 2:59 PM,10/Jul/21 8:37 AM,13/Nov/15 2:59 PM,,,,,,,,,,,,,,0,,,,,,,"As a user, I created a composed job with over 10 child jobs in the workflow; I expected to see 'a' job in the execution list page without any pagination, but instead I noticed empty pagination to skip to next page.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,178761600,XD-3477,,9223372036854775807,true,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1855,"0|i08vyv:",9223372036854775807,9223372036854775807,,,Sprint 61,,,1.0,,,,,,,,,,,,,,,,,,,
Output modules cannot use minPartitionCount when sending to named channels,XD-3697,66633,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,dgarcia,dgarcia,09/Nov/15 4:32 PM,17/Nov/15 3:22 PM,10/Jul/21 8:37 AM,17/Nov/15 3:22 PM,1.2.1,,,,,,1.2.2,1.3 GA,,,,,,0,,,,,,,"If the output module is connected to a named channel, cannot be set up the property minPartitionCount, it is giving an exception.

Streams:
stream create f --definition ""queue:foo > transform --expression=payload+'-foo' | log"" 
stream create b --definition ""queue:bar > transform --expression=payload+'-bar' | log""
stream deploy --name f --properties ""module.transform.count=2""
stream deploy --name b --properties ""module.transform.count=2""

stream create r --definition ""time | router --expression=payload.contains('10')?'queue:foo':'queue:bar'""
stream deploy --name r --properties ""module.router.producer.minPartitionCount=20""

The error is:
Caused by: java.lang.IllegalArgumentException: KafkaMessageBus does not support producer property: minPartitionCount for queue:bar.
at org.springframework.xd.dirt.integration.bus.MessageBusSupport.validateProperties(MessageBusSupport.java:781) ~[spring-xd-messagebus-spi-1.2.1.RELEASE.jar:1.2.1.RELEASE]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Output modules that uses named channels can set the property minPartitionCount when using Kafka as a transport layer.,1.0,178761600,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1851,"0|hzzy96:",9223372036854775807,9223372036854775807,,,Sprint 62,,,1.0,,,,,,,,,,,,,,,,,,,
Ensure Job definitions are escaped in UI,XD-3691,66603,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,grenfro,grenfro,06/Nov/15 2:14 AM,17/Nov/15 4:15 PM,10/Jul/21 8:37 AM,17/Nov/15 4:15 PM,1.3 RC1,,,,,,1.3 GA,,Batch,,,,,0,,,,,,,"If using the definition <aaa || bbb> where the definition starts with a ""<"" and ends with a "">"" the definition for the composed job does not appear on the definition page.",,,,,,,,,,,,,,,,,,,,,,,,"06/Nov/15 2:13 AM;grenfro;Screen Shot 2015-11-05 at 9.13.11 PM.png;https://jira.spring.io/secure/attachment/23209/Screen+Shot+2015-11-05+at+9.13.11+PM.png","06/Nov/15 2:14 AM;grenfro;Screen Shot 2015-11-05 at 9.14.00 PM.png;https://jira.spring.io/secure/attachment/23208/Screen+Shot+2015-11-05+at+9.14.00+PM.png",,,,,,,,,,,1.0,179107200,XD-3477,,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd-admin-ui-client/pull/11,"0|hzzyb6:",9223372036854775807,9223372036854775807,,,Sprint 62,,,2.0,,,,,,,,,,,,,,,,,,,
log4j/log4j-over-slf4j logging issue,XD-3686,66579,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,jvalkeal,jvalkeal,04/Nov/15 1:44 PM,04/Nov/15 3:25 PM,10/Jul/21 8:37 AM,04/Nov/15 3:25 PM,,,,,,,,,,,,,,0,,,,,,,"I got below error when executing modules on yarn and it was written in appmaster stderr output.
{code}
Exception in thread ""Thread-2"" java.lang.NoClassDefFoundError: org/apache/log4j/spi/ThrowableInformation
        at org.apache.log4j.spi.LoggingEvent.<init>(LoggingEvent.java:165)
        at org.apache.log4j.Category.forcedLog(Category.java:391)
        at org.apache.log4j.Category.log(Category.java:856)
        at org.slf4j.impl.Log4jLoggerAdapter.log(Log4jLoggerAdapter.java:595)
        at org.apache.commons.logging.impl.SLF4JLocationAwareLog.warn(SLF4JLocationAwareLog.java:192)
        at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:969)
        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.doClose(EmbeddedWebApplicationContext.java:150)
        at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:893)
{code}

`LoggingEvent` is found from both `log4j-over-slf4j-1.7.12.jar` and `log4j-1.2.17.jar`. I suppose it depends on which one is used first to load this class.

Here's what we have in admin and appmaster jar files(spring-cloud-dataflow-yarn-build-tests is my local new sub-project to run tests on a hadoop minicluster):
{code}
unzip -l target/spring-cloud-dataflow-yarn-build-tests/spring-cloud-dataflow-yarn-appmaster-1.0.0.BUILD-SNAPSHOT.jar|grep jar|grep -i log
    62050  2013-05-16 22:04   lib/commons-logging-1.1.3.jar
   489884  2012-05-06 13:24   lib/log4j-1.2.17.jar
     8860  2015-03-26 21:56   lib/slf4j-log4j12-1.7.12.jar
     2234  2015-09-03 16:30   lib/spring-boot-starter-logging-1.3.0.M5.jar
    24567  2015-03-26 21:57   lib/log4j-over-slf4j-1.7.12.jar
    40824  2015-08-18 12:39   lib/tomcat-embed-logging-juli-8.0.26.jar
    66802  2015-05-28 09:49   lib/jboss-logging-3.3.0.Final.jar
{code}

{code}
unzip -l spring-cloud-dataflow-admin/target/spring-cloud-dataflow-admin-1.0.0.BUILD-SNAPSHOT.jar |grep jar|grep -i log
    62050  2013-05-16 22:04   lib/commons-logging-1.1.3.jar
   489884  2012-05-06 13:24   lib/log4j-1.2.17.jar
    40824  2015-08-18 12:39   lib/tomcat-embed-logging-juli-8.0.26.jar
    66802  2015-05-28 09:49   lib/jboss-logging-3.3.0.Final.jar
     2234  2015-09-03 16:30   lib/spring-boot-starter-logging-1.3.0.M5.jar
   280928  2015-03-24 12:06   lib/logback-classic-1.1.3.jar
   455041  2015-03-24 12:05   lib/logback-core-1.1.3.jar
    24567  2015-03-26 21:57   lib/log4j-over-slf4j-1.7.12.jar
{code}

Error went away when I removed `log4j-over-slf4j-1.7.12.jar` from maven deps for yarn appmaster jar. I suppose we have same issue with admin server.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179193600,XD-3199,,9223372036854775807,true,jvalkeal(jvalkeal),,,,"0|i08vl3:",9223372036854775807,9223372036854775807,,,,,,1.0,,"04/Nov/15 3:07 PM;jvalkeal;Right, error came back. I'm not sure if that was a root cause. I'm not feeling lucky...","04/Nov/15 3:24 PM;jvalkeal;looks like this might have been a yarn minicluster testing issue which doesn't properly kill containers when test cluster is closed.",,,,,,,,,,,,,,,,
Job Definitions page fails to display definitions if page ,XD-3685,66570,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,grenfro,grenfro,02/Nov/15 8:54 PM,05/Nov/15 2:44 PM,10/Jul/21 8:37 AM,05/Nov/15 2:44 PM,1.3 RC1,,,,,,1.3 GA,,Batch,,,,,0,,,,,,,"In this scenario we created 30 jobs that can be used for a composed job.  
if the composed job uses jobs in its composition that are not present on the first page of the of the result set the following exception is thrown.  

{noformat}
2015-11-02T14:47:17-0500 1.3.0.SNAP ERROR qtp1587928736-26 rest.RestControllerAdvice - Caught exception while handling a request
java.lang.IllegalStateException: Not all instances were looked at: fff
	at org.springframework.xd.dirt.rest.XDController.enhanceWithDeployments(XDController.java:244) ~[spring-xd-dirt-1.3.0.BUILD-SNAPSHOT.jar:1.3.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.rest.XDController.listValues(XDController.java:209) ~[spring-xd-dirt-1.3.0.BUILD-SNAPSHOT.jar:1.3.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.rest.JobsController.list(JobsController.java:128) ~[spring-xd-dirt-1.3.0.BUILD-SNAPSHOT.jar:1.3.0.BUILD-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_67]
	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_67]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137) ~[spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:806) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:729) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) ~[spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735) [javax.servlet-3.0.0.v201112011016.jar:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) [javax.servlet-3.0.0.v201112011016.jar:na]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:291) [spring-boot-actuator-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) [spring-boot-actuator-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:207) [spring-security-web-4.0.2.RELEASE.jar:4.0.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176) [spring-security-web-4.0.2.RELEASE.jar:4.0.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90) [spring-boot-actuator-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557) [jetty-security-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428) [jetty-servlet-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.Server.handle(Server.java:370) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644) [jetty-http-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235) [jetty-http-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) [jetty-server-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667) [jetty-io-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52) [jetty-io-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) [jetty-util-8.1.14.v20131031.jar:8.1.14.v20131031]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) [jetty-util-8.1.14.v20131031.jar:8.1.14.v20131031]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_67]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,179193600,XD-3477,2015-11-04 16:24:45.27,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1842,"0|i08vj3:",9223372036854775807,9223372036854775807,,,Sprint 61,,,3.0,,"04/Nov/15 4:24 PM;hillert;Verified.

*How to Reproduce*

Create a list of jobs using the following script.

{code}
job create aaa --definition ""myjob"" --deploy
job create bbb --definition ""myjob"" --deploy
job create ccc --definition ""myjob"" --deploy
job create ddd --definition ""myjob"" --deploy
job create eee --definition ""myjob"" --deploy
job create fff --definition ""myjob"" --deploy
job create ggg --definition ""myjob"" --deploy
job create hhh --definition ""myjob"" --deploy
job create iii --definition ""myjob"" --deploy
job create jjj --definition ""myjob"" --deploy
job create kkk --definition ""myjob"" --deploy
job create lll --definition ""myjob"" --deploy
job create mmm --definition ""myjob"" --deploy
job create nnn --definition ""myjob"" --deploy
job create ooo --definition ""myjob"" --deploy
job create ppp --definition ""myjob"" --deploy
job create qqq --definition ""myjob"" --deploy
job create rrr --definition ""myjob"" --deploy
job create sss --definition ""myjob"" --deploy
job create ttt --definition ""myjob"" --deploy
job create uuu --definition ""myjob"" --deploy
job create vvv --definition ""myjob"" --deploy
job create www --definition ""myjob"" --deploy
job create xxx --definition ""myjob"" --deploy
job create yyy --definition ""myjob"" --deploy
job create zzz --definition ""myjob"" --deploy
job create aaa1 --definition ""myjob"" --deploy
job create bbb1 --definition ""myjob"" --deploy
job create ccc1 --definition ""myjob"" --deploy
job create ddd1 --definition ""myjob"" --deploy
job create eee1 --definition ""myjob"" --deploy
{code}

Create a *composed job*:

{code}
job create foo --definition ""< ( aaa || bbb || ccc ) & ddd & eee & fff >"" --deploy
{code}

Go to Admin UI

http://localhost:9393/admin-ui/#/jobs/definitions

Page stays blank. You should see a stacktrace in the Admin server's log, such as:

{code}
java.lang.IllegalStateException: Not all instances were looked at: eee1
{code}",,,,,,,,,,,,,,,,,
Job composition fails for large transitions,XD-3684,66569,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mminella,sabby,sabby,02/Nov/15 7:30 PM,13/Nov/15 10:36 PM,10/Jul/21 8:37 AM,13/Nov/15 10:36 PM,,,,,,,1.3 GA,,,,,,,0,,,,,,,"As a user, I'm trying to create a composed job with >20 steps/transitions using Rabbit as the message bus and it doesn't complete successfully.",,,,,,,,,,,,,,,,,,,,,,,,"05/Nov/15 10:03 PM;grenfro;container-86046.log;https://jira.spring.io/secure/attachment/23207/container-86046.log","05/Nov/15 10:04 PM;grenfro;container-86056.log;https://jira.spring.io/secure/attachment/23206/container-86056.log",,,,,,,,,,,5.0,179020800,XD-3477,2015-11-02 20:15:29.094,9223372036854775807,true,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1858,"0|i08viv:",9223372036854775807,9223372036854775807,,,Sprint 61,,,3.0,,"02/Nov/15 8:15 PM;grenfro;[Deployment]
* 1 admin 2 containers 
* Transport: rabbit 
* Environment:  Macbook pro.
* Datasource string:
{noformat}
jdbc:hsqldb:hsql://${hsql.server.host:localhost}:${hsql.server.port:9101}/${hsql.server.dbname:xdjob};sql.enforce_strict_size=true;hsqldb.tx=mvcc
{noformat}
* batch isolationLevel :  ISOLATION_READ_COMMITTED
* 
When running the following script 
{noformat}
< ( aaa || bbb || ccc ) & ddd & eee & fff > || ggg || hhh || <(iii || jjj) & kkk > || <lll | BOO = mmm | '*' = $END & nnn & ooo > || ppp || qqq || rrr || sss || ttt || uuu || vvv || <xxx & yyy > || zzz
{noformat}
one of the steps in the orchestrated job will throw: 
{noformat}
Parameter name: xd_parent_execution_id; isIdentifying: false; type: STRING; value: 63
2015-11-02T14:50:17-0500 1.3.0.SNAP ERROR xdbus.job:eee-1 tasklet.TaskletStep - JobRepository failure forcing rollback
org.springframework.dao.ConcurrencyFailureException: PreparedStatementCallback; SQL [UPDATE BATCH_STEP_EXECUTION set START_TIME = ?, END_TIME = ?, STATUS = ?, COMMIT_COUNT = ?, READ_COUNT = ?, FILTER_COUNT = ?, WRITE_COUNT = ?, EXIT_CODE = ?, EXIT_MESSAGE = ?, VERSION = ?, READ_SKIP_COUNT = ?, PROCESS_SKIP_COUNT = ?, WRITE_SKIP_COUNT = ?, ROLLBACK_COUNT = ?, LAST_UPDATED = ? where STEP_EXECUTION_ID = ? and VERSION = ?]; transaction rollback: serialization failure; nested exception is java.sql.SQLTransactionRollbackException: transaction rollback: serialization failure
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:71) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:645) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:866) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:932) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.repository.dao.JdbcStepExecutionDao.updateStepExecution(JdbcStepExecutionDao.java:244) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.repository.support.SimpleJobRepository.update(SimpleJobRepository.java:191) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy89.update(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy51.update(Unknown Source) ~[na:na]
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:456) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:330) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:133) [spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:271) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:81) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:374) [spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215) [spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:144) [spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:257) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:200) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:169) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:144) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:306) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50) [spring-core-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy52.run(Unknown Source) [na:na]
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50) [spring-batch-integration-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:113) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:102) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:131) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:166) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:317) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:155) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:93) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:89) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter.access$400(AmqpInboundChannelAdapter.java:45) [spring-integration-amqp-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$1.onMessage(AmqpInboundChannelAdapter.java:93) [spring-integration-amqp-4.2.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:757) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:680) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$001(SimpleMessageListenerContainer.java:93) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$1.invokeListener(SimpleMessageListenerContainer.java:183) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:74) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:98) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy93.invokeListener(Unknown Source) [na:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeListener(SimpleMessageListenerContainer.java:1345) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:661) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1096) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1080) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$800(SimpleMessageListenerContainer.java:93) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1190) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_20]
Caused by: java.sql.SQLTransactionRollbackException: transaction rollback: serialization failure
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:873) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:866) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:629) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	... 142 common frames omitted
2015-11-02T14:50:17-0500 1.3.0.SNAP ERROR xdbus.job:eee-1 step.AbstractStep - Encountered an error executing step helloSpringXDStep in job eee
org.springframework.batch.core.step.FatalStepExecutionException: JobRepository failure forcing rollback
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:463) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:330) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:133) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:271) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:81) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:374) ~[spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215) ~[spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:144) ~[spring-batch-infrastructure-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:257) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:200) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:169) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:144) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:306) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50) [spring-core-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy52.run(Unknown Source) [na:na]
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50) [spring-batch-integration-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:113) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:102) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:131) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330) [spring-expression-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:166) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:317) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:155) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:93) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:89) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:127) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:147) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:120) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:442) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:392) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:105) [spring-messaging-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:105) [spring-integration-core-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter.access$400(AmqpInboundChannelAdapter.java:45) [spring-integration-amqp-4.2.1.RELEASE.jar:na]
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$1.onMessage(AmqpInboundChannelAdapter.java:93) [spring-integration-amqp-4.2.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:757) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:680) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$001(SimpleMessageListenerContainer.java:93) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$1.invokeListener(SimpleMessageListenerContainer.java:183) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_20]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_20]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:74) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:98) [spring-retry-1.1.2.RELEASE.jar:na]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy93.invokeListener(Unknown Source) [na:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeListener(SimpleMessageListenerContainer.java:1345) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:661) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1096) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1080) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$800(SimpleMessageListenerContainer.java:93) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1190) [spring-rabbit-1.5.1.RELEASE.jar:na]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_20]
Caused by: org.springframework.dao.ConcurrencyFailureException: PreparedStatementCallback; SQL [UPDATE BATCH_STEP_EXECUTION set START_TIME = ?, END_TIME = ?, STATUS = ?, COMMIT_COUNT = ?, READ_COUNT = ?, FILTER_COUNT = ?, WRITE_COUNT = ?, EXIT_CODE = ?, EXIT_MESSAGE = ?, VERSION = ?, READ_SKIP_COUNT = ?, PROCESS_SKIP_COUNT = ?, WRITE_SKIP_COUNT = ?, ROLLBACK_COUNT = ?, LAST_UPDATED = ? where STEP_EXECUTION_ID = ? and VERSION = ?]; transaction rollback: serialization failure; nested exception is java.sql.SQLTransactionRollbackException: transaction rollback: serialization failure
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:71) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:645) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:866) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:932) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.repository.dao.JdbcStepExecutionDao.updateStepExecution(JdbcStepExecutionDao.java:244) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.batch.core.repository.support.SimpleJobRepository.update(SimpleJobRepository.java:191) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy89.update(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_20]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_20]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127) [spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at com.sun.proxy.$Proxy51.update(Unknown Source) ~[na:na]
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:456) ~[spring-batch-core-3.0.5.RELEASE.jar:3.0.5.RELEASE]
	... 114 common frames omitted
Caused by: java.sql.SQLTransactionRollbackException: transaction rollback: serialization failure
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source) ~[hsqldb-2.3.3.jar:2.3.3]
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:873) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:866) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:629) ~[spring-jdbc-4.2.2.RELEASE.jar:4.2.2.RELEASE]
	... 142 common frames omitted
{noformat}
","05/Nov/15 9:35 PM;grenfro;Update: This is sporadic","05/Nov/15 10:01 PM;grenfro;Ok here is a batch flow get the exception regularly:
<aaa & bbb & ccc & ddd & eee & fff & ggg & hhh & iii & jjj & kkk & lll & mmm & nnn>
I'll attach the log.
","06/Nov/15 4:58 PM;mminella;Can we confirm this occurs on databases we would actually use in production?  There's an open issue in Batch around this serialization issue that only occurs (to my knowledge) against hsqldb.","06/Nov/15 5:05 PM;grenfro;We haven't tried it on other databases as of yet.  In that this a hsql specific issue based on my readups.
","06/Nov/15 9:43 PM;grenfro;After research this is an issue in Spring batch.  And has open Jira's.",,,,,,,,,,,,
Fix composed job error message,XD-3683,66568,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,sabby,sabby,02/Nov/15 7:27 PM,11/Nov/15 6:57 PM,10/Jul/21 8:37 AM,11/Nov/15 6:57 PM,,,,,,,1.3 GA,,,,,,,0,,,,,,,"As a user, I'm trying to compose a job just with one definition; however, I'm getting the following error message, which could be misinterpreted.

{code}
xd:>job create salsa --definition timestampfile
Successfully created job 'salsa'
xd:>job create foo --definition ""salsa || salsa""
Successfully created job 'foo'
xd:>job create foo222 --definition ""salsa""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Could not find module with name 'salsa' and type 'job'
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,179020800,XD-3477,2015-11-06 16:31:40.958,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1841,"0|i08vin:",9223372036854775807,9223372036854775807,,,Sprint 61,,,1.0,,"06/Nov/15 4:31 PM;grenfro;There are 2 test scenarios: one where the composed job is deployed and the other where the composed job is not deployed.
in my test cases I always deployed the composed job and the bug fix I put in place would work.  However if the composed job was undeployed the fix would not work.

",,,,,,,,,,,,,,,,,
Multiple module instances produces duplicate messages ,XD-3673,66557,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,sabby,sabby,02/Nov/15 4:59 PM,17/Nov/15 8:29 PM,10/Jul/21 8:37 AM,17/Nov/15 8:29 PM,,,,,,,1.3 GA,,,,,,,0,,,,,,,"As a follow-up from [XD-3613|https://jira.spring.io/browse/XD-3629], we would want to fix this experience for Kafka message bus.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Update documentation the difference between the message bus implementations here, ie that on Redis you should only deploy one instance consuming from a tap or topic.",5.0,179366400,XD-2356,,9223372036854775807,true,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1857,"0|hzzyaa:",9223372036854775807,9223372036854775807,,,Sprint 62,,,5.0,,,,,,,,,,,,,,,,,,,
CF SPI REST calls are not working ,XD-3667,66530,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,sabby,sabby,30/Oct/15 11:09 PM,24/Nov/15 2:47 PM,10/Jul/21 8:37 AM,24/Nov/15 2:47 PM,,,,,,,,,,,,,,0,,,,,,,"As a developer, I'd like to troubleshoot and fix {{root}} level access over CF SPI REST calls; they're broke at the moment. 

Access for following calls fail:

{code}

href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/streams""
href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/tasks""
href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/metrics/counters""
href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/metrics/counters/{name}"",
href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/modules""
href: ""https://s-c-dataflow-admin.cfapps.pez.pivotal.io:80/completions/stream{?start,detailLevel}"",
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,REST calls resolve successfully and return expected results,,179625600,XD-3324,,9223372036854775807,true,sabby(sabby),,,,"0|i08p9y:yzzzzzzzv",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
UI: Task deployment page is not loading,XD-3665,66528,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Deferred,,sabby,sabby,30/Oct/15 11:02 PM,16/Nov/15 4:11 PM,10/Jul/21 8:37 AM,14/Nov/15 4:22 PM,,,,,,,,,,,,,,0,,,,,,,"As a user, I'm trying to load Task, Task Deployment, and Task Executions page, but I'm seeing an error {{(Error fetching data. Is the XD server running?)}} instead. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,REST API's are wired correctly and the pages load with expected results ,,178329600,XD-3199,,9223372036854775807,true,sabby(sabby),,,,"0|hzzycy:",9223372036854775807,9223372036854775807,,,,,,1.0,,"14/Nov/15 4:22 PM;sabby;Moved to GH. ",,,,,,,,,,,,,,,,,
UI: Job modules page wouldn't load,XD-3663,66526,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Deferred,,sabby,sabby,30/Oct/15 10:58 PM,16/Nov/15 4:10 PM,10/Jul/21 8:37 AM,14/Nov/15 4:22 PM,,,,,,,,,,,,,,0,,,,,,,"As a user, I'm trying to load Job - Modules page in admin-ui, but I'm seeing exceptions in console and the page wouldn't load. 

{code}
Failed to convert value of type 'java.lang.String' to required type 'org.springframework.cloud.dataflow.core.ArtifactType'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type java.lang.String to type @org.springframework.web.bind.annotation.RequestParam org.springframework.cloud.dataflow.core.ArtifactType for value 'job'; nested exception is java.lang.IllegalArgumentException: No enum constant org.springframework.cloud.dataflow.core.ArtifactType.job
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,178329600,XD-3199,,9223372036854775807,true,sabby(sabby),,,,"0|hzzycq:",9223372036854775807,9223372036854775807,,,,,,2.0,,"14/Nov/15 4:22 PM;sabby;Moved to GH. ",,,,,,,,,,,,,,,,,
"Validator interface doesn't contains any Job details like ID, name etc",XD-3658,66512,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,manikantan22,manikantan22,29/Oct/15 8:38 PM,29/Oct/15 8:38 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Batch,Hadoop,,,,0,,,,,,,"org.apache.sqoop.validation.Validator interface doesn't contain any job information and it has only ValidationContext object reference. I am trying to write custom class that implements Validator class and trying to store the source count and destination count into data base. But I need some reference about Job like job ID, name, start time, end time etc. I think we can have org.apache.hadoop.mapreduce.Job instance or any other reference to the Job would help.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Need to Job instance in Validator interface or ValidationContext  class,,179712000,,,9223372036854775807,true,manikantan22(manikantan22),,,,"0|i08vbb:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Unable to find an option for restart Sqoop Job automatically when it is failed,XD-3657,66510,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,manikantan22,manikantan22,29/Oct/15 8:30 PM,29/Oct/15 8:30 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Batch,Export,Hadoop,,,0,,,,,,,"I am able to run a Sqoop Job to copy data from oracle to Hadoop and I can relaunch the job manually through shell command or admin UI. But I don't see option to set some number or auto retry option, so that when ever failure happens, system will automatically retry some number of times that we specify.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Need auto retry option,,179712000,,,9223372036854775807,true,manikantan22(manikantan22),,,,"0|i08vav:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Admin UI does not load on master build,XD-3653,66502,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,,sabby,sabby,29/Oct/15 2:21 PM,31/Oct/15 12:00 AM,10/Jul/21 8:37 AM,30/Oct/15 11:18 PM,,,,,,,,,,,,,,0,,,,,,,"As a user, I cannot use {{admin-ui}} on the master build. It won't come up. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179712000,XD-3199,,9223372036854775807,true,sabby(sabby),,,,"0|hzzygq:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
The shell processor module cannot be stopped while blocked in receive(),XD-3652,66495,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,mbogoevici,mbogoevici,28/Oct/15 6:46 PM,17/Nov/15 3:22 PM,10/Jul/21 8:37 AM,17/Nov/15 3:22 PM,1.3 M1,,,,,,1.3 GA,,Stream Module,,,,,0,,,,,,,"Both lifecycle and send/receive methods are synchronized, so if the shell command processor is blocked reading from the script's input - e.g. when no proper terminator is sent by the script, the stop() method can't acquire the object lock and proceed stopping the instance, and therefore the module. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,179798400,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1834,"0|hzzy9e:",9223372036854775807,9223372036854775807,,,Sprint 62,,,5.0,,,,,,,,,,,,,,,,,,,
Unable to compose XD module with several transform processors,XD-3650,66486,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,mgervais,mgervais,28/Oct/15 9:10 AM,03/Jun/16 2:29 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,DSL,,,,,1,,,,,,,"Hi,

I'm trying to create a composed module with two _transform_ processors:


{noformat}
module compose --name my-module-prepare --definition ""filter-events:transform --script=myscript.groovy --propertiesLocation=myscript.properties | transformer | change-body:transform --expression=payload.getValue()"" --force
{noformat}

After I use this module into my stream:
{noformat}
stream create --name MY_STREAM --definition ""topic:MY_TOPIC > my-module-prepare | mongodb""
{noformat}

But when I'm trying to deploy I get this error: 


{code:java}
Field error in object 'target' on field 'valid': rejected value [false]; codes [AssertTrue.target.valid,AssertTrue.valid,AssertTrue.boolean,AssertTrue]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [target.valid,valid]; arguments []; default message [valid]]; default message [the 'script' and 'expression' options are mutually exclusive]
{code}

After some investgiation, it appears that module properties for both transform module seems to be merged so I've this in the instance of __ExpressionOrScriptMixin__ :
{noformat}
expression	""payload.getValue()"" (1) 	
propertiesLocation	""myscript.properties"" (2)	
script	""myscript.groovy"" (2)	
{noformat}

*1* : correspond with change-body:transform properties
*2* : correspond with filter-events:transform properties
*3* : correspond with filter-events:transform properties

So the method _org.springframework.xd.module.options.mixins.ExpressionOrScriptMixin.isValid()_ cannot succeed.

I'm using Spring XD in a distributed environment with Zookeeper, RabbitMq & Redis for analytics.

Is there a way to deploy this king of composite module?

Thanks for any help

Mickaël

P.S: is this rlated to [https://jira.spring.io/browse/XD-3010] ?",,,,,,,,,,,,,,,,,XD-3755,,,,,,,,,,,,,,,,,,,,179798400,,,9223372036854775807,true,grussell(grussell),,,,"0|i08v5j:",9223372036854775807,9223372036854775807,,,,,,0.0,,,,,,,,,,,,,,,,,,,
Job Executions without Deployed Job (deleted) shall not be restartable,XD-3648,66482,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,hillert,hillert,hillert,27/Oct/15 6:44 PM,28/Oct/15 3:52 PM,10/Jul/21 8:37 AM,28/Oct/15 3:52 PM,1.3 M1,,,,,,1.3 RC1,,REST,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,XD-3559,,,,,,,,,,,,,,,,,,,1.0,179798400,XD-3477,,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1829,"0|i08v4n:",9223372036854775807,9223372036854775807,,,Sprint 60,,,1.0,,"28/Oct/15 3:52 PM;hillert;Can no longer reproduce.",,,,,,,,,,,,,,,,,
Tuple unable to serialize objects with nested arrays of objects,XD-3645,66466,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.pollack,martindam,martindam,27/Oct/15 2:57 AM,13/Nov/15 11:56 PM,10/Jul/21 8:37 AM,13/Nov/15 11:56 PM,1.3 M1,,,,,,1.3 GA,,Runtime,,,,,0,,,,,,,"Serializing a tuple object with that have a nested array which contains objects (as a tuple) fails to serialize. The error is:

{noformat}
Caused by: com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.springframework.xd.tuple.DefaultTupleConversionService and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: java.util.ArrayList[0]->org.springframework.xd.tuple.DefaultTuple[""values""]->java.util.UnmodifiableRandomAccessList[0]->org.springframework.xd.tuple.DefaultTuple[""conversionService""])
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:59) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:26) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:505) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:639) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:100) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:21) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:505) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:639) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:100) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:21) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:128) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1902) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:280) ~[jackson-core-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.POJONode.serialize(POJONode.java:111) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:44) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:29) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:128) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1902) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:280) ~[jackson-core-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.POJONode.serialize(POJONode.java:111) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.ObjectNode.serialize(ObjectNode.java:264) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:44) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:29) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:128) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1902) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:280) ~[jackson-core-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.POJONode.serialize(POJONode.java:111) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.ObjectNode.serialize(ObjectNode.java:264) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:44) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:29) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:128) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1902) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:280) ~[jackson-core-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.POJONode.serialize(POJONode.java:111) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.node.ObjectNode.serialize(ObjectNode.java:264) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:44) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.std.SerializableSerializer.serialize(SerializableSerializer.java:29) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:128) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:2881) ~[jackson-databind-2.4.5.jar:2.4.5]
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:2338) ~[jackson-databind-2.4.5.jar:2.4.5]
	at org.springframework.xd.tuple.TupleToJsonStringConverter.convert(TupleToJsonStringConverter.java:37) ~[spring-xd-tuple-1.3.0.M1.jar:1.3.0.M1]
{noformat}
when the input string (read from a Kafka topic in my case) looks something like:

{noformat}
{
    ""body"": [
        {
            ""dataType"": ""har"",
            ""har"": {
                ""log"": {
                    ""browser"": {
                        ""name"": ""Google Chrome"",
                        ""version"": ""44.0.2403.155""
                    },
                    ""creator"": {
                        ""name"": ""My extension"",
                        ""version"": ""0.23.6""
                    },
                    ""pages"": [
                        {
                            ""_requestTimings"": {
                                ""blocked"": -1,
                                ""connect"": -1,
                                ""dns"": -1,
                                ""receive"": 11,
                                ""send"": -1,
                                ""ssl"": -1,
                                ""wait"": 244
                            },
                            ""_requestUrl"": ""https://google.com""
                        },
                        {
                            ""_requestTimings"": {
                                ""blocked"": -1,
                                ""connect"": -1,
                                ""dns"": -1,
                                ""receive"": 11,
                                ""send"": -1,
                                ""ssl"": -1,
                                ""wait"": 244
                            },
                            ""_requestUrl"": ""https://google.com""
                        }
                    ],
                    ""version"": ""1.2""
                }
            },
            ""testId"": 1
        }
    ],
    ""bodyType"": ""models.MultiMessage"",
    ""headers"": {
        ""appInstance"": ""localhost/127.0.0.1:8080"",
        ""clientIp"": ""0:0:0:0:0:0:0:1"",
        ""host"": ""localhost:8080"",
        ""requestId"": ""27acf948-33ff-491c-8be7-1beb4b8c95d9"",
        ""requestMethod"": ""POST"",
        ""requestUrl"": ""http://localhost:8080/har"",
        ""timestamp"": 1445914510549,
        ""userPrincipal"": ""235""
    }
}
{noformat}
If the inner array (the Pages array) is just an object, it works, when it is an array, it fails. 

The stream used:
kafka --topic=agent_mixed --outputType=application/x-xd-tuple | splitter --expression=payload.body | log",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,179971200,,,9223372036854775807,true,sabby(sabby),,,,"0|hzzygg:",9223372036854775807,9223372036854775807,,,Sprint 61,,,2.0,,"27/Oct/15 3:06 AM;martindam;Created pull request https://github.com/spring-projects/spring-xd/pull/1827",,,,,,,,,,,,,,,,,
Spring XD unable to save metadata for long steps,XD-3642,66447,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,hlagos,hlagos,25/Oct/15 6:46 PM,30/Oct/15 12:46 PM,10/Jul/21 8:37 AM,,1.2.1,1.3 M1,,,,,,,Batch,Ingest,Runtime,,,0,,,,,,,"Hey Guys,

We are facing an annoying problem and I can't figure out how solve it. For some reason when we run a step that takes long time (4 hours or more), spring XD is unable to save the metadata and throws the following error. 

2015-10-25T09:49:10-0400 1.2.0.RELEASE ERROR task-scheduler-2 step.AbstractStep - Encountered an error executing step ingest-logs in job ingest-logs-flow
org.springframework.orm.jpa.JpaSystemException: commit failed; nested exception is org.hibernate.TransactionException: commit failed
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:244) ~[na:na]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:155) ~[na:na]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:521) ~[na:na]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:757) ~[spring-tx-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:726) ~[spring-tx-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:150) ~[spring-tx-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:271) ~[spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:77) ~[spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:368) ~[spring-batch-infrastructure-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215) ~[spring-batch-infrastructure-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:144) ~[spring-batch-infrastructure-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:257) ~[spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198) ~[spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:165) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:144) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50) [spring-core-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_67]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_67]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_67]
	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_67]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317) [spring-aop-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) [spring-aop-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127) [spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) [spring-aop-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at com.sun.proxy.$Proxy53.run(Unknown Source) [na:na]
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50) [spring-batch-integration-3.0.3.RELEASE.jar:3.0.3.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_67]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_67]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_67]
	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_67]
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:129) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:131) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330) [spring-expression-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:164) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:276) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:287) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:245) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:287) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:245) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95) [spring-messaging-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.PollingConsumer.handleMessage(PollingConsumer.java:74) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:219) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:298) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50) [spring-core-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:292) [spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) [spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81) [spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [na:1.7.0_67]
	at java.util.concurrent.FutureTask.run(FutureTask.java:262) [na:1.7.0_67]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178) [na:1.7.0_67]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292) [na:1.7.0_67]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_67]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_67]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_67]
Caused by: org.hibernate.TransactionException: commit failed
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:187) ~[na:na]
	at org.hibernate.jpa.internal.TransactionImpl.commit(TransactionImpl.java:77) ~[na:na]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:517) ~[na:na]
	... 97 common frames omitted
Caused by: org.hibernate.TransactionException: unable to commit against JDBC connection
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:116) ~[na:na]
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:180) ~[na:na]
	... 99 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Communications link failure during commit(). Transaction resolution unknown.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_67]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) ~[na:1.7.0_67]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_67]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) ~[na:1.7.0_67]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.Util.getInstance(Util.java:372) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:958) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:937) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:926) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:872) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at com.mysql.jdbc.ConnectionImpl.commit(ConnectionImpl.java:1616) ~[mysql-connector-java-5.1.34.jar:5.1.34]
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:301) ~[commons-dbcp-1.4.jar:1.4]
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:200) ~[commons-dbcp-1.4.jar:1.4]
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:112) ~[na:na]
	... 100 common frames omitted
2015-10-25T09:49:10-0400 1.2.0.RELEASE ERROR task-scheduler-2 step.AbstractStep - Encountered an error saving batch meta data for step ingest-logs in job ingest-logs-flow. This job is now in an unknown state and should not be restarted.
org.springframework.dao.OptimisticLockingFailureException: Attempt to update step execution id=8 with wrong version (1), where current version is 2
	at org.springframework.batch.core.repository.dao.JdbcStepExecutionDao.updateStepExecution(JdbcStepExecutionDao.java:255) ~[spring-batch-core-3.0.3.RELEASE.jar:3.0.3.RELEASE]

We are using a MySQL database with the following configurations. 

spring:
  datasource:
    url: jdbc:mysql://hosttomysql:3306/singnode
    username: admin
    password: admin
    driverClassName: com.mysql.jdbc.Driver
    validationQuery: select 1
    testOnBorrow: true


If you guys know this issue or have some ideas how solve, please let me know. Thanks in advance.
Héctor",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179625600,,2015-10-26 15:04:26.68,9223372036854775807,true,hlagos(hlagos),,,,"0|i08uwv:",9223372036854775807,9223372036854775807,,,,,,3.0,,"26/Oct/15 3:04 PM;sabby;@[~hlagos]: In reviewing logs, looks like the MySQL server is terminating the connection. This might be resolved with {{timeout}} setting [override|http://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_wait_timeout] on MySQL. 

Since this is not specific to XD itself, I'll downgrade the priority from 'critical' to 'minor'. Once you have this evaluated on your side, we could close the issue. ","27/Oct/15 12:48 PM;hlagos;Hello Sabby, thanks for your help.  Even changing the globaltimeout to 16 hrs we are getting the same error for a step that takes 10 hours.

mysql> select @@global.wait_timeout;
+-----------------------+
| @@global.wait_timeout |
+-----------------------+
|                 57600 |
+-----------------------+
1 row in set (0.00 sec)

","29/Oct/15 1:08 PM;hlagos;do you have any oher ideas?

Thanks,
","29/Oct/15 2:15 PM;sabby;No - we haven't encountered this so far. This isn't directly an XD issue per se. 

Few in our team suggested looking at other MySQL connection properties such as: {{interactive_timeout}} and {{innodb_lock_wait_timeout}}. 
","30/Oct/15 12:46 PM;hlagos;We already tried that, I will let you know if we find a solution.

Thanks,
Héctor",,,,,,,,,,,,,
Reactor message handlers log completions at error level,XD-3632,66371,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Complete,mark.pollack,sworisbreathing,sworisbreathing,19/Oct/15 10:29 PM,26/Oct/15 10:14 PM,10/Jul/21 8:37 AM,26/Oct/15 5:33 PM,1.2 GA,,,,,,1.3 RC1,,Stream Module,,,,,0,logging,,,,,,"(copied from https://github.com/spring-projects/spring-xd/issues/1810):

While testing a reactive processor that I was building, I saw the following in my test environment's logs:

{noformat}
2015-10-19 18:33:22.594 +1100 INFO/MetadataDrivenFlatFileSplitter:114 - Start splitting file=/tmp/junit8525530428026993137/junit6584105040601814728.tmp
2015-10-19 18:33:22.612 +1100 INFO/MetadataDrivenFlatFileSplitter:86 - Done splitting file=/tmp/junit8525530428026993137/junit6584105040601814728.tmp
2015-10-19 18:33:23.833 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
2015-10-19 18:33:23.834 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
2015-10-19 18:33:23.835 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
2015-10-19 18:33:23.839 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
2015-10-19 18:33:23.839 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
2015-10-19 18:33:23.840 +1100 ERROR/BroadcasterMessageHandler:153 - Consumer completed for [{push}]
{noformat}

Completions don't really seem like error events. Perhaps this could be changed to INFO?

(will open a PR shortly)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,180576000,,,9223372036854775807,true,mark.pollack(mark.pollack),,,,"0|i08uh3:",9223372036854775807,9223372036854775807,,,Sprint 60,,,0.0,,"19/Oct/15 10:58 PM;sworisbreathing;[Pull Request opened|https://github.com/spring-projects/spring-xd/pull/1811]",,,,,,,,,,,,,,,,,
Turning on HA via Ambari plugin requires custom configuration,XD-3629,66367,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,jvalkeal,sabby,sabby,19/Oct/15 4:50 PM,02/Nov/15 3:39 PM,10/Jul/21 8:37 AM,02/Nov/15 3:39 PM,,,,,,,1.3 GA,,,,,,,0,,,,,,,"As a user, I'd like to enable HA on {{namenode}} without having to enable custom configuration. 

More details [here|https://github.com/spring-projects/spring-xd-ambari/issues/6].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179798400,XD-2629,2015-10-26 16:31:13.352,9223372036854775807,true,sabby(sabby),,,,"0|hzzygg:i",9223372036854775807,9223372036854775807,,,,,,3.0,,"26/Oct/15 4:31 PM;jvalkeal;I'm almost sure that this ticket is kinda invalid or at least we've done enought for namenode HA to work oob. I'm going to close https://github.com/spring-projects/spring-xd-ambari/issues/6 and https://github.com/spring-projects/spring-xd-ambari/issues/14 when some xd PR's are closed and we can verify end-to-end ambari setup tests.

I probably know this tomorrow.","28/Oct/15 3:35 PM;jvalkeal;I think this is technically speaking fixed. We just need new xd rpm and ambari plugin out.",,,,,,,,,,,,,,,,
Ambari plugin doesn't work with security_enabled,XD-3628,66366,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,jvalkeal,sabby,sabby,19/Oct/15 4:47 PM,14/Nov/15 6:25 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"It seems like springxd_shell will pull jhs principal and keytab from mapred-site.xml. When springxd_shell is installed in edge node, Amabri returns ""can't find jhs keytab"" and failed.

Details [here|https://github.com/spring-projects/spring-xd-ambari/issues/8].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179798400,XD-2629,2015-10-26 16:33:13.648,9223372036854775807,true,sabby(sabby),,,,"0|i08tue:zzz",9223372036854775807,9223372036854775807,,,,,,1.0,,"26/Oct/15 4:33 PM;jvalkeal;Issue is probably valid but it's a real nightmare to test security via ambari because it's just so badly broken what comes for enabling kerberos. I'm going to try some of a latest HDP stacks if security setup actually works via ambari.","28/Oct/15 3:37 PM;jvalkeal;I just got new ambari 2.1.2 working with our plugin so I'm going to do a new try enabling kerberos. With previous versions securing cluster was either too slow process or the process didn't work at all so testing was pretty much impossible.",,,,,,,,,,,,,,,,
Job in unknown state after run long sqooptasklet,XD-3623,66356,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,hlagos,hlagos,19/Oct/15 2:06 AM,22/Jan/16 12:41 AM,10/Jul/21 8:37 AM,,1.2.1,1.3 M1,,,,,,,Hadoop,,,,,0,,,,,,,"Hello guys,

I hope you are doing good. I found a problem when I try run long sqoop imports (4 hours or more). For some reason when the sqoop step finish the system is not able to save the meta data for the current sqoop step however the sqoop import finish without problems.

2015-10-17T03:04:03-0400 1.2.0.RELEASE ERROR SimpleAsyncTaskExecutor-4 step.AbstractStep - Encountered an error saving batch meta data for step import-logs in job ingestion-flow. This job is now in an unknown state and should not be restarted.

Please see attached log file for more details. 
Could you please let me know if you need other details to find what is the problem? 

Thanks in advance
Héctor

",,,,,,,,,,,,,,,,,,,,,,,,"19/Oct/15 2:03 AM;hlagos;server.log;https://jira.spring.io/secure/attachment/23154/server.log",,,,,,,,,,,,,172454400,,,9223372036854775807,true,hlagos(hlagos),,,,"0|i08ue7:",9223372036854775807,9223372036854775807,,,,,,5.0,,"19/Oct/15 11:22 AM;hlagos;I think the problem could be here  https://github.com/spring-projects/spring-xd/blob/master/extensions/spring-xd-extension-batch/src/main/java/org/springframework/batch/step/tasklet/x/AbstractProcessBuilderTasklet.java . I'm almost sure that too much information is being in the context when you run a long job.  ","22/Jan/16 12:41 AM;hlagos;there are a couple of things here. I found a problem running long jobs because you are saving the log in the context, the  other problem is related to put beans with id ""transactionManager"" in the context, that was the main problem",,,,,,,,,,,,,,,,
Add support for custom headers with the Kafka bus,XD-3621,66338,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mbogoevici,mbogoevici,mbogoevici,16/Oct/15 4:44 PM,06/Nov/15 9:32 PM,10/Jul/21 8:37 AM,06/Nov/15 9:32 PM,1.3 M1,,,,,,1.3 GA,,,,,,,0,,,,,,,"Currently, the Kafka Message Bus does not have the ability to configure a set of custom headers to persist in the `embeddedHeaders` mode (only the message-bus specific) message headers are persisted. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,180835200,,,9223372036854775807,false,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1848,"0|i08uaf:",9223372036854775807,9223372036854775807,,,Sprint 61,,,3.0,,,,,,,,,,,,,,,,,,,
JDBC connection pool errors,XD-3620,66332,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,thomas.risberg,thomas.risberg,16/Oct/15 1:32 PM,16/Oct/15 1:36 PM,10/Jul/21 8:37 AM,,,,,,,,,,Runtime,,,,,1,,,,,,,"We are seeing JDBC connection pool errors when running 'jdbchdfs' jobs and 'jdbc' streams. The exception is:

{code}
Caused by: java.sql.SQLException: Failed to validate a newly established connection.
        at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:802)
        at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:617)
        at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:186)
        at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)
        at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:204)
        ... 21 more
{code}

A workaround is to specify ""--testOnBorrow=false"" when creating the job.

This has also been reported on SO (http://stackoverflow.com/questions/33148929/springxd-issue-in-mysql-as-source-failed-to-validate-a-newly-established-connec).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,180835200,,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08u93:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Multiple module instances consuming from taps or topics get duplicate messages on redis Message Bus,XD-3613,66277,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Won't Fix,mbogoevici,david_geary,david_geary,13/Oct/15 2:56 PM,02/Nov/15 5:42 PM,10/Jul/21 8:37 AM,02/Nov/15 5:06 PM,1.2.1,,,,,,,,Runtime,,,,,0,,,,,,,"If I deploy more than one instance of a module (eg using module.name.count > 1 or module.name.count =0) that consumes from a tap or topic then I get duplicate messages if I’m using Redis as the message bus. It looks like this is the same issue as XD-3100 but the fix for that only fixed Rabbit as the message bus.

This is easy to reproduce on a 2 container cluster using a Redis Message Bus:

Create and deploy streams as follows:

{code}
stream create --definition ""http | log"" --name httpLog
stream deploy --name httpLog --properties ""module.*.count=0""
stream create --definition ""tap:stream:httpLog > transform --expression='payload.toString() + \"" TAPPED\""' | log"" --name httpLogTap 
stream deploy --name httpLogTap --properties ""module.*.count=0""
{code}

On container 1 send a message:

{code}
curl --data ""test message 001"" http://localhost:9000/httpLog
{code}

Container 1 logs are then:

{code}
2015-10-13 14:16:28.853  INFO 22774 --- [ol-28-thread-18] xd.sink.httpLog                          : test message 001
2015-10-13 14:16:28.855  INFO 22774 --- [enerContainer-4] xd.sink.httpLogTap                       : test message 001 TAPPED
{code}

and container 2:

{code}
2015-10-13 14:16:28.859  INFO 22719 --- [enerContainer-4] xd.sink.httpLogTap                       : test message 001 TAPPED
{code}

Ie the tapped message is duplicated (picked up by both tap module instances)

Similarly for topics create and deploy these streams:

{code}
stream create --definition ""http > topic:mytopic"" --name httpTopic
stream deploy --name httpTopic --properties ""module.*.count=0""
stream create --definition ""topic:mytopic > transform --expression='payload.toString() + \"" TOPIC CONSUMER 1\""' | log"" --name topicConsumer1
stream deploy --name topicConsumer1 --properties ""module.*.count=0""
stream create --definition ""topic:mytopic > transform --expression='payload.toString() + \"" TOPIC CONSUMER 2\""' | log"" --name topicConsumer2
stream deploy --name topicConsumer2 --properties ""module.*.count=0""
{code}

On container 1 send a message:

{code}
curl --data ""test message 002"" http://localhost:9000/httpLog
{code}

Container 1 logs are then:

{code}
2015-10-13 14:34:23.168  INFO 22774 --- [enerContainer-2] xd.sink.topicConsumer2                   : test message 002 TOPIC CONSUMER 2
2015-10-13 14:34:23.172  INFO 22774 --- [enerContainer-2] xd.sink.topicConsumer1                   : test message 002 TOPIC CONSUMER 1
{code}

and container 2:

{code}
2015-10-13 14:34:23.173  INFO 22719 --- [enerContainer-2] xd.sink.topicConsumer2                   : test message 002 TOPIC CONSUMER 2
2015-10-13 14:34:23.177  INFO 22719 --- [enerContainer-2] xd.sink.topicConsumer1                   : test message 002 TOPIC CONSUMER 1
{code}

Ie the topic message is picked up by each instance of the module in each stream. In this case I would expect each stream to pick up the message once 
ie I would get a single output for each stream 

test message 002 TOPIC CONSUMER 2  once (on either container)
test message 002 TOPIC CONSUMER 1  once (on either container)",,,,,,,,,,,,,,,,,XD-3673,,,,,,,,,,,,,,,,,,,,179366400,,2015-10-13 16:23:47.494,9223372036854775807,true,sabby(sabby),,,,"0|hzzyge:",9223372036854775807,9223372036854775807,,,,,,5.0,,"13/Oct/15 4:23 PM;grussell;Unfortunately, this is not really practical with Redis.

The source of the tap (stream) knows nothing about the consumers of the tap - just whether or not there is at least one, in which case he starts writing tapped messages to the bus.

With the rabbit bus, the tapped data are sent to a {{fanout}} exchange; which provides the pub/sub semantics.

Tap streams bind a queue to the fanout - this was the change in XD-3100 - previously each instance bound a new queue so each instance got a copy of the tapped data; now, a single named queue for each stream is bound to the fanout so multiple instances are competing consumers on that queue.

With the redis bus, the tapped data is sent to a Redis pubsub so all consumers (including multiple instances of a stream) will get a copy.


To achieve this functionality with Redis, it would require the source stream knowing about all the consuming streams and write multiple copies to queues (Redis Lists) instead of a pubsub (which would be a fairly major rearchitecture).


","14/Oct/15 3:23 PM;david_geary;OK, so from what you are saying, if for example I want to tap a stream (eg for a counter) and I am using the Redis message bus (or Kafka message bus?) then I should only ever deploy the module reading from the tap with a module count of 1 or I will get an incorrect count. 

However with the Rabbit message bus it would work correctly with multiple instances of the counter due to the fix for XD-3100.

This needs to be clearer in the documentation - the examples describe the abstraction at the stream / tap / DSL level and imply it is independent of message bus implementation, whereas actually there are differences in how it should be deployed depending on which message bus is in use. 

More detail in the documentation on how the streams, taps, topics etc are mapped to the actual message bus implementation would be useful to allow the user to make the correct deployment decisions.

From the point of view of balancing load over a cluster and failover is having single instances of modules a scalable approach? I realise if there is a node failure XD should redeploy the single instance, but ideally we would like to have >1 instance of all modules running at all times to spread load.

I assume the 'noop' workaround described in XD-3100 will work here but it still requires a single module instance as part of the stream and as mentioned in the issue requires at least two hops to the message bus for each message.
","16/Oct/15 4:31 PM;david_geary;Would it be possible instead to enhance the named channel funtionality to send to more than one channel at a time? 

For example

source > queue:queue1,queue:queue2,queue:queue3

This would effectively provide the ""write multiple copies to queues (Redis Lists)"" you mentioned and would allow multiple instances of all modules to be deployed even with a Redis message bus.



","16/Oct/15 4:48 PM;mbogoevici;At a first glance, I don't think this should happen for Kafka, since in a multi-instance scenario we divide the partition set of a topic among instances. If it does, it should be treated as a bug. ","22/Oct/15 1:22 PM;david_geary;I have seen similar behaviour for the Kafka message bus - see http://stackoverflow.com/questions/32845796/spring-xd-duplicate-messages-with-kafka-message-bus","22/Oct/15 2:03 PM;mbogoevici;Hi David,

Thanks for the update. We will try to fix this in time for the 1.3 release.

Thank you,
Marius","02/Nov/15 5:06 PM;sabby;[~david_geary]: We will be addressing this gap in Kafka through: [XD-3673|https://jira.spring.io/browse/XD-3673] and this is still targeted to go with 1.3 release. Since this is practically impossible to support for Redis, we would want the original issue marked as ""won't fix"". 

If you have other insights to share, we could always reopen it.","02/Nov/15 5:13 PM;david_geary;Hi Sabby, thats fine - the only other thing would be to make it clearer in the documentation the difference between the message bus implementations here, ie that on Redis you should only deploy one instance consuming from a tap or topic.",,,,,,,,,,
Redis Message Bus still accessed when using direct binding,XD-3612,66271,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,david_geary,david_geary,13/Oct/15 10:37 AM,13/Oct/15 5:04 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Runtime,,,,,0,,,,,,,"I have a distributed XD Cluster with one admin and two containers using Redis as the message bus. In certain cases I want to use direct binding to remove communication with the message bus and deploy all modules to all containers with the aim of improving performance. I’ve found that even when using direct binding, XD still communicates with Redis when it shouldn’t need to. This could have an impact on performance.

This is easily reproducible in our 2 container cluster as follows:

Use the redis-cli monitor command to monitor Redis.

Create and deploy a simple stream with direct binding:

{code}
stream create --definition ""http | log"" --name httpLog
stream deploy --name httpLog --properties ""module.*.count=0""
{code}

As expected both modules get deployed to both nodes. Testing shows messages sent to the http endpoint of one container always come out in the log for that container implying direct binding is in play as expected.

However once the streams are deployed the Redis monitor starts showing a Redis queue being accessed from both XD conatiners:

{code}
1444731527.086325 [0 10.0.1.8:57454] ""brpop"" ""queue.httpLog.0"" ""1""
1444731528.086304 [0 10.0.1.4:37337] ""brpop"" ""queue.httpLog.0"" ""1""
1444731529.086341 [0 10.0.1.8:57454] ""brpop"" ""queue.httpLog.0"" ""1""
1444731530.086317 [0 10.0.1.4:37337] ""brpop"" ""queue.httpLog.0"" ""1""
1444731531.086340 [0 10.0.1.8:57454] ""brpop"" ""queue.httpLog.0"" ""1""
1444731532.086505 [0 10.0.1.4:37337] ""brpop"" ""queue.httpLog.0"" ""1""
{code}

This shouldn’t need to happen in direct binding. These messages stop once the stream is undeployed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,181094400,,2015-10-13 17:04:59.644,9223372036854775807,false,grussell(grussell),,,,"0|i08tvz:",9223372036854775807,9223372036854775807,,,,,,5.0,,"13/Oct/15 5:04 PM;grussell;Direct binding is a function of the producer; the consumer is able to receive messages from its bound producer as well as any other instances of the producer that might not be directly bound to a consumer.

With redis, the consumer has to poll (RPOP) the list for messages, with a timeout - this is what you are seeing.

The underlying channel adapter has a receive timeout which could be increased to reduce the frequency of these polls, but this is not currently exposed as a bus property. Be aware that increasing this timeout would be at the expense of being less responsive to an undeploy request.

This polling is very lightweight and shouldn't cause any undue performance issues.

If you are really concerned about this, I see two possibilities:

- add a property to the bus which stops the redis consumer (meaning it is no longer available to receive messages that way).
- expose a property to allow increasing the receive timeout.

",,,,,,,,,,,,,,,,,
SqoopTasklet doesn't use keytab configuration from hadoop.properties file,XD-3611,66266,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,hlagos,hlagos,13/Oct/15 1:26 AM,14/Oct/15 2:15 PM,10/Jul/21 8:37 AM,,1.2.1,1.3 M1,,,,,,,Batch,Hadoop,,,,0,Hadoop,Kerberos,Sqoop,,,,"Hey Guys,

I have been using the sqoopTasklet for a while but I found an unexpected problem. Basically I'm not able to configure kerberos authentication from hadoop.properties file as follow:

<util:properties id=""hadoopProperties"" location=""${xd.config.home}/hadoop.properties"" />

        <bean id=""sqoopTasklet"" class=""org.springframework.xd.sqoop.SqoopTasklet"">
                <property name=""arguments"">
                        <list>
                                <value>import</value>
                                <value>--connect otheroptions</value>
                        </list>
                </property>
                <property name=""hadoopProperties"" ref=""hadoopProperties"" />
        </bean>

hadoop.properties file:

fs.defaultFS=hdfs://hdfshost:8020
yarn.resourcemanager.hostname=host001
yarn.resourcemanager.address=host001:8032
yarn.resourcemanager.scheduler.address=host001:8030
mapreduce.jobhistory.address=host003:10020
yarn.application.classpath=$HADOOP_CLIENT_CONF_DIR,$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_COMMON_HOME/lib/*,$HADOOP_HDFS_HOME/*,$HADOOP_HDFS_HOME/lib/*,$HADOOP_YARN_HOME/*,$HADOOP_YARN_HOME/lib/*,$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*
mapreduce.framework.name=yarn
spring.hadoop.security.authMethod=kerberos
spring.hadoop.security.userPrincipal=user1@COMPANY.COM
spring.hadoop.security.userKeytab=/home/user1/user1.keytab
spring.hadoop.security.namenodePrincipal=hdfs/_HOST@COMPANY.COM
spring.hadoop.security.rmManagerPrincipal=yarn/_HOST@COMPANY.COM
spring.hadoop.security.jobHistoryPrincipal=mapred/_HOST@COMPANY.COM

or 

fs.defaultFS=hdfs://hdfshost:8020
yarn.resourcemanager.hostname=host001
yarn.resourcemanager.address=host001:8032
yarn.resourcemanager.scheduler.address=host001:8030
mapreduce.jobhistory.address=host003:10020
yarn.application.classpath=$HADOOP_CLIENT_CONF_DIR,$HADOOP_CONF_DIR,$HADOOP_COMMON_HOME/*,$HADOOP_COMMON_HOME/lib/*,$HADOOP_HDFS_HOME/*,$HADOOP_HDFS_HOME/lib/*,$HADOOP_YARN_HOME/*,$HADOOP_YARN_HOME/lib/*,$HADOOP_MAPRED_HOME/*,$HADOOP_MAPRED_HOME/lib/*
mapreduce.framework.name=yarn
security.authMethod=kerberos
security.userPrincipal=user1@COMPANY.COM
security.userKeytab=/home/user1/user1.keytab
security.namenodePrincipal=hdfs/_HOST@COMPANY.COM
security.rmManagerPrincipal=yarn/_HOST@COMPANY.COM
security.jobHistoryPrincipal=mapred/_HOST@COMPANY.COM

Running the job I'm getting the following error:

Encountered IOException running import job: org.apache.hadoop.security.AccessControlException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS

So it means the sqooptasklet isn't setting the kerberos authentication, this basically because in the SqoopTasklet class is adding some prefix to the configurations (SPRING_HADOOP_CONFIG_PREFIX)

https://github.com/spring-projects/spring-xd/blob/master/extensions/spring-xd-extension-sqoop/src/main/java/org/springframework/xd/sqoop/SqoopTasklet.java

Really doesn't make sense for me add those prefix and remove it later in the next call in the SqoopRunner class. 

https://github.com/spring-projects/spring-xd/blob/master/extensions/spring-xd-extension-sqoop/src/main/java/org/springframework/xd/sqoop/SqoopRunner.java

If I inject  the security.* configurations directly to the list arguments it works. 

I'm sure you guys have a good reason to add the prefix  but I don't see why. Unfortunately is  annoying when you are developing in a local VM where you can test the  simple authentication and after move the job to dev/prod environments with kerberos auth, the above because you must change your sqooptasklet configuration injecting the new parameters. If the SqoopTasklet allows inject those parameters directly from the hadoop.properties file you don't need change tasklet  configurations to run your jobs with different authentication methods. 

Thanks in advance. 
Héctor",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,181008000,,2015-10-14 08:32:32.697,9223372036854775807,true,hlagos(hlagos),,,,"0|i08tuv:",9223372036854775807,9223372036854775807,,,,,,1.0,,"14/Oct/15 8:32 AM;jvalkeal;Yes these two classes and sqoop.xml got way too complex over time. It's true that dropping `spring.hadoop` prefix makes these not very intuitive and I'm not really sure why we did it. It definitely makes reuse of these classes difficult.

1. One reason to keep `spring.hadoop.config` around is that it's used in `yml` for passing generic hadoop config map as is.
2. Eventually we'd like to get to a point where it doesn't matter if props are added to hadoop.properties or servers.yml but one limitation exists in `ConfigurationFactoryBean` which only enables kerberos if correct keys a passed. We got into trouble with this. ","14/Oct/15 2:15 PM;hlagos;If the idea is keep the spring.hadoop.config prefix, in the SqoopRunner class should be added the prefix to the following lines

	public static final String SECURITY_AUTH_METHOD = ""security.authMethod"";
	public static final String SECURITY_USER_KEYTAB = ""security.userKeytab"";
	public static final String SECURITY_USER_PRINCIPAL = ""security.userPrincipal"";
	public static final String SECURITY_NAMENODE_PRINCIPAL = ""security.namenodePrincipal"";
	public static final String SECURITY_RM_MANAGER_PRINCIPAL = ""security.rmManagerPrincipal"";

it should fix the problem.
Regards,

Thanks,
Héctor
",,,,,,,,,,,,,,,,
Kafka source and sink headers shouldn't interfere with bus functionality,XD-3610,66265,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,13/Oct/15 1:04 AM,18/Nov/15 6:18 PM,10/Jul/21 8:37 AM,18/Nov/15 6:18 PM,1.3 M1,,,,,,1.3 GA,,Stream Module,,,,,0,,,,,,,"The Kafka sink should not make use of the message headers sent by the Kafka receivers in the Kafka bus. 

Similarly, the headers received from the Kafka source should not be propagated when sending to the Kakfa bus. 

https://github.com/spring-projects/spring-xd/issues/1804",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,181180800,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1860,"0|hzzy7m:",9223372036854775807,9223372036854775807,,,Sprint 62,,,1.0,,,,,,,,,,,,,,,,,,,
Set Bean Name in ConsumerEndpointFactoryBean,XD-3598,66209,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,07/Oct/15 3:02 PM,19/Oct/15 2:18 PM,10/Jul/21 8:37 AM,19/Oct/15 2:18 PM,,,,,,,1.3 RC1,,,,,,,0,,,,,,,{{LocalMessageBus}} and {{CompositeModule}}.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,181612800,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1801,"0|hzzyl6:",9223372036854775807,9223372036854775807,,,Sprint 60,,,1.0,,,,,,,,,,,,,,,,,,,
Accessing Admin REST APIs on CF returns unexpected results,XD-3591,66189,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,sabby,sabby,05/Oct/15 8:32 PM,24/Nov/15 2:39 PM,10/Jul/21 8:37 AM,24/Nov/15 2:39 PM,,,,,,,,,,,,,,0,,,,,,,"As an s-c-d user, I'm trying to access {{admin}} REST endpoints running on CF but I'm getting SSL authentication errors.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,181526400,XD-3324,2015-10-08 09:02:10.778,9223372036854775807,true,sabby(sabby),,,,"0|i08p9y:yzzzzzzzzv",9223372036854775807,9223372036854775807,,,,,,1.0,,"08/Oct/15 9:02 AM;zteve;@sabby: Is this still a problem? If so, can you include some stacktraces or other diagnostic information you might have obtained?",,,,,,,,,,,,,,,,,
Fix datatype mismatch on admin-ui,XD-3590,66188,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,05/Oct/15 6:49 PM,13/Nov/15 9:41 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a XD developer, I'd like to reproduce and fix anomalies as listed [here|https://github.com/spring-projects/spring-xd-admin-ui-client/issues/9].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,181785600,,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fr02",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
AdminServer fails on HDP 2.3,XD-3568,66132,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,thomas.risberg,thomas.risberg,02/Oct/15 3:02 AM,05/Oct/15 7:48 PM,10/Jul/21 8:37 AM,05/Oct/15 7:48 PM,1.3 M1,,,,,,1.3 M1,,YARN Runtime,,,,,0,,,,,,,"Submitting XD on YARN for HDP 2.3 fails due to some Solr issue in Boot - https://github.com/spring-projects/spring-boot/issues/2795

The xd-admin sysout is:

{code}
Started : AdminServerApplication
Documentation: https://github.com/spring-projects/spring-xd/wiki

02:51:36,624  ERROR main boot.SpringApplication - Application startup failed
java.lang.IllegalStateException: Error processing condition on org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration.solrServer
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:58)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:102)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:178)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:140)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:333)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:243)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:98)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:673)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:519)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.run(AdminServerApplication.java:95)
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.main(AdminServerApplication.java:79)
Caused by: java.lang.IllegalArgumentException: @ConditionalOnMissingBean annotations must specify at least one bean (type, name or annotation)
	at org.springframework.util.Assert.isTrue(Assert.java:68)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition$BeanSearchSpec.<init>(OnBeanCondition.java:223)
	at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:92)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:45)
	... 17 more
02:51:36,628   WARN main annotation.AnnotationConfigApplicationContext - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.context.annotation.AnnotationConfigApplicationContext@1cf1df22: startup date [Fri Oct 02 02:51:31 UTC 2015]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:414)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:966)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:925)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:342)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.run(AdminServerApplication.java:95)
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.main(AdminServerApplication.java:79)
02:51:36,642  ERROR main admin.AdminServerApplication - Error processing condition on org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration.solrServer
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,182131200,XD-1317,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1797,"0|hzzyr6:",9223372036854775807,9223372036854775807,,,Sprint 59,,,3.0,,,,,,,,,,,,,,,,,,,
Fix classpath and servlet container issues,XD-3567,66131,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,thomas.risberg,thomas.risberg,thomas.risberg,01/Oct/15 9:44 PM,02/Oct/15 3:39 PM,10/Jul/21 8:37 AM,02/Oct/15 3:39 PM,,,,,,,1.3 M1,,Hadoop,Runtime,,,,0,,,,,,,"Several issues with 1.3.0.M1 staged version

- we now use Tomcat instead of Jetty which prevent s xd-admin from starting on YARN

- we now have Guava 18.0 on classpath instead of 16.0.1

- xd-yarn push doesn't work, hadoop client for 2.7.1 needs Servlet API 

- updating Hadoop to 2.7.1 instead of 2.6.0
  -- this causes Curator to also update to 2.7.1 which throws exception on startup
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,182131200,XD-1317,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1794,"0|i08t3b:",9223372036854775807,9223372036854775807,,,Sprint 58,,,3.0,,,,,,,,,,,,,,,,,,,
Spark Tap Tests Do Not Clean Up RabbitMQ,XD-3510,66048,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,28/Sep/15 4:56 PM,28/Sep/15 4:56 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,2 Exchanges left behind.,,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/15 4:56 PM;grussell;Screen Shot 2015-09-28 at 12.54.35 PM.png;https://jira.spring.io/secure/attachment/23131/Screen+Shot+2015-09-28+at+12.54.35+PM.png",,,,,,,,,,,,,182390400,,,9223372036854775807,false,grussell(grussell),,,,"0|i08smf:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
CORS issue when trying to use HTTP in singlenode,XD-3509,66046,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,hillert,imorti,imorti,28/Sep/15 3:29 PM,05/Oct/15 3:18 PM,10/Jul/21 8:37 AM,05/Oct/15 3:18 PM,1.2.1,,,,,,,,Configuration,,,,,0,,,,,,,"When I'm trying to send a json object to spring-xd I get the following error even though I opened up requests to allow all. 

XMLHttpRequest cannot load http://localhost:9000/. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access.

Config: 
spring:
  profiles: singlenode
xd:
  transport: local
  ui:
     allow_origin: ""*""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,182217600,,2015-09-30 17:14:34.05,9223372036854775807,true,hillert(hillert),,,,"0|i08slz:",9223372036854775807,9223372036854775807,,,,,,3.0,,"30/Sep/15 5:14 PM;hillert;Added more documentation as part of XD-3503.

I tested that the header is being set:

{code}
curl -H ""Origin: http://example.com"" --verbose  http://localhost:9393/
{code}

And the response has set the respective header:

{code}
Access-Control-Allow-Origin: *
{code}

Maybe there is something else into play here. Can you check whether in your case the header is set?

I added this to my *server.yml*:

{code}
---
spring:
  profiles: admin
xd:
  ui:
    allow_origin: ""*""
---
{code}",,,,,,,,,,,,,,,,,
Refactor to replace codec implementation with SI library,XD-3508,66022,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,sabby,sabby,25/Sep/15 9:51 PM,09/Oct/15 7:55 PM,10/Jul/21 8:37 AM,09/Oct/15 7:55 PM,,,,,,,1.3 RC1,,,,,,,0,,,,,,,"As a XD developer, I'd like to refactor and replace {{codec}} code from XD with SI library, so I don't have to maintain duplicate code.",,,,,,,,,,,,,XD-3493,,,,,,,,,,,,,,,,,,,,,,,3.0,182649600,,,9223372036854775807,true,grussell(grussell),"* {{codec}} code is removed in XD 
* Existing {{codec}} test cases successfully runs after refactoring
* {{codec}} documentation updated",,https://github.com/spring-projects/spring-xd/pull/1800,"0|hzzytu:",9223372036854775807,9223372036854775807,,,Sprint 59,,,3.0,,,,,,,,,,,,,,,,,,,
UI - Container List - Module Properties - Escape Passwords,XD-3506,66016,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,25/Sep/15 4:55 PM,29/Sep/15 2:32 PM,10/Jul/21 8:37 AM,29/Sep/15 2:32 PM,1.2.1,,,,,,1.2.2,1.3 M1,REST,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,182649600,,,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1778,"0|i08sfb:",9223372036854775807,9223372036854775807,,,Sprint 58,,,1.0,,,,,,,,,,,,,,,,,,,
Admin app crashes with SSL certification errors,XD-3505,66015,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pharris,sabby,sabby,25/Sep/15 4:37 PM,30/Sep/15 11:02 AM,10/Jul/21 8:37 AM,30/Sep/15 11:02 AM,,,,,,,,,,,,,,0,,,,,,,"As a s-c-d user, I'm unable to push admin app to CF due to SSL certification errors while bootstrapping. 

Consider adding [CF trusted certificate|https://github.com/pivotal-cf/cloudfoundry-certificate-truster] as a CF SPI dependency.

Adding CF trusted certificate as dependency doesn't help either:

{code}
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:387)
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:292)
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR at sun.security.validator.Validator.validate(Validator.java:260)
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR at sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324)
> Fri Sep 25 2015 12:55:32 GMT-0400 (EDT) [App/0] ERR at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:229)
> Fri Sep 25 2015 12:55:32 GMT-...
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,182217600,XD-3324,2015-09-30 10:48:49.486,9223372036854775807,true,zteve(zteve),,,https://github.com/spring-cloud/spring-cloud-dataflow/pull/94,"0|i000ie:wrn0qzzzzzz000008u3ygfi03r",9223372036854775807,9223372036854775807,,,Sprint 58,,,3.0,,"30/Sep/15 10:48 AM;zteve;The fix for this issue is a commit in the resolution of PR-94.","30/Sep/15 11:02 AM;zteve;Fix in PR-94: commit https://github.com/spring-cloud/spring-cloud-dataflow/commit/a67dee286ee68d773064ef8ddf7623245e01e599.",,,,,,,,,,,,,,,,
Composed modules destination binding order incorrect,XD-3475,65901,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,loesak,loesak,19/Sep/15 2:32 AM,22/Sep/15 2:20 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"Created a stream with definition:
{code}
mySourceModule | myProcessorModule | log
{code}
This stream worked fine, but when created composed module with definition
{code}
mySourceModule | myProcessorModule
{code}
Then stream definition
{code}
myComposedModule | log
{code}

get an error stating that the output channel of mySourceModule has no subscribers. Looking at previous bugs, this appears to be a module binding order in which the source is started before the processor has subscribed to the output channel of the source.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,183254400,,,9223372036854775807,true,loesak(loesak),,,,"0|i08rtj:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Composing modules ignores output/input type specified in definition,XD-3474,65900,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,loesak,loesak,19/Sep/15 2:28 AM,05/Apr/16 11:01 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,1,,,,,,,"When composing two or more modules together, if any output or input type is specified between modules, it is ignored. 

I created a stream with definition:
{code}
mySourceModule --outputType=application/json | myProcessorModule
{code}
that worked fine as expected. When i composed this definition as a composed module, I got errors stating that the processors message handler had no handler method for the object the source module emitted. The process was only configured to accept JSON as string. I simply had to create a second handler method but if i didnt own the module, this could be an issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,165974400,,2016-04-05 11:01:26.916,9223372036854775807,true,mgervais(mgervais),,,,"0|i08rtb:",9223372036854775807,9223372036854775807,,,,,,1.0,,"05/Apr/16 11:01 AM;mgervais;Hi,

This is an issue for me, I've the problem when I'm trying to compose a module with native modules.

Is it planned to solve this issue?

Thanks

Mickael",,,,,,,,,,,,,,,,,
Web Admin app not loading for slow connections,XD-3473,65851,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,CalamarBicefalo,CalamarBicefalo,15/Sep/15 8:49 AM,18/Oct/18 10:05 PM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,UI,,,,,0,,,,,,,"When opening manager webapp, if the internet connection is slow enough to make one of the biggest javascript dependencies to make requirejs throw a timeout the webapp becomes unusable, displaying only the loading gif, and showing a javascript error saying:

Uncaught Error: Load timeout for modules: angular

It typically takes ~ 10 seconds to throw that error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,95126400,,2018-07-05 02:09:19.356,9223372036854775807,true,test-aa2(test-aa2),,,,"0|i08rif:",9223372036854775807,9223372036854775807,,,,,,1.0,,"05/Jul/18 2:09 AM;mbustosp;I solved this issue by setting the waitseconds property in [one of the require.js configurations|https://github.com/spring-projects/spring-xd-admin-ui-client/blob/f44feed6c0e1991d88fde67cd8af18382c718ab8/ui/app/scripts/main.js] (*spring-xd-admin-ui-client project*).

 
{code:java}
...
/**
 * RequireJS configuration and bootstrapping angular.
 *
 * @author Ilayaperumal Gopinathan
 */
require.config({
  waitSeconds: 200, // or 0 to disable it
  paths: {
...{code}
 

 

 

 ",,,,,,,,,,,,,,,,,
Unable to set --closeTimeout on SCSM hdfs sink module,XD-3468,65807,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,09/Sep/15 6:35 PM,10/Sep/15 8:51 PM,10/Jul/21 8:37 AM,10/Sep/15 2:57 PM,,,,,,,,,,,,,,0,,,,,,,"Creating a stream like this:

  stream create --name myhdfsstream1 --definition ""time | hdfs --closeTimeout=5000"" --deploy

causes:

java.lang.IllegalArgumentException: Task executor must be set
        at org.springframework.util.Assert.notNull(Assert.java:115) ~[spring-core-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.data.hadoop.store.support.PollingTaskSupport.init(PollingTaskSupport.java:105) ~[spring-data-hadoop-store-2.3.0.M2.jar!/:2.3.0.M2]
        at org.springframework.data.hadoop.store.support.StoreObjectSupport.onInit(StoreObjectSupport.java:97) ~[spring-data-hadoop-store-2.3.0.M2.jar!/:2.3.0.M2]
        at org.springframework.data.hadoop.store.support.OutputStoreObjectSupport.onInit(OutputStoreObjectSupport.java:81) ~[spring-data-hadoop-store-2.3.0.M2.jar!/:2.3.0.M2]
        at org.springframework.data.hadoop.store.support.LifecycleObjectSupport.afterPropertiesSet(LifecycleObjectSupport.java:67) ~[spring-data-hadoop-store-2.3.0.M2.jar!/:2.3.0.M2]
        at org.springframework.cloud.stream.module.hdfs.sink.DataStoreWriterFactoryBean.afterPropertiesSet(DataStoreWriterFactoryBean.java:175) ~[hdfs-sink-1.0.0.BUILD-SNAPSHOT-exec.jar!/:1.0.0.BUILD-SNAPSHOT]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]        ... 35 common frames omittedWrapped by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataStoreWriter' defined in class path resource [org/springframework/cloud/stream/module/hdfs/sink/HdfsSinkConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Task executor must be set
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301) ~[spring-beans-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBea",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,184032000,XD-3285,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-cloud/spring-cloud-stream-modules/pull/35,"0|i08r8v:",9223372036854775807,9223372036854775807,,,Sprint 57,,,2.0,,,,,,,,,,,,,,,,,,,
NPE in AbstractReactorMessageHandler,XD-3465,65782,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,08/Sep/15 4:36 PM,08/Sep/15 4:36 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"When the {{BroadcasterMessageHandler}} is defined as a {{@ServiceActivator}} {{@Bean}} , the output channel must be set on the handler, not in the annotation.

The handler should detect a {{null}} {{outputChannel}}.

See http://stackoverflow.com/questions/32462059/spring-xd-reactor-streams-with-configuration-npe",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,184118400,,,9223372036854775807,false,grussell(grussell),,,,"0|i08r3j:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Stream Destroy fails if stream deploy failed,XD-3464,65777,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pharris,pharris,pharris,08/Sep/15 3:05 PM,12/Sep/15 3:33 PM,10/Jul/21 8:37 AM,12/Sep/15 3:33 PM,2.x,,,,,,,,,,,,,0,,,,,,,"(From Eric)

Deploying using the following stream fails (probably because of issues around quoting):

`stream create foo --definition ""time | filter --expression=payload.contains('0') | log"" --deploy`

When you try to destroy the stream the destroy fails, which shouldn't happen whether the stream was valid or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,184118400,XD-3324,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-cloud/spring-cloud-dataflow/pull/87,"0|i08r2f:",9223372036854775807,9223372036854775807,,,Sprint 57,,,2.0,,,,,,,,,,,,,,,,,,,
Support underscore delimited module args for module launcher,XD-3460,65717,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,iperumal,iperumal,iperumal,03/Sep/15 8:21 AM,04/Sep/15 3:46 PM,10/Jul/21 8:37 AM,04/Sep/15 3:46 PM,,,,,,,,,,,,,,0,,,,,,,"If the module launcher's module arg is delimited by underscore (--args_0_fixedDelay=1), then boot ignores that property. It is important to support the underscore delimited property arguments as we set environment properties of these in CF and lattice environment.

The spring boot fix (https://github.com/spring-projects/spring-boot/commit/5a287455273270a20742f03e4546acde9e857bee) doesn't resolve the property if the value type of the Map is Map itself.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,184636800,XD-3236,,9223372036854775807,true,sabby(sabby),,,,"0|i08qp3:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
JDBC Source java.sql.SQLFeatureNotSupportedException when using Facebook Presto driver,XD-3459,65711,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,tezra,tezra,02/Sep/15 9:38 PM,04/Sep/15 4:37 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"I am trying to use Presto JDBC driver with Spring-XD JDBC source but I as soon as I deploy the stream I get SQLFeatureNotSupportedException. This is because org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin function tries to call setAutoCommit(false) which is not supported by PrestoConnection.

Reading some other related issues I tried to set testOnBorrow=false and validationQuery='select 1', but it did not seem to work. Also, I created a small test in Java and managed to query the table (added the code at the end), so the driver seems to work fine.

In the mean while, I would like to know if there is any workaround for this issue.

I am using spring-xd-1.2.1.RELEASE with Java 1.8.0_51 on Ubuntu 12.04.5 precise.

*JDBC driver jar*
I added the driver jar to xd/lib from here: https://prestodb.io/docs/current/installation/jdbc.html

*This is how I create the stream*
stream create foo --definition ""jdbc --fixedDelay=30 --split=1 --url=jdbc:presto://localhost:8080/hive --query='SELECT * FROM fooTable limit 10' --driverClassName=com.facebook.presto.jdbc.PrestoDriver --testOnBorrow=false --validationQuery='select 1'|log"" --deploy

*Stack trace*
2015-09-02T14:15:59-0700 1.2.1.RELEASE ERROR task-scheduler-1 handler.LoggingHandler - org.springframework.transaction.CannotCreateTransactionException: Could not open JDBC Connection for transaction; nested exception is java.sql.SQLFeatureNotSupportedException: Disabling auto-commit mode not supported
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:245)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:463)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:276)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy119.call(Unknown Source)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:298)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:292)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLFeatureNotSupportedException: Disabling auto-commit mode not supported
	at com.facebook.presto.jdbc.PrestoConnection.setAutoCommit(PrestoConnection.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy120.setAutoCommit(Unknown Source)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:225)
	... 21 more

*Test Class*
public class Test {
    public static final String DB_URL = ""jdbc:presto://localhost:8080/hive"";
    public static final String Template = ""SELECT * FROM  fooTable limit 10"";

    public static void main(String[] args) throws SQLException, IOException {
        Connection conn = null;
        Statement stmt = null;
        conn = DriverManager.getConnection(DB_URL, ""test"", null);
        stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(Template);
    }
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,184636800,,,9223372036854775807,true,tezra(tezra),,,,"0|i08qnr:",9223372036854775807,9223372036854775807,,,,,,0.0,,,,,,,,,,,,,,,,,,,
 Issue with pagination in web UI,XD-3434,65594,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,bjalonmontanes,bjalonmontanes,27/Aug/15 3:30 PM,13/Nov/15 8:59 PM,10/Jul/21 8:37 AM,,1.1.2,,,,,,,,UI,,,,,0,,,,,,,"In JOBS tab; Quick-filter search box paging functionality is not working as expected. Items stay in the page they were first loaded after filtering. 
ex. If there were 500 pages of jobs and you are filtering for a job which was in 345. page, after the filtering you have to navigate to that page in order to see the job. It needs to be rendered on the first page. 

",,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/15 3:29 PM;bjalonmontanes;quickFilter-1.png;https://jira.spring.io/secure/attachment/23088/quickFilter-1.png","27/Aug/15 3:29 PM;bjalonmontanes;quickFilter-2.png;https://jira.spring.io/secure/attachment/23089/quickFilter-2.png",,,,,,,,,,,,182044800,,2015-10-02 14:17:35.841,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi03wig26fv",9223372036854775807,9223372036854775807,,,,,,3.0,,"02/Oct/15 2:17 PM;hillert;This is a much larger issue. While we do pagination using the server-side support, we don't do that for filter queries. That is done client-side only - and only for the active page. Adding this throughout the application, will mean some refactoring.

This also raises issues regarding processing/query cost. Also, the current `client-side` filter searches across ALL columns. While convenient, doing so server-side may be costly and may necessitate using ElasticSearch/Solr [1]

http://blog.sematext.com/2015/01/30/solr-elasticsearch-comparison/ ",,,,,,,,,,,,,,,,,
[Flo] UI unresponsive after some time,XD-3433,65499,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,vignesh,vignesh,26/Aug/15 12:03 AM,28/Aug/15 6:03 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,UI,,,,,0,waiting-for-reporter,,,,,,"The Chrome UI Interface for flo stream creation stops responding after some time. It starts working once the browser history/ cookies etc. are cleaned up. 

. The drop down stops working,  
. i'm unable to look at or edit module properties, 
. connecting different modules doesn't work either
. Drag and drop operations still work
. command line stream creation still works

is anyone else facing these issues ? 

Thanks ! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,185155200,,2015-08-27 15:59:22.479,9223372036854775807,true,vignesh(vignesh),,,,"0|i08puf:",9223372036854775807,9223372036854775807,,,,,,2.0,,"27/Aug/15 3:59 PM;sabby;Hi [~vignesh]: Are you on 1.2.1 version of both Flo and XD? Flo for Spring XD 1.2.1 is a separate [download|https://network.pivotal.io/products/p-spring-flo/]. 

If you're already on Flo 1.2.1, could you please include the reproducible steps/test-case? Also, it'd be nice if you could validate this behavior in other browsers. Any other details you could share on this regard, that'd help troubleshoot it further.","28/Aug/15 6:03 AM;vignesh;Hi Sabby, I am using Spring 1.2.1 and Flo 1.2.1 versions. I have been trying to recreate the issue but not much progress on that unfortunately. 
The way i recall it happened twice was that after opening the Flo UI, the machine had gone into sleep mode. When i logged in again, the xd-singlenode instance was still running , as well as the xd-shell (quite laggy though), but the admin UI had the issues that i mentioned. 

Sorry not of much help at the moment, will keep tracking this and let you know if and when the issue reappears. Thanks ! ",,,,,,,,,,,,,,,,
Fix Cloud connector dependencies and service resolution,XD-3424,65458,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,21/Aug/15 5:18 PM,24/Aug/15 7:06 AM,10/Jul/21 8:37 AM,24/Aug/15 7:06 AM,,,,,,,,,,,,,,0,,,,,,,"This JIRA addresses couple of issues:
1) When the modules are deployed into cloud environment there is an issue where local configuration beans collide with cloud service beans. We witnessed an issue where there are two `RedisConnectionFactory` beans registered in the same application context.
We need to have a control the way in which the auto configuration gets invoked and service beans are created.
2) We need to align the cloud connector dependencies into a common place so that we don't have to specify them at various places like (SCS, SCS-Binder, SCS-modules) etc.,
It is a good idea to have these dependencies specified in SCS-modules so that it get used subsequently by SCS when the module is assembled at runtime.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,185500800,XD-3236,,9223372036854775807,true,iperumal(iperumal),,,,"0|i08plj:",9223372036854775807,9223372036854775807,,,Sprint 56,,,3.0,,"24/Aug/15 7:06 AM;iperumal;The issue has been addressed in multiple PRs:

On S-C-S-modules:
https://github.com/spring-cloud/spring-cloud-stream-modules/commit/1a97439ad4870b2c49765818d96c8ff129e9349b

On S-C-S:
https://github.com/spring-cloud/spring-cloud-stream/commit/44bf181ff041f362c1469efa8d2a73226d00a5cc
https://github.com/spring-cloud/spring-cloud-stream/commit/56469353b357dfc3c04de035ffee649a852e8d57
https://github.com/spring-cloud/spring-cloud-stream/commit/1e8989a45abc789119d6326a911908b18332549b",,,,,,,,,,,,,,,,,
check whether the field exists or not in  #jsonpath evaluation,XD-3386,65273,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,a_ayyaps,a_ayyaps,11/Aug/15 7:45 AM,11/Aug/15 7:55 AM,10/Jul/21 8:37 AM,,,,,,,,,,Stream Module,,,,,0,waiting-for-reporter,,,,,,"I am parsing Json(source)  into CSV  in Transform function
All of my Json records may not have all the fields.
Some records have only Field1,field2.. some other records have all 3 fields.
if the specific field is not exists in specific record, that record got rejected.(by saying field is not exist)
Could you please let me know how to check the field exists or not.
Here my expression part of the stream
transform --expression=#jsonPath(payload,'$.field1').concat('|').concat(#jsonPath(payload,'$.field2')).concat('|').concat(#jsonPath(payload,'$.field3'))

My Spring XD version is  1-0-0-m7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186624000,,2015-08-11 07:54:43.321,9223372036854775807,true,sabby(sabby),,,,"0|i08oi7:",9223372036854775807,9223372036854775807,,,,,,1.0,,"11/Aug/15 7:54 AM;sabby;Hi [~a_ayyaps]: 1.0.0.M7 is *17* releases [behind|https://jira.spring.io/browse/XD?selectedTab=com.atlassian.jira.jira-projects-plugin:versions-panel&subset=-1]. We are currently at 1.2.1 as the latest GA release. Could you please upgrade to the latest and retry? If you're still facing issues with the upgrade, do share your deployment topology and infrastructure specifics as explained [here|https://github.com/spring-projects/spring-xd/wiki/Project-and-Community#improve-spring-xd]. ",,,,,,,,,,,,,,,,,
Can't build and run singlenode spring-cloud-data-rest app on Ubuntu,XD-3385,65266,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,thomas.risberg,thomas.risberg,thomas.risberg,10/Aug/15 8:44 AM,11/Aug/15 6:45 AM,10/Jul/21 8:37 AM,11/Aug/15 6:45 AM,,,,,,,,,Runtime,,,,,0,,,,,,,"Building and then running spring-cloud-data-rest app on Ubuntu fails when trying to create the first stream. The configuration ends up with a CloudFoundryConfig instead of LocalConfig for the moduleDeployer.

Env:
Ubuntu 15.04
java version ""1.8.0_51""
Java(TM) SE Runtime Environment (build 1.8.0_51-b16)
Java HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)

Error:
{code}
2015-08-10 11:43:47.199 ERROR 11062 --- [nio-9393-exec-1] o.s.c.d.r.c.RestControllerAdvice         : Caught exception while handling a request
java.lang.UnsupportedOperationException: null
	at org.springframework.cloud.data.module.deployer.cloudfoundry.CloudFoundryModuleDeployer.deploy(CloudFoundryModuleDeployer.java:30) ~[spring-cloud-data-module-deployer-cloudfoundry-1.0.0.BUILD-SNAPSHOT.jar!/:1.0.0.BUILD-SNAPSHOT]
	at org.springframework.cloud.data.rest.controller.StreamController.deployStream(StreamController.java:213) ~[spring-cloud-data-rest-1.0.0.BUILD-SNAPSHOT.jar!/:1.0.0.BUILD-SNAPSHOT]
	at org.springframework.cloud.data.rest.controller.StreamController.save(StreamController.java:140) ~[spring-cloud-data-rest-1.0.0.BUILD-SNAPSHOT.jar!/:1.0.0.BUILD-SNAPSHOT]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_51]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_51]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_51]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_51]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) ~[spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137) ~[spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:111) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:806) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:729) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) ~[spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) [spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:235) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:85) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:69) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.0.RELEASE.jar!/:4.2.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:668) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1521) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1478) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_51]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_51]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.23.jar!/:8.0.23]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_51]
2015-08-10 11:43:47.284  WARN 11062 --- [nio-9393-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Handler execution resulted in exception: null
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186624000,XD-3342,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08ogn:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
First deploy/launch of Pig job that includes yarn-site.xml file fails,XD-3373,65238,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,thomas.risberg,thomas.risberg,07/Aug/15 4:13 PM,30/Sep/15 4:01 PM,10/Jul/21 8:37 AM,27/Aug/15 3:21 PM,1.2.1,,,,,,1.3 M1,,Batch,,,,,0,,,,,,,"Deploying and launching a Pig job that contains a yarn-site.xml config file fails on the first deploy after XD starts up. This happens consistently.

The error is: 
  Error: Could not find or load main class org.apache.hadoop.mapreduce.v2.app.MRAppMaster

which indicates that the yarn-site.xml file never made it to the classpath.

Un-deploying and re-deploying the job seems to fix the problem.",,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/15 4:13 PM;thomas.risberg;pigwordcount.jar;https://jira.spring.io/secure/attachment/22974/pigwordcount.jar",,,,,,,,,,,,,185155200,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd-samples/commit/ec6325a4a8379770e174ca9a0a78f7ebe90e719b,"0|i08obz:",9223372036854775807,9223372036854775807,,,Sprint 56,,,5.0,,"27/Aug/15 3:21 PM;thomas.risberg;Already merged",,,,,,,,,,,,,,,,,
Admin UI deploys job with wrong module count,XD-3358,65200,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,tcostasouza,tcostasouza,06/Aug/15 11:27 AM,28/Sep/15 8:59 PM,10/Jul/21 8:37 AM,25/Sep/15 4:58 PM,1.2.1,,,,,,1.2.2,1.3 M1,UI,,,,,0,,,,,,,"When deploying a job through admin UI with a count of 0 the module is actually deployed with count 1.

More info here: [http://stackoverflow.com/questions/31858631/how-to-define-named-channel-consumer-module-deployment-properties]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,186969600,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd-admin-ui-client/pull/7,"0|i08phv:",9223372036854775807,9223372036854775807,,,Sprint 58,,,2.0,,,,,,,,,,,,,,,,,,,
MongoDB Batch Job Broken,XD-3357,65198,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,thomas.risberg,sabby,sabby,06/Aug/15 9:46 AM,02/Sep/15 2:46 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a Spring XD user, I'm trying to use a custom MongoDB Batch job; however, I'm getting an error running it against 1.2.0/1.2.1 release, while the same works with older releases of Spring XD. More details in this [SO thread|http://stackoverflow.com/questions/31838720/mongodb-batch-job-broken-in-spring-xd-1-2-0].
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186969600,,,9223372036854775807,true,thomas.risberg(thomas.risberg),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi04",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Accessing step progress via REST fails with 403,XD-3346,65158,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,sabby,sabby,05/Aug/15 7:24 AM,30/Sep/15 3:58 PM,10/Jul/21 8:37 AM,17/Aug/15 6:39 AM,,,,,,,1.3 M1,,,,,,,0,,,,,,,"As a XD user, I'm trying to access URI (- GET /jobs/executions//steps//progress => hasRole('ROLE_VIEW')), but it fails with 403 forbidden error for the role with view access. More details [here|https://issuetracker.springsource.com/browse/VESC-475].

Another URL with the same error: http://<HOST>:9393/streams/definitions.json?page=0&size=10",,,,,,,,,,,,,,,,,XD-3347,,,,,,,,,,,,,,,,,,,3.0,186364800,XD-1694,2015-08-06 21:59:08.333,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1767,"0|i08n44:",9223372036854775807,9223372036854775807,,,Sprint 55,,,1.0,,"06/Aug/15 9:59 PM;sroy;Could you please validate the fix? Customer is adding the following authorization rules -


{noformat}
- POST /modules/*/* => hasRole('ROLE_CREATE')

- GET /jobs/executions/*/steps/*/progress.* => hasRole('ROLE_VIEW')

- GET /streams/definitions.* => hasRole('ROLE_VIEW')

- GET /streams/definitions* => hasRole('ROLE_VIEW')

{noformat}

The module URI is related to the fix for [XD-3308|https://jira.spring.io/browse/XD-3308]","07/Aug/15 12:30 PM;sroy;Another issue reported by customer :
Not able to issue the following from xd-shell  (logged in as admin user and security enabled) -
{quote}
stream all destroy --force 
{quote}
They are the using the following workaround in servers.yml -
{noformat} 
- DELETE /streams/definitions* => hasRole('ROLE_CREATE')
{noformat} 
Please confirm this. Looking at the above fix (in my comment above), I think the following may also be necessary -
{noformat} 
- DELETE /streams/definitions.* => hasRole('ROLE_CREATE')
{noformat} ","10/Aug/15 7:16 AM;bjalonmontanes;Hi, another issue reported by customer.

Spring-XD 1.2.1 -- with security and fixes we are not able to use admin ui to deploy, but we are able to deploy using xd-shell. 
current security fixes: 
authorization: 
rules: 
- POST /modules/*/* => hasRole('ROLE_CREATE') 
- GET /jobs/executions/*/steps/*/progress.* => hasRole('ROLE_VIEW') 
- GET /streams/definitions.* => hasRole('ROLE_VIEW') 
- GET /streams/definitions* => hasRole('ROLE_VIEW') 
- DELETE /streams/definitions* => hasRole('ROLE_CREATE') 
If we enable this last one deploy works again but other as create stream is broken 
- GET /streams/definitions/* => hasRole('ROLE_VIEW')","12/Aug/15 1:55 PM;hillert;Regarding:

""As a XD user, I'm trying to access URI (- GET /jobs/executions//steps//progress => hasRole('ROLE_VIEW')), but it fails with 403 ""

Added several test-cases that to work, that pass :

{code}
{ HttpMethod.GET, HttpStatus.UNAUTHORIZED, ""/jobs/executions/333/steps/123/progress"", null, null },
{ HttpMethod.GET, HttpStatus.NOT_FOUND, ""/jobs/executions/333/steps/123/progress"", viewOnlyUser, null },
{ HttpMethod.GET, HttpStatus.FORBIDDEN, ""/jobs/executions/333/steps/123/progress"", adminOnlyUser, null },
{ HttpMethod.GET, HttpStatus.FORBIDDEN, ""/jobs/executions/333/steps/123/progress"", createOnlyUser, null },
{code}

However, the Admin UI uses the "".json"" extension and the following test fails with a *403* HTTP status code:

{code}
	{ HttpMethod.GET, HttpStatus.NOT_FOUND, ""/jobs/executions/333/steps/123/progress.json"", viewOnlyUser, null },
{code}

Adding the following authorization rule to *application.yml* fixes it:

{code}
- GET    /jobs/executions/*/steps/*/progress.json => hasRole('ROLE_VIEW')
{code}

Created: https://jira.spring.io/browse/XD-3390 

The Admin UI should ultimately not use the "".json"" extensions.

","13/Aug/15 7:01 AM;hillert;Regarding:

""Another URL with the same error: http://<HOST>:9393/streams/definitions.json?page=0&size=10""

This should be working, we have the relevant test-cases that pass:

{code}
			{ HttpMethod.GET, HttpStatus.OK, ""/streams/definitions"", viewOnlyUser, null },
			{ HttpMethod.GET, HttpStatus.OK, ""/streams/definitions.xml"", viewOnlyUser, null },
			{ HttpMethod.GET, HttpStatus.OK, ""/streams/definitions.json"", viewOnlyUser, null },
			{ HttpMethod.GET, HttpStatus.OK, ""/streams/definitions.json"", viewOnlyUser,
				ImmutableMap.of(""page"", ""0"", ""size"", ""10"") },
{code}","13/Aug/15 7:10 AM;hillert;Regarding: 

{code}
- DELETE /streams/definitions* => hasRole('ROLE_CREATE') 
- DELETE /streams/definitions.* => hasRole('ROLE_CREATE')
{code}

The authorization rules were already in place. Created the following test-cases:

{code}
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions"", viewOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions.xml"", viewOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions.json"", viewOnlyUser, null },

	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions"", adminOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions.xml"", adminOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions.json"", adminOnlyUser, null },

	{ HttpMethod.DELETE, HttpStatus.OK, ""/streams/definitions"", createOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.OK, ""/streams/definitions.xml"", createOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.OK, ""/streams/definitions.json"", createOnlyUser, null },
{code}

They all pass.","13/Aug/15 8:32 AM;hillert;Regarding:

""Spring-XD 1.2.1 – with security and fixes we are not able to use admin ui to deploy, but we are able to deploy using xd-shell. ""

Added relevant test-cases that pass:

{code}
	{ HttpMethod.POST, HttpStatus.FORBIDDEN, ""/streams/deployments/abcd"", viewOnlyUser, null },
	{ HttpMethod.POST, HttpStatus.FORBIDDEN, ""/streams/deployments/abcd"", adminOnlyUser, null },
	{ HttpMethod.POST, HttpStatus.NOT_FOUND, ""/streams/deployments/abcd"", createOnlyUser, null },

	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/deployments/abcd"", viewOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/deployments/abcd"", adminOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.NOT_FOUND, ""/streams/deployments/abcd"", createOnlyUser, null },

	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions/abcd"", viewOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.FORBIDDEN, ""/streams/definitions/abcd"", adminOnlyUser, null },
	{ HttpMethod.DELETE, HttpStatus.NOT_FOUND, ""/streams/definitions/abcd"", createOnlyUser, null },
{code}","13/Aug/15 1:57 PM;sroy;Updating the Jira with the Slack conversation with Gunnar.

All the suggested changes are already in place. The only change that needs to be added to customer's *servers.yml* file would be -

{noformat}

  - GET    /jobs/executions/*/steps/*/progress.json => hasRole('ROLE_VIEW')

{noformat}


We will check if they are using 1.2.1 for reporting the issues.

Thanks,
Swagata",,,,,,,,,,
Job creation fails saying it exists (there isn't any job with that jobName),XD-3345,65152,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sroy,sroy,05/Aug/15 3:46 AM,05/Aug/15 3:46 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,Batch,,,,,0,,,,,,,"Running Spring-XD in singlenode using Pivotal HD 2.1 as the Hadoop Distribution. 

xd-singlenode --hadoopDistro phd21

I was testing  jdbchdfs job definitions. I am seeing this error that the job exists when in reality, there is no job with that jobName. 

xd:>job create testEmployeeJobAgain1 --definition ""jdbchdfs --sql='select employee_id, employee_name, employer from EMPLOYEE' --url=jdbc:oracle:thin:@//localhost:1521/orcl --driverClassName=oracle.jdbc.OracleDriver  --username=springxd --password=xdpwd --testOnBorrow=false --directory=/usr/swatest1"" 
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Batch Job with the name testEmployeeJobAgain1 already exists

xd:>job list
  Job Name  Job Definition  Status
  --------  --------------  ------",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,187142400,,,9223372036854775807,true,sroy(sroy),,,,"0|i08ntj:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Do not include optional dependencies automatically via 'includes',XD-3338,65140,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,sabby,sabby,04/Aug/15 1:58 PM,14/Oct/15 1:02 PM,10/Jul/21 8:37 AM,14/Oct/15 1:02 PM,,,,,,,,,,,,,,0,,,,,,,"As a s-c-d developer, I'd like the 'includes' feature of the module launcher not to include optional dependencies, so that I can have better control over what gets added to the class path.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,* Multiple libraries can be successfully loaded through BOM coordinates,2.0,187142400,XD-3361,,9223372036854775807,true,mbogoevici(mbogoevici),,,https://github.com/spring-cloud/spring-cloud-stream/pull/146,"0|hzzyru:",9223372036854775807,9223372036854775807,,,Sprint 59,,,2.0,,,,,,,,,,,,,,,,,,,
Kafka Source must set autoStartup=false on KafkaMessageDrivenChannelAdapter,XD-3335,65136,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mbogoevici,mbogoevici,mbogoevici,04/Aug/15 12:55 PM,06/Aug/15 12:31 PM,10/Jul/21 8:37 AM,06/Aug/15 12:31 PM,1.2.1,,,,,,1.2.2,1.3 M1,Stream Module,,,,,0,,,,,,,"If the value is not set, the source may start before being bound to the bus, throwing a ""Dispatcher has no subscribers"" error",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,187142400,XD-2356,,9223372036854775807,false,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1763,"0|hzzz7e:",9223372036854775807,9223372036854775807,,,Sprint 55,,,3.0,,,,,,,,,,,,,,,,,,,
Test Spark Module with maven spring-xd-module-parent java.lang.NoClassDefFoundError,XD-3323,65115,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,iperumal,morfeo8marc,morfeo8marc,04/Aug/15 2:19 AM,27/Aug/15 7:31 AM,10/Jul/21 8:37 AM,,1.2.1,,,,,,,,Stream Module,,,,,0,,,,,,,"A test for a java spark module managed by maven, with parent *spring-xd-module-parent* launch a _*java.lang.NoClassDefFoundError*_.

I've forked the example repo [https://github.com/morfeo8marc/spring-xd-samples/tree/master/spark-streaming-wordcount-java-processor|https://github.com/morfeo8marc/spring-xd-samples/tree/master/spark-streaming-wordcount-java-processor] the samples project and created the *pom* file for the *spark-streaming-wordcount-java-processor* project and the corresponding test.

Partial stack trace:

{code:title=StackTrace}
2015-08-04 09:30:07,211 ERROR [DeploymentsPathChildrenCache-0] listen.ListenerContainer (ListenerContainer.java:run(96)) - Listener (org.springframework.xd.dirt.server.container.DeploymentListener@729c251b) threw an exception
java.lang.NoClassDefFoundError: org/eclipse/jetty/util/component/AggregateLifeCycle
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.spark.HttpServer.org$apache$spark$HttpServer$$doStart(HttpServer.scala:74)
{code}

When the *WordCountTest* test is launched the exception is launched.

Is there a problem with the  *spring-xd-module-parent* module ? Are some dependencies left?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Be able to launch a simple test in springxd/spark standalone environment.,,187142400,,2015-08-04 17:17:41.671,9223372036854775807,true,morfeo8marc(morfeo8marc),,,,"0|i08nlr:",9223372036854775807,9223372036854775807,,,,,,2.0,,"04/Aug/15 5:17 PM;iperumal;do you want to give this a try: 

https://github.com/spring-projects/spring-xd-samples/tree/master/spark-streaming-wordcount-java-processor","05/Aug/15 2:01 AM;morfeo8marc;Sorry for wasting your time. 
The repo url with the failing test example was wrong. I've corrected it in the description.
This is the correct forked repo with the test example [https://github.com/morfeo8marc/spring-xd-samples/tree/master/spark-streaming-wordcount-java-processor|https://github.com/morfeo8marc/spring-xd-samples/tree/master/spark-streaming-wordcount-java-processor] .

In this repo, if you run the test as a *maven* project, they do not work as explained in the description.",,,,,,,,,,,,,,,,
Make requirement for MD5 hash files configurable for the custom module registry ,XD-3321,65095,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,sabby,sabby,03/Aug/15 2:57 PM,30/Sep/15 4:01 PM,10/Jul/21 8:37 AM,14/Aug/15 6:59 AM,,,,,,,1.3 M1,,,,,,,0,,,,,,,"Post 1.2 upgrade, the custom modules no longer show up by just copying the jars to the {{xd.customModule.home}} directory. Instead I have to use the 'module upload' command to install the modules. This is because an MD5 file is required. More details in [SO thread|http://stackoverflow.com/questions/31792220/spring-xd-1-2-0-custom-module-deployment]. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,186883200,XD-238,2015-08-07 09:19:07.153,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1765,"0|i08n41:",9223372036854775807,9223372036854775807,,,Sprint 55,,,3.0,,"07/Aug/15 9:19 AM;dturanski;Add a property to disable required hash files only on file based registries (i.e., MD5 still required for HDFS)",,,,,,,,,,,,,,,,,
With Security - Unable to upload module,XD-3308,65035,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,30/Jul/15 12:00 PM,05/Aug/15 9:19 AM,10/Jul/21 8:37 AM,31/Jul/15 2:57 PM,1.2.1,,,,,,1.x,2.x,CLI,REST,,,,0,,,,,,,"Once security is enabled, one cannot upload modules using the shell any longer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Add test,2.0,187574400,XD-1694,,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1759,"0|i08n5z:",9223372036854775807,9223372036854775807,,,Sprint 54,,,2.0,,,,,,,,,,,,,,,,,,,
[Flo] Some streams can't be created using FLO,XD-3306,65026,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,aclement,CalamarBicefalo,CalamarBicefalo,30/Jul/15 6:04 AM,30/Sep/15 4:02 PM,10/Jul/21 8:37 AM,14/Aug/15 8:29 AM,,,,,,,1.3 M1,,UI,,,,,0,flo,ui,xd,,,,"Trying to create streams from the flo UI may end up in weird exceptions, whereas doing the same thing (copying/pasting the stream) directly from XD shell works smoothly.

This simple stream is an example, but this situation happens in multiple scenarios (for example using the same module several times with labels).


{code:java}
trigger --cron='0 05 14 ? * MON-FRI' | mail --from='''xd@mycompany.com''' --to='''a-wise-guy@mycompany.com''' --bcc='''me@mycompany.com'''
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,186969600,XD-3088,2015-08-05 10:59:12.278,9223372036854775807,true,sabby(sabby),,,,"0|i08n3z:",9223372036854775807,9223372036854775807,,,Sprint 55,,,0.0,,"05/Aug/15 10:59 AM;aclement;Although this manifests as an error in Flo, the problem appears to be in the handling of quotes in the XD endpoint /tools/parse - they get stripped/reduced somewhere along the line. An input like this: ""trigger --cron='0 05 14 ? * MON-FRI' | log"" loses the quotes around the cron expression. I fixed it in Flo by switching from using the endpoint to using our internal stream definition parser (which we had already been using in all but two places: create-stream/create-module dialogs).

> This simple stream is an example, but this situation happens in multiple scenarios (for example using the same module several times with labels).

Do you have examples of other failing ones I can test out? Did the streams that contain the same module several times with labels also include quotes?","06/Aug/15 7:20 AM;CalamarBicefalo;Yes, something as simple as this {code}daily-loaded: jdbc | daily-springxd: jdbc{code} can't be created through flo.

No quotes involved, just labels, flo does not like that for some reason. Same thing on XDShell works smoothly.","06/Aug/15 5:57 PM;aclement;Thanks for that! I've fixed it up (in Flo). When the dialog is created we don't actually use the text directly from the text box, instead we are kind of serializing the graph to a string - that was missing some label handling. You could see the issue in the create dialog because the stream 'preview' text on the right was missing the labels. ",,,,,,,,,,,,,,,
Exception during ModuleRedeployer causes additional modules to not deploy,XD-3304,64993,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,jahubba,jahubba,28/Jul/15 10:26 AM,28/Jul/15 10:26 AM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,Runtime,,,,,1,,,,,,,"If an exception occurs during the deployment of a module within the ModuleRedeployer.redeployModule, the exception will cause the process to break out of the for loops in DepartingContainerModuleRedeployer and ContainerMatchingModuleRedeployer leaving other failed/undeployed modules still undeployed.  This is particularly bad for ContainerMatchingModuleRedeployer as a module with an issue deploying will be retried next time a container starts breaking all modules after it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,A failed module won't affect the redeployment of other modules.,,187747200,,,9223372036854775807,true,jahubba(jahubba),,,,"0|i08mwn:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Add IPython notebook integration through Flo,XD-3290,64918,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,22/Jul/15 3:59 PM,23/Jul/15 7:58 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a Spring XD user, I'd like to have [IPython Notebook|http://ipython.org/notebook.html] integration, so I can perform interactive data computations in real-time.",,,,,,,,,,,,,XD-3293,,,,,,,,,,,,,,,,,,,,,,,,188265600,XD-3289,,9223372036854775807,true,sabby(sabby),,,,"0|i08mgf:",9223372036854775807,9223372036854775807,,,,,,8.0,,,,,,,,,,,,,,,,,,,
Add HA support for NameNode when installed using Ambari,XD-3287,64905,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,jvalkeal,sabby,sabby,22/Jul/15 9:09 AM,30/Sep/15 4:02 PM,10/Jul/21 8:37 AM,04/Aug/15 1:13 PM,1.2 GA,,,,,,1.2.1,,,,,,,0,,,,,,,"As a user, I'm trying to setup HA cluster using Ambari installed Spring XD; however, I'm running into issues with the overrides. More details [here|https://github.com/spring-projects/spring-xd-ambari/issues/6].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,188265600,XD-2629,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd-ambari/commit/bed2c37f0145c0c37a93add495bafc3aaadec1d0,"0|i08mdj:",9223372036854775807,9223372036854775807,,,Sprint 54,,,5.0,,,,,,,,,,,,,,,,,,,
Spring XD shell crashes when network connection is lost and module info command autocompletes,XD-3279,64879,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,zerep,zerep,21/Jul/15 1:08 PM,21/Jul/15 1:11 PM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,,,,,,0,,,,,,,"Expected result: Spring XD shell does not crash on autocomplete when network connection is lost but rather detects the condition and handles it.

Actual result: Spring XD shell crashes when the ""module info --name"" command is autocompleted and the network connection to the server is lost/gone.

The 'version' shell command reports: 2.0.0-SNAPSHOT (built from git e19dde0ecf91a268fb95895071717d05427b8ddd)

I don't see a 'Relates To' Field in this JIRA but this bug is similar to this one:
https://jira.spring.io/browse/XD-1938


Steps to reproduce:
-Open Spring XD Shell
-Connect to a sever e.g. ""admin config server http://hadoop1.example.com""
-Disable all network connections (turn off Wi-Fi, unplug, however you want to do it)
-Type ""module info --name [tab]""

Stack Trace:

{{xd:>module info --name 

Exception in thread ""Spring Shell"" org.springframework.web.client.ResourceAccessException: I/O error on GET request for ""http://hadoop1.example.com:34549/modules?size=10000"":hadoop1.example.com; nested exception is java.net.UnknownHostException: hadoop1.example.com
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:584)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:529)
	at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:236)
	at org.springframework.xd.rest.client.impl.ModuleTemplate.list(ModuleTemplate.java:75)
	at org.springframework.xd.rest.client.impl.ModuleTemplate.list(ModuleTemplate.java:37)
	at org.springframework.xd.shell.converter.QualifiedModuleNameConverter.getAllPossibleValues(QualifiedModuleNameConverter.java:89)
	at org.springframework.shell.core.SimpleParser.completeAdvanced(SimpleParser.java:857)
	at org.springframework.shell.core.ParserCompleter.complete(ParserCompleter.java:47)
	at jline.console.ConsoleReader.complete(ConsoleReader.java:3077)
	at jline.console.ConsoleReader.readLine(ConsoleReader.java:2501)
	at jline.console.ConsoleReader.readLine(ConsoleReader.java:2162)
	at jline.console.ConsoleReader.readLine(ConsoleReader.java:2150)
	at org.springframework.shell.core.JLineShell.promptLoop(JLineShell.java:522)
	at org.springframework.shell.core.JLineShell.run(JLineShell.java:179)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.UnknownHostException: hadoop1.example.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:81)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:53)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:568)
	... 14 more}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Shell does not crash in the above case but rather handles the issue in a cleaner way.,,188352000,,,9223372036854775807,true,zerep(zerep),,,,"0|i08m8f:",9223372036854775807,9223372036854775807,,,,,,0.0,,,,,,,,,,,,,,,,,,,
No pagination for Jobs / Deployments page in Admin UI,XD-3266,64835,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,kdowbecki,kdowbecki,20/Jul/15 1:47 AM,24/Jul/15 8:36 AM,10/Jul/21 8:37 AM,24/Jul/15 8:36 AM,1.2 GA,,,,,,1.2.1,1.3 M1,UI,,,,,0,,,,,,,"After successfully deploying 12 jobs the Jobs / Deployments page still shows only 10 results.

It looks like {{http://localhost:9393/jobs/configurations.json?page=0&size=10}} always returns {{content.page.totalPages}} of 1 regardless of the {{size}} parameter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"* Pagination works successfully when paged back and forth
* Pagination component is behaves coherent across all pages in {{admin-ui}}",2.0,188265600,,2015-07-22 14:08:12.331,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1756,"0|hzzzbw:",9223372036854775807,9223372036854775807,,,Sprint 54,,,2.0,,"22/Jul/15 2:08 PM;hillert;Verified. Not a UI issue but an issue in *BatchJobsController*.","22/Jul/15 9:19 PM;hillert;Submitted PR.

As a side-note, I am not ""happy"", how this controller is implemented. In order to make pagination working correctly, *deployedJobs* should be the main collection to be returned and augmented with the information from *detailedJobs* (Maybe combined using composition). Right now it is backwards. See: 

https://github.com/ghillert/spring-xd/blob/XD-3266/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/rest/BatchJobsController.java#L68

There is also still the slight unlikely chance that pagination still may not work always due to:

{code}
if (detailedJobInfo != null) {
  detailedJobs.add(detailedJobInfo);
}
{code}

However, correcting the issue completely would break the rest API. Nonetheless maybe something to consider for *2.0*.",,,,,,,,,,,,,,,,
Spring Data BytecodeGeneratingEntityInstantiator throws ClassNotFoundException when mapping custom classes,XD-3264,64812,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kdowbecki,kdowbecki,17/Jul/15 4:06 AM,17/Jul/15 5:10 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,,,,,,0,,,,,,,"{{spring-data-commons}} 1.10.0.RELEASE introduced an improved instantiation strategy based on byte code generation. It's now the default instantiation strategy however it can't be used in custom Spring XD modules due to class loader issues.

Please see attached custom module source code which can be build with Maven. You might want to change MongoDB connection parameters in {{custom-mongo-processor.xml}}.

Execute following xd-shell commands

{code}
module upload --name custom-mongo-processor --type processor --file [location]
stream create --name k2 --definition 'time --fixedDelay=10 | custom-mongo-processor | log' --deploy
{code}

The stream will output following message when the MongoDB collection is empty:
{code}
2015-07-17T11:09:38+0100 1.2.0.RELEASE INFO task-scheduler-3 sink.k2 - {""content"":[],""count"":0}
2015-07-17T11:09:48+0100 1.2.0.RELEASE INFO task-scheduler-3 sink.k2 - {""content"":[],""count"":0}
{code}

After documents are inserted into collection by executing {{db.karolWidgets.insert(\{ ""name"": ""bulbator"", ""color"": ""red"" \})}} following exception will be thrown:

{code}
2015-07-17T11:09:59+0100 1.2.0.RELEASE ERROR task-scheduler-3 handler.LoggingHandler - org.springframework.messaging.MessageHandlingException: ; nested exception is java.lang.IllegalStateException: Cannot process message
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:78)
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:287)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:245)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:287)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:245)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:231)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:154)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:102)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:287)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:245)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.SourcePollingChannelAdapter.handleMessage(SourcePollingChannelAdapter.java:130)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:219)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:298)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:292)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Cannot process message
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:292)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	... 59 more
Caused by: java.lang.NoClassDefFoundError: com/test/mongodb/MongoWidget
	at com.test.mongodb.MongoWidget_Instantiator_monxdt.newInstance(Unknown Source)
	at org.springframework.data.convert.BytecodeGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(BytecodeGeneratingEntityInstantiator.java:193)
	at org.springframework.data.convert.BytecodeGeneratingEntityInstantiator.createInstance(BytecodeGeneratingEntityInstantiator.java:76)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:250)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:231)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:191)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:187)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:78)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:2191)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1873)
	at org.springframework.data.mongodb.core.MongoTemplate.findAll(MongoTemplate.java:1286)
	at com.test.mongodb.MongoService.processWidgets(MongoService.java:21)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:102)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:131)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:164)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:276)
	... 61 more
Caused by: java.lang.ClassNotFoundException: com.test.mongodb.MongoWidget
	at java.lang.ClassLoader.findClass(ClassLoader.java:531)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 85 more
{code}

This exception affects both custom stream and job modules. One workaround is to force {{ReflectionEntityInstantiator}} in {{MappingMongoConverter}} however this has to be done in every custom module.

Perhaps that's an issue with Spring XD custom module classloaders (or DATACMNS-710)?",,,,,,,,,,,,,,,,,,,,,,,,"17/Jul/15 4:09 AM;kdowbecki;custom-mongo-processor.zip;https://jira.spring.io/secure/attachment/22944/custom-mongo-processor.zip",,,,,,,,,,,,,188784000,,,9223372036854775807,true,kdowbecki(kdowbecki),,,,"0|i08lv3:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
"Pagination for containers, it is limited to only 20",XD-3263,64801,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,svennela,svennela,16/Jul/15 12:27 PM,24/Jul/15 8:40 AM,10/Jul/21 8:37 AM,24/Jul/15 8:40 AM,,,,,,,1.2.1,2.0 M1,UI,,,,,0,,,,,,,"Hi ,

Customer has 48 containers, but it only shows 20 containers. We need pagination to browse all containers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,188784000,,,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd-admin-ui-client/pull/6,"0|hzzzaq:",9223372036854775807,9223372036854775807,,,Sprint 54,,,2.0,,,,,,,,,,,,,,,,,,,
xd-shell doesn't work with SSL proxy,XD-3257,64760,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,,kdowbecki,kdowbecki,14/Jul/15 9:54 AM,17/Jul/15 6:58 AM,10/Jul/21 8:37 AM,17/Jul/15 6:58 AM,1.2 GA,,,,,,,,,,,,,0,,,,,,,"After connecting to admin endpoint over HTTPS xd-shell will use plain HTTP for all further calls, which fails if HTTPS is mandatory:

{code}
server-unknown:>admin config server https://my-host/
Successfully targeted https://my-host/
xd:>job list
Command failed org.springframework.web.client.ResourceAccessException: I/O error on GET request for ""http://my-host/jobs/definitions?size=10000&deployments=true"":Connection refused; nested exception is java.net.ConnectException: Connection refused
{code}

In above example {{my-host}} is a proxy that provides load balancing and enforces HTTPS for users. It forwards the traffic to to spring-xd-admin service REST API over regular HTTP and port 9393. Admin service is returning {{_links}} with plain HTTP because it's unaware of the network proxy.

Can this be solved without employing server side HTTP->HTTPS url rewrite? Is enabling SSL in spring-xd-admin the only way?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,188784000,,2015-07-14 12:51:00.565,9223372036854775807,true,hillert(hillert),,,,"0|i08ljz:",9223372036854775807,9223372036854775807,,,,,,2.0,,"14/Jul/15 12:51 PM;hillert;Thanks for raising the issue. Does your proxy provide the additional proxy headers?

* X-Forwarded-Host
* X-Forwarded-Proto

The admin server ""should"" be able to handle it but would need the respective headers.

","17/Jul/15 5:17 AM;kdowbecki;[~hillert]: Thank you for pointing out missing X-Forwarded-*** headers. Indeed this was our problem.

Please feel free to close the issue, it works correctly.","17/Jul/15 6:57 AM;hillert;Awesome news. Thanks for letting us know! Closing this issue.",,,,,,,,,,,,,,,
Strange language prefix shown on some code listings when hovering the mouse over them,XD-3253,64712,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,thomas.risberg,thomas.risberg,10/Jul/15 8:18 AM,10/Jul/15 8:18 AM,10/Jul/21 8:37 AM,,,,,,,,,,Documentation,,,,,0,,,,,,,"Looking at the online docs the code listings have inconsistent  syntax highlighting and when you hover the mouse over some of them there is a language  prefix like ruby or javascript inserted at the beginning of the first line. Very strange.

To see this go to http://docs.spring.io/spring-xd/docs/1.2.0.RELEASE/reference/html/#_server_configuration and scroll down to the HSQLDB section. The listing for HSQLDB looks fine, but scroll down further and put the mouse pointer on the MySQL or PostgreSQL listings and you should see 'javascript' being inserted on the first line.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189388800,XD-696,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08l9b:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Additional REST endpoint not working with security enabled,XD-3237,64660,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,thomas.risberg,thomas.risberg,08/Jul/15 11:31 AM,08/Jul/15 11:31 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,UI,,,,,0,,,,,,,"I see the following error from the Admin UI:

GET http://localhost:9393/jobs/executions/4/steps/4/progress.json 403 (Forbidden)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189475200,XD-1694,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08ky7:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
FileJdbc Job throws exception during Acceptance Tests ,XD-3235,64653,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,08/Jul/15 8:51 AM,17/Jul/15 11:10 AM,10/Jul/21 8:37 AM,17/Jul/15 11:10 AM,1.2.1,,,,,,,,,,,,,0,,,,,,,"Currently the testFileJdbcJobMultipleInvocations fails on line 156 stating data is different in table that what is expected.  Currently this is failing on the single admin/container deployment using redis as a transport.  

Also seeing the following exception in the attached log:
{noformat}
2.0.0.SNAP ERROR xdbus.job:ec2Job3.0.requests-1 step.AbstractStep - Encountered an error executing step step1 in job ec2Job3
org.springframework.batch.item.ItemStreamException: Failed to initialize the reader
...
Caused by: java.lang.IllegalStateException: Input resource must exist (reader is in 'strict' mode): URL [file:/tmp/xd/output/filejdbctest/filejdbctest1.out]
{noformat}
The file is should be present and data present for the test.  At least according to the checker on EC2 and local deployments.



",,,,,,,,,,,,,,,,,,,,,,,,"14/Jul/15 7:05 AM;grenfro;container-56217.log;https://jira.spring.io/secure/attachment/22942/container-56217.log",,,,,,,,,,,,3.0,188956800,,2015-07-14 15:10:38.662,9223372036854775807,false,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1750,"0|i08l7y:v",9223372036854775807,9223372036854775807,,,Sprint 53,,,3.0,,"14/Jul/15 7:02 AM;grenfro;Was able to reproduce this problem on my local machine but can be sporadic.  I've attached the local log as well.   ","14/Jul/15 3:10 PM;mark.pollack;https://build.spring.io/browse/XD-ATEC2-845",,,,,,,,,,,,,,,,
Enabling security breaks xd-shell,XD-3221,64626,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Duplicate,,kdowbecki,kdowbecki,07/Jul/15 6:14 AM,07/Jul/15 6:45 AM,10/Jul/21 8:37 AM,07/Jul/15 6:45 AM,1.2 GA,,,,,,,,,,,,,0,,,,,,,"After enabling security in {{XD_HOME/config/servers.yml}}

{code}
spring:
  profiles: admin
security:
  basic:
    enabled: true # false to disable security settings (default)
    realm: SpringXD
  user: # valid only if security.basic.enabled=true
    name: johndoe
    password: johndoe
    role: ADMIN, VIEW, CREATE
{code}

It's no longer possible to connect to admin server through xd-shell

{code}
server-unknown:>admin config server --username johndoe --password johndoe
Unable to contact XD Admin Server at 'http://localhost:9393/'.
server-unknown:>admin config info
  -------------  --------------------------------------------------------------
  Credentials    [username='johndoe, password=****']
  Result         Unable to contact XD Admin Server at 'http://localhost:9393/'.
  Target         http://localhost:9393/
  Timezone used  Greenwich Mean Time (UTC 0:00)
  -------------  --------------------------------------------------------------
-------------------------------------------------------------------------------
An exception ocurred during targeting:
org.springframework.web.client.HttpClientErrorException: 403 Forbidden
    at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:91)
    at org.springframework.xd.rest.client.impl.VndErrorResponseErrorHandler.handleError(VndErrorResponseErrorHandler.java:50)
    at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:614)
    at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:570)
    at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:545)
    at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:253)
    at org.springframework.xd.rest.client.impl.SpringXDTemplate.<init>(SpringXDTemplate.java:114)
    at org.springframework.xd.rest.client.impl.SpringXDTemplate.<init>(SpringXDTemplate.java:102)
    at org.springframework.xd.shell.command.ConfigCommands.target(ConfigCommands.java:112)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:202)
    at org.springframework.shell.core.SimpleExecutionStrategy.invoke(SimpleExecutionStrategy.java:64)
    at org.springframework.shell.core.SimpleExecutionStrategy.execute(SimpleExecutionStrategy.java:57)
    at org.springframework.shell.core.AbstractShell.executeCommand(AbstractShell.java:127)
    at org.springframework.shell.core.JLineShell.promptLoop(JLineShell.java:533)
    at org.springframework.shell.core.JLineShell.run(JLineShell.java:179)
    at java.lang.Thread.run(Thread.java:745)
{code}

It looks like admin base URL (http://localhost:9393/) is not defined in security section of {{application.yml}} so {{SpringXDTemplate}} can't be initialized.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189648000,,2015-07-07 06:45:08.677,9223372036854775807,true,sabby(sabby),,,,"0|i08ksv:",9223372036854775807,9223372036854775807,,,,,,1.0,,"07/Jul/15 6:45 AM;sabby;This is addressed in XD-3217; marking this as duplicate.",,,,,,,,,,,,,,,,,
Enabling security breaks job launching from Admin UI,XD-3220,64622,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,hillert,kdowbecki,kdowbecki,07/Jul/15 3:26 AM,07/Jul/15 4:39 PM,10/Jul/21 8:37 AM,07/Jul/15 4:39 PM,1.2 GA,,,,,,1.2.1,2.0 M1,,,,,,0,,,,,,,"After enabling security (see XD-3214) and granting user {{ROLE_VIEW, ROLE_CREATE, ROLE_ADMIN}} privileges it's not possible to launch jobs from Admin UI. 

For {{bdl-sqoop-combo-lukasz-MONGO-DEV}} job, 403 error is returned when Admin UI attempts to access following URL after ""Launch Job"" button is pressed:
{code}
http://ilabphd12.isus.emc.com:9393/jobs/executions?jobParameters=%7B%7D&jobname=bdl-sqoop-combo-lukasz-MONGO-DEV
{code}

Please see attached screenshot.",,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/15 3:26 AM;kdowbecki;admin_ui_403.png;https://jira.spring.io/secure/attachment/22930/admin_ui_403.png","07/Jul/15 3:38 AM;kdowbecki;admin_ui_launch.png;https://jira.spring.io/secure/attachment/22931/admin_ui_launch.png",,,,,,,,,,,2.0,189648000,XD-1694,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1729,"0|i08kku:",9223372036854775807,9223372036854775807,,,Sprint 52,,,2.0,,,,,,,,,,,,,,,,,,,
Fix random configuration in SecuredShellTests,XD-3219,64617,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,06/Jul/15 12:36 PM,07/Jul/15 2:50 PM,10/Jul/21 8:37 AM,07/Jul/15 2:50 PM,,,,,,,,,,,,,,0,,,,,,,"Since the SecuredShellTests initialize singlenode app in a static way, the random configuration needs to be setup statically as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,189648000,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1732,"0|i08kku:i",9223372036854775807,9223372036854775807,,,Sprint 52,,,1.0,,,,,,,,,,,,,,,,,,,
Cannot connect to admin server with basic security enabled,XD-3217,64589,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,mbogoevici,sabby,sabby,03/Jul/15 8:13 AM,08/Jul/15 12:39 PM,10/Jul/21 8:37 AM,03/Jul/15 11:17 AM,1.2 GA,,,,,,1.2.1,2.0 M1,,,,,,0,,,,,,,"As a user, I'm trying to connect to {{xd-admin}} server with basic security enabled; however, I'm unable to successfully connect to the server and I get the following error message.


{code:java}
server-unknown:>admin config server --uri http://localhost:9393 --username bob --password bobspwd
Unable to contact XD Admin Server at 'http://localhost:9393'.
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,189475200,XD-1694,2015-07-08 12:39:47.019,9223372036854775807,false,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1728,"0|i08kkn:",9223372036854775807,9223372036854775807,,,Sprint 52,,,5.0,,"08/Jul/15 12:39 PM;mbogoevici;As a workaround, add the content of the linked file to `servers.ml`

https://gist.github.com/mbogoevici/012c2cbd637d84f4d21b",,,,,,,,,,,,,,,,,
"On specific shutdown scenarios, the stream resumes from the start of the bus topic",XD-3216,64578,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,02/Jul/15 2:27 PM,18/Nov/15 6:18 PM,10/Jul/21 8:37 AM,18/Nov/15 6:18 PM,1.2 GA,,,,,,1.3 GA,,Runtime,,,,,0,needs-backported-to-s-c-s,,,,,,https://github.com/spring-projects/spring-xd/issues/1727,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,189993600,XD-2356,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1860,"0|hzzy8a:",9223372036854775807,9223372036854775807,,,Sprint 62,,,2.0,,,,,,,,,,,,,,,,,,,
Enabling security breaks Jobs page in Admin UI,XD-3214,64565,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,hillert,kdowbecki,kdowbecki,02/Jul/15 5:21 AM,07/Jul/15 4:39 PM,10/Jul/21 8:37 AM,07/Jul/15 4:39 PM,1.2 GA,,,,,,1.2.1,2.0 M1,UI,,,,,1,,,,,,,"After enabling Spring XD security in {{XD_HOME/config/servers.yml}}:

{code}
spring:
  profiles: admin
security:
  basic:
    enabled: true
    realm: SpringXD
xd:
  security:
    authentication:
      file:
        enabled: true
        users:
          user: password, ROLE_VIEW
          admin: password, ROLE_VIEW, ROLE_CREATE, ROLE_ADMIN
{code}

after logging in as {{user}} with only {{ROLE_VIEW}} privilege, Jobs admin page is broken and is not displaying data. 403 error code is returned for following URLs:

{code}
http://localhost:9393/jobs/configurations.json?page=0&size=10
http://localhost:9393/jobs/definitions.json?page=0&size=10
{code}

Looks like {{/jobs/configurations.\*}} and {{/jobs/definitions.\*}} URLs are not covered in security section of applications.yml file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,190080000,XD-1694,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1729,"0|i08kkr:",9223372036854775807,9223372036854775807,,,Sprint 52,,,2.0,,,,,,,,,,,,,,,,,,,
JSonStringToObject transformer used for GemFire JSON sink should accept a Map,XD-3212,64521,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,dturanski,dturanski,30/Jun/15 4:38 AM,13/Jun/17 5:13 PM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,,,,,,2,,,,,,,"Should be renamed as well. org.springframework.integration.transformer.MessageTransformationException: ; nested exception is org.springframework.messaging.MessageHandlingException: ; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1004E:(pos 8): Method call: Method toObject(java.util.LinkedHashMap) cannot be found on org.springframework.integration.x.gemfire.JsonStringToObjectTransformer type
	at org.springframework.integration.transformer.MessageTransformingHandler.handleRequestMessage(MessageTransformingHandler.java:74) ~[spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99) ~[spring-integration-core-4.1.5.RELEASE.jar:na]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78) ~[spring-integration-core-4.1.5.RELEASE.jar:na]
(...)
with 1.2 RELEASE when trying to persist a JSON payload using the GemFire-json-server sink.. It works  great on 1.1.RELEASE and 1.2 Build snapshot 2015-04-23.001857 


The demo repository is open, so I can definitely share it with your developers, but wondered if we changed something recently on that sink that could cause an issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,128476800,,2017-06-13 17:13:22.976,9223372036854775807,true,unnikrishnan(unnikrishnan),,,,"0|i08k5j:",9223372036854775807,9223372036854775807,,,,,,1.0,,"13/Jun/17 5:13 PM;unnikrishnan;Facing this issue, how we can fix this?",,,,,,,,,,,,,,,,,
ClasspathEnvironmentProvider should support packaged Spring XD modules,XD-3209,64448,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kdowbecki,kdowbecki,25/Jun/15 9:12 AM,28/Jul/15 1:58 PM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,Batch,,,,,0,,,,,,,"Custom Spring XD modules are packaged into a JAR file with 3rd party libraries packaged into {{lib}} folder.

Let's say we have a {{my-job}} custom job module, packaged as JAR and deployed with {{module upload}} shell command. It wants to use {{org.springframework.xd.sqoop.SqoopTasklet}} provided by {{spring-xd-extension-sqoop}} library. Unfortunately {{org.springframework.batch.step.tasklet.x.ClasspathEnvironmentProvider}} will only add {{my-job.jar}} to {{SqoopRunner}} classpath (code in {{ClasspathEnvironmentProvider#createClassPath()}} method).

{{ClasspathEnvironmentProvider}} should add all 3rd party JARs packaged in custom job module to classpath.

This works with {{sqoop}} module shipped with Spring XD because it's deployed as ""exploded"" module under $XD_HOME/modules/job. In such case {{ClasspathEnvironmentProvider}} correctly adds all JARs from $XD_HOME/modules/job/sqoop/lib to classpath.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,187747200,,2015-07-28 10:50:09.917,9223372036854775807,true,kdowbecki(kdowbecki),,,,"0|i08jpb:",9223372036854775807,9223372036854775807,,,,,,1.0,,"28/Jul/15 10:50 AM;sabby;[~kdowbecki]: Sounds like you're invoking the {{SqoopTasklet}} from within your custom job - did I get that right? Anything that is not globally visible in root-cp, it is not possible for the custom jobs to gain access to libraries. Perhaps understanding your use-case specifics could help. ","28/Jul/15 1:57 PM;kdowbecki;[~sabby], indeed we have a custom module which uses {{SqoopTasklet}}.

{{ClasspathEnvironmentProvider}} only handles exploded modules e.g. {{XD_HOME/modules/job/sqoop}} which is a directory with two sub directories {{lib}} and {{config}}. If you would ship {{sqoop}} job module s a JAR archive deployable with {{module upload}} XD Shell command you would have the same problem. {{ClasspathEnvironmentProvider}} is only scanning file system directories and doesn't inspect the JAR files that are inside. This look inside step is necessary because Spring XD module packaged as JAR archives have a custom layout with custom {{lib}} package that contains additional JARs.",,,,,,,,,,,,,,,,
Change in file source breaks backward compatibility ,XD-3208,64436,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,macquistapace,macquistapace,24/Jun/15 10:07 AM,28/Jul/15 10:26 AM,10/Jul/21 8:37 AM,28/Jul/15 10:26 AM,1.2 GA,,,,,,1.2.1,,Stream Module,,,,,1,file,module,source,,,,"With version 1.2.0 the option ref of the file source was removed and a new option mode was introduced.  see XD-2850 and PR  https://github.com/spring-projects/spring-xd/pull/1624.

This means you have to destroy all streams using the ref option before you do an upgrade.

It would have been much better to leave the ref option in the code and emit a deprecation warning if it is still used. This way an upgrade would be possible without interruption.




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"_file --ref=true_
and
 _file --mode=ref_ 
mean the same and are valid in version 1.2.x
",,187747200,,2015-07-28 10:26:10.891,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|i000ie:wrn0qzzzzzz000008u4",9223372036854775807,9223372036854775807,,,,,,1.0,,"28/Jul/15 10:26 AM;mark.pollack;Sorry about the breaking of the backward compatibility. I see your point, but in this case we felt leaving the ref option would be more confusing.  We will add a section to the docs on upgrading from previous releases (https://jira.spring.io/browse/XD-3303) and will be more careful wrt to introducing a deprecation beforehand.  ",,,,,,,,,,,,,,,,,
spring-xd-extension-sqoop dependency overrides test logger setup,XD-3207,64435,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,kdowbecki,kdowbecki,24/Jun/15 9:56 AM,15/Jul/15 2:13 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,,,,,,0,,,,,,,"As per [Chapter 3: Logback configuration|http://logback.qos.ch/manual/configuration.html] only XML configuration can be overidden with {{-test}} file. It's impossible to do this with groovy configuration.

There are Spring XD modules that are packaging {{logback.groovy}} e.g. {{spring-xd-extension-sqoop}}. If a custom module depends on those libraries it becomes impossible to nicely override log settings for tests\[1\]. The configuration is taken from classpath because {{logback.groovy}} is always prioritized over {{logback-test.xml}}.

If those modules would switch to {{logback.xml}} there will be no such problem and custom modules would be easier to set up.

\[1\] One can put own {{logback.groovy}} file under {{src/test/resources}} but this setup will output a number of warning into console. Forcing logback configuration path with {{-D}} option is not nice either.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,190684800,,,9223372036854775807,true,kdowbecki(kdowbecki),,,,"0|i08jmf:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
An error message occurs about the shortDescription (header-enricher),XD-3206,64426,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,fmarchand,fmarchand,24/Jun/15 1:28 AM,08/Jul/15 12:50 PM,10/Jul/21 8:37 AM,06/Jul/15 1:43 PM,1.2 GA,,,,,,,,Stream Module,,,,,0,,,,,,,"Here is an error I got using the header-enricher from spring-xd-modules :


{code:java}
Field error in object 'info' on field 'shortDescription': rejected value [A Header Enricher to set message headers in a stream]; codes [Pattern.info.shortDescription,Pattern.shortDescription,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [info.shortDescription,shortDescription]; arguments []; default message [shortDescription],[Ljavax.validation.constraints.Pattern$Flag;@11eeec65,^\p{IsUppercase}.*\.$]; default message [Short description must start with a capital letter and end with a dot]
{code}

And if I look the config properties, indeed, short description doesn't end with a dot.
{code:java}
info.shortDescription = A Header Enricher to set message headers in a stream
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,189648000,,2015-07-06 13:43:47.39,9223372036854775807,true,sabby(sabby),,,,"0|i08kid:",9223372036854775807,9223372036854775807,,,,,,1.0,,"06/Jul/15 1:43 PM;iperumal;Thanks for submitting the bug.

The typo is fixed now: https://github.com/spring-projects/spring-xd-modules/commit/44376013128a1ed5d71a7fbb102ceeb4ab2ec0b0",,,,,,,,,,,,,,,,,
Documentation for reactor-ip source has conflicting information,XD-3201,64410,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,pharris,pharris,23/Jun/15 7:53 AM,23/Jun/15 7:56 AM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,Documentation,,,,,0,,,,,,,"According to the documentation at: http://docs.spring.io/spring-xd/docs/current/reference/html/#reactor-ip one of the options available for this source is {{transport}}. It's listed as having no default, but the sample definition doesn't provide it yet appears to default to {{tcp}}. The two should match up.

It might also be useful if the possible values for {{transport}} were listed (I assume {{TCP}} and {{UDP}})",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,190857600,,,9223372036854775807,true,pharris(pharris),,,,"0|i08jhr:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Module delete command on windows does not delete the module entirely,XD-3200,64407,Bug,In Progress,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,dturanski,sabby,sabby,23/Jun/15 6:34 AM,07/Jul/15 2:27 PM,10/Jul/21 8:37 AM,,1.2 GA,,,,,,,,,,,,,0,,,,,,,"As a user, I'm trying to delete the custom module using the {{module delete}} command via shell; though the command is successfully, I'm still seeing the associated artifact (_.jar file_) present in the custom_modules folder. Refer to [SO thread|http://stackoverflow.com/questions/30984922/springxd-module-delete-command-does-not-delete-the-uploaded-jar-file] for more details.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,190857600,XD-2660,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000009",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
No way to remove a job from Job repository if its gone from job definitions,XD-3190,64375,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,ali.iqbal@gmail.com,ali.iqbal@gmail.com,21/Jun/15 7:02 AM,04/Jul/15 11:56 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"I am trying to deploy a job I destroyed after running a few times. I removed all the jobs using job all destroy. When i try to recreate the same name job it is saying it already exists. JobController.java save() method is throwing the exception if job exists in Job Repository database, but they are gone from job definition list. These jobs were originally created using XD Template REST client dynamically, but that should not make any difference.

This leaves me in an inconsistent state between XD definitions/job repository. How do I get rid of the job without having to log in to the database and play with the job repository tables.

I had to delete data folder for myself to continue development. 

There should be a force mechanism to recreate a job with the same name, a flag that by passes this validation against the repository or overwrites the information in the repository.

",,,,,,,,,,,,,,,,,XD-2099,XD-3087,,,,,,,,,,,,,,,,,,,189820800,,2015-07-04 11:55:54.13,9223372036854775807,true,sabby(sabby),,,,"0|i08jbr:",9223372036854775807,9223372036854775807,,,,,,1.0,,"04/Jul/15 11:55 AM;sabby;Hi [~ali.iqbal@gmail.com]: I'm assuming this is observed in {{singlenode}} setup. Please refer to XD-3087 and XD-2099 - they both specifically relate to the same issue. We do not recommend {{singlenode}} for production installation, as it is meant for development and prototyping needs. ",,,,,,,,,,,,,,,,,
FileDeletionListener resolves resources once,XD-3188,64336,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mminella,mminella,mminella,18/Jun/15 8:00 AM,28/Jul/15 10:16 AM,10/Jul/21 8:37 AM,26/Jun/15 8:32 AM,1.2 GA,,,,,,1.2.1,2.0 M1,Batch,,,,,0,,,,,,,"In the {{filejdbc}} job, there is the option to delete the imported files.  This functionality is created using a listener called the {{FileDeletionStepExecutionListener}}.  When you run the job the first time with the {{--deleteFiles=true}}, everything works as expected.  The second time you run the job, the files are not deleted.

I believe the issue here is that since the {{FileDeletionStepExecutionListener}} is a singleton, the resources are resolved only once (the first time the job runs) and so it works the first time, but if the job is run again later and new files match the expression, they are not picked up.  I believe the fix is to make the {{FileDeletionStepExecutionListener}} used in this job step scoped.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Verify that the {{filejdbc}} job deletes the import files after multiple executions.,3.0,190598400,,,9223372036854775807,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1724,"0|i08j33:",9223372036854775807,9223372036854775807,,,Sprint 52,,,1.0,,"26/Jun/15 8:32 AM;mminella;The fix was 1 story point...the rest was around testing.",,,,,,,,,,,,,,,,,
XD admin leader should cleanup deployment after initializing the container path cache,XD-3187,64322,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,17/Jun/15 12:33 PM,17/Jun/15 2:29 PM,10/Jul/21 8:37 AM,17/Jun/15 1:09 PM,,,,,,,1.2.1,2.0 M1,,,,,,0,,,,,,,The admin leader starts cleaning up the deployments for the container(s) that is/are no longer connected to the ZK. This clean up needs to happen after the container path cache is started by the admin leader. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,191289600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1722,"0|i08izz:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
XD Container not closing file descriptors,XD-3181,64270,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,nebhale,nebhale,14/Jun/15 11:49 PM,07/Jul/15 2:24 PM,10/Jul/21 8:37 AM,,1.2 RC1,,,,,,,,Runtime,,,,,0,,,,,,,"Currently when running the {{p-spring-xd}} stream tests, we run into an issue where the XD Container starts throwing errors because it cannot open the module configuration file.  This happens reliably after 3-4 days of running and always fails on the same {{modules.yml}} configuration file.  This is not to say that the file leak is guaranteed to be related to the {{modules.yml}}, but it's certainly a place to start looking.  A restart of the container (only) causes the error to go away for 3-4 days at which point it reappears, indicating that the problem is definitely in the XD Container and not in the operating system's configuration.

Failure stack trace:
{noformat}
[XD ADMIN] 1.2.0.RC1 INFO DeploymentSupervisor-0 zk.ZKStreamDeploymentHandler - Deployment status for stream 'end-to-end-http-9630': DeploymentStatus{state=failed,error(s)=java.lang.IllegalStateException: java.io.FileNotFoundException: /var/vcap/jobs/xd-container/packages/spring-xd/config/modules/modules.yml (Too many open files) 
 at org.springframework.beans.factory.config.YamlProcessor.handleProcessError(YamlProcessor.java:186) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:178) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:138) 
 at org.springframework.boot.env.YamlPropertySourceLoader$Processor.process(YamlPropertySourceLoader.java:100) 
 at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:57) 
 at org.springframework.boot.env.PropertySourcesLoader.load(PropertySourcesLoader.java:126) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadIntoGroup(ConfigFileApplicationListener.java:381) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:369) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:339) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:174) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$1.apply(EnvironmentAwareModuleOptionsMetadataResolver.java:229) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.loadPropertySources(EnvironmentAwareModuleOptionsMetadataResolver.java:219) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.lookupEnvironment(EnvironmentAwareModuleOptionsMetadataResolver.java:181) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.access$000(EnvironmentAwareModuleOptionsMetadataResolver.java:61) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.<init>(EnvironmentAwareModuleOptionsMetadataResolver.java:144) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:132) 
 at org.springframework.xd.dirt.stream.XDStreamParser.buildModuleDescriptors(XDStreamParser.java:206) 
 at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:122) 
 at org.springframework.xd.dirt.stream.StreamFactory.createStream(StreamFactory.java:84) 
 at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentLoader.loadStream(DeploymentLoader.java:101) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.deployStreamModule(DeploymentListener.java:331) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.onChildAdded(DeploymentListener.java:181) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.childEvent(DeploymentListener.java:149) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503) 
 at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92) 
 at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297) 
 at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500) 
 at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762) 
 at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 
 at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
 at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 
 at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 
 at java.lang.Thread.run(Thread.java:745) 
Caused by: java.io.FileNotFoundException: /var/vcap/jobs/xd-container/packages/spring-xd/config/modules/modules.yml (Too many open files) 
 at java.io.FileInputStream.open0(Native Method) 
 at java.io.FileInputStream.open(FileInputStream.java:195) 
 at java.io.FileInputStream.<init>(FileInputStream.java:138) 
 at java.io.FileInputStream.<init>(FileInputStream.java:93) 
 at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90) 
 at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188) 
 at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:168) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:158) 
 ... 36 more 
; java.lang.IllegalStateException: java.io.FileNotFoundException: /var/vcap/jobs/xd-container/packages/spring-xd/config/modules/modules.yml (Too many open files) 
 at org.springframework.beans.factory.config.YamlProcessor.handleProcessError(YamlProcessor.java:186) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:178) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:138) 
 at org.springframework.boot.env.YamlPropertySourceLoader$Processor.process(YamlPropertySourceLoader.java:100) 
 at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:57) 
 at org.springframework.boot.env.PropertySourcesLoader.load(PropertySourcesLoader.java:126) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadIntoGroup(ConfigFileApplicationListener.java:381) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:369) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:339) 
 at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:174) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$1.apply(EnvironmentAwareModuleOptionsMetadataResolver.java:229) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.loadPropertySources(EnvironmentAwareModuleOptionsMetadataResolver.java:219) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.lookupEnvironment(EnvironmentAwareModuleOptionsMetadataResolver.java:181) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.access$000(EnvironmentAwareModuleOptionsMetadataResolver.java:61) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.<init>(EnvironmentAwareModuleOptionsMetadataResolver.java:144) 
 at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:132) 
 at org.springframework.xd.dirt.stream.XDStreamParser.buildModuleDescriptors(XDStreamParser.java:206) 
 at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:122) 
 at org.springframework.xd.dirt.stream.StreamFactory.createStream(StreamFactory.java:84) 
 at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentLoader.loadStream(DeploymentLoader.java:101) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.deployStreamModule(DeploymentListener.java:331) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.onChildAdded(DeploymentListener.java:181) 
 at org.springframework.xd.dirt.server.container.DeploymentListener.childEvent(DeploymentListener.java:149) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503) 
 at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92) 
 at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297) 
 at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500) 
 at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35) 
 at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762) 
 at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 
 at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
 at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 
 at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 
 at java.lang.Thread.run(Thread.java:745) 
Caused by: java.io.FileNotFoundException: /var/vcap/jobs/xd-container/packages/spring-xd/config/modules/modules.yml (Too many open files) 
 at java.io.FileInputStream.open0(Native Method) 
 at java.io.FileInputStream.open(FileInputStream.java:195) 
 at java.io.FileInputStream.<init>(FileInputStream.java:138) 
 at java.io.FileInputStream.<init>(FileInputStream.java:93) 
 at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90) 
 at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188) 
 at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:168) 
 at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:158) 
 ... 36 more 
}
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,191548800,,,9223372036854775807,false,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008ui",9223372036854775807,9223372036854775807,,,,,,8.0,,,,,,,,,,,,,,,,,,,
Hadoop Distro log message shows wrong version when set via env var,XD-3178,64256,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,12/Jun/15 1:31 PM,22/Jun/15 2:14 PM,10/Jul/21 8:37 AM,22/Jun/15 2:14 PM,,,,,,,1.2.1,2.0 M1,,,,,,0,,,,,,,"If we export HADOOP_DISTRO env var instead of using --hadoopDistro parameter then the logging message is wrong, it always says

Hadoop Distro: hadoop26

even if we set HADOOP_DISTRO to something else

The classpath is built correctly. Maybe we should just remove this logging message since we log the actual version used in the next log message.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,191721600,XD-468,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1718,"0|i08ilb:",9223372036854775807,9223372036854775807,,,Sprint 51,,,1.0,,,,,,,,,,,,,,,,,,,
Using HDFS for custom module home doesn't work with Kerberized Hadoop cluster,XD-3176,64226,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,thomas.risberg,thomas.risberg,thomas.risberg,10/Jun/15 11:59 AM,16/Jun/15 9:34 AM,10/Jul/21 8:37 AM,11/Jun/15 5:18 AM,1.2 RC1,,,,,,1.2 GA,,Configuration,Runtime,,,,0,,,,,,,"I tried setting the xd.customModule.home property to point to a Kerberized Hadoop cluster with all usual security config settings provided. It failed with the following exception:

{code}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'moduleRegistry' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Cannot create inner bean 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#19f459aa' of type [org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#19f459aa' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is org.apache.hadoop.security.AccessControlException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:382) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:157) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1139) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1042) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757) ~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480) ~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686) [spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320) [spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139) [spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129) [spring-boot-1.2.3.RELEASE.jar:1.2.3.RELEASE]
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.run(AdminServerApplication.java:95) [spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.server.admin.AdminServerApplication.main(AdminServerApplication.java:79) [spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#19f459aa' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is org.apache.hadoop.security.AccessControlException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	... 22 common frames omitted
Caused by: org.apache.hadoop.security.AccessControlException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.7.0_67]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) ~[na:1.7.0_67]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.7.0_67]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) ~[na:1.7.0_67]
	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DFSClient.primitiveMkdir(DFSClient.java:2755) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DFSClient.mkdirs(DFSClient.java:2724) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java:870) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java:866) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DistributedFileSystem.mkdirsInternal(DistributedFileSystem.java:866) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.hdfs.DistributedFileSystem.mkdirs(DistributedFileSystem.java:859) ~[hadoop-hdfs-2.6.0.jar:na]
	at org.apache.hadoop.fs.FileSystem.mkdirs(FileSystem.java:1817) ~[hadoop-common-2.6.0.jar:na]
	at org.springframework.xd.dirt.module.ExtendedResource$HdfsExtendedResource.mkdirs(ExtendedResource.java:127) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.module.WritableResourceModuleRegistry.afterPropertiesSet(WritableResourceModuleRegistry.java:123) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean.afterPropertiesSet(CustomModuleRegistryFactoryBean.java:79) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570) ~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	... 25 common frames omitted
Caused by: org.apache.hadoop.ipc.RemoteException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at org.apache.hadoop.ipc.Client.call(Client.java:1468) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.ipc.Client.call(Client.java:1399) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:232) ~[hadoop-common-2.6.0.jar:na]
	at com.sun.proxy.$Proxy79.mkdirs(Unknown Source) ~[na:na]
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.mkdirs(ClientNamenodeProtocolTranslatorPB.java:539) ~[hadoop-hdfs-2.6.0.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_67]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_67]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_67]
	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_67]
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:187) ~[hadoop-common-2.6.0.jar:na]
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:102) ~[hadoop-common-2.6.0.jar:na]
	at com.sun.proxy.$Proxy80.mkdirs(Unknown Source) ~[na:na]
	at org.apache.hadoop.hdfs.DFSClient.primitiveMkdir(DFSClient.java:2753) ~[hadoop-hdfs-2.6.0.jar:na]
	... 37 common frames omitted
2015-06-10T14:49:20-0400 1.2.0.SNAP ERROR main boot.SpringApplication - Application startup failed
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,191894400,,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1712,"0|i08ien:",9223372036854775807,9223372036854775807,,,Sprint 51,,,3.0,,,,,,,,,,,,,,,,,,,
Improve User Experience on HTTP Shell Commands,XD-3173,64219,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,10/Jun/15 6:35 AM,10/Jun/15 6:35 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a user I'd like to be able to understand the root cause of an error on the {{http}} shell command.

When an exception occurs on an {{http}} shell command, the user gets

{{""Failed to access http endpoint %s"", target}}

No information from the exception is conveyed to the user (nor is it logged by the admin).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Root cause information is conveyed to the user, and/or logged by the admin.",,191980800,,,9223372036854775807,false,grussell(grussell),,,,"0|i08id3:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Composed modules not working on YARN,XD-3171,64211,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,eric.bottard,iperumal,iperumal,09/Jun/15 4:21 PM,11/Jun/15 11:40 AM,10/Jul/21 8:37 AM,11/Jun/15 11:37 AM,,,,,,,1.2 GA,,,,,,,0,,,,,,,"From https://github.com/spring-projects/spring-xd/issues/1704

I am trying to use composed modules when running on YARN.  

In ZK, each child module definition of the composed module gets serialized as follows:

```
{""@class"":""org.springframework.xd.module.SimpleModuleDefinition"",""name"":""transform"",""type"":""processor"",""location"":""file:/tmp/hadoop-hduser/nm-local-dir/usercache/hduser/appcache/application_1433789137218_0001/filecache/17/spring-xd-yarn-1.1.2.RELEASE.zip/modules/processor/transform/""}
```

When I try to use the composed module on YARN, it may be deployed to a different container where the ""location"" file path is not valid.  In this case I get the following exception:

```
java.lang.IllegalArgumentException: File must exist
	at org.springframework.boot.loader.data.RandomAccessDataFile.<init>(RandomAccessDataFile.java:67)
	at org.springframework.boot.loader.data.RandomAccessDataFile.<init>(RandomAccessDataFile.java:51)
	at org.springframework.boot.loader.jar.JarFile.<init>(JarFile.java:95)
	at org.springframework.boot.loader.archive.JarFileArchive.<init>(JarFileArchive.java:61)
	at org.springframework.boot.loader.archive.JarFileArchive.<init>(JarFileArchive.java:57)
	at org.springframework.xd.module.support.ModuleUtils.createModuleClassLoader(ModuleUtils.java:54)
	at org.springframework.xd.module.support.ModuleUtils.createModuleClassLoader(ModuleUtils.java:47)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolveNormalMetadata(DefaultModuleOptionsMetadataResolver.java:186)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolve(DefaultModuleOptionsMetadataResolver.java:164)
	at org.springframework.xd.module.options.DelegatingModuleOptionsMetadataResolver.resolve(DelegatingModuleOptionsMetadataResolver.java:44)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:127)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolveComposedModuleMetadata(DefaultModuleOptionsMetadataResolver.java:175)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolve(DefaultModuleOptionsMetadataResolver.java:167)
	at org.springframework.xd.module.options.DelegatingModuleOptionsMetadataResolver.resolve(DelegatingModuleOptionsMetadataResolver.java:44)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:127)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:174)
```

I think the issue may be related to the following line in ArchiveModuleRegistry:

```
String filename = resource.getFile().getCanonicalFile().getName();
```

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,191980800,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1713,"0|i08ibb:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
STS import using Gradle Plugin broken,XD-3167,64193,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,hillert,hillert,09/Jun/15 4:00 AM,03/Mar/16 6:22 AM,10/Jul/21 8:37 AM,,1.2 RC1,,,,,,,,,,,,,0,,,,,,,"How to reproduce:

* Menu: File -> Import --> Gradle Project
* Press Next
* Select the Spring XD Root Folder
* Press button *Build Model* 

This fails with the following log output:

{code}

FAILURE: Build failed with an exception.

* Where:
Script '/Users/hillert/dev/git/spring-xd/spring-xd-starters/spring-xd-module-parent/publish-maven.gradle' line: 32

* What went wrong:
A problem occurred evaluating script.
> dependencies.properties (No such file or directory)

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED

Total time: 29.05 secs

{code}

If I comment out / remove in *spring-xd-starters/spring-xd-module-parent/publish-maven.gradle* the following lines, everything works:

{code}
diff --git a/spring-xd-starters/spring-xd-module-parent/publish-maven.gradle b/spring-xd-starters/spring-xd-module-parent/publish-maven.gradle
index 6dea47f..202f884 100644
--- a/spring-xd-starters/spring-xd-module-parent/publish-maven.gradle
+++ b/spring-xd-starters/spring-xd-module-parent/publish-maven.gradle
@@ -28,10 +28,6 @@ def getAllDependentProjects(project) {

 // load versions
 def versions = new Properties()
-def propertiesFile = new File('dependencies.properties')
-propertiesFile.withInputStream {
-       versions.load(it)
-}

 def customizePom = {
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,168912000,,2016-03-03 06:22:32.357,9223372036854775807,true,tzolov(tzolov),,,,"0|i08i7r:",9223372036854775807,9223372036854775807,,,,,,2.0,,"03/Mar/16 6:22 AM;tzolov;I am facing the same problem is there any graceful way to get around?",,,,,,,,,,,,,,,,,
MessageBusSupport loads classes using the wrong ClassLoader,XD-3155,64137,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,pwebb,pwebb,05/Jun/15 12:19 PM,08/Jun/15 3:04 PM,10/Jul/21 8:37 AM,07/Jun/15 9:43 AM,,,,,,,1.2 GA,,,,,,,0,,,,,,,"Use Spring XD modules with Spring Boot devtools the following SpEL errors occur:

{noformat}
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1004E:(pos 8): Method call: Method accept(demo.Vote) cannot be found on demo.CounterApplication$$EnhancerBySpringCGLIB$$8b6c5177 type
    at org.springframework.expression.spel.ast.MethodReference.findAccessorForMethod(MethodReference.java:211)
    at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:125)
    at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)
    at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)
...
{noformat}

The root cause of the error is that SpEL is using a different classloader to compare argument times to the one that loaded the object.

The actual incoming object is loaded via  {{MessageBusSupport}} which is calling {{Class.forName}}. If {{ClassUtils.forName}} is used instead then the context classloader is used and everything appears to work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192326400,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1692,"0|i08hw7:",9223372036854775807,9223372036854775807,,,Sprint 50,,,0.0,,"05/Jun/15 12:53 PM;pwebb;https://github.com/spring-projects/spring-xd/pull/1692",,,,,,,,,,,,,,,,,
the 'filepollhdfs' job fails on second submission,XD-3150,64129,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,jvalkeal,thomas.risberg,thomas.risberg,05/Jun/15 5:59 AM,05/Jun/15 9:38 AM,10/Jul/21 8:37 AM,05/Jun/15 9:38 AM,1.1.2,1.2 RC1,,,,,1.1.3,1.2 GA,Batch,,,,,0,,,,,,,"Definitions:

>job create pollHdfs --definition ""filepollhdfs --names=name,age"" --deploy true

>stream create csvStream --definition ""file --mode=ref --dir=/Users/trisberg/Test/files --pattern=*.csv > queue:job:pollHdfs"" --deploy

Here is the exception:

{code}
org.springframework.data.hadoop.store.StoreException: Error while flushing stream; nested exception is java.nio.channels.ClosedChannelException
	at org.springframework.xd.batch.item.hadoop.HdfsTextItemWriter.update(HdfsTextItemWriter.java:135)
	at org.springframework.batch.item.support.CompositeItemStream.update(CompositeItemStream.java:74)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:250)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:165)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:144)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy54.run(Unknown Source)
	at org.springframework.batch.integration.launch.JobLaunching
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192412800,XD-982,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1691,"0|i08htg:",9223372036854775807,9223372036854775807,,,Sprint 50,,,3.0,,,,,,,,,,,,,,,,,,,
Enable/Disable Boot and Integration MBeans when JMX is enabled/disabled,XD-3142,64100,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,03/Jun/15 4:51 PM,08/Jun/15 3:04 PM,10/Jul/21 8:37 AM,08/Jun/15 11:38 AM,,,,,,,1.2 GA,,,,,,,0,,,,,,,Spring Integration MBeans are enabled by default even though XD_JMX_ENABLED is set to false. We need to disable JMX on these MBeans as well as Spring Boot MBeans.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192499200,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1685,"0|i08hti:r",9223372036854775807,9223372036854775807,,,Sprint 50,,,1.0,,,,,,,,,,,,,,,,,,,
Uploaded custom module requires restart to get in effect,XD-3141,64099,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,iperumal,iperumal,iperumal,03/Jun/15 4:15 PM,10/Jun/15 4:05 AM,10/Jul/21 8:37 AM,10/Jun/15 4:05 AM,,,,,,,1.2 GA,,,,,,,0,,,,,,,"When a custom module is uploaded to module registry, though the module registry is updated with the changed module after deleting the existing one, the module changes aren't loaded when deployed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,191980800,,2015-06-10 04:05:03.984,9223372036854775807,true,eric.bottard(eric.bottard),,,https://github.com/spring-projects/spring-xd/pull/1688,"0|hzzzgi:",9223372036854775807,9223372036854775807,,,Sprint 51,,,5.0,,"03/Jun/15 4:16 PM;iperumal;A possible  reason for this issue is related to how the module resources are loaded. Currently the admin/container classloader is used to get the resources and this resource loader would not have the overridden module archive.

https://github.com/spring-projects/spring-xd/blob/master/spring-xd-module/src/main/java/org/springframework/xd/module/options/ModuleUtils.java#L119","04/Jun/15 8:26 AM;iperumal;Here are the steps to reproduce:
 1) Start admin/containers 2) Module upload 3) Introduce some changes in the module 4) Module upload force; the uploaded modules are updated to the module registry location correctly. But, the changes aren't picked up when deploying that module. 5) restart the servers; and the changes are available now.","04/Jun/15 3:33 PM;iperumal;It turns out that the issue is related only to the module configuration files (config/*.xml and config/*.properties). ","10/Jun/15 4:05 AM;eric.bottard;Fixed via https://github.com/spring-projects/spring-xd/commit/d8924677dbc0e78608afd647f87dd3ff691c4645",,,,,,,,,,,,,,
Example hashtag-count MR job fails when running XD on YARN with PHD 3.0,XD-3136,64081,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,thomas.risberg,thomas.risberg,02/Jun/15 1:59 PM,16/Jun/15 11:55 AM,10/Jul/21 8:37 AM,08/Jun/15 12:50 PM,,,,,,,1.2 GA,,Hadoop,Runtime,,,,0,,,,,,,"Running XD on YARN on PHD 3.0 Ambari install.

Uploading and submitting a custom job fails with the following:

{code}
2015-06-02 16:54:15,580 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: Diagnostics report from attempt_1433273561345_0009_m_000000_0: Error: java.lang.RuntimeException: java.lang.ClassNotFoundException: Class org.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper not found
	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2076)
	at org.apache.hadoop.mapreduce.task.JobContextImpl.getMapperClass(JobContextImpl.java:186)
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:742)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:163)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:158)
Caused by: java.lang.ClassNotFoundException: Class org.springframework.xd.examples.hadoop.HashtagCount$TokenizerMapper not found
	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:1982)
	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2074)
	... 8 more
{code}

Same example jar works fine when submitted from XD cluster.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,192067200,XD-1317,,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|hzzzia:",9223372036854775807,9223372036854775807,,,Sprint 51,,,5.0,,"08/Jun/15 11:49 AM;thomas.risberg;Also doesn't run when HDFS is used for custom-module home",,,,,,,,,,,,,,,,,
Spark streaming module includes logback jar when using dist zip,XD-3135,64078,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,02/Jun/15 11:21 AM,02/Jun/15 12:13 PM,10/Jul/21 8:37 AM,02/Jun/15 12:12 PM,,,,,,,1.2 RC1,,,,,,,0,,,,,,,"When running spark streaming module on spark standalone cluster from XD distribution, I see the following error:

[Stage 3:=============================>                             (1 + 1) / 2]2015-06-02T10:05:53-0700 1.2.0.SNAP WARN task-result-getter-3 scheduler.TaskSetManager - Lost task 0.0 in stage 3.0 (TID 50, 192.168.2.8): java.lang.IllegalArgumentException: LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (class org.slf4j.impl.Log4jLoggerFactory loaded from file:/Users/igopinatha/workspace/git/ilayaperumalg/spark/assembly/target/scala-2.10/spark-assembly-1.2.1-hadoop2.2.0.jar). If you are using Weblogic you will need to add 'org.slf4j' to prefer-application-packages in WEB-INF/weblogic.xml Object of class [org.slf4j.impl.Log4jLoggerFactory] must be an instance of class ch.qos.logback.classic.LoggerContext
     at org.springframework.util.Assert.isInstanceOf(Assert.java:339)
     at org.springframework.boot.logging.logback.LogbackLoggingSystem.getLoggerContext(LogbackLoggingSystem.java:151)
     at org.springframework.boot.logging.logback.LogbackLoggingSystem.getLogger(LogbackLoggingSystem.java:143)
     at org.springframework.boot.logging.logback.LogbackLoggingSystem.beforeInitialize(LogbackLoggingSystem.java:89)
     at org.springframework.boot.logging.LoggingApplicationListener.onApplicationStartedEvent(LoggingApplicationListener.java:152)
     at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:139)
     at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)
     at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
     at org.springframework.boot.context.event.EventPublishingRunListener.publishEvent(EventPublishingRunListener.java:100)
     at org.springframework.boot.context.event.EventPublishingRunListener.started(EventPublishingRunListener.java:54)
     at org.springframework.boot.SpringApplication.run(SpringApplication.java:277)
     at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
     at org.springframework.xd.dirt.plugins.spark.streaming.MessageBusConfiguration.createApplicationContext(MessageBusConfiguration.java:82)
     at org.springframework.xd.dirt.plugins.spark.streaming.MessageBusSender.start(MessageBusSender.java:105)
     at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:58)
     at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:53)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,192585600,XD-2464,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1682,"0|i08hkn:",9223372036854775807,9223372036854775807,,,Sprint 50,,,2.0,,,,,,,,,,,,,,,,,,,
Update YARN deployment classpath settings for HDP 2.2 and PHD 3.0,XD-3133,64068,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,01/Jun/15 4:24 PM,01/Jun/15 8:27 PM,10/Jul/21 8:37 AM,01/Jun/15 8:23 PM,,,,,,,1.2 RC1,,Packaging,,,,,0,,,,,,,Need to update classpath settings for PHD 3.0 and HDP 2.2 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192672000,XD-1317,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1680,"0|i08hif:",9223372036854775807,9223372036854775807,,,Sprint 50,,,1.0,,,,,,,,,,,,,,,,,,,
Sqoop job doesn't run when deployed on YARN on Ambari deployed HDP,XD-3132,64067,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,thomas.risberg,thomas.risberg,01/Jun/15 4:19 PM,10/Jun/15 3:12 PM,10/Jul/21 8:37 AM,09/Jun/15 12:45 PM,,,,,,,1.2 GA,,,,,,,0,,,,,,,"Got this error when submitting Sqoop job:

{code}
2015-06-01 19:09:42,932 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:main(75)) - Sqoop command: import
2015-06-01 19:09:42,939 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:main(76)) - Using args: [--table, XD_JOB_REGISTRY, --target-dir, /xd/sqoop2, -m=1]
2015-06-01 19:09:42,939 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:main(77)) - Mapreduce home: /usr/hdp/2.2.4.2-2/hadoop-mapreduce
2015-06-01 19:09:42,977 WARN [main] conf.Configuration (Configuration.java:(646)) - DEPRECATED: hadoop-site.xml found in the classpath. Usage of hadoop-site.xml is deprecated. Instead use core-site.xml, mapred-site.xml and hdfs-site.xml to override properties of core-default.xml, mapred-default.xml and hdfs-default.xml respectively
2015-06-01 19:09:42,984 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: fs.defaultFS=hdfs://hawaii:8020
2015-06-01 19:09:43,743 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: yarn.resourcemanager.hostname=hawaii
2015-06-01 19:09:43,758 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: yarn.resourcemanager.address=hawaii:8050
2015-06-01 19:09:43,758 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: yarn.resourcemanager.scheduler.address=hawaii
2015-06-01 19:09:43,758 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: mapreduce.framework.name=yarn
2015-06-01 19:09:43,758 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:setConfigurationProperty(168)) - Setting configuration property: mapreduce.jobhistory.address=hawaii
2015-06-01 19:09:43,760 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:createConfiguration(158)) - Setting configuration property: yarn.resourcemanager.scheduler.address=hawaii:8030
2015-06-01 19:09:43,760 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:createConfiguration(158)) - Setting configuration property: mapreduce.application.classpath=$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/usr/hdp/2.2.4.2-2/hadoop/lib/hadoop-lzo-0.6.0.2.2.4.2-2.jar:/etc/hadoop/conf/secure
2015-06-01 19:09:43,760 INFO [main] sqoop.SqoopRunner (SqoopRunner.java:createConfiguration(158)) - Setting configuration property: mapreduce.application.framework.path=/hdp/apps/2.2.4.2-2/mapreduce/mapreduce.tar.gz#mr-framework
2015-06-01 19:09:44,141 INFO [main] sqoop.Sqoop (Sqoop.java:(92)) - Running Sqoop version: 1.4.5
2015-06-01 19:09:44,691 INFO [main] manager.SqlManager (SqlManager.java:initOptionDefaults(98)) - Using default fetchSize of 1000
2015-06-01 19:09:44,691 INFO [main] tool.CodeGenTool (CodeGenTool.java:generateORM(92)) - Beginning code generation
2015-06-01 19:09:45,057 INFO [main] manager.SqlManager (SqlManager.java:execute(749)) - Executing SQL statement: SELECT t.* FROM XD_JOB_REGISTRY AS t WHERE 1=0
2015-06-01 19:09:45,074 INFO [main] manager.SqlManager (SqlManager.java:execute(749)) - Executing SQL statement: SELECT t.* FROM XD_JOB_REGISTRY AS t WHERE 1=0
2015-06-01 19:09:45,148 INFO [main] orm.CompilationManager (CompilationManager.java:findHadoopJars(94)) - HADOOP_MAPRED_HOME is /usr/hdp/2.2.4.2-2/hadoop-mapreduce
2015-06-01 19:09:45,230 ERROR [main] orm.CompilationManager (CompilationManager.java:compile(184)) - It seems as though you are running sqoop with a JRE.
2015-06-01 19:09:45,230 ERROR [main] orm.CompilationManager (CompilationManager.java:compile(185)) - Sqoop requires a JDK that can compile Java code.
2015-06-01 19:09:45,230 ERROR [main] orm.CompilationManager (CompilationManager.java:compile(186)) - Please install a JDK and set $JAVA_HOME to use it.
2015-06-01 19:09:45,232 ERROR [main] tool.ImportTool (ImportTool.java:run(609)) - Encountered IOException running import job: java.io.IOException: Could not start Java compiler.
at org.apache.sqoop.orm.CompilationManager.compile(CompilationManager.java:187)
at org.apache.sqoop.tool.CodeGenTool.generateORM(CodeGenTool.java:97)
at org.apache.sqoop.tool.ImportTool.importTable(ImportTool.java:478)
at org.apache.sqoop.tool.ImportTool.run(ImportTool.java:601)
at org.apache.sqoop.Sqoop.run(Sqoop.java:143)
at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
at org.apache.sqoop.Sqoop.runSqoop(Sqoop.java:179)
at org.apache.sqoop.Sqoop.runTool(Sqoop.java:218)
at org.springframework.xd.sqoop.SqoopRunner.main(SqoopRunner.java:87)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,192672000,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1702,"0|hzzzib:",9223372036854775807,9223372036854775807,,,Sprint 51,,,3.0,,,,,,,,,,,,,,,,,,,
Spark streaming plugin shouldn't need tap listener cache,XD-3131,64066,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,01/Jun/15 4:00 PM,03/Jun/15 12:36 PM,10/Jul/21 8:37 AM,03/Jun/15 12:36 PM,,,,,,,1.1.3,1.2 GA,,,,,,0,,,,,,,"Since Spark streaming doesn't use ZK to keep track taps being created, we don't need the tap listener cache setup at the container startup.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,192672000,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1678,"0|i08hhz:",9223372036854775807,9223372036854775807,,,Sprint 50,,,1.0,,,,,,,,,,,,,,,,,,,
Move Bus cleaner util method from BusUtils,XD-3130,64065,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,01/Jun/15 3:51 PM,02/Jun/15 11:56 AM,10/Jul/21 8:37 AM,02/Jun/15 11:56 AM,,,,,,,1.1.3,1.2 GA,,,,,,0,,,,,,,"Since `Spark-streaming` uses `BusUtils`, we need to move the bus cleaner util method that builds rest template so that spark streaming doesn't depend on `httpClient`",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,192672000,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1677,"0|i08hhr:",9223372036854775807,9223372036854775807,,,Sprint 50,,,1.0,,,,,,,,,,,,,,,,,,,
Misleading instruction when admin server not running on localhost:9393,XD-3128,64062,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,thomas.risberg,thomas.risberg,01/Jun/15 1:41 PM,01/Jun/15 1:42 PM,10/Jul/21 8:37 AM,,,,,,,,,,Runtime,,,,,0,,,,,,,"Starting teh shell without having admin running on localhost:9393 results in the following message:

{code}
1.2.0.RC1 | Admin Server Target: http://localhost:9393
-------------------------------------------------------------------------------
Error: Unable to contact XD Admin Server at 'http://localhost:9393'.
Please execute 'admin config info' for more details.
-------------------------------------------------------------------------------
{code}

Running {code}admin config info{code} gives a nasty stacktrace though, so these instructions are misleading and should be changed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192672000,,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08hh3:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
`minPartitionCount` is ignored by the consumer,XD-3124,64051,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,mbogoevici,mbogoevici,mbogoevici,01/Jun/15 7:11 AM,16/Jun/15 9:47 AM,10/Jul/21 8:37 AM,04/Jun/15 8:44 AM,,,,,,,1.1.3,1.2 GA,,,,,,0,,,,,,,"`minPartitionCount` is ignored by the consumer, so downstream modules end up listening to fewer partitions",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,192758400,XD-2356,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1675,"0|i08hfb:",9223372036854775807,9223372036854775807,,,Sprint 50,,,3.0,,,,,,,,,,,,,,,,,,,
Prevent classloader leakage thru javabeans infrastructure,XD-3123,64050,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,eric.bottard,eric.bottard,01/Jun/15 6:38 AM,16/Jun/15 11:54 AM,10/Jul/21 8:37 AM,08/Jun/15 8:19 AM,,,,,,,1.2 GA,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,192153600,,,9223372036854775807,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1690,"0|i08hti:",9223372036854775807,9223372036854775807,,,Sprint 50,,,1.0,,"08/Jun/15 8:19 AM;eric.bottard;Merged as https://github.com/spring-projects/spring-xd/commit/62ad5cd1c28a8d4c8ccf25aedec46c44bc51118d",,,,,,,,,,,,,,,,,
"skipping header 'amqp_deliveryMode' since it is not of expected type [class org.springframework.amqp.core.MessageDeliveryMode], it is [class org.springframework.amqp.core.MessageDeliveryMode]",XD-3121,64009,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,thm1118,thm1118,29/May/15 12:54 AM,29/May/15 12:54 AM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,,,,,,1,,,,,,,"when use rabbit as source, always have the warn message:
skipping header 'amqp_deliveryMode' since it is not of expected type [class org.springframework.amqp.core.MessageDeliveryMode], it is [class org.springframework.amqp.core.MessageDeliveryMode]

similar issure is https://jira.spring.io/browse/XD-2567,  but i have no use rabbit sink.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193017600,,,9223372036854775807,true,thm1118(thm1118),,,,"0|i08h5z:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
SFTP Source Requires PassPhrase with Private Key,XD-3120,64004,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,28/May/15 12:12 PM,28/May/15 12:12 PM,10/Jul/21 8:37 AM,,1.2 RC1,,,,,,,,,,,,,0,,,,,,,"Private keys do not require pass phrases; hence it's bogus for the source to require one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193017600,,,9223372036854775807,false,grussell(grussell),,,,"0|i08h4v:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
The performance of the pipe [in singlenode],XD-3119,64003,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,zwj520chx,zwj520chx,28/May/15 9:32 AM,28/May/15 10:44 AM,10/Jul/21 8:37 AM,,1.1.2,,,,,,,,Performance Testing,,,,,0,,,,,,,"Do as a developer, in the case of large data from the source to the sink will after multiple processors, I found that even if the processor does not do anything, message from the source to the sink of performance, with the number of processors, the message forwarding performance will decrease very much. For example:

spring xd run in  singlenode

After the tcp-client connects the socket service, receive very many text (a line of text messages)

stream definition:
tcp-client |t1:transform |t2:transform |t3:transform |t4:transform |null 

Message passing rate: 20000 per second
Transform didn't do anything.

stream definition:
tcp-client|null
Message passing rate: 170000 per second

Message is a line of text, my business requires me to a second processing 300000 pieces of data.(About 100 MB/s in a machine )

Tell me how to solve the performance bottleneck. Can stream only have source and sink to get high performance?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193017600,,2015-05-28 09:49:55.853,9223372036854775807,true,zwj520chx(zwj520chx),,,,"0|i08h4n:",9223372036854775807,9223372036854775807,,,,,,1.0,,"28/May/15 9:49 AM;mark.pollack;Hi,

We observed the same thing and made several fixes in the upcoming 1.2.0.RC1 release. We were able to get several (~4) million messages per second using the local message bus via a test generator source and a throughput sink that are available here - https://github.com/spring-projects/spring-xd-modules.  We are in the process of re-running benchmarks now.  Some members of the team have gotten higher.  

That said, you probably need to divide out your stream across more than one node if you are going to have 10 million messages/sec.  What is your event size?  A technique you can use now is to deploy using a message bus (such as rabbit or Kafka) and if you specify count=0, it will apply 'direct binding' to all the stream, such that  a | b | c are connected locally (even more of an optimized path than local bus).     What can also help in this configuration is to specify a group criteria as well so you have say 3 instances of the stream deployed to a subset of the xd-container nodes.

Note, 10 million messages/sec even with 100 byte messages is about ~1,000 Megabyte/sec...  which means you will need at least 8-10 machines running xd-containers on a 1Gbit network or a couple of machines with a 10Gbit.

I'll post back when a new .zip file is available for you to try.  

Thanks for reporting this.","28/May/15 10:44 AM;zwj520chx;Each message size of about 128 bye, 10 million is my translation error, I am responsible for big data program about 10TB every day.
I would like to request that the throughput of a single node can reach 90MB/s (700000 per second message).
Now the data distribution in a number of machines, each machine to deploy a XD spring. Currently only use a single node mode as the test, the production will be distributed mode
I now use another method to solve the problem.. Payload = java.io.File, the original text message is placed in file.
But I think it's not a good solution in the distributed environment.. Because the file can only be processed in this machine
Asked message bus direct and binding local what is not the same, I understand that it should be almost.
1.2.0.RC1 about when you can release? Look forward to this version.
Thank you for your reply.!",,,,,,,,,,,,,,,,
SFTP socket closed error. Infinite loop,XD-3109,63932,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,grussell,caxqueiroz,caxqueiroz,26/May/15 9:01 PM,30/May/15 8:03 AM,10/Jul/21 8:37 AM,30/May/15 8:03 AM,1.1.2,,,,,,,,Stream Module,,,,,0,waiting-for-reporter,,,,,,"Having the follow messages poping up on xd log. It seems they are being generated indefinitely. 

Log files getting huge. 

[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: ssh-rsa,ssh-dss
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: aes256-ctr,aes192-ctr,aes128-ctr,arcfour256
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: aes256-ctr,aes192-ctr,aes128-ctr,arcfour256
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: hmac-sha2-512,hmac-sha2-256,hmac-sha1,hmac-ripemd160
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: hmac-sha2-512,hmac-sha2-256,hmac-sha1,hmac-ripemd160
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: none,zlib@openssh.com
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server: none,zlib@openssh.com
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server:
[2015-05-27 15:57:51.039] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server:
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: diffie-hellman-group1-sha1,diffie-hellman-group-exchange-sha1
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: ssh-rsa,ssh-dss
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: none
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client: none
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client:
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client:
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: server->client aes128-ctr hmac-sha1 none
[2015-05-27 15:57:51.040] boot - 2774  INFO [task-scheduler-1] --- jsch: kex: client->server aes128-ctr hmac-sha1 none
[2015-05-27 15:57:51.044] boot - 2774  INFO [task-scheduler-1] --- jsch: SSH_MSG_KEXDH_INIT sent
[2015-05-27 15:57:51.044] boot - 2774  INFO [task-scheduler-1] --- jsch: expecting SSH_MSG_KEXDH_REPLY
[2015-05-27 15:57:51.049] boot - 2774  INFO [task-scheduler-1] --- jsch: ssh_rsa_verify: signature true
[2015-05-27 15:57:51.049] boot - 2774  INFO [task-scheduler-1] --- jsch: Host 'XX.XXX.XX.X' is known and mathces the RSA host key
[2015-05-27 15:57:51.049] boot - 2774  INFO [task-scheduler-1] --- jsch: SSH_MSG_NEWKEYS sent
[2015-05-27 15:57:51.049] boot - 2774  INFO [task-scheduler-1] --- jsch: SSH_MSG_NEWKEYS received
[2015-05-27 15:57:51.050] boot - 2774  INFO [task-scheduler-1] --- jsch: SSH_MSG_SERVICE_REQUEST sent
[2015-05-27 15:57:51.050] boot - 2774  INFO [task-scheduler-1] --- jsch: SSH_MSG_SERVICE_ACCEPT received
[2015-05-27 15:57:51.052] boot - 2774  INFO [task-scheduler-1] --- jsch: Authentications that can continue: gssapi-with-mic,publickey,keyboard-interactive,password
[2015-05-27 15:57:51.052] boot - 2774  INFO [task-scheduler-1] --- jsch: Next authentication method: gssapi-with-mic
[2015-05-27 15:57:51.054] boot - 2774  INFO [task-scheduler-1] --- jsch: Authentications that can continue: publickey,keyboard-interactive,password
[2015-05-27 15:57:51.054] boot - 2774  INFO [task-scheduler-1] --- jsch: Next authentication method: publickey
[2015-05-27 15:57:51.086] boot - 2774  INFO [task-scheduler-1] --- jsch: Authentication succeeded (publickey).
[2015-05-27 15:57:51.113] boot - 2774  INFO [task-scheduler-1] --- jsch: Disconnecting from 10.100.103.5 port 22
[2015-05-27 15:57:51.113] boot - 2774  INFO [Connect thread XX.XXX.XXX.X session] --- jsch: Caught an exception, leaving main loop due to Socket closed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,192931200,,2015-05-28 12:18:10.338,9223372036854775807,false,grussell(grussell),,,,"0|i08fva:i",9223372036854775807,9223372036854775807,,,Sprint 50,,,2.0,,"26/May/15 9:13 PM;caxqueiroz;It happens on the SFTP module. ","28/May/15 12:18 PM;grussell;This seems to be a simple logging configuration issue.

XD ships with standard logging configuration for WARN level logging at the root logger level.

It appears you are using a default ROOT logger at INFO and hence you are enabling INFO logging for all classes where there is no specific level setting.

You can eliminate these log messages by setting the log level for {{com.jcraft.jsch}} to WARN or higher.

See the [Spring Integration Reference | http://docs.spring.io/spring-integration/reference/html/sftp.html#sftp-jsch-logging] for more information about controlling the JSch logging.

Please let us know if this solves your problem so we can close this issue.

Thanks","29/May/15 7:53 PM;caxqueiroz;Yes. Enabling WARN log level for com.jcraft.jsch remove the logs (as expected. ). 
My concern was about jsch: Caught an exception, leaving main loop due to Socket closed exception. 

But if it is not an issue. All good. ","30/May/15 8:03 AM;grussell;No, it's not a problem, it's just the IO thread detecting that the session was closed.",,,,,,,,,,,,,,
Module failed to deploy because ZK said it already exists.,XD-3108,63931,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,grenfro,grenfro,26/May/15 6:42 PM,04/Jul/15 12:36 PM,10/Jul/21 8:37 AM,,,,,,,,,,Stream Module,,,,,0,,,,,,,"Identified in a stream of commits ending with:0f4d4ea6b2f16c73c0048e32d8a8753aa25a48fd
Transport: Redis
Admin: 1 
Container: 1 
Stream deployed: time|file
Attachments: Admin and container logs.
[Description]
Admin reports that File sink Module failed to deploy at 00:19:32 because ZK stated it already exists.  Container shows no deployment of the file sink.
**** This could be an artifact in that the old Acceptance tests use the same stream name, hence a previous undeploy failed to remove the file.  This is not seen in the log per se'.  The filejdbc fail above is a legitimate test verifying that a job can't be deployed twice.  
",,,,,,,,,,,,,,,,,,,,,,,,"26/May/15 6:35 PM;grenfro;admin-1768.log;https://jira.spring.io/secure/attachment/22834/admin-1768.log","26/May/15 6:35 PM;grenfro;container-1594.log;https://jira.spring.io/secure/attachment/22835/container-1594.log",,,,,,,,,,,,192153600,,2015-06-03 13:30:03.845,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz001",9223372036854775807,9223372036854775807,,,,,,3.0,,"03/Jun/15 1:30 PM;iperumal;I see this in admin log:

java.lang.IllegalArgumentException: definition cannot be blank or null
	at org.springframework.util.Assert.hasText(Assert.java:162) ~[spring-core-4.1.6.RELEASE.jar:4.1.6.RELEASE]
	at org.springframework.xd.dirt.stream.AbstractDeployer.validateBeforeSave(AbstractDeployer.java:114) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:260) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at org.springframework.xd.dirt.rest.JobsController.save(JobsController.java:75) ~[spring-xd-dirt-1.2.0.BUILD-SNAPSHOT.jar:1.2.0.BUILD-SNAPSHOT]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_72]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_72]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_72]
	at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_72]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMeth

Any chance, you have definition set to null or empty?","07/Jun/15 8:59 AM;grenfro;Not in this case.  There are negative tests that enter empty/null definitions, to verify that the appropriate errors occur.
The deployment failure for this bug occurred at 00:19:32.

",,,,,,,,,,,,,,,,
module.*.count > 1 duplicates messages on taps,XD-3100,63920,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Fixed,,lukasz.nowanski@emc.com,lukasz.nowanski@emc.com,26/May/15 7:42 AM,28/May/15 10:04 AM,10/Jul/21 8:37 AM,28/May/15 10:04 AM,1.1.1,,,,,,,,Runtime,,,,,0,waiting-for-reporter,,,,,,"Using module.name.count > 1 when deploying taps causes duplication of messages in those modules. This impacts balancing of the containers and modules in a cluster as messages should not be duplicated across modules if the same module is deployed twice to two containers in order to spread the load.

We use taps quite heavily in our project mainly for analytics of the life feed in real time but due to issue we have discovered and described in this bug we are currently facing a limitation where heavily processing modules can not be load balanced across the cluster as they are causing duplication of the messages and therefore the same module deployed to two 
containers would still process the same message twice.

To demonstrate the problem please see test case scenario set up below:

h4. 1. Environment

- Spring-XD version 1.1.1-RELEASE
- Running two spring-xd containers and one spring-xd admin

h4. 2. Set up

Stream definition is as follows:


{quote}stream create --name test-module-count --definition ""syslog-udp --port=5140 | transform | log""
stream deploy --name test-module-count --properties ""module.*.count=2""
stream create --name tap-test-module-count --definition ""tap:stream:test-module-count.syslog-udp > transform --expression='payload.toString() + \""TAPPED\""' | log""
stream deploy --name tap-test-module-count --properties ""module.*.count=2""{quote}


Please refer to the screen shots attached to see that after deploying those two streams we have:

- streams successfully deployed ( module-count-spring-xd-streams.png )
- streams successfully deployed with count=2 to both containers ( module-count-spring-xd-containers.png ) 
- 5 queues created in Rabbit ( module-count-rabbit.png ) where two were created for the syslog-udp collector as a result of using module.syslog-udp.count=2 - this is causing messages to be duplicated. Normally the expectation would be to have only one queue for the tap

h4. 3. Test input data

I have sent a very simple UDP message to the listening udp collector running on second container:


{quote}echo test-module-count >> /dev/udp/host02/5140{quote}

h4. 4. Test output data in the logs ( module-count-container01.log and module-count-container02.log )

h5. Expected result:

Below messages logged only on 1 container (it does not matter which one)
{quote}2015-05-26 09:52:21,630 1.1.1.RELEASE  INFO xdbus.test-module-count.1-1 sink.test-module-count - {UNDECODED=test-module-count}{quote}
Below message logged only on one container (it does not matter which one)

{quote}2015-05-26 09:52:21,843 1.1.1.RELEASE  INFO xdbus.tap-test-module-count.0-1 sink.tap-test-module-count - {UNDECODED=test-module-count
}TAPPED{quote}

h5. Actual result:

Stream that has been create as a tap has duplicated the same message and as a result the same message was proccessed twice on both containers by the same module ( transformer ) and logged twice to the console on both containers

Container01:
{quote}2015-05-26 14:52:21,143 1.1.1.RELEASE  INFO xdbus.tap-test-module-count.0-1 sink.tap-test-module-count - {UNDECODED=test-module-count
}TAPPED{quote}

Container02:
{quote}2015-05-26 09:52:21,630 1.1.1.RELEASE  INFO xdbus.test-module-count.1-1 sink.test-module-count - {UNDECODED=test-module-count
}
2015-05-26 09:52:21,843 1.1.1.RELEASE  INFO xdbus.tap-test-module-count.0-1 sink.tap-test-module-count - {UNDECODED=test-module-count
}TAPPED{quote}


",,,,,,,,,,,,,,,,XD-2115,,,,,,,,"26/May/15 7:06 AM;lukasz.nowanski@emc.com;module-count-container01.txt;https://jira.spring.io/secure/attachment/22830/module-count-container01.txt","26/May/15 7:06 AM;lukasz.nowanski@emc.com;module-count-container02.txt;https://jira.spring.io/secure/attachment/22831/module-count-container02.txt","26/May/15 7:06 AM;lukasz.nowanski@emc.com;module-count-rabbit.png;https://jira.spring.io/secure/attachment/22827/module-count-rabbit.png","26/May/15 7:06 AM;lukasz.nowanski@emc.com;module-count-spring-xd-containers.png;https://jira.spring.io/secure/attachment/22828/module-count-spring-xd-containers.png","26/May/15 7:06 AM;lukasz.nowanski@emc.com;module-count-spring-xd-streams.png;https://jira.spring.io/secure/attachment/22829/module-count-spring-xd-streams.png",,,,,,,Using module.name.count > 1 should not duplicate messages when used in taps while deploying it with these specific properties.,,193017600,,2015-05-26 10:15:14.289,9223372036854775807,true,sabby(sabby),,,,"0|i08gw7:",9223372036854775807,9223372036854775807,,,,,,5.0,,"26/May/15 10:15 AM;grussell;Multiple instances of a tap source each get a copy of the tapped data. This is true whether the same tap is used as the source for multiple streams or whether a single stream has multiple instances of the source module.

This behavior has been changed in version 1.2; now, when there are multiple instances within the same stream, they become competing consumers on a single queue; each stream gets its own queue instead of each module instance.

To get the desired behavior with 1.1 and before, deploy a single instance of the source module...

{code}
stream create --name tap-test-module-count --definition ""tap:stream:test-module-count.syslog-udp > transform --expression='payload.toString() + \""TAPPED\""' | log""
stream deploy --name tap-test-module-count --properties ""module.log.count=2""
{code}

i.e. don't use the wildcard in the module deployment properties.

If your {{transform}} is expensive, then use a no-op module for the source and fan out to multiple instances from the second module onwards.","27/May/15 5:56 AM;lukasz.nowanski@emc.com;Hi Gary,

I believe we saw this problem not only when we set count=2 on the source of the tap. Example below shows some of the actual streams we are using in our project:

Stream creation:

{code:java}
# Composed syslog source, should be removed when raw syslog ingestion is implemented
module compose --name cm-syslog-udp --definition ""syslog-udp --port=5140 | transform --script='dateConverter.groovy'""
#
# Network collection for syslog
#
stream create --name syslog-udp-router --definition ""cm-syslog-udp | router --script='sourceRouter.groovy'""
#
# Taps to intercept collected messages
#
stream create --name convert-udp-router --definition ""tap:stream:syslog-udp-router.cm-syslog-udp > router --script='syslogRouter.groovy'""
{code}

Stream deployment:

{code:java}
#
# Syslog collection
#
stream deploy --name syslog-udp-router --properties ""module.cm-syslog-udp.count=2,module.*.criteria=groups.contains('HA1')""
{code}

It is important to notice here that module.cm-syslog-udp.count=2 is deployed on 2 containers where UDP traffic is load balanced so there is no duplication of messages as we use round robin algorithm for UDP load balancing.


{code:java}
#
# Taps to intercept collected messages
#
stream deploy --name convert-udp-router --properties ""module.router.count=2,module.*.criteria=groups.contains('HA1')""
{code}

This has been done to make sure the router script is deployed on two containers to load balance routing logic on two containers, however, we saw that duplication of messages has been introduced and in this case router was performing routing logic on the same message on both containers. This set up is not setting a count=2 on the tapped source and still introduces duplication which in terms makes me think duplication is done on the tapped stream when setting count=2 on any source,module in the tap.
It looks like this definition:

{code:java}
tap:stream:syslog-udp-router.cm-syslog-udp > router --script='syslogRouter.groovy'
{code}

creates two identical queues in Rabbit for the router script even though the expectation would be to use one tap and have two router consumers reading from one queue.

","27/May/15 6:27 AM;grussell;Hi [~lukasz.nowanski@emc.com]

{quote}
This set up is not setting a count=2 on the tapped source ...
{quote}

Yes it is.

{quote}
stream create --name convert-udp-router --definition ""tap:stream:syslog-udp-router.cm-syslog-udp > router --script='syslogRouter.groovy'""
{quote}

{quote}
stream deploy --name convert-udp-router --properties ""module.router.count=2,module.*.criteria=groups.contains('HA1')""
{quote}

This stream has only one module {{router}} with a named channel as its input; the router is the first (and only) module.

Notice {{>}} instead of {{|}}

To work around this issue with 1.1.x, you can use

{quote}
stream create --name convert-udp-router --definition ""tap:stream:syslog-udp-router.cm-syslog-udp > noop | router --script='syslogRouter.groovy'""
{quote}

and deploy only 1 instance of {{noop}} and 2 of router.

You could just use {{transform}} for the noop (by default the transform module's expression is {{payload}}) or a custom module that simply bridges the input and output channels.

With 1.2, it works as you expect.

Let me know if it's still not clear.","27/May/15 7:06 AM;lukasz.nowanski@emc.com;Hi Gary,

This is clear now. Thanks for explaining this. Your suggested approach will probably work ( to use noop in between), however, it introduces another unnecessary queue in Rabbit due to the {{|}} in between. We have done already a lot to reduce number of queues created in Rabbit and I suppose at this stage we better wait for 1.2 Release as it looks like it will give us what we are looking for. ","27/May/15 7:44 AM;grussell;Make sense; by the way, that change made it into 1.2.0.M1 (milestone release) if you want to give it a try.

The release candidate for 1.2.0 should be available soon.","27/May/15 9:21 AM;sabby;Hi [~lukasz.nowanski@emc.com], The 1.2 M1 release bits are here: http://repo.spring.io/libs-milestone/org/springframework/xd/spring-xd/1.2.0.M1/ - please let us know, we will close the issue then.

If you'd rather prefer waiting for 1.2 GA release, it is scheduled for 6/16. ","28/May/15 10:04 AM;sabby;Per [~lukasz.nowanski@emc.com]'s confirmation (via email), we are closing this issue. ",,,,,,,,,,,
SparkApp batch job is not running,XD-3094,63876,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,iperumal,iperumal,21/May/15 12:42 PM,22/May/15 2:26 PM,10/Jul/21 8:37 AM,22/May/15 11:30 AM,1.2 RC1,,,,,,1.2 RC1,,,,,,,0,,,,,,,"From the latest master, I couldn't run sparkApp as batch job. The spark application process gets launched and it doesn't complete and there are no errors at the output.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,193622400,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1652,"0|i08gmv:",9223372036854775807,9223372036854775807,,,Sprint 49,,,2.0,,"21/May/15 12:54 PM;iperumal;It looks like the issue with HADOOP_HOME not set. I switched to hadoop 2.6.0 recently and wonder if that is the reason. 
Glenn, Could you check if HADDOP_HOME or hadoop.home.dir is set on the acceptance test environment?",,,,,,,,,,,,,,,,,
Sqoop list-tables doesn't work oob,XD-3093,63875,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,jvalkeal,jvalkeal,21/May/15 11:18 AM,22/May/15 2:26 PM,10/Jul/21 8:37 AM,21/May/15 1:10 PM,1.2 M1,,,,,,1.2 RC1,,Batch,,,,,0,,,,,,,"Commands from docs:

xd:>job create sqoopListTables --definition ""sqoop --command=list-tables"" --deploy
xd:>job launch --name sqoopListTables

2015-05-21 19:12:36,211 1.2.0.M1 ERROR task-scheduler-1 sqoop.SqoopTasklet - Sqoop job for 'list-tables' finished with exit code: 1
2015-05-21 19:12:36,212 1.2.0.M1 ERROR task-scheduler-1 sqoop.SqoopTasklet - Sqoop err: Error: Required argument --connect is missing.

Adding --connect results

xd:>job create sqoopListTables --definition ""sqoop --command=list-tables --connect=jdbc:hsqldb:hsql://localhost:9101/xdjob"" --deploy
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module sqoop of type job:
    connect: option named 'connect' is not supported


This is with singlenode.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,193622400,,2015-05-21 11:30:23.086,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1648,"0|i08gmn:",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,"21/May/15 11:30 AM;thomas.risberg;Also need to fix docs to use --args:

{code}
job create sqoopListTables --definition ""sqoop --command=list-tables --args='--connect=jdbc:hsqldb:hsql://localhost:9101/xdjob'"" --deploy
{code}",,,,,,,,,,,,,,,,,
JdbcHdfsTests sporadically fail,XD-3090,63866,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,21/May/15 6:36 AM,27/May/15 6:31 PM,10/Jul/21 8:37 AM,27/May/15 6:31 PM,1.2 RC1,,,,,,1.2 GA,,Acceptance Testing,,,,,0,,,,,,,"Acceptance tests sporadically fail after https://github.com/spring-projects/spring-xd/pull/1623 was merged XD-2309.

Additional tests were added but used fixed timeouts.  Will replace them with waitForJob.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,193190400,XD-1605,2015-05-26 12:15:28.088,9223372036854775807,true,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1655,"0|hzzzji:",9223372036854775807,9223372036854775807,,,Sprint 50,,,2.0,,"26/May/15 12:15 PM;mminella;Any insight into the failures?","26/May/15 1:02 PM;grenfro;Could not reproduce them locally or running EC2 instances while running the tests from my local machine.
Typically when these errors occur, it was because the XD-Integration tests waits expired before the job was complete.   Also the timeouts on CI servers are more generous because they are slower servers, than on local Acceptance tests.  
 ",,,,,,,,,,,,,,,,
Unable to fully destroy hung batch job,XD-3087,63856,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,thomas.risberg,thomas.risberg,20/May/15 11:43 AM,04/Jul/15 11:56 AM,10/Jul/21 8:37 AM,,,,,,,,,,Batch,,,,,0,,,,,,,"I created and launched a 'jdbchdfs' job. Due to network issues the job hung. Wasn't able to cancel it so I ended up destroying it.

After that I couldn't recreate the job since XD insisted hat there already was a job with that same name. 

{code}
xd:>job create jdbc1 --definition ""jdbchdfs --columns=ID,FILE_PATH,FILE_NAME,YEAR,FILE_LENGHT,LAST_MODIFIED --tableName=SOMEFILES --checkColumn=ID --partitionColumn=ID --partitions=3 --partitionResultsTimeout=3000000 --rollover=128000000 --commitInterval=1000 --url=jdbc:oracle:thin:@//redwood:1521/XE --driverClassName=oracle.jdbc.OracleDriver --username=spring --password=spring --testOnBorrow=false""
Successfully created job 'jdbc1'
xd:>job deploy jdbc1 --properties ""module.jdbchdfs.count=3""
Deployed job 'jdbc1'
xd:>job launch jdbc1
Successfully submitted launch request for job 'jdbc1'

(Here the job was hung)

xd:>job destroy jdbc1
Destroyed job 'jdbc1'
xd:>job create jdbc1 --definition ""jdbchdfs --columns=ID,FILE_PATH,FILE_NAME,YEAR,FILE_LENGHT,LAST_MODIFIED --tableName=SOMEFILES --checkColumn=ID --partitionColumn=ID --partitions=3 --partitionResultsTimeout=3000000 --rollover=128000000 --commitInterval=1000 --url=jdbc:oracle:thin:@//redwood:1521/XE --driverClassName=oracle.jdbc.OracleDriver --username=spring --password=spring --testOnBorrow=false""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Batch Job with the name jdbc1 already exists

xd:>job create jdbc1 --definition ""jdbchdfs --columns=ID,FILE_PATH,FILE_NAME,YEAR,FILE_LENGHT,LAST_MODIFIED --tableName=SOMEFILES --checkColumn=ID --partitionColumn=ID --partitions=3 --partitionResultsTimeout=3000000 --rollover=128000000 --commitInterval=1000 --url=jdbc:oracle:thin:@//redwood:1521/XE --driverClassName=oracle.jdbc.OracleDriver --username=spring --password=spring --testOnBorrow=false""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Batch Job with the name jdbc1 already exists

xd:>job destroy jdbc1
Command failed org.springframework.xd.rest.client.impl.SpringXDException: There is no job definition named 'jdbc1'

xd:>job create jdbc1 --definition ""jdbchdfs --columns=ID,FILE_PATH,FILE_NAME,YEAR,FILE_LENGHT,LAST_MODIFIED --tableName=SOMEFILES --checkColumn=ID --partitionColumn=ID --partitions=3 --partitionResultsTimeout=3000000 --rollover=128000000 --commitInterval=1000 --url=jdbc:oracle:thin:@//redwood:1521/XE --driverClassName=oracle.jdbc.OracleDriver --username=spring --password=spring --testOnBorrow=false""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Batch Job with the name jdbc1 already exists
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193708800,XD-982,,9223372036854775807,false,sabby(sabby),,,,"0|i08gif:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Fix random Spark streaming test failures,XD-3086,63854,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,sabby,sabby,20/May/15 10:00 AM,20/May/15 2:42 PM,10/Jul/21 8:37 AM,20/May/15 12:31 PM,,,,,,,1.2 RC1,,,,,,,0,,,,,,,The {{testTapSparkProcessor}} has the test that checks the contents at the output of spark streaming word count processor. It turns out that the order in which these messages are processed are not always in order.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,All tests with {{testTapSparkProcessor}} are successful in local and CI builds.,2.0,193708800,XD-2464,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1637,"0|i08gc3:",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,,,,,,,,,,,,,,,,,,
Wrong self link returned,XD-3084,63851,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,markus.bukowski,markus.bukowski,20/May/15 7:44 AM,20/May/15 7:44 AM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,REST,,,,,0,,,,,,,"When a stream with Spring XD 1.1.1.RELEASE is created the REST methods always replies ""/stream/_stream-name_"" as the self link. Unfortunately when this one is called a 404 is returned. So the questions is if this is really intended to work like that. I would expect to get '/stream/definitions/_stream-name_' back instead.

{code:shell}
$ curl -F ""name=ticktap"" -F ""definition=tap:stream:tick > log"" -F ""deploy=true"" http://localhost:9393/streams/definitions/
{""name"":""ticktap"",""status"":null,""definition"":""tap:stream:tick > log"",""_links"":{""self"":{""href"":""http://localhost:9393/streams/ticktap""}}}

$ curl http://localhost:9393/streams/definitions/ticktap
{""name"":""ticktap"",""status"":""deployed"",""definition"":""tap:stream:tick > log"",""_links"":{""self"":{""href"":""http://localhost:9393/streams/ticktap""}}}

$ curl http://localhost:9393/streams/ticktap
{""timestamp"":""2015-05-20T14:20:55.382Z"",""status"":404,""error"":""Not Found"",""message"":""Not Found"",""path"":""/streams/ticktap""}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193795200,,,9223372036854775807,true,markus.bukowski(markus.bukowski),,,,"0|i08ghj:",9223372036854775807,9223372036854775807,,,,,,0.0,,,,,,,,,,,,,,,,,,,
Creating multiple Stream/Job definitions from command file is broken,XD-3083,63845,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,iperumal,iperumal,iperumal,19/May/15 1:54 PM,21/May/15 11:48 AM,10/Jul/21 8:37 AM,21/May/15 11:48 AM,,,,,,,1.2 RC1,,,,,,,0,,,,,,,"I have a file that has the DSLs:
stream create a1 --definition ""http | log""
stream deploy a1

xd-shell --cmdfile test.cmd
May 19, 2015 1:49:29 PM org.springframework.shell.core.AbstractShell handleExecutionResult
INFO: Created new stream 'a1'
May 19, 2015 1:49:29 PM org.springframework.shell.core.SimpleExecutionStrategy invoke
SEVERE: Command failed org.springframework.xd.rest.client.impl.SpringXDException: There is no stream definition named 'a1'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193622400,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1634,"0|i08gg7:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,"19/May/15 3:43 PM;iperumal;After some investigation, it looks like we can only support running stream/job definitions from file only if they aren't un-deployed/destroyed subsequently from the same file.
Since, the deployment and undeployment need to be handled asynchronously (via ZK distributed queue), there is no way we know if the deployment was successful when the undeploy/destroy command is executed.

One fix we can add is to let the Controller creates the stream/job definitions instead of the Deployer. This will make ""stream create"" and ""stream deploy"" running in a sequential manner.","19/May/15 4:20 PM;iperumal;With the DSLs on the file, this is expected to work:

stream create a1 --definition ""http | log""
stream deploy a1

But, not this one:

stream create a1 --definition ""http | log""
stream deploy a1
http post --data test

The http post command assumes the stream a1 is already deployed while it is actually asynchronously deployed through ZK distributed queue. ","21/May/15 11:48 AM;iperumal;The generic fix is applied via XD-3092",,,,,,,,,,,,,,,
When using file as a source and sink user can not use file sink --mode,XD-3081,63842,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,hillert,grenfro,grenfro,19/May/15 11:45 AM,21/May/15 1:26 PM,10/Jul/21 8:37 AM,21/May/15 1:26 PM,1.2 RC1,,,,,,1.2 RC1,,Stream Module,,,,,0,,,,,,,"Cluster Type: SingleNode
Machine: Mac
PR: https://github.com/spring-projects/spring-xd/pull/1624,https://github.com/spring-projects/spring-xd/pull/1626
Stream that reproduces the problem:
{noformat}
stream create foo --definition ""filein: file --dir=/tmp/xd/a0180520-c7fa-4d9d-8cc3-e36fbf59496a --pattern=de59d1b8-f99c-4c43-a8c0-2f6043546689.out --mode=contents | fileout: file --binary=true --mode=replace ""
{noformat}
Error Message:
{noformat}
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module file of type sink:
    mode: Failed to convert property value of type 'java.lang.String' to required type 'org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode' for property 'mode'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [java.lang.String] to required type [org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode] for property 'mode': no matching editors or conversion strategy found
{noformat}
Stacktrace:
{noformat}
2015-05-19 14:30:56,329 1.2.0.SNAP ERROR qtp671416633-35 rest.RestControllerAdvice - Caught exception while handling a request
org.springframework.xd.dirt.plugins.ModuleConfigurationException: Error with option(s) for module file of type sink:
    mode: Failed to convert property value of type 'java.lang.String' to required type 'org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode' for property 'mode'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [java.lang.String] to required type [org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode] for property 'mode': no matching editors or conversion strategy found
	at org.springframework.xd.dirt.plugins.ModuleConfigurationException.fromBindException(ModuleConfigurationException.java:55)
	at org.springframework.xd.dirt.stream.XDStreamParser.buildModuleDescriptors(XDStreamParser.java:191)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:122)
	at org.springframework.xd.dirt.stream.AbstractDeployer.validateBeforeSave(AbstractDeployer.java:115)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:260)
	at sun.reflect.GeneratedMethodAccessor191.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:705)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:868)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:291)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:370)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'target' on field 'mode': rejected value [replace]; codes [typeMismatch.target.mode,typeMismatch.mode,typeMismatch.org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [target.mode,mode]; arguments []; default message [mode]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode' for property 'mode'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [java.lang.String] to required type [org.springframework.xd.dirt.modules.metadata.FileSinkOptionsMetadata$Mode] for property 'mode': no matching editors or conversion strategy found]
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.bindAndValidate(PojoModuleOptionsMetadata.java:205)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.interpolate(PojoModuleOptionsMetadata.java:139)
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.interpolate(FlattenedCompositeModuleOptionsMetadata.java:152)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.interpolate(EnvironmentAwareModuleOptionsMetadataResolver.java:168)
	at org.springframework.xd.dirt.stream.XDStreamParser.buildModuleDescriptors(XDStreamParser.java:188)
	... 61 more
{noformat}",,,,,,,,,,,,,,,,,XD-3066,,,,,,,,,,,,,,,,,,,3.0,193795200,,,9223372036854775807,true,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1642,"0|i08gfj:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,,,,,,,,,,,,,,,,,,
Create a new Kerberos ticket instead of renew the current one,XD-3079,63833,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,jvalkeal,cgiha,cgiha,19/May/15 8:01 AM,05/Jun/15 9:38 AM,10/Jul/21 8:37 AM,05/Jun/15 9:38 AM,1.1.1,,,,,,1.2 GA,,Hadoop,Ingest,Runtime,,,0,kerberos,security,,,,,"Running Spring-XD singlenode with a kerberized hadoop cluster on CDH 5.3.2. with JDK 1.7 and JCE 1.7.
The kerberos ticket policies are:
* expiration: 24 hours
* renew: 7 days

I need to keep the Spring XD server running constantly because my flows are always waiting for incoming files to be ingested into the HDFS, but the kerberos session expires if there aren't jobs to run before the expiration date. The expiration policies can't be changed due internal company policies.

Is there a way which Spring XD can generate a new ticket instead of renew the current one when a job or stream start executing?

The Spring XD server has configured the hadoop.properties like:

# Use servers.yml to change URI for namenode
# You can add additional properties in this file
dfs.namenode.kerberos.principal=hdfs/_HOST@EDA.COMPANY.COM
yarn.resourcemanager.principal=yarn/_HOST@EDA.COMPANY.COM

yarn.application.classpath=/opt/cloudera/parcels/CDH/lib/hadoop/*,/opt/cloudera/parcels/CDH/lib/hadoop/lib/*,/opt/cloudera/parcels/CDH/lib/hadoop-hdfs/*,/opt/cloudera/parcels/CDH/lib/hadoop-hdfs/lib/*,/opt/cloudera/parcels/CDH/lib/hadoop-yarn/*,/opt/cloudera/parcels/CDH/lib/hadoop-yarn/lib/*,/opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/*,/opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/lib/*

hadoop.security.authorization=true
hadoop.security.authentication=kerberos

spring.hadoop.userKeytab=file:///export/home/user/user.keytab
spring.hadoop.userPrincipal=user@ERS.COMPANY.COM

#Connecting to Kerberized Hadoop (Spring XD doc configuration Appendix D)
spring.hadoop.security.authMethod=kerberos
spring.hadoop.security.userKeytab=/export/home/user/user.keytab
spring.hadoop.security.userPrincipal=user@ERS.COMPANY.COM
spring.hadoop.security.namenodePrincipal=hdfs/_HOST@EDA.COMPANY.COM
spring.hadoop.security.rmManagerPrincipal=yarn/_HOST@EDA.COMPANY.COM",,,,,,,,,,,,,,,,,,,,,,,,"19/May/15 7:45 AM;cgiha;kerberos.png;https://jira.spring.io/secure/attachment/22809/kerberos.png","19/May/15 7:46 AM;cgiha;kerberos2.png;https://jira.spring.io/secure/attachment/22808/kerberos2.png",,,,,,,,,,"Spring XD should be able to generate a new Kerberos ticket when start running a new job instead of renew the current one, because the current one could be expired or the renew time could be finished.",,192758400,,2015-05-26 00:22:52.947,9223372036854775807,true,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1657,"0|i000ie:wrn0qzzcv",9223372036854775807,9223372036854775807,,,Sprint 50,,,5.0,,"26/May/15 12:22 AM;jvalkeal;Could you describe these flows in XD? What I mean is that what built-in streams and jobs are involved in this? Have you done any custom modules or is there what XD gives out-of-the-box?

Thing is that hadoop security classes should do login/relogin automatically and it should work beyond expiration time.","26/May/15 6:41 AM;jvalkeal;It's unknown which jobs caused these troubles, but I assume some jobs related to hdfs. Hadoop configuration for jobs is fundamentally broken because we've overlooked this and security configs are missing. Jobs should not be able to talk to kerberized hadoop on its own because we don't set security config. However, because hadoop UGI is a system wide, if i.e. hdfs sink did the login, jobs will also work as long as tgt is valid.

I did some testing with hdfs sink with my krb system where ticket is set to expire after 11min and max renew period of max 27min. I didn't have no trouble of running stream with beyond those limits.

I've created a PR for fixing these configs - https://github.com/spring-projects/spring-xd/pull/1657

I tried manually patching i.e. filepollhdfs.xml in XD1.1.1. and it worked.
{code}
$ git diff modules/job/filepollhdfs/config/filepollhdfs.xml
diff --git a/modules/job/filepollhdfs/config/filepollhdfs.xml b/modules/job/filepollhdfs/config/filepollhdfs.xml
index 8d040c1..db05468 100644
--- a/modules/job/filepollhdfs/config/filepollhdfs.xml
+++ b/modules/job/filepollhdfs/config/filepollhdfs.xml
@@ -1,9 +1,11 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
 <beans xmlns=""http://www.springframework.org/schema/beans""
+       xmlns:context=""http://www.springframework.org/schema/context""
        xmlns:hdp=""http://www.springframework.org/schema/hadoop""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xmlns:batch=""http://www.springframework.org/schema/batch""
        xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+               http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
                http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd"">
 
@@ -57,7 +59,16 @@
                <property name=""configuration"" ref=""hadoopConfiguration""/>
        </bean>
 
-       <hdp:configuration register-url-handler=""false"" properties-location=""${xd.config.home}/hadoop.properties"">
+       <context:property-placeholder location=""${xd.config.home}/hadoop.properties""/>
+
+       <hdp:configuration
+               register-url-handler=""false""
+               properties-location=""${xd.config.home}/hadoop.properties""
+               security-method=""${spring.hadoop.security.authMethod:}""
+               user-keytab=""${spring.hadoop.security.userKeytab:}""
+               user-principal=""${spring.hadoop.security.userPrincipal:}""
+               namenode-principal=""${spring.hadoop.security.namenodePrincipal:}""
+               rm-manager-principal=""${spring.hadoop.security.rmManagerPrincipal:}"">
                fs.defaultFS=${spring.hadoop.fsUri}
        </hdp:configuration>
{code}

In above, use of `property-placeholder` allows to place configs also in `hadoop.properties` just like it's done with hdfs sink.

{code}
# hadoop.properties
hadoop.security.authorization=true
spring.hadoop.security.authMethod=kerberos
spring.hadoop.security.userKeytab=/usr/local/hadoops/janne.keytab
spring.hadoop.security.userPrincipal=janne/neo
spring.hadoop.security.namenodePrincipal=hdfs/neo@LOCALDOMAIN
spring.hadoop.security.rmManagerPrincipal=yarn/neo@LOCALDOMAIN

# servers.yml
spring:
  hadoop:
    fsUri: hdfs://localhost:8020
    security:
      authMethod: kerberos
      userKeytab: /usr/local/hadoops/janne.keytab
      userPrincipal: janne/neo
      namenodePrincipal: hdfs/neo@LOCALDOMAIN
      rmManagerPrincipal: yarn/neo@LOCALDOMAIN
{code}
","26/May/15 7:00 AM;cgiha;@Janne, In my XD flow i am using custom-modules where i am executing groovy scripts to ingest data into the HDFS, customs jars to execute hadoop mapred jobs and finally insert the final data into an existing Hive Table.

I am using <hadoop:script-tasklet> to run Groovy Scripts, <hadoop:tool-tasklet> to run my Jars with libs included and a basic <bean> to inject my own Hive Connector to execute a script that do the insert.
","26/May/15 7:40 AM;jvalkeal;ok, it's a little difficult to know at which point you'd see trouble with kerberos. Anyway if you use configuration in a way it's used in hdfs sink(and what we're now trying to fix with built-in jobs), you should get automatic login and then Hadoop itself should do a relogin when ticket is about to expire. Hadoop doesn't just renew a ticket because it will also try to relogin which should give a fresh tgt.","26/May/15 7:53 AM;cgiha;I going to update the server configuration to add the configuration like you described it and test the flows again.

For your information, this is the actual trace of the kerberos error:
2015-05-21 04:38:16,040 1.1.1.RELEASE ERROR task-scheduler-9 transport.TSaslTransport - SASL negotiation failure
javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)]
        at com.sun.security.sasl.gsskerb.GssKrb5Client.evaluateChallenge(Unknown Source)
        at org.apache.thrift.transport.TSaslClientTransport.handleSaslStartMessage(TSaslClientTransport.java:94)
        at org.apache.thrift.transport.TSaslTransport.open(TSaslTransport.java:262)
        at org.apache.thrift.transport.TSaslClientTransport.open(TSaslClientTransport.java:37)
        at org.apache.hadoop.hive.thrift.client.TUGIAssumingTransport$1.run(TUGIAssumingTransport.java:52)
        at org.apache.hadoop.hive.thrift.client.TUGIAssumingTransport$1.run(TUGIAssumingTransport.java:49)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAs(Unknown Source)
        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)
        at org.apache.hadoop.hive.thrift.client.TUGIAssumingTransport.open(TUGIAssumingTransport.java:49)
        at org.apache.hive.jdbc.HiveConnection.openTransport(HiveConnection.java:200)
        at org.apache.hive.jdbc.HiveConnection.<init>(HiveConnection.java:177)
        at org.apache.hive.jdbc.HiveDriver.connect(HiveDriver.java:105)
...
Caused by: GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)
        at sun.security.jgss.krb5.Krb5InitCredential.getInstance(Unknown Source)
        at sun.security.jgss.krb5.Krb5MechFactory.getCredentialElement(Unknown Source)
        at sun.security.jgss.krb5.Krb5MechFactory.getMechanismContext(Unknown Source)
        at sun.security.jgss.GSSManagerImpl.getMechanismContext(Unknown Source)
        at sun.security.jgss.GSSContextImpl.initSecContext(Unknown Source)
        at sun.security.jgss.GSSContextImpl.initSecContext(Unknown Source)

","01/Jun/15 7:26 AM;cgiha;I tried with the configuration, but the problem is still happening.
How workarround i am doing a ""watch --interval=3600 kinit -kt user.keytab user@company.com"" to update the ticket each one hoyr and it's working, but i think it isn't the correct way.",,,,,,,,,,,,
Spring XD admin fails to redeploy modules after Spring XD container successfully reconnectes to Zookeeper,XD-3078,63826,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,pperalta,lukasz.nowanski@emc.com,lukasz.nowanski@emc.com,19/May/15 1:48 AM,02/Sep/15 3:05 AM,10/Jul/21 8:37 AM,17/Aug/15 6:48 AM,1.1.1,,,,,,1.2.2,1.3 M1,Runtime,,,,,0,,,,,,,"We are running Spring XD 1.1.1 in our production environment and Zookeeper 3.4.5.  Zookeeper is running in failover mode and consists of three independent nodes set up on three separate VMs. From time to time we get ""Connection to Zookeeper Suspended"" event which causes one of the containers in the cluster to be removed from the SpringXD cluster. Modules being deployed on this removed node fail to be re-deployed to other containers in the cluster.

Affected versions:
- SpringXD 1.1.1
- Zookeeper 3.4.5 and 3.4.6

Cluster set up in PROD environment where error occurs:
- 4 Spring-XD dedicated servers
- 4 spring-xd containers (each running on designated server )
- 2 spring-xd admins ( each running alongside one spring-xd container)
- 3 Zookeeper nodes ( 3 designated servers on PAITO environment )

Cluster set up in TEST environment where error also occurred:
- 2 Spring-XD dedicated servers running one spring-xd container and one spring-xd admin each
- 3 Zookeeper nodes running on 3 dedicated servers (PAITO Test environment)

Cluster set up to reproduce error found in PROD environment:
- 1 spring-xd admin
- 3 spring xd-containers (each running on a designated VM )
- 3 zookeeper servers running on one VM

Steps to reproduce:

1)	Set up three node Zookeeper cluster. Attached is example zoo.cfg, we are using default configuration values. In this particular test case we run all Zookeeper nodes on a single VM as we were not testing network layer interruptions.
2)	Set up one Spring XD admin node. Please note that we have also observed this on two node Spring XD admin cluster. 
3)	Set up three Spring XD container nodes. All of them belong to one group (SA) and two of them also belong to second group (HA1). This is configured in $XD_HOME/config/servers.yml however so far group configuration never influenced test outcome.
4)	Create and deploy a test stream using following XD Shell commands:
stream create --name test-zookeeper-failover --definition ""syslog-udp --port=5140 | transform | file --dir='/opt/pivotal/spring-xd/xd/output'""
stream deploy --name test-zookeeper-failover --properties ""module.syslog-udp.criteria=groups.contains('HA1'),module.syslog-udp.count=2,module.file.criteria=groups.contains('SA'),module.file.count=3,module.transform.criteria=groups.contains('SA')""
5)	Ensure that test stream works and handles traffic on UDP port 5140
6)	Shutdown one of the Zookeeper nodes by issuing a stop command.
7)	Two Spring XD containers were not affected and remained in Spring XD cluster.
8)	One Spring XD container was kicked out of Spring XD cluster and was no longer visible on Spring XD admin Web UI. Modules previously deployed to this container were not redeployed to other cluster members.
9)	On the failed Spring XD container we have observed CONNECTION_SUSPEND, CONNECTION_RECONECTED and CHILD_REMOVE Zookeeper events (attached is container-log.txt). Please note that Java process is still running and we see “ConnectionStateManager-0 server.ContainerRegistrar - Waiting for supervisor to clean up prior deployments” messages.
10)	Spring XD admin failed with exception in DepartingContainerModuleRedeployer (attached is admin-log.txt). 
11)	We have observed that departing container node in Zookeeper (/sa/deployments/modules/allocated/1d3fd4cc-5a70-47ed-b4f3-22deef1f4d4f/) had no children. We did this after few minutes so we are not sure at which point it was cleared. 
12)	Restarting failed Spring XD container fixed the problem, modules were correctly redeployed.
Exception from point 10 is very similar to XD-1983 and this code was rewritten in XD-2004.
",,,,,,,,,,,,,,,,,,,,,,,,"19/May/15 1:28 AM;lukasz.nowanski@emc.com;admin-log.txt;https://jira.spring.io/secure/attachment/22804/admin-log.txt","19/May/15 1:28 AM;lukasz.nowanski@emc.com;container-log.txt;https://jira.spring.io/secure/attachment/22807/container-log.txt","19/May/15 1:28 AM;lukasz.nowanski@emc.com;zoo.cfg;https://jira.spring.io/secure/attachment/22805/zoo.cfg","19/May/15 1:28 AM;lukasz.nowanski@emc.com;zookeeper-failover-test.txt;https://jira.spring.io/secure/attachment/22803/zookeeper-failover-test.txt","19/May/15 1:28 AM;lukasz.nowanski@emc.com;zookeeper.out;https://jira.spring.io/secure/attachment/22806/zookeeper.out",,,,,,,"SpringXD container has to recover from a connection loss to Zookeeper cluster by either:
- re-deploying modules to other available spring-xd containers in the cluster or
- by successful recovery from the CONNECTION_SUSPEND, CONNECTION_RECONECTED and CHILD_REMOVE events, spring-xd admin should properly identify re-connect of the lost container and handle modules re-deployment properly",5.0,184723200,,2015-05-26 07:41:34.125,9223372036854775807,true,jahubba(jahubba),,,https://github.com/spring-projects/spring-xd/pull/1764,"0|i08by6:zqzzzyx",9223372036854775807,9223372036854775807,,,Sprint 55,,,8.0,,"26/May/15 7:41 AM;pperalta;I'm looking for clarification on the following:
bq.  In this particular test case we run all Zookeeper nodes on a single VM
Does this mean you started the entire ZooKeeper ensemble on the same host? I assume this means you had a separate configuration file for each one with a unique {{clientPort}}?","26/May/15 7:59 AM;pperalta;Also want to confirm that {{servers.yml}} has the entire ZK ensemble configured, as in:

{code}
zk:
   namespace: xd
   client:
      connect: localhost:2181,localhost:2182,localhost:2183
      sessionTimeout: 60000
      connectionTimeout: 30000
      initialRetryWait: 1000
      retryMaxAttempts: 3
{code}","26/May/15 8:04 AM;lukasz.nowanski@emc.com;This is correct. configuration in server.yml has the entire ZK ensemble configured and yes it is being run on a single VM so three different ports, however, this issue was discovered on a PROD environment where each ZK node is running on a separate VM and then ZK host changes but the port stays the same.","26/May/15 10:33 AM;pperalta;So far I'm having trouble reproducing this. Sometimes I have to wait up to a minute, but the container recovers and shows up again in the container list. Do you ever lose the ZK quorum or are you just stopping one ZK server at a time?","27/May/15 1:35 AM;lukasz.nowanski@emc.com;Hi Patrick,

I have never lost the ZK quorum. I am just stopping one ZK server to reproduce this. I have seen cases where container could recover, however, more cases where it could not recover. Container process is still up and running but is not part of the cluster any more. Admin does not re-deploy streams and the entire cluster is affected. Yesterday the same problem happened again in our PROD environment. I have set up an alert in LogInsight to inform me when ""Waiting for supervisor to clean up prior deployments"" appears in the logs. Cluster was showing that affected container that lost connection to ZK and in theory ""recovered"" was up and running but no streams deployed to it ( the ones that were on it before were undeployed but not deployed to other members in the cluster) . Some of the streams on other containers where marked ""red"" and the entire system was destabilized and only restarting the affected container actually allowed admin to re-deploy missing streams and entire cluster has been stabilized again.","07/Jul/15 11:04 AM;svennela;Hi sabby,

As customer is not able to reproduce. We can close this issue.","07/Jul/15 12:28 PM;sabby;Please reopen if we are able to reproduce this issue.","28/Jul/15 10:18 AM;jahubba;Can this be re-opened?  We are seeing similar issues with the same error message.  Typically for us we lose the leader and it can take several seconds to re-establish a leader.  Afterwards, the containers say they connect to zookeeper but we see the ""Waiting for supervisor to clean up prior deployments"" message and nothing will get deployed to that container.","28/Jul/15 10:40 AM;sabby;[~jahubba] Could you share more details about the deployment and infrastructure specifics? Given the nature of this issue, it is challenging and in fact we had trouble reproducing in the past. Any specifics from your experience if you can share, that'll be very helpful.","28/Jul/15 11:43 AM;jahubba;Hi Sabby,

I'll provide what I can, please let me know if there are any other specific questions.
These services are running on separate servers on rhel 6.5
Three containers and one admin running version 1.1.1.
Three zookeper services running version 3.4.5
Other Hadoop servers also running on the servers and using same zookeeper (HDFS, YARN, Hive)
We typically see a zookeper error on the leader with a socket timeout or similar causing the leader to go down and the quorum to be lost.  Leader election takes place and causes xd-container and xd-admin connection to be dropped because all zookeeper services are stopped awaiting election and also can't reconnect for same reason.  Leader election is eventually complete after several seconds and xd-admin and xd-containers reconnect.  Sometimes xd-containers will start logging the ""Waiting for supervisor to clean up prior deployments"" error message continually, when this occurs it will also not accept deployments until it is restarted.","31/Jul/15 3:15 AM;lukasz.nowanski@emc.com;Hi Sabby,

Just letting you know that this issue had happened to us twice again since this bug was closed. One today in our PROD environment and once when I was on holidays. I am glad it has been reopened and reported by a different team as well.

One of our containers has been departed from the spring-xd cluster although spring-xd-container process is still up. As a result streams have not been correctly redeployed to other 3 containers and entire cluster is unstable. I have to re-start affected container to get cluster into a stable state again.

Message that is appearing in the logs on the affected container:

2015-07-31 05:55:09,809 1.1.1.RELEASE  INFO ConnectionStateManager-0 server.ContainerRegistrar - Waiting for supervisor to clean up prior deployments (elapsed time 62460 seconds)...

Thanks,

Lukasz","17/Aug/15 8:24 AM;sabby;Hi [~jahubba] and [~lukasz.nowanski@emc.com]: As anticipated, we weren't able to reproduce this problem. However, we took this opportunity to revisit the design around admin leader's (supervisor) cleanup workflow. The PR associated with this ticket captures the general improvements. It'd be great if you can try the latest [1.2.2.SNAPSHOT|http://repo.spring.io/libs-snapshot-local/org/springframework/xd/spring-xd/1.2.2.BUILD-SNAPSHOT/] bits and let us know if you find any anomalies. ","17/Aug/15 9:47 AM;jahubba;Hi Sabby,

I haven't had time yet, but I had intended to pull the latest source code and try to debug this and a few other issues we have been seeing around deployments.  One is around exception handling during re-deploy XD-3304 and another is an issue where we will see the same module deployed twice although module count should be the default of 1.  I haven't opened a jira for that one yet, but I can take a look at the new snapshot and see if it still seems to be an issue there.  I believe this one involves a container starting and the admin going through container arrival flow then another container leaves, the arrival flow sees some of the modules as undeployed but the container departure flow still deploys the module as well.

Jason","02/Sep/15 3:05 AM;jahubba;Hi Sabby,

The latest snapshot you referenced above does seem to help.  I believe I've narrowed it down and was able to reproduce it occasionally.  From what I found, when the container connection status goes to LOST, the container will undeploy modules and if the container deletes the znode for the allocated module before the admin server gets to the module in the DepartingContainerModuleRedeployer, then an error is thrown (NoNodeException) in deployModules causing the stack to jump out of the method and sckip the delete of the allocated znode.  I believe the change to schedule container cleanup on a fixed delay has resolved this issue, I can reproduce the exception being thrown and the ""waiting for supervisor"" message is displayed but then continues after a short period.

Thanks for all the help.

Jason",,,,
Backport Kafka Sink input fix,XD-3075,63822,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,18/May/15 1:01 PM,18/May/15 4:20 PM,10/Jul/21 8:37 AM,18/May/15 4:20 PM,,,,,,,1.1.3,,,,,,,0,,,,,,,"As part of XD-2958, we've changed the input type of the Kafka sink from String to byte[]. The main reason for the change was that it required an arbitrary and often unneeded (but expensive) conversion to String for the bus payloads. 

Apply the same change to 1.1 branch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193881600,XD-2692,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1631,"0|i08gbj:",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,,,,,,,,,,,,,,,,,,
Backport metadata retrieval stability improvements,XD-3074,63821,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,18/May/15 12:58 PM,18/May/15 4:20 PM,10/Jul/21 8:37 AM,18/May/15 4:20 PM,,,,,,,1.1.3,,,,,,,0,,,,,,,Backport stability improvements added as part of XD-2958 to the 1.1.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193881600,XD-2692,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1631,"0|i08gbb:",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,,,,,,,,,,,,,,,,,,
Spark streaming integration module fails to initialize codec,XD-3067,63779,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,iperumal,iperumal,iperumal,15/May/15 9:53 AM,22/May/15 2:25 PM,10/Jul/21 8:37 AM,15/May/15 10:08 AM,,,,,,,1.2 RC1,,,,,,,0,,,,,,,"XD Spark streaming module fails to load:

Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Error loading class [org.springframework.xd.tuple.serializer.kryo.TupleCodec] for bean with name 'org.springframework.xd.tuple.serializer.kryo.TupleCodec#2e8f5f36' defined in class path resource [META-INF/spring-xd/bus/codec.xml]: problem with class file or dependent class; nested exception is java.lang.IllegalAccessError: class org.springframework.xd.tuple.serializer.kryo.TupleCodec cannot access its superclass org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoCodec
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1331)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:453)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 67 more
Caused by: java.lang.IllegalAccessError: class org.springframework.xd.tuple.serializer.kryo.TupleCodec cannot access its superclass org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoCodec
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:455)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:367)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:249)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:395)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1349)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1320)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,194140800,XD-2464,,9223372036854775807,true,sabby(sabby),,,,"0|i08g27:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,"15/May/15 10:08 AM;iperumal;After a clean build the spark streaming module looks good. Sorry for the noise.",,,,,,,,,,,,,,,,,
HdfsMongoDB Job failing due because of missing ID in Default Tuple,XD-3064,63774,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Fixed,thomas.risberg,grenfro,grenfro,15/May/15 6:25 AM,21/May/15 11:43 AM,10/Jul/21 8:37 AM,21/May/15 11:43 AM,1.2 RC1,,,,,,1.2 RC1,,Batch,,,,,0,,,,,,,"Looks to have been introduced by https://github.com/spring-projects/spring-xd/pull/1577
Deployment: single admin, 2 container deployment using +RabbitMQ+ as the transport.
Below is a partial stacktrace (please check log for full stacktrace).
Log is attached.
{noformat)
2015-05-15 10:50:15,843 1.2.0.SNAP ERROR xdbus.job:ec2Job3-1 step.AbstractStep - Encountered an error executing step readResourcesStep in job ec2Job3
org.springframework.dao.InvalidDataAccessApiUsageException: Cannot autogenerate id of type java.util.UUID for entity of type org.springframework.xd.tuple.DefaultTuple!
        at org.springframework.data.mongodb.core.MongoTemplate.assertUpdateableIdIfNotSet(MongoTemplate.java:1153)
        at org.springframework.data.mongodb.core.MongoTemplate.doSave(MongoTemplate.java:882)
        at org.springframework.data.mongodb.core.MongoTemplate.save(MongoTemplate.java:837)
        at org.springframework.batch.item.data.MongoItemWriter.doWrite(MongoItemWriter.java:128)
        at org.springframework.batch.item.data.MongoItemWriter$1.beforeCommit(MongoItemWriter.java:156)
        at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerBeforeCommit(TransactionSynchronizationUtils.java:95)
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerBeforeCommit(AbstractPlatformTransactionManager.java:928)
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:740)
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:726)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
{noformat)",,,,,,,,,,,,,,,,,,,,,,,,"15/May/15 6:24 AM;grenfro;container-1592.log;https://jira.spring.io/secure/attachment/22797/container-1592.log",,,,,,,,,,,,,193622400,,2015-05-19 12:04:35.025,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08g13:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,"19/May/15 12:04 PM;mbogoevici;To be addressed by [~mark.pollack]'s PR here: https://github.com/spring-projects/spring-xd/pull/1630","21/May/15 11:43 AM;thomas.risberg;This was fixed by this PR: https://github.com/spring-projects/spring-xd/pull/1630

Commit: https://github.com/spring-projects/spring-xd/commit/dce34a51aa2c0afd0cdf09c3e6cecc62d492304e
",,,,,,,,,,,,,,,,
Windows CI FTP based tests fail.  ,XD-3058,63754,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,14/May/15 11:10 AM,14/May/15 11:10 AM,10/Jul/21 8:37 AM,,1.1 RC1,,,,,,,,Stream Module,,,,,0,,,,,,,"Currently Windows EC2 (master, JDK8) test is failing 
I've attempted to replicate on my EC2 environment.  The best bet is to try and reproduce using the AMI and machine size that CI uses.  We need to check with Trevor to get this info. 
The error is:
{noformat}
java.lang.AssertionError: java.lang.AssertionError
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at org.springframework.xd.shell.command.StreamCommandTemplate.verifyExists(StreamCommandTemplate.java:162)
	at org.springframework.xd.shell.command.StreamCommandTemplate.doCreate(StreamCommandTemplate.java:99)
	at org.springframework.xd.shell.command.StreamCommandTemplate.create(StreamCommandTemplate.java:65)
	at org.springframework.xd.shell.command.FtpModulesTests.testRefOptionEqualsFalse(FtpModulesTests.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.xd.test.AbstractExternalResourceTestSupport$1.evaluate(AbstractExternalResourceTestSupport.java:71)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.xd.test.AbstractExternalResourceTestSupport$1.evaluate(AbstractExternalResourceTestSupport.java:71)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,194227200,XD-2660,,9223372036854775807,true,grenfro(grenfro),,,,"0|i08fwv:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Deployment validation when processing the deployment message,XD-3054,63739,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,13/May/15 11:07 AM,15/May/15 7:12 AM,10/Jul/21 8:37 AM,15/May/15 7:12 AM,,,,,,,1.2 RC1,,,,,,,0,,,,,,,"Currently, the deployment message is being validated before pushed the ZK distributed queue for deployment. When the message is consumed, there is no validation done. Since, the consumer consumes the messages asynchronously, we need validation at both sides.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,194313600,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1614,"0|i08fpq:v",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,,,,,,,,,,,,,,,,,,
Gradle launch task is broken,XD-3051,63736,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mminella,mminella,mminella,13/May/15 9:13 AM,14/May/15 10:09 AM,10/Jul/21 8:37 AM,14/May/15 10:09 AM,1.2 M1,,,,,,1.2 RC1,,Testing,,,,,0,,,,,,,"Spring XD has a gradle task available in the build called launch that starts a single node instance.  This is currently broken.  The command I was using for this command was:
{code}
$ ./gradlew clean build -x test -x javadoc launch
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,The launch task is supported or removed from the build process.,1.0,194313600,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1612,"0|i08fpq:",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,,,,,,,,,,,,,,,,,,
RabbitMQ queue cleanup uses wildcard unexpectedly,XD-3048,63703,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,pharris,pharris,11/May/15 8:44 AM,16/May/15 1:34 PM,10/Jul/21 8:37 AM,16/May/15 1:34 PM,1.2 M1,,,,,,1.2 RC1,,REST,,,,,0,,,,,,,"Calling the API to delete queues uses a wildcard-like behaviour unexpectedly. If I request to delete:

{{test-1}}

I expect it to delete streams named with the pattern:

{{test-1.*}}

For example, it would delete:

{{test-1.0, test-1.1, etc}}

In fact I believe it wildcards before and after the period, e.g.:

{{test-1*.*}}

And hence would delete:

{{test-1.0, test-11.0, test-123.0, etc}}

That way of working is potentially helpful, but it's also dangerous because it removes the ability to know that you're only deleting the exact queue you want to in all cases.

For the record the commit (https://github.com/spring-projects/spring-xd/commit/2d5f3f706330a6ead8e91c9a7a23d4372715614d) implies that it should work in the more restricted way above, not the less restricted way.

(Note: I've marked this as an improvement because, absent documentation, I don't know what the correct functionality is and hence can't say this is a bug)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,194313600,,2015-05-14 02:17:59.917,9223372036854775807,false,grussell(grussell),,,https://github.com/spring-projects/spring-xd/pull/1616,"0|i08fpq:r",9223372036854775807,9223372036854775807,,,Sprint 49,,,1.0,,"14/May/15 2:17 AM;grussell;Also add docs","14/May/15 6:37 AM;grussell;[~pharris] It would be great if you have to time to review and/or test.

The PR is in the link above, but the commit for the wildcard stuff is

https://github.com/spring-projects/spring-xd/commit/eb84a7a25d9d24e2c32d84d6fca35ad25d1b39f9","14/May/15 7:01 AM;pharris;I'm afraid we're not set up for easy testing of snapshots, and a vacation next week means I'm pushed for time. I have taken a look at the code and it looks good to me (and always nice to see some work put in to the tests!). I appreciate the retention of the wildcard feature, should be very handy for cleaning out our test environment when everything goes wrong.","14/May/15 7:09 AM;grussell;No worries; have a nice break !!",,,,,,,,,,,,,,
Fix compilation errors after moving SingleNodeApplication package,XD-3046,63686,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,dturanski,dturanski,10/May/15 5:32 AM,10/May/15 7:56 AM,10/Jul/21 8:37 AM,10/May/15 7:56 AM,1.2 RC1,,,,,,,,,,,,,0,,,,,,,Samples including Singlenode tests need to update for package changes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,194659200,XD-2663,,9223372036854775807,false,dturanski(dturanski),,,,"0|i08fi7:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Sqoop command should not require jdbc parameters,XD-3034,63616,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,bzeyben,bzeyben,07/May/15 9:13 AM,26/May/15 9:43 AM,10/Jul/21 8:37 AM,,1.2 M1,,,,,,,,,,,,,0,,,,,,,"Based on the OOTB sqoop.xml definition on GitHub we are required to provide the jdbc.url, jdbc.username and jdbc.password as a parameter definition. 

{code}
	<bean id=""sqoopTasklet"" class=""org.springframework.xd.sqoop.SqoopTasklet"">
		<property name=""arguments"">
			<list>
				<value>${command}</value>
				<value>${args}</value>
				<value>jdbc.url=${url}</value>
				<value>jdbc.username=${username}</value>
				<value>jdbc.password=${password}</value>
				<value>fs.defaultFS=${fsUri}</value>
				...
{code}

This is causing a problem if we define the the sqoop connection parameters within the args list. We are using the --password-file option in the args list and need to specify the connection info via the --connect  option with the --username within the args list. 

Our Job definition is:

{code}
job create bdl_lookup --definition ""bdl-load --command=import --args='--connect=jdbc:oracle:thin:@<hostName>:1821/<dbName> --username=<user> --password-file=/user/workspace/secure-files/gdw.password --table=MASTERDATA.W_LOOKUP_D --target-dir=/<targetFolder/lookup_d -m 1' ""
{code}

This results to an deployment:

{code}
2015-05-07 11:40:51,586 1.2.0.M1  INFO DeploymentSupervisor-0 zk.ZKJobDeploymentHandler - Deployment status for job 'bdl_lookup': DeploymentStatus{state=failed,error(s)=org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'sqoopTasklet' defined in class path resource [config/bdl-load.xml]: Could not resolve placeholder 'url' in string value ""jdbc.url=${url}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'url' in string value ""jdbc.url=${url}""
{code}

If we skip the jdbc connection info from the module.xml file, similar to:

{code}
	<bean id=""sqoopTasklet"" class=""org.springframework.xd.sqoop.SqoopTasklet"">
		<property name=""arguments"">
			<list>
				<value>${command}</value>
				<value>${args}</value>
				<!-- Comment out jdbc info
				<value>jdbc.url=${url}</value>
				<value>jdbc.username=${username}</value>
				<value>jdbc.password=${password}</value>
				-->
				<value>fs.defaultFS=${fsUri}</value>
				...
{code}

Custom module deploys fine but get a We get a NullPointerException in the container logs:

{code}
2015-05-07 11:46:04,450 1.2.0.M1 ERROR inbound.job:bdl_lookup-redis:queue-inbound-channel-adapter1 step.AbstractStep - Encountered an error executing step sqoopTask in job bdl_lookup
java.lang.NullPointerException
	at org.springframework.xd.sqoop.SqoopTasklet.createCommand(SqoopTasklet.java:91)
	at org.springframework.batch.step.tasklet.x.AbstractProcessBuilderTasklet.execute(AbstractProcessBuilderTasklet.java:107)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:406)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:330)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:133)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:271)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:77)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193190400,,2015-05-26 09:43:06.855,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i08f93:",9223372036854775807,9223372036854775807,,,,,,2.0,,"07/May/15 10:59 AM;bzeyben;It seems that the deployer is not sourcing the repository jdbc.url, jdbc.username and jdbc.password if the command definition does not have url, user and password arguments. 

By specifying the url definition explicitly, pointing to the SpringXD Postgres repository, we can deploy and run our process properly. 

The job definition is:

{code}
job create bdl_lookup --definition ""bdl-load --command=import --url=jdbc:postgresql://<springXDRepoHost>:5432/springxd --username=<repoUserName> --password=<repoPassword> --args='--connect=jdbc:oracle:thin:@<sourceHost>:1821/<dbName> --username=<sourceUser> --password-file=/user/workspace/secure-files/gdw.password --table=MASTERDATA.W_LOOKUP_D --target-dir=/user/workspace/ent/masterdata_src/lookup_d -m 1' "" --deploy
{code}

","26/May/15 9:43 AM;thomas.risberg;For the 'sqoop' job module the $url, $username, $password etc. placeholders are resolved using the xd/config/modules/job/sqoop/sqoop.properties file. If you are developing a custom job module based on the sqoop module you need to include a configuration file like the one above or change the way the module is configured. The 'sqoop' job module configuration is designed to provide flexibility for the usage of it while a custom module probably doesn't need all that flexibility and you can strive to simplify the configuration setup.",,,,,,,,,,,,,,,,
RabbitMQ queues not being removed on stream destroy,XD-3030,63600,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,grussell,pharris,pharris,06/May/15 8:09 AM,14/May/15 3:39 PM,10/Jul/21 8:37 AM,14/May/15 2:16 AM,,,,,,,1.2 RC1,,,,,,,1,,,,,,,"As part of p-spring-xd testing we create, deploy, exercise, undeploy and destroy a RabbitMQ to RabbitMQ stream every minute. Spring XD does not appear to be deleting the queues it creates internally for each stream. We have seen as many as ~9800 xdbus queues (via the RabbitMQ web ui) before RabbitMQ runs out of memory and blocks.",,,,,,,,,,,,,,,,,XD-2718,XD-2719,XD-3031,,,,,,,,,,,,,,,,,3.0,194918400,,2015-05-06 08:57:28.004,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1605,"0|i08fpq:i",9223372036854775807,9223372036854775807,,,Sprint 49,,,5.0,,"06/May/15 8:57 AM;grussell;XD Can't automatically delete the queues because...

a) It's tricky to determine the last instance of a module is being undeployed
b) They might contain data 
c) The stream destroy might be simply to reconfigure a stream and the user might not want to lose any in-flight data present during the undeploy/redeploy

At some point, we may add something to the shell but, for now, you have to invoke a separate REST API to clean up rabbitmq after permanently destroying a stream.

It appears that this never made it into the reference manual but the syntax is covered in the commit comment:

https://github.com/spring-projects/spring-xd/commit/2d5f3f706330a6ead8e91c9a7a23d4372715614d

With the last element of the URL (before the broker params) being the stream name: {{foo}} in that case in the commit comment.

The [RabbitMQ Management Plugin | https://www.rabbitmq.com/management.html] must be enabled to use the REST API.","06/May/15 9:16 AM;nebhale;Just to be clear, this seems to me like a memory leak in a highly available system.  I find it hard to believe that the best user-experience here is that a queue created deep in the internals of Spring XD, completely opaque to the end-user (for example, in PCF the user may not even know that there _is_ a RabbitMQ installed) isn't then cleaned up by those same internals.

I'd also like some suggestions as to how we clean this up in a automated way for our tests.  At the moment, we've got hundreds of stream coming and going each hour.  So at any point in time, we can't delete all of the {{xdbus}} queues, because some of them will be in use.  If we decided to ensure that queues were deleted serially after the stream was successfully deleted in the test, how does the Spring XD API expose the exact name of the queue we should remove (e.g. {{xdbus.end-to-end-http-1050.0}})?","06/May/15 9:54 AM;grussell;Agreed; hence XD-2718 - the proposal is to add a {{--clean}} to the destroy command - but it's not that easy because the admin (currently) has no information about the rabbitmq infrastructure so it has to be given the URL/credentials/vhost/busPrefix etc. It has to be done by the admin not the container because only the admin knows when the stream is completely destroyed.

{quote}I'd also like some suggestions as to how we clean this up in a automated way...{quote}

The REST API is simply a facade for [RabbitBusCleaner.clean() | https://github.com/spring-projects/spring-xd/blob/master/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/integration/bus/rabbit/RabbitBusCleaner.java#L76], so you could call it directly, or rip off some of the code from there. It currently throws an exception before doing anything if any of the queues in the stream are in use.

Since it now fetches all the queues, you could even change it to iterate over every queue and find all streams that have no in-use queues - i.e. build a candidate stream list and then clean each such stream.

The general syntax for queue naming is {{busPrefix}}{{stream}}.{{n}} (and ...{{n}}.{{dlq}} if {{autoBindDLQ}} is enabled) with the default {{busPrefix}} of {{xdBus.}}.

If there are taps involved, the tap exchange has to be removed too.

Correction - this is not available in 1.1.x.",,,,,,,,,,,,,,,
SqoopRunner class not found errror ,XD-3029,63592,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,bzeyben,bzeyben,06/May/15 4:39 AM,26/May/15 10:05 AM,10/Jul/21 8:37 AM,26/May/15 9:52 AM,1.2 M1,,,,,,,,Packaging,,,,,0,,,,,,,"We have installed the SpringXD 1.2 M1 release via the rpm and it seems that the sqoop-1.4.5-hadoop200.jar file are not part of the rpm. The sqoop jar file are not in the xd/lib directory.

This is causing a problem during customer module development if we include the sqoop-1.4.5-hadoop200 dependency as part of the pom file and forces us to redeploy the our jar as separate deployment.

Should we be referencing different dependencies or have or should the sqoop-1.4.5-hadoop200.jar be part of the rpm definition so it part of the xd/lib?

I have currently the following dependency in the pom file:

{code}
		<!-- Sqoop -->
		<dependency>
			<groupId>org.apache.sqoop</groupId>
			<artifactId>sqoop</artifactId>
			<version>1.4.5</version>
			<classifier>hadoop200</classifier>
		</dependency>
{code}

It would be great be great if the sqoop jar are part of rpm so we don't have to do any additional jar deployment.

Thanks, ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193190400,XD-2476,2015-05-26 09:52:17.712,9223372036854775807,true,sabby(sabby),,,,"0|i08f3r:",9223372036854775807,9223372036854775807,,,,,,2.0,,"06/May/15 6:55 AM;bzeyben;This is probably related to XD-2927.","26/May/15 9:52 AM;sabby;[~bzeyben]: Generally speaking, the module specific jar's are usually embedded within the module {{/lib}} itself and not in the root-classpath. In this case the Sqoop jar will be provided within {{spring-xd/build/dist/spring-xd/xd/modules/job/sqoop/lib}} and not in {{xd/lib}}. If you do not find in the module {{/lib}}, please reopen this bug.",,,,,,,,,,,,,,,,
5 occurrences of the typo 'properites' in comments/readme/doc,XD-3028,63591,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,pharris,pharris,06/May/15 4:33 AM,27/Oct/15 3:14 PM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,Documentation,,,,,0,documentation,,,,,,"The typo 'properites' should be replaced with the correct 'properties' in the following places:

https://github.com/spring-projects/spring-xd/search?utf8=%E2%9C%93&q=properites",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,179884800,,2015-10-27 15:14:44.751,9223372036854775807,true,LinkedList(linkedlist),,,,"0|i08f3j:",9223372036854775807,9223372036854775807,,,,,,1.0,,"27/Oct/15 3:14 PM;LinkedList;I've created a pull request for this: [https://github.com/spring-projects/spring-xd/pull/1828|https://github.com/spring-projects/spring-xd/pull/1828]",,,,,,,,,,,,,,,,,
SpringXD sqoop module is hanging,XD-3025,63551,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,bzeyben,bzeyben,04/May/15 12:39 PM,07/May/15 2:05 PM,10/Jul/21 8:37 AM,07/May/15 2:05 PM,1.2 M1,,,,,,1.2 RC1,,,,,,,0,,,,,,,"The SpringXD Sqoop module is in execution status until it times out, it is hanging. 

The container logs show:

2015-05-04 15:15:45,365 1.2.0.M1  INFO DeploymentsPathChildrenCache-0 container.DeploymentListener - Deploying job 'sqoop_lookup'
2015-05-04 15:15:45,536 1.2.0.M1  INFO DeploymentsPathChildrenCache-0 container.DeploymentListener - Deploying module [ModuleDescriptor@239b037a moduleName = 'sqoop', moduleLabel = 'sqoop', group = 'sqoop_lookup', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map['args' -> '--connect=jdbc:oracle:thin:@************:****/******* —username=******** --password-file=/user/zeybeb/workspace/secure-files/gdw.password --table=MASTERDATA.W_LOOKUP_D --target-dir=/user/zeybeb/workspace/ent/masterdata_src/lookup_d -m 1', 'command' -> 'import'], children = list[[empty]]]
2015-05-04 15:16:17,061 1.2.0.M1  INFO inbound.job:sqoop_lookup-redis:queue-inbound-channel-adapter1 sqoop.SqoopTasklet - Sqoop system.out: /tmp/Sqoop-948322291323951735.out

The /tmp/Sqoop-948322291323951735.out file content is:

15:16:17,612  INFO main sqoop.SqoopRunner - Sqoop command: import
15:16:17,613  INFO main sqoop.SqoopRunner - Using args: [--connect=jdbc:oracle:thin:@************:****/*******, —username=*********, --password-file=/user/zeybeb/workspace/secure-files/gdw.password, --table=MASTERDATA.W_LOOKUP_D, --target-dir=/user/zeybeb/workspace/ent/masterdata_src/lookup_d, -m, 1]
15:16:17,613  INFO main sqoop.SqoopRunner - Mapreduce home: /opt/pivotal/spring-xd-1.2.0.M1/xd/lib/phd21
15:16:17,631  INFO main sqoop.SqoopRunner - Setting configuration property: fs.defaultFS=hdfs://ilabphd07.isus.emc.com:8020
15:16:17,753  INFO main sqoop.SqoopRunner - Setting configuration property: yarn.resourcemanager.address=ilabphd08.isus.emc.com:8050
15:16:17,753  INFO main sqoop.SqoopRunner - Setting configuration property: yarn.application.classpath=/usr/hdp/2.2.0.0-2041/etc/hadoop/conf.empty,/usr/hdp/2.2.0.0-2041/hadoop/*,/usr/hdp/2.2.0.0-2041/hadoop/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/lib/*,/usr/hdp/2.2.0.0-2041/sqoop/*,/usr/hdp/2.2.0.0-2041/sqoop/lib/*,/usr/hdp/2.2.0.0-2041/flume/*,/usr/hdp/2.2.0.0-2041/flume/lib/*,/usr/hdp/2.2.0.0-2041/storm/*,/usr/hdp/2.2.0.0-2041/storm/lib/*
15:16:17,754  INFO main sqoop.SqoopRunner - Setting configuration property: mapreduce.framework.name=yarn
15:16:17,837  WARN main tool.SqoopTool - $SQOOP_CONF_DIR has not been set in the environment. Cannot check for additional configuration.
15:16:17,907  INFO main sqoop.Sqoop - Running Sqoop version: 1.4.5
15:16:18,282  WARN main util.NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
15:16:19,552  WARN main sqoop.ConnFactory - $SQOOP_CONF_DIR has not been set in the environment. Cannot check for additional configuration.
15:16:19,657  INFO main oracle.OraOopManagerFactory - Data Connector for Oracle and Hadoop is disabled.
15:16:19,673  INFO main manager.SqlManager - Using default fetchSize of 1000
15:16:19,673  INFO main tool.CodeGenTool - Beginning code generation
15:16:20,639  INFO main manager.OracleManager - Time zone has been set to GMT
15:16:20,853  INFO main manager.SqlManager - Executing SQL statement: SELECT t.* FROM MASTERDATA.W_LOOKUP_D t WHERE 1=0
15:16:21,018  INFO main orm.CompilationManager - HADOOP_MAPRED_HOME is /opt/pivotal/spring-xd-1.2.0.M1/xd/lib/phd21
15:16:23,171  INFO main orm.CompilationManager - Writing jar file: /tmp/sqoop-spring-xd/compile/4e11123a52fa36d6677efdb47bcdc43b/MASTERDATA.W_LOOKUP_D.jar
15:16:23,191  INFO main manager.OracleManager - Time zone has been set to GMT
15:16:24,109  INFO main manager.OracleManager - Time zone has been set to GMT
15:16:24,825  INFO main mapreduce.ImportJobBase - Beginning import of MASTERDATA.W_LOOKUP_D
15:16:24,848  INFO main manager.OracleManager - Time zone has been set to GMT
15:16:24,876  WARN main mapreduce.JobBase - SQOOP_HOME is unset. May not be able to find all job dependencies.
15:16:25,083  INFO main client.RMProxy - Connecting to ResourceManager at ilabphd08.isus.emc.com/10.15.232.191:8050
15:16:25,977  INFO main db.DBInputFormat - Using read commited transaction isolation
15:16:26,117  INFO main mapreduce.JobSubmitter - number of splits:1
15:16:26,361  INFO main mapreduce.JobSubmitter - Submitting tokens for job: job_1429280992648_0019
15:16:26,717  INFO main impl.YarnClientImpl - Submitted application application_1429280992648_0019 to ResourceManager at ilabphd08.isus.emc.com/10.15.232.191:8050
15:16:26,782  INFO main mapreduce.Job - The url to track the job: http://http://ilabphd08.isus.emc.com:8088/proxy/application_1429280992648_0019/
15:16:26,783  INFO main mapreduce.Job - Running job: job_1429280992648_0019

The logs on the Hadoop side are:

Showing 4096 bytes. Click here for full log
mumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:04,026 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 3 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:05,033 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 4 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:06,042 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 5 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:07,049 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 6 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:08,056 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 7 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:09,062 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 8 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:10,069 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 9 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:41,093 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 0 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:42,100 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 1 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:43,107 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 2 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:44,113 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 3 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:45,120 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 4 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:46,129 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 5 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:47,136 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 6 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:48,143 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 7 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:49,150 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 8 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)
2015-05-04 15:36:50,156 INFO [main] org.apache.hadoop.ipc.Client: Retrying connect to server: 0.0.0.0/0.0.0.0:8030. Already tried 9 time(s); retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=10, sleepTime=1000 MILLISECONDS)

Even though  the maxRetries is set to 10 the process is going into several sets of retrials. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,195004800,XD-2476,2015-05-04 14:29:50.827,9223372036854775807,true,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1599,"0|i08eun:",9223372036854775807,9223372036854775807,,,Sprint 48,,,5.0,,"04/May/15 2:29 PM;thomas.risberg;Looks like we are not passing in yarn.resourcemanager.scheduler.address to the SqoopRunner. We should add YarnConfiguration.RM_HOSTNAME and  YarnConfiguration.RM_SCHEDULER_ADDRESS to the list of properties that we set.","05/May/15 7:35 AM;thomas.risberg;You can explicitly set the ""yarn.resourcemanager.scheduler.address"" property using several config files:

- $XD_HOME/config/hadoop.properties
  just add the property:
    {code}yarn.resourcemanager.scheduler.address=host:port{code}

- /config/hadoop-site.xml
  add a property entry:
    {code}<property><name>yarn.resourcemanager.scheduler.address</name><value>host:port</value></property>{code}

- $XD_HOME/config/servers.yml
  add a spring.hadoop.config entry:
{code}
---
spring:
  hadoop:
    config:
      yarn.resourcemanager.scheduler.address: host:port
---
{code}

This should work in the current 1.2 M1 release.    
    
    ","05/May/15 8:14 AM;bzeyben;I have updated the servers.yml file with the following info:

{code}
# Hadoop properties
spring:
  hadoop:
    fsUri: hdfs://<nameNodeHost>:8020
    resourceManagerHost: <resourceManagerHost>
    resourceManagerPort: 8050
    yarn.resourcemanager.scheduler.address: <resourceManagerSchedulerHost>:8030
    yarnApplicationClasspath: /usr/hdp/2.2.0.0-2041/etc/hadoop/conf.empty,/usr/hdp/2.2.0.0-2041/hadoop/*,/usr/hdp/2.2.0.0-2041/hadoop/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/lib/*,/usr/hdp/2.2.0.0-2041/sqoop/*,/usr/hdp/2.2.0.0-2041/sqoop/lib/*,/usr/hdp/2.2.0.0-2041/flume/*,/usr/hdp/2.2.0.0-2041/flume/lib/*,/usr/hdp/2.2.0.0-2041/storm/*,/usr/hdp/2.2.0.0-2041/storm/lib/*
{code}

we are still experiencing the same issue.

The <resourceManagerHost> and the <resourceManagerSchedulerHost> are on the same host.

If I add the parameters to the files your have mentioned we cannot deploy the jobs. I am not sure if the two issues are related.

The container and admin services have been restarted after the config changes.

Thanks, 
","05/May/15 9:16 AM;thomas.risberg;You need to add that hadoop property under spring:hadoop:config

Try this

{code}
# Hadoop properties
spring:
  hadoop:
    fsUri: hdfs://<nameNodeHost>:8020
    resourceManagerHost: <resourceManagerHost>
    resourceManagerPort: 8050
    yarnApplicationClasspath: /usr/hdp/2.2.0.0-2041/etc/hadoop/conf.empty,/usr/hdp/2.2.0.0-2041/hadoop/*,/usr/hdp/2.2.0.0-2041/hadoop/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/*,/usr/hdp/2.2.0.0-2041/hadoop-hdfs/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/*,/usr/hdp/2.2.0.0-2041/hadoop-yarn/lib/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/*,/usr/hdp/2.2.0.0-2041/hadoop-mapreduce/lib/*,/usr/hdp/2.2.0.0-2041/sqoop/*,/usr/hdp/2.2.0.0-2041/sqoop/lib/*,/usr/hdp/2.2.0.0-2041/flume/*,/usr/hdp/2.2.0.0-2041/flume/lib/*,/usr/hdp/2.2.0.0-2041/storm/*,/usr/hdp/2.2.0.0-2041/storm/lib/*
    config:
      yarn.resourcemanager.scheduler.address: <resourceManagerSchedulerHost>:8030
{code}
","05/May/15 9:40 AM;bzeyben;Sorry, an oversight on my part. 

After fixing the servers.yml file the process run fine in SpringXD Sqoop module but I do still get the following error for the job:

12:34:45,611 INFO main mapreduce.Job - Running job: job_1429280992648_0026
12:34:57,875 INFO main mapreduce.Job - Job job_1429280992648_0026 running in uber mode : false
12:34:57,877 INFO main mapreduce.Job - map 0% reduce 0%
12:35:12,177 INFO main mapreduce.Job - map 100% reduce 0%
12:35:13,212 INFO main mapreduce.Job - Job job_1429280992648_0026 completed successfully
12:35:13,338 ERROR main tool.ImportTool - Imported Failed: No enum constant org.apache.hadoop.mapreduce.JobCounter.MB_MILLIS_MAPS

I do have valid data in HDFS but the SpringXD job status is set to FAILED due to the last ERROR:

    main tool.ImportTool - Imported Failed: No enum constant org.apache.hadoop.mapreduce.JobCounter.MB_MILLIS_MAPS

Thanks,
","05/May/15 9:55 AM;thomas.risberg;That's a new one. From the classpath it looks like you are using HDP 2.2, how are you starting xd? Are you using ""--hadoopDistro hdp22""? That constant was added in Hadop 2.3, wonder if your client for some reason is using older Hadoop version (like phd21).","05/May/15 10:06 AM;bzeyben;We have installed SpringXD via the rpm and I am starting the admin and container processes as a service via:

{code}
$> service spring-xd-admin start

$> service spring-xd-container start
{code}

How would I start services with that parameter in mind?

I would rather have it as part of the configuration, if possible.

Thanks,
","05/May/15 10:53 AM;thomas.risberg;Look at the file `/etc/sysconfig/spring-xd` that controls the startup options.

See https://github.com/spring-projects/spring-xd/wiki/Installing-Spring-XD-using-RPM-on-RHEL-CentOS-v.-6.x
","05/May/15 11:17 AM;bzeyben;Thank you. That worked nicely. 

I have updated the /etc/sysconfig/spring-xd with:

{code}
# The Hadoop distribution to be used for HDFS access
# [hadoop25 | hadoop26 | phd21 | cdh5 | hdp22]
HADOOP_DISTRO=hdp22
{code}

My process complete fine after the changes and restarting the services.

Thanks,
",,,,,,,,,
Kafka Message Bus ignores consumer concurrency when computing partition count,XD-3022,63516,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mbogoevici,mbogoevici,mbogoevici,30/Apr/15 12:36 PM,18/May/15 7:57 AM,10/Jul/21 8:37 AM,18/May/15 7:57 AM,1.1.2,1.2 M1,,,,,1.2 RC1,,Runtime,,,,,0,,,,,,,"This is a combination of two issues:
- the internal property `next.module.concurrency` is computed from `concurrency` when it should be computed from `consumer.concurrency`
- even if `next.module.concurrency` is set, the KafkaMessageBus rejects it, since it's not set in SUPPORTED_CONSUMER_PROPERTIES

As a result, the value used in partition calculation is always 1.

A workaround exists, by setting the `module.[moduleName].producer.minPartitionCount` property to the expected total value. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,195436800,XD-2356,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1626,"0|i082us:z7",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,,,,,,,,,,,,,,,,,,
RemoteFileToHadoopTests fails on 1.1.x,XD-3015,63502,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,dturanski,dturanski,dturanski,30/Apr/15 6:42 AM,08/May/15 9:29 AM,10/Jul/21 8:37 AM,01/May/15 6:52 AM,1.1.2,,,,,,1.1.3,1.2 RC1,Batch,Hadoop,,,,0,,,,,,,"This error surfaced recently as a result of a fix to a bug in HostNotWindowsRule which disabled this test in all environments. Now the test has been reactivated it is failing on the 1.1.x branch.  The test runs OK on master.
{noformat}
Encountered an error executing step step1-master in job job
org.springframework.messaging.MessageDeliveryException: failed to send Message to channel 'null'; nested exception is java.lang.IllegalStateException: ThreadPoolTaskExecutor not initialized
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:292)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.xd.dirt.integration.bus.local.LocalMessageBus$3.handleMessage(LocalMessageBus.java:262)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:248)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:171)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:119)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:85)
	at org.springframework.batch.integration.partition.MessageChannelPartitionHandler.handle(MessageChannelPartitionHandler.java:224)
	at org.springframework.batch.core.partition.support.PartitionStep.doExecute(PartitionStep.java:106)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:165)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:144)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128)
	at org.springframework.batch.integration.x.RemoteFileToHadoopTests.testSimple(RemoteFileToHadoopTests.java:161)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.springframework.xd.test.HostNotWindowsRule$1.evaluate(HostNotWindowsRule.java:38)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: java.lang.IllegalStateException: ThreadPoolTaskExecutor not initialized
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getThreadPoolExecutor(ThreadPoolTaskExecutor.java:221)
	at org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.execute(ThreadPoolTaskExecutor.java:252)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:89)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	... 76 more

java.lang.AssertionError: 
Expected :exitCode=COMPLETED;exitDescription=
Actual   :exitCode=FAILED;exitDescription=
   <Click to see difference>


	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at org.springframework.batch.integration.x.RemoteFileToHadoopTests.testSimple(RemoteFileToHadoopTests.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.springframework.xd.test.HostNotWindowsRule$1.evaluate(HostNotWindowsRule.java:38)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,195523200,XD-697,2015-04-30 07:03:45.84,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1587,"0|i08e7a:zr",9223372036854775807,9223372036854775807,,,Sprint 48,,,2.0,,"30/Apr/15 7:03 AM;grussell;In 1.1, the {{LocalMessageBus}} uses a task executor for batch channels (no longer used in 1.2).

The {{TE}} is initialized in {{afterPropertiesSet()}}, so I suspect this test is creating a {{LocalMessageBus}} outside of a Spring {{ApplicationContext}} and failing to call {{afterPropertiesSet()}}.",,,,,,,,,,,,,,,,,
Job failed to deploy (Sporadic),XD-3011,63486,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,grenfro,grenfro,29/Apr/15 5:53 AM,29/Apr/15 5:53 AM,10/Jul/21 8:37 AM,,1.2 M1,,,,,,,,,,,,,0,,,,,,,"Commit: 433d18f03fd7f3bf7d9aeee80ab292f9c92af5a4
Transport: Rabbit
1 Admin
2 Containers
Admin Log is attached. (Exception is at line 52)
During Acceptance Tests for  testJobCreateDuplicateWithDeployFalse failed with the following error reported from the admin.

{noformat}  org.springframework.xd.rest.client.impl.SpringXDException(KeeperErrorCode = NoNode for /xd/jobs/jobFalseDeploy
)
	at org.junit.runners.model.MultipleFailureException.assertEmpty(MultipleFailureException.java:67)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:39)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)
	at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,"29/Apr/15 5:53 AM;grenfro;admin-1768.log;https://jira.spring.io/secure/attachment/22768/admin-1768.log",,,,,,,,,,,,,195609600,,,9223372036854775807,true,grenfro(grenfro),,,,"0|i08egv:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Can't compose script processor,XD-3010,63483,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kdowbecki,kdowbecki,29/Apr/15 3:52 AM,03/Jun/16 2:29 PM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,Runtime,,,,,1,,,,,,,"Consider this simple stream which works out of the box because {{transform.groovy}} is shipped with Spring XD:
{code}
stream create --name ""stream1"" --definition ""time | script --script='transform.groovy' | log"" --deploy
{code}

Composing {{time}} and {{script}} modules like that

{code}
module compose --name ""cmp-time"" --definition ""time | script --script='transform.groovy'""
stream create --name ""stream2"" --definition ""cmp-time | log"" --deploy
{code}

will throw following exception in xd-shell:

{code}
Apr 29, 2015 11:28:57 AM org.springframework.shell.core.AbstractShell handleExecutionResult
INFO: Successfully created module 'cmp-time' with type source
Apr 29, 2015 11:28:57 AM org.springframework.shell.core.SimpleExecutionStrategy invoke
SEVERE: Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module cmp-time of type source:
    valid: 'script' cannot be null or empty
{code}

and following exception in xd-container:

{code}
2015-04-29 11:28:57,263 1.1.1.RELEASE ERROR qtp616131272-35 rest.RestControllerAdvice - Caught exception while handling a request
org.springframework.xd.dirt.plugins.ModuleConfigurationException: Error with option(s) for module cmp-time of type source:
    valid: 'script' cannot be null or empty
	at org.springframework.xd.dirt.plugins.ModuleConfigurationException.fromBindException(ModuleConfigurationException.java:55)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:180)
	at org.springframework.xd.dirt.stream.AbstractDeployer.save(AbstractDeployer.java:95)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:868)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:291)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:370)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'target' on field 'valid': rejected value [false]; codes [AssertTrue.target.valid,AssertTrue.valid,AssertTrue.boolean,AssertTrue]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [target.valid,valid]; arguments []; default message [valid]]; default message ['script' cannot be null or empty]
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.bindAndValidate(PojoModuleOptionsMetadata.java:205)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.interpolate(PojoModuleOptionsMetadata.java:139)
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.interpolate(FlattenedCompositeModuleOptionsMetadata.java:152)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.interpolate(EnvironmentAwareModuleOptionsMetadataResolver.java:167)
	at org.springframework.xd.module.options.HierarchicalCompositeModuleOptionsMetadata.interpolate(HierarchicalCompositeModuleOptionsMetadata.java:105)
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.interpolate(FlattenedCompositeModuleOptionsMetadata.java:152)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.interpolate(EnvironmentAwareModuleOptionsMetadataResolver.java:167)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:177)
	... 61 more
{code}",,,,,,,,,,,,,,,,,XD-3755,,,,,,,,,,,,,,,,,,,,194918400,,2015-04-29 12:41:55.231,9223372036854775807,true,grussell(grussell),,,,"0|i08eg7:",9223372036854775807,9223372036854775807,,,,,,2.0,,"29/Apr/15 12:41 PM;iperumal;@Karol Dowbecki This is a bug. Thanks for reporting.

The 'script` module option for the script module uses 'null' as the default value and there is also an assertion that checks if script option is set to non-null.
During the interpolation of module options for the composed module, the script module option is skipped by the default ModuleOptions resolver to get what was set from the composed module.

https://github.com/spring-projects/spring-xd/blob/1.1.x/spring-xd-module/src/main/java/org/springframework/xd/module/options/EnvironmentAwareModuleOptionsMetadataResolver.java#L163","07/May/15 3:45 AM;thm1118;shell processor also can not composed:

org.springframework.xd.dirt.plugins.ModuleConfigurationException: Error with option(s) for module newsprocess of type source:
    command: not null
 

",,,,,,,,,,,,,,,,
Manual acknowledgement with Kafka bus doesn't work,XD-3009,63477,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,iperumal,iperumal,iperumal,28/Apr/15 6:03 PM,30/Apr/15 2:50 PM,10/Jul/21 8:37 AM,30/Apr/15 2:50 PM,,,,,,,1.1.2,1.2 M1,,,,,,0,,,,,,,"When the kafka message headers are expected to be set with acknowledgement flags to manually acknowledge the messages at the consumer side, the message headers are missing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,195609600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1581,"0|i08e7a:zi",9223372036854775807,9223372036854775807,,,Sprint 48,,,1.0,,,,,,,,,,,,,,,,,,,
Version info not available when security enabled,XD-3008,63475,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,28/Apr/15 2:06 PM,28/Apr/15 3:28 PM,10/Jul/21 8:37 AM,28/Apr/15 3:27 PM,,,,,,,1.1.2,1.2 M1,,,,,,0,,,,,,,"When security is enabled, the VersionController REST endpoint isn't visible.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,195609600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1580,"0|i08e7a:v",9223372036854775807,9223372036854775807,,,Sprint 48,,,1.0,,,,,,,,,,,,,,,,,,,
Message rate collection throws warning level exception,XD-3007,63471,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,28/Apr/15 1:09 PM,28/Apr/15 3:28 PM,10/Jul/21 8:37 AM,28/Apr/15 3:28 PM,,,,,,,1.1.2,1.2 M1,,,,,,0,,,,,,,"When the container doesn't have any modules deployed, the jolokia response returns stacktrace with ""NoInstanceFoundException"". This exception is thrown at the admin log as:

2015-04-28 13:09:35,952 1.2.0.SNAP  WARN qtp1648225666-27 rest.ContainersController - Error getting message rate metrics for 713255e5-49b2-4158-b69c-2d203cfe50d3
org.codehaus.jettison.json.JSONException: JSONObject[""value""] not found.
	at org.codehaus.jettison.json.JSONObject.get(JSONObject.java:360)
	at org.codehaus.jettison.json.JSONObject.getJSONObject(JSONObject.java:454)
	at org.springframework.xd.dirt.rest.ContainersController.setMessageRates(ContainersController.java:134)
	at org.springframework.xd.dirt.rest.ContainersController.list(ContainersController.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:291)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:370)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,XD-2983,,,,,,,,,,,,,,,,,,,1.0,195609600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1579,"0|i08e7a:x",9223372036854775807,9223372036854775807,,,Sprint 48,,,1.0,,,,,,,,,,,,,,,,,,,
spring-xd services randomly report failure after correct shutdown,XD-3005,63461,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,,kdowbecki,kdowbecki,28/Apr/15 6:45 AM,02/May/15 3:21 PM,10/Jul/21 8:37 AM,02/May/15 3:21 PM,1.1.1,,,,,,,,,,,,,0,,,,,,,"On multiple occasions we have seen that {{spring-xd-container}} and {{spring-xd-admin}} services can exit reporting {{FAILED}} state, however most of the times the Java process is correctly terminated.

{code}
$ sudo service spring-xd-container stop
Stopping xd-container:                                     [FAILED]
$ ps uax | grep [x]d-container
$
{code}

and in the container logs:

{code}
[info 2015/04/28 09:42:15.167 EDT  <Distributed system shutdown hook> tid=0x88] VM is exiting - shutting down distributed system

[info 2015/04/28 09:42:15.168 EDT  <Distributed system shutdown hook> tid=0x88] GemFireCache[id = 2029162775; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Mon Apr 27 10:59:34 EDT 2015; se

[info 2015/04/28 09:42:15.171 EDT  <Distributed system shutdown hook> tid=0x53] VM is exiting - shutting down distributed system

[info 2015/04/28 09:42:15.171 EDT  <Distributed system shutdown hook> tid=0x53] GemFireCache[id = 389249684; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Mon Apr 27 10:59:14 EDT 2015; ser

[info 2015/04/28 09:42:15.177 EDT  <Distributed system shutdown hook> tid=0x77] VM is exiting - shutting down distributed system

[info 2015/04/28 09:42:15.179 EDT  <Distributed system shutdown hook> tid=0x77] GemFireCache[id = 1768828050; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Mon Apr 27 10:59:27 EDT 2015; se

[info 2015/04/28 09:42:15.181 EDT <Distributed system shutdown hook> tid=0x63] VM is exiting - shutting down distributed system

[info 2015/04/28 09:42:15.199 EDT <Distributed system shutdown hook> tid=0x63] GemFireCache[id = 548938309; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Mon Apr 27 10:59:19 EDT 2015; serv
2015-04-28 09:42:15,410 1.1.1.RELEASE DEBUG xdbus.queue:radius-1 transform.RadiusMsgTransformer - Transformed message: GenericMessage [payload=FACILITY=22, SEVERITY=5, TIMESTAMP=Tue Apr 28 09:42:15 EDT 2015, HOST=hopisepsnprd01, Messa

[info 2015/04/28 09:42:15.626 EDT  <Distributed system shutdown hook> tid=0x53] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool PS Old Gen

[info 2015/04/28 09:42:15.630 EDT  <Distributed system shutdown hook> tid=0x77] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool PS Old Gen

[info 2015/04/28 09:42:15.621 EDT  <Distributed system shutdown hook> tid=0x88] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool PS Old Gen

[info 2015/04/28 09:42:15.662 EDT <Distributed system shutdown hook> tid=0x63] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool PS Old Gen
2015-04-28 09:42:15,854 1.1.1.RELEASE  WARN Thread-4 support.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'client-pool': java.lang.IllegalStateException: Pool could not be destroyed because it is still

[config 2015/04/28 09:42:15.857 EDT <Thread-4> tid=0x12] Destroying connection pool client-pool

[config 2015/04/28 09:42:15.897 EDT  <Thread-4> tid=0x12] Destroying connection pool client-pool

[config 2015/04/28 09:42:15.898 EDT  <Distributed system shutdown hook> tid=0x53] Destroying connection pool client-pool

[config 2015/04/28 09:42:15.908 EDT  <Distributed system shutdown hook> tid=0x88] Destroying connection pool client-pool
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,195264000,,2015-04-28 10:26:45.716,9223372036854775807,true,sabby(sabby),,,,"0|i08ebj:",9223372036854775807,9223372036854775807,,,,,,1.0,,"28/Apr/15 10:26 AM;pperalta;The logs indicate that Gemfire is being shut down. Perhaps GF was not able to shut down cleanly, thus causing either a non-normal exit code from the jvm or a forced shutdown (depends on upstart or your {{/etc/init.d}} scripts).

Although this is an old list, it shows a few [shutdown issues|http://www.gemstone.com/docs/bugnotes.html] with GF in the past. You may want to verify that your version doesn't have any known issues in this area.","02/May/15 3:21 PM;sabby;@Karol: Given this is not a 'bug' directly related to Spring XD, I'm marking this invalid. If you find any other anomalies starting/stopping Spring XD, please feel free to open another issue with relevant details. ",,,,,,,,,,,,,,,,
Align Spring XD partitioning with Kafka partitioning for the Kafka message bus,XD-2996,63443,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mbogoevici,mbogoevici,mbogoevici,27/Apr/15 8:55 AM,08/Jun/15 2:12 PM,10/Jul/21 8:37 AM,08/Jun/15 2:12 PM,,,,,,,1.2 GA,,,,,,,0,,,,,,,"As a developer, I want that the Spring XD partitioning process targets Kafka bus partitions directly, so that the design of my stream processing application is easier to understand and the order of messages is not altered

Current situation
- Spring XD partitioning logic that builds on top of Kafka partitioning;
- The number of Spring XD partitions is not explicitly configured (it's inferred from the number of consumer modules)
- If the concurrency of the consumer modules is 1, then Spring XD partitions are matched 1:1 with Kafka partitions;
-  If the concurrency of the consumer modules is n, then a Spring XD partition uses n Kafka partitions, and the message bus distributes messages across the Kafka partitions that correspond to the Spring XD partitions;
- this could be confusing to the end user, especially if they are used to the Kafka partitioning process;
- this can also lead to changes of ordering between messages, as messages within the same Spring XD partitions will be sent to different Kafka partitions (this only happens if the concurrency of the receiving module is higher than 1)

Improvement:
- *For the Kafka message bus* the number of Spring XD partitions does not need to be equal to the number of modules (must be higher or equal, though, so that consumers can be created), and should be configured explicitly - using the `partitionCount` property - (as an option, the module count * concurrency can be used as a default)
 - as a result, in the case of Kafka there will always be a 1:1 match between Kafka partitions and Spring XD partitions, optionally processed by fewer modules than the partition count;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,195696000,XD-2356,,9223372036854775807,false,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1694,"0|i08hwb:",9223372036854775807,9223372036854775807,,,Sprint 50,,,5.0,,,,,,,,,,,,,,,,,,,
Jobs are failing to be deployed,XD-2995,63435,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,iperumal,grenfro,grenfro,27/Apr/15 6:23 AM,27/Apr/15 8:38 AM,10/Jul/21 8:37 AM,27/Apr/15 8:33 AM,,,,,,,1.1.2,1.2 M1,,,,,,0,,,,,,,"Error Started:
Commit: 7087dc67e058edd6cbb1630ebd95b52e2c7e21e1 
https://github.com/spring-projects/spring-xd/pull/1564

This can be reproduced by running the test with a admin and single container on Mac OSX.

Issue All Jobs fail to deploy with the following exception:
{noformat}
/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
 `--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
1.2.0.BUILD-SNAPSHOT             eXtreme Data


Started : AdminServerApplication
Documentation: https://github.com/spring-projects/spring-xd/wiki

2015-04-27 09:08:51,082 1.2.0.SNAP  WARN main config.IntegrationRegistrar - The '#jsonPath' SpEL function cannot be registered. The version of json-path found on the classpath is not supported. Supported json-path version is '0.9.1'. Upgrade to Spring Integration 4.2 or later to use json-path 1.0 or later.
2015-04-27 09:09:02,767 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD Home: /Users/glennrenfro/project/spring-xd/build/dist/spring-xd/xd
2015-04-27 09:09:02,768 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: redis
2015-04-27 09:09:02,768 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop Distro: hadoop26
2015-04-27 09:09:02,771 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop version detected from classpath 2.6.0
2015-04-27 09:09:02,771 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config location: file:/Users/glennrenfro/project/spring-xd/build/dist/spring-xd/xd/config//
2015-04-27 09:09:02,771 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config names: servers,application
2015-04-27 09:09:02,772 1.2.0.SNAP  INFO LeaderSelector-0 zk.DeploymentSupervisor - Leader Admin 172.31.99.83:9393 is watching for stream/job deployment requests.
2015-04-27 09:09:02,773 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config location: file:/Users/glennrenfro/project/spring-xd/build/dist/spring-xd/xd/config//modules/
2015-04-27 09:09:02,775 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config name: modules
2015-04-27 09:09:02,775 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Admin web UI: http://Glenns-MacBook-Pro.local:9393/admin-ui
2015-04-27 09:09:02,775 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:2181
2015-04-27 09:09:02,775 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper namespace: xd
2015-04-27 09:09:02,776 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Analytics: redis
2015-04-27 09:09:02,813 1.2.0.SNAP  INFO DeploymentSupervisor-0 zk.ContainerListener - Path cache event: type=INITIALIZED
2015-04-27 09:09:02,845 1.2.0.SNAP  INFO main admin.AdminServerApplication - Started AdminServerApplication in 6.777 seconds (JVM running for 14.213)
2015-04-27 09:09:04,010 1.2.0.SNAP  INFO DeploymentSupervisor-0 zk.ContainerListener - Path cache event: path=/containers/dc7692b1-979b-4fa3-a11a-3f35cdedc319, type=CHILD_ADDED
2015-04-27 09:09:04,017 1.2.0.SNAP  INFO DeploymentSupervisor-0 zk.ContainerListener - Container arrived: Container{name='dc7692b1-979b-4fa3-a11a-3f35cdedc319', attributes={groups=, host=Glenns-MacBook-Pro.local, id=dc7692b1-979b-4fa3-a11a-3f35cdedc319, managementPort=9395, ip=172.31.99.83, pid=99669}}
2015-04-27 09:09:04,018 1.2.0.SNAP  INFO DeploymentSupervisor-0 zk.ContainerListener - Scheduling deployments to new container(s) in 15000 ms
2015-04-27 09:10:35,003 1.2.0.SNAP  INFO DeploymentSupervisor-0 zk.ZKJobDeploymentHandler - Deployment status for job 'tfphj4ffb45d5-0d6c-4f22-b407-c313ce82b449': DeploymentStatus{state=failed,error(s)=org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'objectNameProperties' defined in null: Could not resolve placeholder 'xd.stream.name' in string value ""${xd.stream.name}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'xd.stream.name' in string value ""${xd.stream.name}""
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:155)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:214)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.container.DeploymentListener.deployModule(DeploymentListener.java:365)
	at org.springframework.xd.dirt.server.container.DeploymentListener.deployJobModule(DeploymentListener.java:291)
	at org.springframework.xd.dirt.server.container.DeploymentListener.onChildAdded(DeploymentListener.java:181)
	at org.springframework.xd.dirt.server.container.DeploymentListener.childEvent(DeploymentListener.java:149)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'xd.stream.name' in string value ""${xd.stream.name}""
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:204)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:178)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:204)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitMap(BeanDefinitionVisitor.java:262)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:198)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:208)
	... 31 more
}
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,195782400,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1576,"0|i08e73:",9223372036854775807,9223372036854775807,,,Sprint 48,,,1.0,,,,,,,,,,,,,,,,,,,
Issues with custom modules when using module configuration,XD-2988,63411,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,loesak,loesak,24/Apr/15 1:17 PM,16/Oct/15 4:21 AM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,Runtime,,,,,0,,,,,,,"SpringXD seems to think that a module exists if there is a module configuration present. There is also an issue of having to restart the node when theres been a problem with uploading/removing a module.

When using SpringXD in single node on windows, i uploaded a custom module and then added a folder and property file for it in the module configuration directory as specified in the documentation. When i went to delete the module using the command in the SpringXD admin console, it would say that it was successfull, but when then listing the modules, it would still be listed. If i tried to upload a new version of that same module, i would get an error stating that module already existed with the same name. I would check the custom modules directory and my jar would not be there. I would then have to manually delete the module configuration directory and restart SpringXD before being able to upload a new module, having to replace my module configuration each time.

Seems like there are three things wrong here:
* should the presence of a module configuration alone inform SpringXD of a modules existence?
* should one have to delete a module configuration before uploading a new version of the module?
* when getting module deletion/upload errors, should one have to restart spring xd node to get it to allow the upload again?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,180921600,,2015-04-29 03:42:56.487,9223372036854775807,true,loesak(loesak),,,,"0|i08e2v:",9223372036854775807,9223372036854775807,,,,,,1.0,,"24/Apr/15 1:58 PM;loesak;not sure if my description paints the picture clearly so i recorded it! :)

https://youtu.be/P5JH2HQLFqA","29/Apr/15 3:42 AM;eric.bottard;Hi Aaron,

seems to be a bug indeed. I'll look into it soon, thanks for the video, this was helpful.

To alleviate your pain, the latest version of Spring XD (on git master) has support for a --force option when uploading a module (removing the need for module deletion before uploading anew) which could help.","16/Jun/15 8:03 AM;loesak;that would be extremely helpful. thank you.","16/Oct/15 4:21 AM;loesak;using the latest version and using force also does not work if there is a configuration for the module with the same name in the conf/module/<module-type> directory",,,,,,,,,,,,,,
xd-admin script fails when providing --hadoopDistro option,XD-2984,63387,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,iperumal,thomas.risberg,thomas.risberg,23/Apr/15 12:31 PM,24/Apr/15 1:57 PM,10/Jul/21 8:37 AM,24/Apr/15 1:57 PM,,,,,,,1.2 M1,,Configuration,Runtime,,,,0,,,,,,,"XD-2837 added back the --hadoopDistro option for xd-admin scripts. However, if I try to use it I get an error message saying: ""--hadoopDistro"" is not a valid option
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,196041600,,,9223372036854775807,false,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1572,"0|i08dxj:",9223372036854775807,9223372036854775807,,,Sprint 47,,,3.0,,,,,,,,,,,,,,,,,,,
Add polling twitter source ,XD-2981,63373,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,loesak,loesak,22/Apr/15 6:19 PM,28/Apr/15 10:49 AM,10/Jul/21 8:37 AM,,1.1.1,,,,,,Contributions Welcome,,,,,,,0,,,,,,,"i've created a source module for polling a twitter timeline using the spring integration twitter inbound adapter. I've placed my api keys in the modules.yml file and verified that they are picked up by the twitterstream and twitterseach modules that come with SpringXD. However, they are not picked up by my custom module. I viewed the source for both the stream and and the search and i feel my project is near identical in configuration. Am i missing something or are these properties somehow special for just the two twitter sources that come with SpringXD?

I'd like to get this working and commit it to the project.",,,,,,,,,,,,,,,,,,,,,,,,"23/Apr/15 7:37 AM;loesak;twitter-timeline-source.zip;https://jira.spring.io/secure/attachment/22763/twitter-timeline-source.zip",,,,,,,,,,,,,195609600,XD-2052,2015-04-28 10:48:13.953,9223372036854775807,true,sabby(sabby),,,,"0|i08duf:",9223372036854775807,9223372036854775807,,,,,,1.0,,"22/Apr/15 6:25 PM;loesak;great. of course i figure out the issue right after i submit the ticket. I needed to create a properties file in xd/config/modules/source/mymodule to reference the properties in modules.yml. Is there a way to reference these without needing to create this folder and file?","23/Apr/15 7:35 AM;loesak;Feel free to close this ticket as i figured out the original issue as stated in my previous comment.

It would however be nice to be able to reference those variables without having to perform the extra step needed in the config folder.

I tries adding those properties to the modules internal properties as:
{panel:title=twittertimeline.properties}
{noformat}
consumerKey=${twitter.consumerKey:}
consumerSecret=${twitter.consumerSecret:}
accessToken=${twitter.accessToken:}
accessTokenSecret=${twitter.accessTokenSecret:}
{noformat}
{panel}

I also tried adding them in as:
{panel:title=twittertimeline.properties}
{noformat}
options.consumerKey.default=${twitter.consumerKey:}
options.consumerSecret.default=${twitter.consumerSecret:}
options.accessToken.default=${twitter.accessToken:}
options.accessTokenSecret.default=${twitter.accessTokenSecret:}
{noformat}
{panel}

I also tried to see if my options class was created as a bean which would let me use the @Value annotation, but it does not appear to be created as a spring bean.","23/Apr/15 7:38 AM;loesak;attached source of working project. let me know if you'd like me to create an enhancement and deliver this as a PR","28/Apr/15 10:48 AM;sabby;[~loesak] I'm glad you were able to resolve it on your own. Feel free to submit a PR and of course if you haven't already, please also complete the [Spring CLA|https://support.springsource.com/spring_committer_signup]. 

I'll update the title of this ticket and keep it open, so you can submit a PR against it. Thanks for the interest in contribution. ",,,,,,,,,,,,,,
Incorrect message bus is used at runtime,XD-2975,63350,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,iperumal,iperumal,21/Apr/15 1:50 PM,31/Aug/15 5:47 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"For some reason, the message bus is bound to incorrect transport (different from what is set as XD_TRANSPORT) at runtime.

This is from the container log:
2015-04-21 13:42:12,331 1.2.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: rabbit
...
2015-04-21 13:42:35,144 1.2.0.SNAP  INFO RedisMessageListenerContainer-4 sink.a2 - test",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,192153600,,2015-06-07 08:55:05.456,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi2",9223372036854775807,9223372036854775807,,,,,,3.0,,"21/Apr/15 1:50 PM;iperumal;Please note that this is inconsistent.","07/Jun/15 8:55 AM;sabby;No one encountered this one recently; keep it open but moving it down.",,,,,,,,,,,,,,,,
Getting stuck on hive error.,XD-2974,63348,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,ankush,ankush,21/Apr/15 1:18 PM,28/Apr/15 10:57 AM,10/Jul/21 8:37 AM,,,,,,,,,,Hadoop,,,,,0,hadoop,hive,hue,waiting-for-reporter,zookeeper,,"In Hadoop, while creating Table in hive i am getting stuck in below error

15/04/21 12:35:34 INFO log.PerfLogger: <PERFLOG method=Driver.run from=org.apache.hadoop.hive.ql.Driver>
15/04/21 12:35:34 INFO log.PerfLogger: <PERFLOG method=TimeToSubmit from=org.apache.hadoop.hive.ql.Driver>
15/04/21 12:35:34 INFO log.PerfLogger: <PERFLOG method=acquireReadWriteLocks from=org.apache.hadoop.hive.ql.Driver>
15/04/21 12:35:34 INFO lockmgr.DummyTxnManager: Creating lock manager of type org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager
15/04/21 12:35:34 INFO zookeeper.ZooKeeper: Initiating client connection, connectString=dkhc3013.dcsg.com:2181,dkhc3010.dcsg.com:2181,dkhc3011.dcsg.com:2181 sessionTimeout=600000 watcher=org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager$DummyWatcher@5b9e1cd4
15/04/21 12:35:34 DEBUG lockmgr.DummyTxnManager: Adding /incoming/mkt/gcdb.etl_master_account_pref to list of lock inputs
15/04/21 12:35:34 DEBUG lockmgr.DummyTxnManager: Adding database:mkt_incoming to list of lock outputs


After restart the zookeeper service i am able to successfully run the query,

But after some time again facing the same issue/error, I am stuck on the same error.

is there any solution to overcome this issue, or any tuning i can do for resolve this issue.

Please suggest on this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,195609600,,2015-04-28 10:56:28.646,9223372036854775807,true,sabby(sabby),,,,"0|i08dpb:",9223372036854775807,9223372036854775807,,,,,,2.0,,"28/Apr/15 10:56 AM;sabby;[~ankush]: It'd be great if you can share more details about the use-case and as well the environment setup. Please follow these [guidelines|https://github.com/spring-projects/spring-xd/wiki/Project-and-Community#improve-spring-xd]. ",,,,,,,,,,,,,,,,,
STS - Spring XD Imported with Compilation Error,XD-2972,63335,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,hillert,hillert,20/Apr/15 8:21 PM,22/Apr/15 11:43 AM,10/Jul/21 8:37 AM,22/Apr/15 7:01 AM,1.2 M1,,,,,,1.2 M1,,,,,,,0,,,,,,,"Cannot import Spring XD into STS without compilation errors in class:

*org.springframework.xd.dirt.rest.ModulesController#list*

Error is in:

{code}
return assembler.toResource(page, detailed ? detailedAssembler: simpleAssembler);
{code}

{code}
The method toResource(Page<ModuleDefinition>, Link) in the type PagedResourcesAssembler<ModuleDefinition> is not applicable for the arguments (Page<ModuleDefinition>, (detailed ? detailedAssembler : simpleAssembler))
{code}

Seems to be an STS specific issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,196128000,,2015-04-22 11:43:43.605,9223372036854775807,true,aclement(aclement),,,https://github.com/spring-projects/spring-xd/pull/1563,"0|i08dmf:",9223372036854775807,9223372036854775807,,,Sprint 47,,,3.0,,"22/Apr/15 11:43 AM;aclement;Pull request:

https://github.com/spring-projects/spring-xd/pull/1566

this fixes build.gradle to ensure the eclipse metadata that is generated matches the expectations in the build script rather than picking up the JVM you are running on. In this case if the gradle command is run on 1.8 you get 1.8 compliance and the dirt project won't build.",,,,,,,,,,,,,,,,,
twittersearch stream returns duplicate tweets,XD-2944,63222,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,dturanski,vijaygadwal,vijaygadwal,14/Apr/15 1:07 AM,27/Apr/15 12:16 PM,10/Jul/21 8:37 AM,,1.1.1,,,,,,,,,,,,,0,,,,,,,"The twittersearch source module picks up the same tweet in successive iterations of the REST request.
The reason for this is that the since_id value being set at the end of each iteration is the last item in the list of tweets, but not the latest value of tweet id.

Steps to reproduce:

Created a stream using below definition

stream create --name twittersearchspring --definition ""twittersearch --consumerKey=<key> --consumerSecret=<secret> --query='spring' | tweet-transformer | file"" --deploy

tweet-transformer referred here is used from the spring-xd-samples repo and is logging the tweet ID being transformed
https://github.com/spring-projects/spring-xd-samples/tree/master/tweet-transformer-processor

Below is the log

__________
2015-04-14 15:47:22,154 1.1.0.RELEASE  INFO DeploymentSupervisor-0 server.StreamDeploymentListener - Deployment status for stream 'twittersearchspring': DeploymentStatus{state=deployed}
2015-04-14 15:47:22,158 1.1.0.RELEASE  INFO DeploymentSupervisor-0 server.StreamDeploymentListener - Stream Stream{name='twittersearchspring'} deployment attempt complete
2015-04-14 15:47:24,301 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884756488032256
2015-04-14 15:47:24,312 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884752591544320
2015-04-14 15:47:24,315 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884752536911873
2015-04-14 15:47:24,318 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884751219986432
2015-04-14 15:47:24,320 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884750620258305
2015-04-14 15:47:24,325 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884749974147072
2015-04-14 15:47:24,340 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884743338917888
2015-04-14 15:47:24,342 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884741493272577
2015-04-14 15:47:24,343 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884739387719680
2015-04-14 15:47:24,344 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884737307549696
2015-04-14 15:47:24,346 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884734723702784
2015-04-14 15:47:24,348 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884730059771905
2015-04-14 15:47:24,356 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884729225125888
2015-04-14 15:47:24,358 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884725802405888
2015-04-14 15:47:24,359 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884724938481665
2015-04-14 15:47:26,465 1.1.0.RELEASE DEBUG twitterSource-1-1 twitter.TwitterSearchChannelAdapter - Search uri:https://api.twitter.com/1.1/search/tweets.json?q=spring&since_id=587884724938481665
2015-04-14 15:47:26,865 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884766608916481
2015-04-14 15:47:26,867 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884766072025089
2015-04-14 15:47:26,869 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884765707116544
2015-04-14 15:47:26,871 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884764394299392
2015-04-14 15:47:26,872 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884761366003712
2015-04-14 15:47:26,878 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884759381966849
2015-04-14 15:47:26,880 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884756488032256
2015-04-14 15:47:26,882 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884752591544320
2015-04-14 15:47:26,884 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884752536911873
2015-04-14 15:47:26,886 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884751219986432
2015-04-14 15:47:26,887 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884750620258305
2015-04-14 15:47:26,889 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884749974147072
2015-04-14 15:47:26,890 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884743338917888
2015-04-14 15:47:26,900 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884741493272577
2015-04-14 15:47:26,903 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884739387719680
2015-04-14 15:47:29,004 1.1.0.RELEASE DEBUG twitterSource-1-1 twitter.TwitterSearchChannelAdapter - Search uri:https://api.twitter.com/1.1/search/tweets.json?q=spring&since_id=587884739387719680
2015-04-14 15:47:29,369 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884782945611776
2015-04-14 15:47:29,371 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884781305663488
2015-04-14 15:47:29,374 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884779506311169
2015-04-14 15:47:29,376 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884775895072768
2015-04-14 15:47:29,377 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884771893739520
2015-04-14 15:47:29,379 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884771717578753
2015-04-14 15:47:29,384 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884769138081792
2015-04-14 15:47:29,386 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884766608916481
2015-04-14 15:47:29,388 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884766072025089
2015-04-14 15:47:29,389 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884765707116544
2015-04-14 15:47:29,390 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884764394299392
2015-04-14 15:47:29,391 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884761366003712
2015-04-14 15:47:29,395 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884759381966849
2015-04-14 15:47:29,399 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884756488032256
2015-04-14 15:47:29,401 1.1.0.RELEASE  INFO twitterSource-1-1 transformer.TweetTransformer - Transforming tweet with id : 587884752591544320
2015-04-14 15:47:31,502 1.1.0.RELEASE DEBUG twitterSource-1-1 twitter.TwitterSearchChannelAdapter - Search uri:https://api.twitter.com/1.1/search/tweets.json?q=spring&since_id=587884752591544320

__________

Notice that tweet ID 587884752591544320 is picked up in second iteration as well although it was picked in the first.


The issue can be fixed in the doSendLine method of  TwitterSearchChannelAdapter.java where this.sinceId is being set to the last value of id. Instead, the statuses map can be sorted on ID, and the highest ID can be set for sinceId.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,196905600,,,9223372036854775807,true,dturanski(dturanski),,,,"0|i08d0f:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Failure to get message rates for modules with labels.,XD-2941,63189,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,aboyko,aboyko,10/Apr/15 7:48 AM,24/Apr/15 9:28 AM,10/Jul/21 8:37 AM,24/Apr/15 9:28 AM,1.1.1,1.2 GA,,,,,1.1.2,1.2 M1,REST,,,,,0,,,,,,,"Start XD distributed XD with specified management port and
xd:
  messageRateMonitoring:
    enabled: true
in servers.yml
to gather stats.

Create stream {{file | log}}, deploy it, navigate to Containers tab in Admin UI. Rates are shown correctly.
Create stream {{MYFILE: file | log}}, deploy it, navigate to Containers tab in Admin UI - none of the message rates are shown. Open browser dev tools console and note 500 error response.

spring-xd-dirt -> ContainersController lines 109-112 creates request to get message rates for modules. 
Typical request:
{{http://192.168.0.10:9292/management/jolokia/read/xd.str4:module=log.*,component=*,name=input/MeanSendRate}}

Typical response:
{code:json}
{""request"":{""mbean"":""xd.str4:component=*,module=log.1,name=input"",""attribute"":""MeanSendRate"",""type"":""read""},""value"":{""xd.str4:component=MessageChannel,module=log.1,name=input"":{""MeanSendRate"":0.0}},""timestamp"":1428675070,""status"":200}
{code}

For file module with label `MYFILE` the request is:
{{http://192.168.0.10:9292/management/jolokia/read/xd.str4:module=MYFILE.*,component=*,name=output/MeanSendRate}}

Response:
{code:json}
{""mbean"":""xd.str4:component=*,module=MYFILE.1,name=output"",""attribute"":""MeanSendRate"",""type"":""read""},""stacktrace"":""javax.management.InstanceNotFoundException: No MBean with pattern xd.str4:module=MYFILE.1,component=*,name=output found for reading attributes\n\tat org.jolokia.handler.ReadHandler.searchMBeans(ReadHandler.java:160)\n\tat org.jolokia.handler.ReadHandler.fetchAttributesForMBeanPattern(ReadHandler.java:126)\n\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:116)\n\tat org.jolokia.handler.ReadHandler.doHandleRequest(ReadHandler.java:37)\n\tat org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:160)\n\tat org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:97)\n\tat org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:98)\n\tat org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:411)\n\tat org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:158)\n\tat org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)\n\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:86)\n\tat org.jolokia.http.AgentServlet$4.handleRequest(AgentServlet.java:435)\n\tat org.jolokia.http.AgentServlet.handleSecurely(AgentServlet.java:320)\n\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:291)\n\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:252)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:735)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)\n\tat org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:146)\n\tat org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(JolokiaMvcEndpoint.java:130)\n\tat sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:735)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:370)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:971)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1033)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n\tat java.lang.Thread.run(Thread.java:744)\n"",""error_type"":""javax.management.InstanceNotFoundException"",""error"":""javax.management.InstanceNotFoundException : No MBean with pattern xd.str4:module=MYFILE.1,component=*,name=output found for reading attributes"",""status"":404}
{code}

This reponse results in JSONException in the ContainersController because it's missing 'value' property.

The module id is somewhat problematic in the request: {{xd.str4:module=log.*}} index is {{\*}} but should be index within the stream, also node type (source/sink/processor) is missing. Therefore, stream {{mail | mail}} is suffering from the same problem.

Would be nice to have some sort of a bulk request to query more than one module for input/output message rates, such that I could get all message rates for modules in the stream.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,197251200,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1564,"0|i08dxn:",9223372036854775807,9223372036854775807,,,Sprint 47,,,3.0,,,,,,,,,,,,,,,,,,,
All Modules are undeployed on Zookeeper Connection Loss / GC Pause,XD-2939,63181,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Deferred,,prietzler,prietzler,10/Apr/15 1:23 AM,13/Jul/15 11:55 AM,10/Jul/21 8:37 AM,13/Jul/15 11:53 AM,1.1.1,,,,,,,,Runtime,,,,,0,,,,,,,"We are currently running single node mode and experiencing the same problem as described here: http://stackoverflow.com/questions/28170864/spring-xd-jobs-automatic-undeployment-on-zookeeper-time-out-in-xd-singlenode-mo

I've turned on GC logs and can see that there is a 29.7 second GC pause around the time when this happens. We've already set the Zookeeper timeouts (as suggested in the stackoverflow question) - without effect - we can just see, that after the configured timeout the ConnectionLoss errors start to appear.

Sorry for the priorization - for us this currently is a major issue since we are running in singlenode mode (as a starter) and our system goes down once a day. Would this behavior change if we switch to distributed mode ?

I know that a GC pause of 29 secs is really long, however, I've already seen such pauses for batch systems pretty often. Long running jobs tend to move objects to older generations and sometimes there isn't much of a chance to do something against it. So I guess it's worth considering this in the behavior of XD ?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189043200,,2015-07-13 11:53:49.563,9223372036854775807,true,sabby(sabby),,,,"0|i08crb:",9223372036854775807,9223372036854775807,,,,,,0.0,,"12/Apr/15 11:25 PM;prietzler;We now have further information that might be of use for you. The long garbage collection pause was due to the fact that we experienced an unusally high system load at certain points in time. It looks like that a combination of high memory usage and heavy database queries brought the system into a situation of very high load. The system recovers within a few minutes and starts to work as usual (in general - not due to the fact of modules being undeployed). 

I know that  using single node mode is just a starter - we took the decision to use this until we need to scale. But maybe this is  a hint that something in the Zookeeper reconnection is broken and this does affect the distributed runtime too ?

Unfortunately, this is very hard to reproduce! Just a few hints: Our case included a DISTINCT database query among a few million database rows (took a really long time ...) in combination with pretty slow hard disks + RAID + the fact that we had a bug and tried to load those rows into memory + Java 8, where an OutOfMemory seems to be delayed for as long as possible - there actually never was one ?

We've solved the issue by solving our problems - the right way to do it - but I'm keeping this in here in order to give you the chance to decide if this is some kind of robustness issue for your or not. ","13/Jul/15 11:53 AM;sabby;Hello there, [~prietzler]: We do not recommend a topology around {{singlenode}} for production deployments. This could be challenging to reproduce though. Looks like you may have it setup as distributed cluster to get around this issue - did I get that right? If you haven't, please do port this over and let us know if you have any issues with it. We will be happy to review it; closing it for now.

As an FYI: We are revisiting the foundation-level core infrastructure of distributed deployments. {{singlenode}} is still relevant only for prototyping needs. 

Thanks very much for all the relevant details and explanations.",,,,,,,,,,,,,,,,
Login page is missing style info when secured,XD-2931,63157,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,hillert,iperumal,iperumal,08/Apr/15 4:05 PM,24/Apr/15 1:43 PM,10/Jul/21 8:37 AM,24/Apr/15 1:43 PM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"If the admin UI is secured, the login page is displayed without any styles.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,196041600,,2015-04-23 15:30:05.535,9223372036854775807,true,hillert(hillert),,,https://github.com/spring-projects/spring-xd/pull/1570,"0|i08clz:",9223372036854775807,9223372036854775807,,,Sprint 47,,,1.0,,"23/Apr/15 3:30 PM;hillert;Submitted 1st PR: https://github.com/spring-projects/spring-xd/pull/1570","23/Apr/15 3:51 PM;hillert;2nd PR: https://github.com/spring-projects/spring-xd-admin-ui-client/pull/2",,,,,,,,,,,,,,,,
Can't use Apache Velocity in custom modules,XD-2927,63148,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kdowbecki,kdowbecki,08/Apr/15 9:48 AM,09/Apr/15 12:43 PM,10/Jul/21 8:37 AM,,1.1.1,1.1 GA,,,,,,,,,,,,0,,,,,,,"Creating a custom processor module with Apache Velocity (org.apache.velocity:velocity:1.7) as dependency results in {{java.lang.ClassNotFoundException}} during stream deployment:

{code}
2015-04-08 17:35:32,595 1.1.1.RELEASE  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@144d1f50 moduleName = 'custom-velocity-processor', moduleLabel = 'custom-velocity-processor', group = 'velocity-stream', sourceChannelName = [null], sinkChannelName = [null], index = 1, type = processor, parameters = map[[empty]], children = list[[empty]]]
2015-04-08 17:35:32,768 1.1.1.RELEASE  WARN DeploymentsPathChildrenCache-0 support.DefaultListableBeanFactory - FactoryBean threw exception from getObjectType, despite the contract saying that it should return null if the type of its object cannot be determined yet
java.lang.NoClassDefFoundError: org/apache/velocity/app/VelocityEngine
	at org.springframework.ui.velocity.VelocityEngineFactoryBean.getObjectType(VelocityEngineFactoryBean.java:69)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getTypeForFactoryBean(FactoryBeanRegistrySupport.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryBean(AbstractAutowireCapableBeanFactory.java:795)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isTypeMatch(AbstractBeanFactory.java:542)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:436)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:404)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:398)
	at org.springframework.integration.jmx.config.JmxIntegrationConfigurationInitializer.registerMBeanExporterHelperIfNecessary(JmxIntegrationConfigurationInitializer.java:42)
	at org.springframework.integration.jmx.config.JmxIntegrationConfigurationInitializer.initialize(JmxIntegrationConfigurationInitializer.java:38)
	at org.springframework.integration.config.IntegrationConfigurationBeanFactoryPostProcessor.postProcessBeanFactory(IntegrationConfigurationBeanFactoryPostProcessor.java:48)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:214)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ClassNotFoundException: org.apache.velocity.app.VelocityEngine
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 39 more
{code}

Attached is module source code. Executing commands in {{xd-shell-commands.cmd}} file is enough to trigger the exception.

Everything works when velocity jar is placed in {{$XD_HOME/lib}} and excluded from the processor module.",,,,,,,,,,,,,,,,,,,,,,,,"08/Apr/15 9:50 AM;kdowbecki;custom-velocity-processor.zip;https://jira.spring.io/secure/attachment/22734/custom-velocity-processor.zip",,,,,,,,,,,,,197251200,,2015-04-09 07:15:09.037,9223372036854775807,false,dturanski(dturanski),,,,"0|i08ck7:",9223372036854775807,9223372036854775807,,,,,,1.0,,"09/Apr/15 7:15 AM;dturanski;Can you post your build script (e.g. pom.xml) as well.? Or confirm that the velocity jar is packaged with the module. ","09/Apr/15 10:40 AM;kdowbecki;Maven module source code was attached in {{custom-volicty-processor.zip}} archive. After unpacking {{mvn clean package}} and {{xd-shell --cmdfile ./xd-shell-commands.cmd}} should be enough to trigger the problem.

There is an integration test based on spring-xd-test dependency in the Maven module however it's passing. Problem appears only after uploading to actual Spring XD container.","09/Apr/15 12:43 PM;dturanski;This happens because xd/lib/spring-context-support-4.1.4.RELEASE.jar provides _org/springframework/ui/velocity/VelocityEngineFactoryBean_ and is loaded by the Parent classloader. It then tries to load _org/apache/velocity/app/VelocityEngine_ which is visible to the Module class loader.  There is no easy fix for this. The easiest thing ATM is to drop the jar in xd/lib as you have done.  cc: [~eric.bottard]",,,,,,,,,,,,,,,
Ability to tap spark streaming processor output,XD-2924,63132,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,07/Apr/15 6:56 PM,14/May/15 3:55 PM,10/Jul/21 8:37 AM,14/May/15 3:55 PM,,,,,,,1.1.3,1.2 RC1,,,,,,0,,,,,,,We need to support adding a tap stream that connects to spark streaming processor module's output channel.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Create main stream:
stream create a1 --definition ""http | spark-processor | log"" --deploy
Create tap stream:
stream create a2 --definition ""tap:stream:spark-processor > count"" --deploy",3.0,197424000,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1548,"0|hzzzn6:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,,,,,,,,,,,,,,,,,,
Not able to connect a pubsub channel to spark streaming module,XD-2923,63131,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,07/Apr/15 6:10 PM,21/Apr/15 3:30 PM,10/Jul/21 8:37 AM,21/Apr/15 3:30 PM,,,,,,,1.1.2,1.2 M1,,,,,,0,,,,,,,"If a spark streaming module is setup to connect to a pub/sub channel (a topic or a tap channel), then it doesn't bind to it.

For instance, if I have a stream ""ingest"" with a definition ""http | log"" and want to create another stream as,
""tap:stream:ingest > spark-processor | count"" then this stream doesn't work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Create a stream with a spark streaming module that taps into a pub/sub channel.,1.0,196214400,,2015-04-21 15:27:52.286,9223372036854775807,false,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1545,"0|i08bye:v",9223372036854775807,9223372036854775807,,,Sprint 47,,,3.0,,"21/Apr/15 3:27 PM;mark.fisher;backported to 1.1.x:
https://github.com/spring-projects/spring-xd/commit/a81f1439ac259e64f6992cf44944ac63b9629e5e","21/Apr/15 3:28 PM;mark.fisher;merged into master:
https://github.com/spring-projects/spring-xd/commit/a06668d2af0ac620672c46e63f992f6594312620",,,,,,,,,,,,,,,,
Sqoop Module not running,XD-2912,63099,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,monasj1,monasj1,06/Apr/15 8:46 AM,22/Apr/15 7:42 AM,10/Jul/21 8:37 AM,13/Apr/15 6:49 AM,,,,,,,,,,,,,,0,Module,Sqoop,waiting-for-reporter,,,,"Can  not get any jobs created using Scoop Module to run. Have tried both the direct implementation using module definition and job create from shell.

Job creates , deploys and goes into execution mode. Runs endlessly no return. Attaching container log and job definition:

job create sqoop96 --definition ""sqoop --command=import --args='--table INV.MTL_CATEGORY_SETS_B -m=1 --connect jdbc:oracle:thin:@xxxxx.xxx.xxx --username ****** --password *********'"" --deploy

--Container Log
2015-04-06 15:38:23,720 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: Created MRAppMaster for application appattempt_1428324095255_0006_000001
2015-04-06 15:38:24,041 WARN [main] org.apache.hadoop.util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2015-04-06 15:38:24,058 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: Executing with tokens:
2015-04-06 15:38:24,058 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: Kind: YARN_AM_RM_TOKEN, Service: , Ident: (appAttemptId { application_id { id: 6 cluster_timestamp: 1428324095255 } attemptId: 1 } keyId: 723784990)
2015-04-06 15:38:24,213 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: Using mapred newApiCommitter.
2015-04-06 15:38:24,811 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: OutputCommitter set in config null
2015-04-06 15:38:24,864 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: OutputCommitter is org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter
2015-04-06 15:38:24,895 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.jobhistory.EventType for class org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler
2015-04-06 15:38:24,897 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.job.event.JobEventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$JobEventDispatcher
2015-04-06 15:38:24,898 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.job.event.TaskEventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$TaskEventDispatcher
2015-04-06 15:38:24,899 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptEventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$TaskAttemptEventDispatcher
2015-04-06 15:38:24,900 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.commit.CommitterEventType for class org.apache.hadoop.mapreduce.v2.app.commit.CommitterEventHandler
2015-04-06 15:38:24,906 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.speculate.Speculator$EventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$SpeculatorEventDispatcher
2015-04-06 15:38:24,906 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.rm.ContainerAllocator$EventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$ContainerAllocatorRouter
2015-04-06 15:38:24,907 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.launcher.ContainerLauncher$EventType for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$ContainerLauncherRouter
2015-04-06 15:38:24,926 INFO [main] org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: Default file system is set solely by core-default.xml therefore -  ignoring
2015-04-06 15:38:24,941 INFO [main] org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: Default file system is set solely by core-default.xml therefore -  ignoring
2015-04-06 15:38:24,960 INFO [main] org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: Default file system is set solely by core-default.xml therefore -  ignoring
2015-04-06 15:38:24,979 INFO [main] org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: Emitting job history data to the timeline server is not enabled
2015-04-06 15:38:25,032 INFO [main] org.apache.hadoop.yarn.event.AsyncDispatcher: Registering class org.apache.hadoop.mapreduce.v2.app.job.event.JobFinishEvent$Type for class org.apache.hadoop.mapreduce.v2.app.MRAppMaster$JobFinishEventHandler
2015-04-06 15:38:25,295 INFO [main] org.apache.hadoop.metrics2.impl.MetricsConfig: loaded properties from hadoop-metrics2.properties
2015-04-06 15:38:25,353 INFO [main] org.apache.hadoop.metrics2.impl.MetricsSystemImpl: Scheduled snapshot period at 10 second(s).
2015-04-06 15:38:25,353 INFO [main] org.apache.hadoop.metrics2.impl.MetricsSystemImpl: MRAppMaster metrics system started
2015-04-06 15:38:25,362 INFO [main] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: Adding job token for job_1428324095255_0006 to jobTokenSecretManager
2015-04-06 15:38:25,476 INFO [main] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: Not uberizing job_1428324095255_0006 because: not enabled;
2015-04-06 15:38:25,489 INFO [main] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: Input size for job job_1428324095255_0006 = 0. Number of splits = 1
2015-04-06 15:38:25,489 INFO [main] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: Number of reduces for job job_1428324095255_0006 = 0
2015-04-06 15:38:25,489 INFO [main] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: job_1428324095255_0006Job Transitioned from NEW to INITED
2015-04-06 15:38:25,490 INFO [main] org.apache.hadoop.mapreduce.v2.app.MRAppMaster: MRAppMaster launching normal, non-uberized, multi-container job job_1428324095255_0006.
2015-04-06 15:38:25,515 INFO [main] org.apache.hadoop.ipc.CallQueueManager: Using callQueue class java.util.concurrent.LinkedBlockingQueue
2015-04-06 15:38:25,522 INFO [Socket Reader #1 for port 51164] org.apache.hadoop.ipc.Server: Starting Socket Reader #1 for port 51164
2015-04-06 15:38:25,543 INFO [main] org.apache.hadoop.yarn.factories.impl.pb.RpcServerFactoryPBImpl: Adding protocol org.apache.hadoop.mapreduce.v2.api.MRClientProtocolPB to the server
2015-04-06 15:38:25,543 INFO [IPC Server Responder] org.apache.hadoop.ipc.Server: IPC Server Responder: starting
2015-04-06 15:38:25,543 INFO [IPC Server listener on 51164] org.apache.hadoop.ipc.Server: IPC Server listener on 51164: starting
2015-04-06 15:38:25,544 INFO [main] org.apache.hadoop.mapreduce.v2.app.client.MRClientService: Instantiated MRClientService at sandbox.hortonworks.com/192.168.3.128:51164
2015-04-06 15:38:25,598 INFO [main] org.mortbay.log: Logging to org.slf4j.impl.Log4jLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
2015-04-06 15:38:25,601 INFO [main] org.apache.hadoop.http.HttpRequestLog: Http request log for http.requests.mapreduce is not defined
2015-04-06 15:38:25,609 INFO [main] org.apache.hadoop.http.HttpServer2: Added global filter 'safety' (class=org.apache.hadoop.http.HttpServer2$QuotingInputFilter)
2015-04-06 15:38:25,614 INFO [main] org.apache.hadoop.http.HttpServer2: Added filter AM_PROXY_FILTER (class=org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter) to context mapreduce
2015-04-06 15:38:25,614 INFO [main] org.apache.hadoop.http.HttpServer2: Added filter AM_PROXY_FILTER (class=org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter) to context static
2015-04-06 15:38:25,616 INFO [main] org.apache.hadoop.http.HttpServer2: adding path spec: /mapreduce/*
2015-04-06 15:38:25,616 INFO [main] org.apache.hadoop.http.HttpServer2: adding path spec: /ws/*
2015-04-06 15:38:25,624 INFO [main] org.apache.hadoop.http.HttpServer2: Jetty bound to port 38343
2015-04-06 15:38:25,624 INFO [main] org.mortbay.log: jetty-6.1.26.hwx
2015-04-06 15:38:25,662 INFO [main] org.mortbay.log: Extract jar:file:/usr/hdp/2.2.0.0-2041/hadoop-yarn/hadoop-yarn-common-2.6.0.2.2.0.0-2041.jar!/webapps/mapreduce to /tmp/Jetty_0_0_0_0_38343_mapreduce____86ppbg/webapp
2015-04-06 15:38:25,901 INFO [main] org.mortbay.log: Started HttpServer2$SelectChannelConnectorWithSafeStartup@0.0.0.0:38343
2015-04-06 15:38:25,901 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Web app /mapreduce started at 38343
2015-04-06 15:38:26,261 INFO [main] org.apache.hadoop.yarn.webapp.WebApps: Registered webapp guice modules
2015-04-06 15:38:26,265 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.speculate.DefaultSpeculator: JOB_CREATE job_1428324095255_0006
2015-04-06 15:38:26,267 INFO [main] org.apache.hadoop.ipc.CallQueueManager: Using callQueue class java.util.concurrent.LinkedBlockingQueue
2015-04-06 15:38:26,267 INFO [Socket Reader #1 for port 58807] org.apache.hadoop.ipc.Server: Starting Socket Reader #1 for port 58807
2015-04-06 15:38:26,272 INFO [IPC Server Responder] org.apache.hadoop.ipc.Server: IPC Server Responder: starting
2015-04-06 15:38:26,272 INFO [IPC Server listener on 58807] org.apache.hadoop.ipc.Server: IPC Server listener on 58807: starting
2015-04-06 15:38:26,300 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: nodeBlacklistingEnabled:true
2015-04-06 15:38:26,300 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: maxTaskFailuresPerNode is 3
2015-04-06 15:38:26,300 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: blacklistDisablePercent is 33
2015-04-06 15:38:26,343 INFO [main] org.apache.hadoop.yarn.client.RMProxy: Connecting to ResourceManager at /0.0.0.0:8030
2015-04-06 15:38:26,410 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: maxContainerCapability: <memory:2250, vCores:32>
2015-04-06 15:38:26,410 INFO [main] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: queue: default
2015-04-06 15:38:26,415 INFO [main] org.apache.hadoop.mapreduce.v2.app.launcher.ContainerLauncherImpl: Upper limit on the thread pool size is 500
2015-04-06 15:38:26,417 INFO [main] org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: yarn.client.max-cached-nodemanagers-proxies : 0
2015-04-06 15:38:26,428 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: job_1428324095255_0006Job Transitioned from INITED to SETUP
2015-04-06 15:38:26,430 INFO [CommitterEvent Processor #0] org.apache.hadoop.mapreduce.v2.app.commit.CommitterEventHandler: Processing the event EventType: JOB_SETUP
2015-04-06 15:38:26,442 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: job_1428324095255_0006Job Transitioned from SETUP to RUNNING
2015-04-06 15:38:26,457 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: task_1428324095255_0006_m_000000 Task Transitioned from NEW to SCHEDULED
2015-04-06 15:38:26,459 INFO [AsyncDispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: attempt_1428324095255_0006_m_000000_0 TaskAttempt Transitioned from NEW to UNASSIGNED
2015-04-06 15:38:26,459 INFO [Thread-50] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: mapResourceRequest:<memory:1024, vCores:1>
2015-04-06 15:38:26,531 INFO [eventHandlingThread] org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: Event Writer setup for JobId: job_1428324095255_0006, File: hdfs://sandbox:8020/tmp/hadoop-yarn/staging/root/.staging/job_1428324095255_0006/job_1428324095255_0006_1.jhist
2015-04-06 15:38:27,413 INFO [RMCommunicator Allocator] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: Before Scheduling: PendingReds:0 ScheduledMaps:1 ScheduledReds:0 AssignedMaps:0 AssignedReds:0 CompletedMaps:0 CompletedReds:0 ContAlloc:0 ContRel:0 HostLocal:0 RackLocal:0
2015-04-06 15:38:27,466 INFO [RMCommunicator Allocator] org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: getResources() for application_1428324095255_0006: ask=1 release= 0 newContainers=0 finishedContainers=0 resourcelimit=<memory:500, vCores:0> knownNMs=1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,196992000,,2015-04-06 11:43:48.308,9223372036854775807,true,sabby(sabby),,,,"0|i08bye:r",9223372036854775807,9223372036854775807,,,Sprint 47,,,0.0,,"06/Apr/15 11:43 AM;sabby;[~monasj1] It'd be great if you can share [more details|https://github.com/spring-projects/spring-xd/wiki/Project-and-Community#improve-spring-xd] about the infrastructure and XD cluster setup.  ","08/Apr/15 11:43 AM;bzeyben;Even specifying the job definition with the necessary fsUri and --resourceManager info does not help.

job create sqoop_lookup --definition ""sqoop --command=import --url=jdbc:oracle:thin:@XXXXXXXXX --fsUri=hdfs://sondbdl1hn1.isus.emc.com:8020 --resourceManagerHost=bdlhdcdev01.isus.emc.com --resourceManagerPort=8032 --username=********* --password=********* --args='--query=\""SELECT * FROM MASTERDATA.W_LOOKUP_D WHERE $CONDITIONS \"" --target-dir=/user/zeybeb/workspace/ent/masterdata_src/lookup_d -m 1' "" --deploy

The process is hanging until it times out.","09/Apr/15 7:37 AM;thomas.risberg;If you look at the Hadoop cluster, do you see these Sqoop jobs get queued over there? If there aren't enough available resources on the cluster the jobs might never transition to running and the XD job would just time out.","13/Apr/15 6:49 AM;sabby;Given that [~bzeyben] confirmed (by mail) this may not be an issue, until we hear otherwise, I will close this JIRA for time being. ",,,,,,,,,,,,,,
Identify and fix dependency conflicts in DIRT CP,XD-2881,62973,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,30/Mar/15 8:54 AM,04/Jul/15 12:33 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a developer, I need to investigate the differences in dependency versions, so when I create/deploy custom modules in XD, I don't run into CP/CL issues.",,,,,,,,,,,,,,,,,XD-2771,,,,,,,,,,,,,,,,,,,,198115200,,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz02",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Using a newer version of a spring-xd dependency is ignored in packaging ,XD-2878,62953,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,milo.nimrod,milo.nimrod,29/Mar/15 1:20 PM,29/Mar/15 1:20 PM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,Configuration,Runtime,,,,0,,,,,,,"When creating a new module with a dependeny which has a newer version than the one Spring-xd uses (in my example I use Jedis 2.6.1 and Spring-xd uses Jedis 2.5.2) the packaging ignores the dependency.

Using the solution of spring-boot-maven-plugin, doesn't help because it will only include what you explicitly add to the include section (transitive dependencies are not included)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,198201600,,,9223372036854775807,true,milo.nimrod(milo.nimrod),,,,"0|i08bgf:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Creating Streams sporadically using Kafka as a message bus throws TopicNotFound exception,XD-2873,62919,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Invalid,mbogoevici,grenfro,grenfro,26/Mar/15 11:59 AM,16/Jun/15 9:45 AM,10/Jul/21 8:37 AM,21/May/15 12:12 PM,1.1.1,,,,,,1.2 GA,,,,,,,1,,,,,,,"XD Version Spring XD 1.1.1.Release
1 Admin on own (on-metal) Rackspace machine
2 Containers each having own (on-metal) rackspace machine
1 zookeeper node collocated with admin

While executing XD performance testing on Rackspace using Kafka as a transport we occasionally get the following exception:
{noformat}
2015-03-26 18:36:30,677 1.1.1.RELEASE  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/4c3c9ccf-44db-4772-87c2-70c63b82c3aa/foo3.sink.throughput.1, type=CHILD_ADDED
2015-03-26 18:36:30,685 1.1.1.RELEASE  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module 'throughput' for stream 'foo3'
2015-03-26 18:36:30,820 1.1.1.RELEASE  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@19f0b0a6 moduleName = 'throughput', moduleLabel = 'throughput', group = 'foo3', sourceChannelName = [null], sinkChannelName = [null], index = 1, type = sink, parameters = map[[empty]], children = list[[empty]]]
2015-03-26 18:36:31,372 1.1.1.RELEASE ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
org.springframework.integration.kafka.core.TopicNotFoundException: No topic named 'foo3.0' found
	at org.springframework.integration.kafka.core.DefaultConnectionFactory.getPartitions(DefaultConnectionFactory.java:209)
	at org.springframework.xd.dirt.integration.kafka.KafkaMessageBus.createKafkaConsumer(KafkaMessageBus.java:640)
	at org.springframework.xd.dirt.integration.kafka.KafkaMessageBus.bindConsumer(KafkaMessageBus.java:454)
	at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindMessageConsumer(AbstractMessageBusBinderPlugin.java:275)
	at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindConsumerAndProducers(AbstractMessageBusBinderPlugin.java:158)
	at org.springframework.xd.dirt.plugins.stream.StreamPlugin.postProcessModule(StreamPlugin.java:73)
	at org.springframework.xd.dirt.module.ModuleDeployer.postProcessModule(ModuleDeployer.java:238)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:218)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

stream used to create the exception:
stream create foo4 --definition ""load-generator --messageSize=1000 --messageCount=10000000 | throughput"" --deploy

After failed deployment.  I destroy the stream and recreate it and it works fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,193622400,,2015-05-16 08:14:27.531,9223372036854775807,true,mark.pollack(mark.pollack),,,,"0|i08b8v:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,"16/May/15 8:14 AM;whummer;+1 . Also, I would suggest increasing the Priority of this issue, as it requires complicated resilience/fallback mechanisms (deploy/undeploy/destroy/re-create) on the client side, which should actually be the responsibility of the server. Would love to see this fixed soon. Thanks!","16/May/15 8:47 AM;mbogoevici;Thanks, W.H. for weighing in!

As an update, I think we will be able to address this in the 1.2 timeframe, which is forthcoming in the next weeks.","21/May/15 12:12 PM;sabby;Per [~mbogoevici], this is invalid. Closing this. ",,,,,,,,,,,,,,,
"Able to bypass authorization checks by appending "".json"" or "".xml""",XD-2872,62917,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,hillert,hillert,hillert,26/Mar/15 9:54 AM,08/May/15 9:18 AM,10/Jul/21 8:37 AM,06/May/15 8:40 AM,1.1.1,,,,,,1.2 RC1,,REST,,,,,0,security,,,,,,"How to reproduce:

1) Enable security
2) Use a user that has the following role only: ""ROLE_CREATE""
3) Make a normal REST call:

{code}
http://localhost:9393/runtime/containers
{code}

yields the *desired response*:

{code}
    {
       ""timestamp"": ""2015-03-26T16:51:17.010Z"",
       ""status"": 403,
       ""error"": ""Forbidden"",
       ""message"": ""Access is denied"",
       ""path"": ""/runtime/containers""
    }
{code}

Now try:

{code}
http://localhost:9393/runtime/containers.json
{code}

This produces:

{code}


    {
       ""links"":
       [
           {
               ""rel"": ""self"",
               ""href"": ""http://localhost:9393/runtime/containers{?page,size,sort}""
           }
       ],
       ""content"":
       [
           {
               ""containerId"": ""86eea5aa-b18e-41c5-a3f5-42dfa10713c1"",
               ""groups"": """",
               ""deploymentSize"": 0,
               ""deployedModules"":
               [
               ],
               ""messageRates"": null,
               ""attributes"":
               {
                   ""ip"": ""10.0.1.119"",
                   ""host"": ""INTEGRATION.local"",
                   ""groups"": """",
                   ""pid"": ""52686"",
                   ""id"": ""86eea5aa-b18e-41c5-a3f5-42dfa10713c1""
               },
               ""links"":
               [
                   {
                       ""rel"": ""self"",
                       ""href"": ""http://localhost:9393/runtime/containers/86eea5aa-b18e-41c5-a3f5-42dfa10713c1""
                   }
               ]
           }
       ],
       ""page"":
       {
           ""size"": 20,
           ""totalElements"": 1,
           ""totalPages"": 1,
           ""number"": 0
       }
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,198460800,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1562,"0|i08b8f:",9223372036854775807,9223372036854775807,,,Sprint 48,,,3.0,,"26/Mar/15 9:55 AM;hillert;Issue XD-2869 was partially masked by this issue.","26/Mar/15 10:04 AM;hillert;Interestingly - authorizations are enforced for e.g:

{code}
http://localhost:9393/modules/job/filejdbc.json
{code}","26/Mar/15 12:06 PM;hillert;The problem is the Authorization rules 
*org.springframework.xd.dirt.web.config.SecurityConfiguration.AuthorizationConfig.getRules()*

In *SecurityConfiguration#configureSimpleSecurity* we set the authorization for Spring Security. However, the rules defined in *application.yml* don't take into account file extensions such as *.xml* and *.json*. See:

{code}
  security:
    authorization:
      rules:
        # Streams
        - GET    /streams/definitions            => hasRole('ROLE_VIEW')
...
{code} ","26/Mar/15 12:18 PM;hillert;Should we set to false *ContentNegotiationConfigurer#favorPathExtension* (May require updating of Shell or Admin UI based REST calls) or tighten the authorization rules? ",,,,,,,,,,,,,,
Shell: Strange behavior when not logged in,XD-2870,62914,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,sabby,hillert,hillert,26/Mar/15 9:30 AM,26/Mar/15 9:36 AM,10/Jul/21 8:37 AM,,,,,,,,,,CLI,,,,,0,,,,,,,"If not properly logged-in you will see errors like this one: ""Command 'module list' was found but is not currently available (type 'help' then ENTER to learn about this command)""

It should possible state something like: ""You don't have the credentials to execute the respective command. Please ensure that you are properly authenticated and have the necessary security roles.""",,,,,,,,,,,,,,,,,XD-2871,,,,,,,,,,,,,,,,,,,,198460800,,,9223372036854775807,true,hillert(hillert),,,,"0|i08b7r:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Admin UI does not show all containers,XD-2866,62899,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,hillert,hillert,25/Mar/15 3:02 PM,31/Aug/15 5:47 PM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,,,,,,0,,,,,,,"We have 3 reported incidents so, still working on reproducing the issue.

1) You start multiple ""nodes"" but the admin-ui does not show all of them but logs do
2) By restarting the ""missing"" nodes they eventually show up in the Admin UI

",,,,,,,,,,,,,,,,,XD-2983,,,,,,,,,,,,,,,,,,,,198547200,,,9223372036854775807,true,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfi1",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Message Bus: Shut down Kafka Consumers completely before unbinding,XD-2865,62898,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,25/Mar/15 1:45 PM,26/Mar/15 8:34 AM,10/Jul/21 8:37 AM,26/Mar/15 8:34 AM,1.1 GA,,,,,,1.1.1,1.2 M1,Runtime,,,,,0,,,,,,,"This causes the following exception to be thrown in the log (without functional adverse effects)

org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'unknown.channel.name'.; nested exception is org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:81)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:101)
	at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter.access$300(KafkaMessageDrivenChannelAdapter.java:43)
	at org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter$AutoAcknowledgingChannelForwardingMessageListener.doOnMessage(KafkaMessageDrivenChannelAdapter.java:172)
	at org.springframework.integration.kafka.listener.AbstractDecodingMessageListener.onMessage(AbstractDecodingMessageListener.java:50)
	at org.springframework.integration.kafka.listener.QueueingMessageListenerInvoker.run(QueueingMessageListenerInvoker.java:121)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:107)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	... 13 more

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,198547200,XD-2356,,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|i08b47:",9223372036854775807,9223372036854775807,,,Sprint 46,,,2.0,,,,,,,,,,,,,,,,,,,
Admin leader election issue when using different management port,XD-2861,62878,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,25/Mar/15 12:32 AM,10/Apr/15 12:46 PM,10/Jul/21 8:37 AM,10/Apr/15 12:44 PM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"When the admin is started with the different management port (default is the same as that of admin http port), then the leadership is requested when the management context is setup. The leadership election should happen only using the Admin server application context.

With this, the following exception is thrown when deployment requests are handled:

2015-03-24 21:48:26,340 1.2.0.SNAP ERROR DeploymentSupervisor-0 queue.DistributedQueue - Exception processing queue item: queue-0000000004
org.springframework.xd.dirt.server.admin.deployment.DeploymentException: testStream
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployResource(AbstractInstancePersistingDeployer.java:164)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeploy(AbstractInstancePersistingDeployer.java:83)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployAll(AbstractInstancePersistingDeployer.java:109)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.deleteAll(AbstractInstancePersistingDeployer.java:117)
	at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.processDeploymentMessage(DeploymentMessageConsumer.java:115)
	at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.consumeMessage(DeploymentMessageConsumer.java:73)
	at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.consumeMessage(DeploymentMessageConsumer.java:43)
	at org.apache.curator.framework.recipes.queue.DistributedQueue.processMessageBytes(DistributedQueue.java:678)
	at org.apache.curator.framework.recipes.queue.DistributedQueue.processNormally(DistributedQueue.java:712)
	at org.apache.curator.framework.recipes.queue.DistributedQueue.access$300(DistributedQueue.java:65)
	at org.apache.curator.framework.recipes.queue.DistributedQueue$5.run(DistributedQueue.java:629)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Module deployment request path cache shouldn't be null.
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.xd.dirt.server.admin.deployment.zk.ZKDeploymentHandler.undeploy(ZKDeploymentHandler.java:81)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployResource(AbstractInstancePersistingDeployer.java:161)
	... 17 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,198633600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1519,"0|i08azr:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
deploy-working-dir is set to to root directory when container is started as service,XD-2856,62864,Bug,In Progress,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,dturanski,kdowbecki,kdowbecki,24/Mar/15 9:14 AM,08/Apr/15 10:03 AM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,Runtime,,,,,0,,,,,,,"When Spring XD is started as a service using {{service spring-xd-container start}} the deploy-working-dir in GemFire module is resolved to the top-most directory (on Linux ""/""). This directory is not writable by spring-xd user under which the process is executed.

When a stream using GemFire is created e.g. {{stream create --name gfTest --definition ""time | gemfire-json-server ...}} following exception will be thrown:

{code}
[error 2015/03/24 15:55:20.798 GMT  <DeploymentsPathChildrenCache-0> tid=0x34] Error when attempting to deploy JAR files on load.
java.io.IOException: Unable to write to deploy directory
	at com.gemstone.gemfire.internal.JarDeployer.verifyWritableDeployDirectory(JarDeployer.java:589)
	at com.gemstone.gemfire.internal.JarDeployer.loadPreviouslyDeployedJars(JarDeployer.java:68)
	at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.init(GemFireCacheImpl.java:839)
	at com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:620)
	at com.gemstone.gemfire.cache.client.ClientCacheFactory.basicCreate(ClientCacheFactory.java:207)
	at com.gemstone.gemfire.cache.client.ClientCacheFactory.create(ClientCacheFactory.java:162)
	at org.springframework.data.gemfire.client.ClientCacheFactoryBean.createCache(ClientCacheFactoryBean.java:93)
	at org.springframework.data.gemfire.CacheFactoryBean.init(CacheFactoryBean.java:271)
	at org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:455)
	at org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:77)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:251)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1469)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:743)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:214)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{code}

deploy-working-dir should be set to a directory which writable by spring-xd user (maybe java.io.tmpdir?).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,197337600,,2015-03-25 11:59:38.201,9223372036854775807,false,dturanski(dturanski),,,,"0|i08awv:",9223372036854775807,9223372036854775807,,,,,,1.0,,"25/Mar/15 11:59 AM;dturanski;Karol, 

According to the Gemfire engineers:

There is a gemfire property to set the directory:
cluster-configuration-dir

Try setting this to a writable directory. Also you can set enable-cluster-configuration-false to avoid this. 

See… http://gemfire.docs.pivotal.io/latest/userguide/index.html#reference/topics/gemfire_properties.html","25/Mar/15 12:40 PM;dturanski;This is a Gemfire configuration issue. Unrelated to XD.","25/Mar/15 1:09 PM;jblum;For clarification, the GemFire System property to disable GemFire *8's* [Cluster Configuration Service|http://gemfire.docs.pivotal.io/latest/userguide/index.html#deploying/gfsh/gfsh_persist.html] is set like so...

{{enable-cluster-configuration=false}}

However, this System property is used to disable the service, not to decide whether a member will attempt to fetch the shared, cluster-wide configuration, which is decided by...

{{use-cluster-configuration=[true|false]}}

If GemFire System properties are specified externally (to _GemFire_), usually the System property must be expressed with the ""{{gemfire.}}"" prefix.

I was also just reviewing the source code inside the {{GemFireImpl.init(:839)}} method and it would seem the JAR deployment happens irrespectively of whether the _Cluster Configuration Service_ has been enabled or not (so I may have misinformed [~dturanski], sorry David)

{code:java}
    try {
      //Deploy all the jars from the deploy working dir.
      new JarDeployer(getLogger(), this.system.getConfig().getDeployWorkingDir()).loadPreviouslyDeployedJars();
      requestAndApplySharedConfiguration();
      initializeDeclarativeCache();
{code}

So, I suspect you will still see the problem.  However, there is another System property for the ""_deployment working directory_"" ({{deploy-working-dir}}) used by the JAR deployment logic.

The default is set to the ""current working directory""...

{code:java}
  /**
   * The name of the ""deploy-working-dir"" property.
   */
  public static final String DEPLOY_WORKING_DIR = ""deploy-working-dir"";
  
  /**
   * Default will be the current working directory as determined by 
   * <code>System.getProperty(""user.dir"")</code>.
   */
  public static final File DEFAULT_DEPLOY_WORKING_DIR = new File(""."");
{code}

However, you should be able to set it to whatever directory is ""writable""...

{code}
  [gemfire.]deploy-working-dir=<path-to-writable-dir>
{code}

Hope this helps.","25/Mar/15 1:15 PM;kdowbecki;Spring XD 1.1.0.RELEASE is packaging GemFire 7.0.2, not 8.X","25/Mar/15 1:20 PM;jblum;This is true (because Spring XD has a dependency on Spring Data GemFire 1.5.1.RELEASE, which itself depends on GemFire 7.0.2); the Stack Trace made it appear as though Cluster Config was in play and that you were using GemFire *8*.  However, it is quite possible the JAR deployment logic was in GemFire 7.0.2 on Cache startup since GemFire 7.0 included _Gfsh_ with the 'deploy' command.  Clearly, those JARs would need to redeployed on start, especially if the application made use of +custom+ GemFire _CacheLoaders_, _CacheListeners_, or the like.

Anyway, the {{deploy-working-dir}} should hopefully solve your problem.  If it does not, let us know, thanks.","25/Mar/15 1:30 PM;kdowbecki;This issue can be triggered with default Spring XD modules with a trivial stream definition.

Why is it set to ""Won't Fix"" if the issues is in {{gemfire-json-server}} and {{gemfire-server}} sink connection configuration?","25/Mar/15 2:48 PM;dturanski;[~kdowbecki] - I assumed this was related to server side configuration since we have never seen it, but will reopen meanwhile.","25/Mar/15 3:18 PM;dturanski;[~kdowbecki]  - I'm thinking it would be worth a try to drop a gemfire.properties file in $XD_INSTALL/xd/config with deploy-working-dir set.  Gemfire should automatically pick it up.  Another way is to set JAVA_OPTS=-DgemfirePropertyFile=<path-to>/gemfire.properties  before starting the container.  Let me know if this fixes your issue. ","26/Mar/15 3:36 AM;kdowbecki;I'll be testing this on Monday","08/Apr/15 7:56 AM;sabby;[~kdowbecki] Any updates? Please let us know what you find out. ","08/Apr/15 8:53 AM;kdowbecki;Adding {{-Dgemfire.deploy-working-dir=/tmp}} to xd-container startup options is enough to remove this error. No new files were created under /tmp as we are not using custom JAR deployment functionality of GemFire.

I think that Spring XD should configure GemFire client connection in finer detail, at lease setting:
# deploy-working-dir
# log-level - currently using out-of-the-box config level which is very verbose
# log-file - so GemFire logs are not mixed with xd-container logs. Currently scrapping the logs with Splunk/Logstash/other is complicated because there is no single format.

Maybe this can be done in [gemfire-connection.groovy|https://github.com/spring-projects/spring-xd/blob/6bd17162c8a6da0f09f6f8809f694a060c71ecc0/modules/common/gemfire-connection.groovy]?

","08/Apr/15 10:03 AM;dturanski;[~kdowbecki] - I prefer that the gemfire modules are not concerned with configuring any specific gemfire properties. It's a slippery slope since there are so many of them. Instead, I think we need to document how the user may set these properties.  I would consider having the module reference a known properties location, which is less susceptible to surprises than the default gemfire properties discovery mechanisms. ",,,,,,
Launching XD admin fails with ZK holding existing stream data,XD-2854,62851,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,23/Mar/15 3:26 PM,30/Apr/15 12:16 PM,10/Jul/21 8:37 AM,31/Mar/15 3:24 PM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"Following exception is thrown when starting XD admin withe ZK holding the stream data:

2015-03-23 17:21:13,831 1.2.0.SNAP ERROR LeaderSelector-0 leader.LeaderSelector - The leader threw an exception
java.lang.NullPointerException
at com.fasterxml.jackson.core.JsonFactory.createParser(JsonFactory.java:822)
at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:896)
at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperStreamDefinitionRepository.findOne(ZooKeeperStreamDefinitionRepository.java:157)
at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperStreamDefinitionRepository.findOne(ZooKeeperStreamDefinitionRepository.java:56)
at org.springframework.xd.dirt.stream.dsl.StreamConfigParser.lookupStream(StreamConfigParser.java:654)
at org.springframework.xd.dirt.stream.dsl.ChannelNode.resolve(ChannelNode.java:144)
at org.springframework.xd.dirt.stream.dsl.SourceChannelNode.resolve(SourceChannelNode.java:54)
at org.springframework.xd.dirt.stream.dsl.StreamNode.resolve(StreamNode.java:125)
at org.springframework.xd.dirt.stream.dsl.StreamConfigParser.parse(StreamConfigParser.java:110)
at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:121)
at org.springframework.xd.dirt.stream.StreamFactory.createStream(StreamFactory.java:84)
at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentLoader.loadStream(DeploymentLoader.java:101)
at org.springframework.xd.dirt.server.admin.deployment.zk.DefaultDeploymentStateRecalculator.recalculateStreamStates(DefaultDeploymentStateRecalculator.java:96)
at org.springframework.xd.dirt.server.admin.deployment.zk.DefaultDeploymentStateRecalculator.onSupervisorElected(DefaultDeploymentStateRecalculator.java:182)
at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentSupervisor$LeaderListener.takeLeadership(DeploymentSupervisor.java:468)
at org.apache.curator.framework.recipes.leader.LeaderSelector$WrappedListener.takeLeadership(LeaderSelector.java:536)
at org.apache.curator.framework.recipes.leader.LeaderSelector.doWork(LeaderSelector.java:398)
at org.apache.curator.framework.recipes.leader.LeaderSelector.doWorkLoop(LeaderSelector.java:443)
at org.apache.curator.framework.recipes.leader.LeaderSelector.access$100(LeaderSelector.java:63)
at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:244)
at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:238)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,198201600,,2015-03-24 05:23:15.085,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1534,"0|i08atf:",9223372036854775807,9223372036854775807,,,Sprint 46,,,5.0,,"23/Mar/15 3:44 PM;iperumal;It looks like the issue is complicated as the current version assumes the module definitions are always set for the stream definition. Where as the previous ZK data wouldn't have module definitions at all. If we add null check on the findOne() in ZKStreamDefinitionRepository 

{code}
if (map.get(MODULE_DEFINITIONS_KEY) != null) {
				List<ModuleDefinition> moduleDefinitions = objectReader.readValue(map.get(MODULE_DEFINITIONS_KEY));
				streamDefinition.setModuleDefinitions(moduleDefinitions);
			}
{code}

This would still break the ModuleDescriptor.getModuleDefinition() as it will be null in this case.","23/Mar/15 4:31 PM;iperumal;If we want to support previous ZK data, then I think using the dummy resources to set ModuleDefinition type could possibly the only way. ","24/Mar/15 5:23 AM;grenfro;Steps to reproduce the problem.  
# Download Spring XD 1.1.
# Unzip Spring XD 1.1
# Start up the HSQLDB provided
# Startup XD-Admin
# Startup XD-Container
# Start up XD-Shell
# From the shell create the following streams
## stream create foo --definition ""time|log"" --deploy
## stream create foo2 --definition ""http|log"" --deploy
## stream create foo3 --definition ""http --port=9090 |transform --expression=payload.toUpperCase() |log"" --deploy
# Stop XD-Shell 
# Stop XD-Container
# Stop XD-Admin
# Stop hsqldb
# Go to a build from XD Master
# Start up the HSQLDB provided
# Startup XD-Admin
# Startup XD-Container

At this point the admin should start successfully but you will get the exception above.  The only workaround is to remove /xd from zookeeper
","30/Mar/15 7:51 AM;iperumal;Migration code support is added into 1.1.x:
https://github.com/spring-projects/spring-xd/pull/1522",,,,,,,,,,,,,,
XD admin ZK distributed queue consumer initialization issue,XD-2853,62848,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,23/Mar/15 2:45 PM,25/Mar/15 12:33 AM,10/Jul/21 8:37 AM,25/Mar/15 12:33 AM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"The ZK distributed queue consumer is initialized even before the module, stream, job deployment requests path cache are started. This could lead to issue when the consumer start processing the requests before the cache are initialized.

On such scenario, the following exception could be thrown:

2015-03-23 21:00:25,919 1.2.0.SNAP ERROR DeploymentSupervisor-0 queue.DistributedQueue - Exception processing queue item: queue-0000000002
org.springframework.xd.dirt.server.admin.deployment.DeploymentException: dataSender
        at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployResource(AbstractInstancePersistingDeployer.java:164)
        at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeploy(AbstractInstancePersistingDeployer.java:83)
        at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployAll(AbstractInstancePersistingDeployer.java:109)
        at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.deleteAll(AbstractInstancePersistingDeployer.java:117)
        at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.processDeploymentMessage(DeploymentMessageConsumer.java:115)
        at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.consumeMessage(DeploymentMessageConsumer.java:70)
        at org.springframework.xd.dirt.server.admin.deployment.zk.DeploymentMessageConsumer.consumeMessage(DeploymentMessageConsumer.java:43)
        at org.apache.curator.framework.recipes.queue.DistributedQueue.processMessageBytes(DistributedQueue.java:678)
        at org.apache.curator.framework.recipes.queue.DistributedQueue.processNormally(DistributedQueue.java:712)
        at org.apache.curator.framework.recipes.queue.DistributedQueue.access$300(DistributedQueue.java:65)
        at org.apache.curator.framework.recipes.queue.DistributedQueue$5.run(DistributedQueue.java:629)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Module deployment request path cache shouldn't be null.
        at org.springframework.util.Assert.notNull(Assert.java:112)
        at org.springframework.xd.dirt.server.admin.deployment.zk.ZKDeploymentHandler.undeploy(ZKDeploymentHandler.java:81)
        at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployResource(AbstractInstancePersistingDeployer.java:161)",,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/15 3:11 PM;grenfro;admin-1757.log;https://jira.spring.io/secure/attachment/22716/admin-1757.log",,,,,,,,,,,,1.0,198633600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1514,"0|i08atb:",9223372036854775807,9223372036854775807,,,Sprint 46,,,1.0,,"25/Mar/15 12:33 AM;iperumal;Created JIRA https://jira.spring.io/browse/XD-2861 to track a different issue which is related to admin server using different port for management.",,,,,,,,,,,,,,,,,
SqoopRunner should use resource manager scheduler option,XD-2847,62839,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,thomas.risberg,jvalkeal,jvalkeal,23/Mar/15 7:58 AM,23/Mar/15 8:05 AM,10/Jul/21 8:37 AM,,,,,,,,,,Batch,,,,,0,,,,,,,"In SqoopRunner we manually set rm address, fs address and yarn classpath. YarnConfiguration.RM_SCHEDULER_ADDRESS is also needed for appmaster to function properly.

Current workaround is to use config values which gets imported automatically:
{code}
spring:
    hadoop:
        config:
            yarn.resourcemanager.scheduler.address: <host>:8030
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,198806400,,,9223372036854775807,true,thomas.risberg(thomas.risberg),,,,"0|i08arj:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Kafka source should not try to decode payloads as Strings,XD-2842,62804,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,20/Mar/15 9:39 PM,24/Mar/15 1:32 PM,10/Jul/21 8:37 AM,24/Mar/15 1:32 PM,1.1 GA,,,,,,1.1.1,1.2 M1,,,,,,0,,,,,,,"Currently, the Kafka source uses a StringDecoder by default - which is an invalid assumption if the payload is not the result of String conversion.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,198979200,XD-2356,,9223372036854775807,false,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1513,"0|i08ak7:",9223372036854775807,9223372036854775807,,,Sprint 46,,,2.0,,,,,,,,,,,,,,,,,,,
XD-Admin fails to start,XD-2837,62795,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,iperumal,grenfro,grenfro,20/Mar/15 11:29 AM,26/Mar/15 8:28 AM,10/Jul/21 8:37 AM,23/Mar/15 10:48 AM,,,,,,,1.2 M1,,Runtime,,,,,0,,,,,,,"When starting xd-admin getting the following exception:
{noformat}
2015-03-20 14:25:53,904 1.2.0.SNAP  WARN main annotation.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'moduleRegistry' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Cannot create inner bean 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' of type [org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:382)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:157)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.xd.dirt.server.AdminServerApplication.run(AdminServerApplication.java:89)
	at org.springframework.xd.dirt.server.AdminServerApplication.main(AdminServerApplication.java:73)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1566)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 22 more
Caused by: java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.springframework.xd.dirt.module.ExtendedResource.<clinit>(ExtendedResource.java:47)
	at org.springframework.xd.dirt.module.WritableResourceModuleRegistry.afterPropertiesSet(WritableResourceModuleRegistry.java:123)
	at org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean.afterPropertiesSet(CustomModuleRegistryFactoryBean.java:70)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562)
	... 25 more
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.fs.FSDataInputStream
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 32 more
2015-03-20 14:25:53,911 1.2.0.SNAP ERROR main boot.SpringApplication - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'moduleRegistry' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Cannot create inner bean 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' of type [org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:382)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:157)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.xd.dirt.server.AdminServerApplication.run(AdminServerApplication.java:89)
	at org.springframework.xd.dirt.server.AdminServerApplication.main(AdminServerApplication.java:73)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1566)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)
	... 22 more
Caused by: java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.springframework.xd.dirt.module.ExtendedResource.<clinit>(ExtendedResource.java:47)
	at org.springframework.xd.dirt.module.WritableResourceModuleRegistry.afterPropertiesSet(WritableResourceModuleRegistry.java:123)
	at org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean.afterPropertiesSet(CustomModuleRegistryFactoryBean.java:70)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562)
	... 25 more
Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.fs.FSDataInputStream
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 32 more
2015-03-20 14:25:53,915 1.2.0.SNAP ERROR main server.AdminServerApplication - Error creating bean with name 'moduleRegistry' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Cannot create inner bean 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' of type [org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.xd.dirt.module.CustomModuleRegistryFactoryBean#175e137b' defined in class path resource [META-INF/spring-xd/internal/repositories.xml]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
{noformat}

Reproduced Locally (mac) and on EC2.
xd-singlenode works fine.
Commit: 4673b5ab97",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,198979200,,,9223372036854775807,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1511,"0|i08a83:4",9223372036854775807,9223372036854775807,,,Sprint 46,,,3.0,,,,,,,,,,,,,,,,,,,
XD distributed tests are broken,XD-2828,62752,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,17/Mar/15 6:32 PM,30/Apr/15 12:17 PM,10/Jul/21 8:37 AM,18/Mar/15 3:14 PM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"There are test failures running XD distributed tests. 

It looks like all the test failures are related to NPE on DeploymentProperties format:

java.lang.NullPointerException
	at org.springframework.xd.rest.domain.support.DeploymentPropertiesFormat.formatDeploymentProperties(DeploymentPropertiesFormat.java:72)
	at org.springframework.xd.rest.client.impl.JobTemplate.deploy(JobTemplate.java:71)
	at org.springframework.xd.distributed.test.JobStateTests.testJobStateTransition(JobStateTests.java:83)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,199238400,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1502,"0|i08a4m:",9223372036854775807,9223372036854775807,,,Sprint 45,,,1.0,,,,,,,,,,,,,,,,,,,
hdfs sink loses messages/data when container killed,XD-2824,62730,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Fixed,jvalkeal,thomas.risberg,thomas.risberg,16/Mar/15 11:55 AM,24/Nov/15 2:54 PM,10/Jul/21 8:37 AM,24/Nov/15 2:54 PM,,,,,,,,,Hadoop,Stream Module,,,,0,,,,,,,"Scenario running a ""rabbit | hdfs"" stream and killing the xd-container while stream is running.

Looks like the messages get's acked before the data is flushed to hdfs.

This results in some data lost due to data either in tmp file or cached in the dfs client.

Reference: VESC-387",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,177465600,,2015-11-24 14:53:58.86,9223372036854775807,true,sabby(sabby),,,,"0|i08a4v:",9223372036854775807,9223372036854775807,,,,,,5.0,,"24/Nov/15 2:53 PM;sabby;Addressed through XD-2882.",,,,,,,,,,,,,,,,,
Classpath issues with gemfire-json-server sink,XD-2817,62673,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,fredmelo,fredmelo,13/Mar/15 11:07 AM,18/May/15 10:33 AM,10/Jul/21 8:37 AM,18/May/15 10:33 AM,1.1 GA,,,,,,1.1.3,1.2 RC1,Stream Module,,,,,0,,,,,,,"The GemFire client for SpringXD is throwing java.lang.NoClassDefFoundError for the class com/gemstone/gemfire/cache/client/internal/PingOp after a Stream sinking to gemfire-json-server is destroyed.

Issue starts after destroying a stream, which makes me think we might be unloading the jar files from the classpath while still keeping a connection to the gemfire server.

Steps to reproduce:

1) Create a region in Gemfire to test

e.g.: gfsh>create region --name=Stocks --type=REPLICATE
Member  | Status
------- | -------------------------------------
server1 | Region ""/Stocks"" created on ""server1""


2) Create a simple stream in Spring XD that writes to that region in gemfire-json-server. Deploy it for single node and let it run for a few seconds.


e.g.:

XD$ stream create streamx --definition ""trigger --fixedDelay=3 | http-client --url='''https://query.yahooapis.com/v1/public/yql?q=select * from yahoo.finance.quote where symbol in (\""MSFT\"")&format=json&env=store://datatables.org/alltableswithkeys''' --httpMethod=GET | splitter --expression=#jsonPath(payload,'$.query.results.quote') | gemfire-json-server --useLocator=true --host=localhost --port=10334 --regionName=Stocks --keyExpression=payload.getField('Symbol')"" --deploy


3)  Destroy the stream

e.g.:
XD$  stream destroy streamx

3)  Wait a few seconds and check the xd-singlenode output.. you'll see the exception as following:

[error 2015/03/13 11:04:52.437 PDT  <poolTimer-client-pool-14> tid=0x15a] Unexpected error in pool task <com.gemstone.gemfire.cache.client.internal.LiveServerPinger$PingTask@635c9341>
java.lang.NoClassDefFoundError: com/gemstone/gemfire/cache/client/internal/PingOp
	at com.gemstone.gemfire.cache.client.internal.LiveServerPinger$PingTask.run2(LiveServerPinger.java:83)
	at com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1197)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at com.gemstone.gemfire.internal.ScheduledThreadPoolExecutorWithKeepAlive$DelegatingScheduledFuture.run(ScheduledThreadPoolExecutorWithKeepAlive.java:252)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,199584000,,2015-03-13 11:23:11.798,9223372036854775807,false,dturanski(dturanski),,,https://github.com/spring-projects/spring-xd/pull/1585,"0|hzzzma:",9223372036854775807,9223372036854775807,,,Sprint 49,,,3.0,,"13/Mar/15 11:23 AM;dturanski;[~fredmelo] - You may be right. The client cache, once created does not close. Since it's a true singleton, we can't close it when destroying a stream because there may be other streams using it. In sink:gemfire:
{code}
gfe.'client-cache'(id: 'client-cache', 'use-bean-factory-locator': false, close: false). 
{code}

Gemfire is loaded by the module class loader which goes away when the stream is destroyed.   ","13/Mar/15 11:39 AM;fredmelo;Yeap. Great.  Thanks a lot @David.
Do we have a solution or workaround in place? We're trying to use this as part of an important demo next week..
","13/Mar/15 12:16 PM;dturanski;I don't have an easy solution for this. Short term, I would try moving 
antlr-2.7.7.jar
gemfire-7.0.2.jar

from the gemfire module's lib to xd/lib","13/Mar/15 3:35 PM;fredmelo;Thanks.. Messing with the classload by moving the Gemfire / antlr jars to the XD classloader caused other errors:

java.lang.LinkageError: loader constraint violation: loader (instance of sun/misc/Launcher$AppClassLoader) previously initiated loading for a different type with name ""com/gemstone/gemfire/cache/client/internal/ExecutablePool""
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:455)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:367)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:360)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.gemstone.gemfire.cache.client.internal.PingOp.execute(PingOp.java:28)
	at com.gemstone.gemfire.cache.client.internal.LiveServerPinger$PingTask.run2(LiveServerPinger.java:83)
	at com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1197)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at com.gemstone.gemfire.internal.ScheduledThreadPoolExecutorWithKeepAlive$DelegatingScheduledFuture.run(ScheduledThreadPoolExecutorWithKeepAlive.java:252)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

[error 2015/03/13 15:33:16.825 PDT  <poolTimer-client-pool-10> tid=0x5f] Unexpected error in pool task <com.gemstone.gemfire.cache.client.internal.LiveServerPinger$PingTask@2e4b70c8>
java.lang.LinkageError: com/gemstone/gemfire/cache/client/internal/ExecutablePool
	at com.gemstone.gemfire.cache.client.internal.PingOp.execute(PingOp.java:28)
	at com.gemstone.gemfire.cache.client.internal.LiveServerPinger$PingTask.run2(LiveServerPinger.java:83)
	at com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1197)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at com.gemstone.gemfire.internal.ScheduledThreadPoolExecutorWithKeepAlive$DelegatingScheduledFuture.run(ScheduledThreadPoolExecutorWithKeepAlive.java:252)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
","13/Mar/15 3:50 PM;dturanski;Ok. I'll take a look","14/Mar/15 7:35 AM;dturanski;It works for me on Mac OS/X. What environment are you running?  Note the libs must be moved, not copied, from the module to xd/lib.  I was able to reproduce ^^^ when the jars are present in both locations.  

A related issue. I cut and paste your stream def without a locator running. The client cache attempts to connect to the locator after the stream is destroyed. ",,,,,,,,,,,,
Batch Job deployment screen only show 10 items...,XD-2812,62655,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Fixed,,bzeyben,bzeyben,12/Mar/15 6:51 AM,16/Jun/15 9:42 AM,10/Jul/21 8:37 AM,10/Jun/15 9:55 AM,,,,,,,1.1 GA,,,,,,,0,,,,,,,"The Batch Jobs Deployment screen 
('http://*****************:9393/admin-ui/#/jobs/deployments') UI screen is only showing 10 items without pagination and prohibiting users from launching their deployed jobs from the UI.

The jobs can only be launched via the RESTApi call

In release 1.0.3 the deployment page has not pagination but grows beyond 10 entries.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,191894400,,2015-06-10 09:55:25.785,9223372036854775807,true,mark.pollack(mark.pollack),,,,"0|i089of:",9223372036854775807,9223372036854775807,,,,,,5.0,,"10/Jun/15 9:55 AM;sabby;Pagination is added with the 1.1 release. Feel free to reopen it if you still find any anomalies. ",,,,,,,,,,,,,,,,,
deployed modules are not redeployed properly once the container come back online,XD-2811,62646,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,bzeyben,bzeyben,11/Mar/15 2:16 PM,11/Mar/15 8:14 PM,10/Jul/21 8:37 AM,11/Mar/15 8:00 PM,,,,,,,,,,,,,,0,,,,,,,"Deployed component s are not deployed to the containers that failed and restarted. 

We have 3 containers and 3 jobs where all jobs are deployed evenly, one job per container. However, when two of the containers fail and come back up, we end up with 3 jobs on 1 container.  See attached document for detail. 
",,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/15 2:16 PM;bzeyben;2015-03-11 05.15.47 pm.jpg;https://jira.spring.io/secure/attachment/22686/2015-03-11+05.15.47+pm.jpg",,,,,,,,,,,,,199756800,,2015-03-11 19:59:42.617,9223372036854775807,true,sabby(sabby),,,,"0|i089mf:",9223372036854775807,9223372036854775807,,,,,,5.0,,"11/Mar/15 7:59 PM;sabby;[~bzeyben]: When deploying the job, you can include in the [deployment manifest|https://github.com/spring-projects/spring-xd/wiki/Batch-Jobs#deployment-manifest-support-for-job] to pin it to a specific 'container group'. This would guarantee your original job deployment strategy, when recovering from fault scenarios. Note: the job will be in inconsistent/failed state until the container (with the group) comes back up and available. It is advisable that you have enough containers (belonging to the same group) are available as buffer.

Please reopen if you find any anomalies with deployment manifest or the group based deployments. ","11/Mar/15 8:04 PM;nellaivijay;Sabby,
We have three container nodes, please advice us. How can we create the container group on each nodes.
Which properties needs to be udpated in Server.yml

Thanks
Vijay","11/Mar/15 8:14 PM;sabby;[~nellaivijay] When starting containers you give it a [group-id|https://github.com/spring-projects/spring-xd/wiki/Deployment#groups] through the optional {{--groups}} parameter. When deploying the job, you'd use the [deployment manifest|https://github.com/spring-projects/spring-xd/wiki/Batch-Jobs#deployment-manifest-support-for-job] to dictate it to get deployed to a specific group. 

You can have 'n' number of containers belonging to a specific group as backup. If the container running the job goes down, the job will be automatically redeployed to an available container that belongs to the group.",,,,,,,,,,,,,,,
partition jobs (jdbchdfs) are running in sequence,XD-2810,62645,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,mminella,bzeyben,bzeyben,11/Mar/15 2:03 PM,14/Jul/15 7:50 AM,10/Jul/21 8:37 AM,,,,,,,,Waiting for Triage,,Batch,Ingest,,,,0,,,,,,,"The jdbchdfs jobs that are partitioned are running in sequence rather than in parallel. Our expectation with partition jobs is that they run in parallel.

Job configuration is:

jdbchdfs --driverClassName='oracle.jdbc.OracleDriver' --url='jdbc:oracle:thin:@=**********' --username='=**********' --password=********** --validationQuery='SELECT CURRENT_TIMESTAMP FROM DUAL' --tableName='HZ_ORGANIZATION_PROFILES' --columns='ORGANIZATION_PROFILE_ID, ..., VERSION_NUMBER' --partitions=10 --partitionColumn='ORGANIZATION_PROFILE_ID' --directory='/ingest/source/oracle11i/ar/hz_organization_profiles' --fileName=hz_organization_profiles --fileExtension=csv --delimiter=| --commitInterval=10000 --rollover=262144000 --dateFormat=yyyy-mmm-dd --partitionResultsTimeout=1800000 --testOnBorrow=false
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189043200,,2015-07-14 07:50:16.355,9223372036854775807,true,mminella(mminella),,,,"0|i089m7:",9223372036854775807,9223372036854775807,,,,,,5.0,,"14/Jul/15 7:50 AM;mminella;Are you seeing the partitions not being executed in parallel or multiple job instances not running in parallel?",,,,,,,,,,,,,,,,,
jdbdhdfs job definition parameter 'partitionResultsTimeout' issues,XD-2809,62644,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,mminella,bzeyben,bzeyben,11/Mar/15 1:53 PM,14/Jul/15 7:38 AM,10/Jul/21 8:37 AM,,,,,,,,Waiting for Triage,,,,,,,0,,,,,,,"The 'partitionResultsTimeout' parameter for jdbchdfs job definition cannot be set for the master step if the job has a partition definition.

The partitionResultsTimeout is set for the individual partition steps only. The master steps fails after the default timeout.",,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/15 1:53 PM;bzeyben;2015-03-11 04.52.03 pm.jpg;https://jira.spring.io/secure/attachment/22685/2015-03-11+04.52.03+pm.jpg",,,,,,,,,,,,,189043200,,2015-07-14 07:38:27.322,9223372036854775807,true,mminella(mminella),,,,"0|i089lz:",9223372036854775807,9223372036854775807,,,,,,5.0,,"14/Jul/15 7:38 AM;mminella;The {{partitionResultsTimeout}} is actually only set for the master (it sets the {{receiveTimeout}} on the {{MessageChannelPartitionHandler}}).  Can we see the job definition for this?",,,,,,,,,,,,,,,,,
Setting active profiles drops contiainer/admin profile,XD-2808,62643,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,jahubba,jahubba,11/Mar/15 1:04 PM,12/Oct/15 2:20 PM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,Configuration,,,,,0,,,,,,,"When setting an active property via SPRING_PROFILES_ACTIVE environment variable the profile set ContainerServerApplication or AdminServerApplication is ignored.

ConfigFileApplicationListener in spring boot has an if else in the load method which skips adding the additional properties added to the StandardEnvironment if the environment variable exists.

This could be a bug for Spring Boot, but I wasn't sure if the mutual exclusion was intentional.  Additionally it would be nice to know when this feature is included in spring xd if it is a spring boot bug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Be able to set active profiles from environment variables without loosing the container or admin properties.,,199756800,,,9223372036854775807,true,sabby(sabby),,,,"0|i089lr:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Module count not respected when label is used,XD-2806,62623,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,,dturanski,mark.fisher,10/Mar/15 3:16 PM,30/Apr/15 12:17 PM,10/Jul/21 8:37 AM,12/Mar/15 2:11 PM,1.1 GA,,,,,,1.2 M1,,Configuration,,,,,0,,,,,,,"{code}
xd:> stream create test --definition ""http | t1:transform --expression=payload | log""
xd:>stream deploy test --properties module.t1.count=2
Deployed stream 'test'
xd:>runtime modules
  Module Id            Container Id                          Options                                                                                                                                                                                            Deployment Properties                                                                       Unit status
  -------------------  ------------------------------------  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  ------------------------------------------------------------------------------------------  -----------
  test.processor.t1.1  393d3af0-68e8-49b2-8601-da063cfbf98a  {valid=true, expression=payload}                                                                                                                                                                   {consumer.sequence=1, producer.next.module.count=1, count=1, consumer.count=1, sequence=1}  deployed
  test.sink.log.1      f6bb3189-9c0e-44e8-962b-025e2288ffe3  {name=test, expression=payload, level=INFO}                                                                                                                                                        {consumer.sequence=1, count=1, consumer.count=1, sequence=1}                                deployed
  test.source.http.1   f6bb3189-9c0e-44e8-962b-025e2288ffe3  {sslPropertiesLocation=classpath:httpSSL.properties, maxContentLength=1048576, port=9000, messageConverterClass=org.springframework.integration.x.http.NettyInboundMessageConverter, https=false}  {producer.next.module.count=1, count=1, sequence=1}                                         deployed
{code}

*************************************
Works fine without the label:
*************************************
{code}
xd:>stream destroy test
Destroyed stream 'test'
xd:>stream create test --definition ""http | transform --expression=payload | log""
Created new stream 'test'
xd:>stream deploy test --properties module.transform.count=2
Deployed stream 'test'
xd:>runtime modules
  Module Id                   Container Id                          Options                                                                                                                                                                                            Deployment Properties                                                                       Unit status
  --------------------------  ------------------------------------  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  ------------------------------------------------------------------------------------------  -----------
  test.processor.transform.1  f6bb3189-9c0e-44e8-962b-025e2288ffe3  {valid=true, expression=payload}                                                                                                                                                                   {consumer.sequence=1, producer.next.module.count=1, count=2, consumer.count=2, sequence=1}  deployed
  test.processor.transform.2  393d3af0-68e8-49b2-8601-da063cfbf98a  {valid=true, expression=payload}                                                                                                                                                                   {consumer.sequence=2, producer.next.module.count=1, count=2, consumer.count=2, sequence=2}  deployed
  test.sink.log.1             393d3af0-68e8-49b2-8601-da063cfbf98a  {name=test, expression=payload, level=INFO}                                                                                                                                                        {consumer.sequence=1, count=1, consumer.count=1, sequence=1}                                deployed
  test.source.http.1          f6bb3189-9c0e-44e8-962b-025e2288ffe3  {sslPropertiesLocation=classpath:httpSSL.properties, maxContentLength=1048576, port=9000, messageConverterClass=org.springframework.integration.x.http.NettyInboundMessageConverter, https=false}  {producer.next.module.count=2, count=1, sequence=1}                                         deployed
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199843200,,2015-03-11 07:43:45.152,9223372036854775807,false,sabby(sabby),,,,"0|i000ie:wr29",9223372036854775807,9223372036854775807,,,Sprint 45,,,3.0,,"11/Mar/15 7:43 AM;mark.fisher;I added a comment to the more general issue that covers this case:
https://jira.spring.io/browse/XD-2140?focusedCommentId=113370&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-113370
","11/Mar/15 7:45 AM;mark.fisher;Also, it appears as though using module.transform.count=N will be applied to *all* transform modules within a stream, regardless of their label(s). So, as long as independent count values are not needed for the different instances of the transform module type, that is a temporary workaround. The real fix is hopefully trivial though as described in the linked comment above.",,,,,,,,,,,,,,,,
Module options are not trimmed,XD-2804,62618,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,kdowbecki,kdowbecki,10/Mar/15 9:35 AM,17/Mar/15 7:39 AM,10/Jul/21 8:37 AM,17/Mar/15 7:10 AM,1.1 GA,,,,,,1.1.1,1.2 M1,Runtime,,,,,0,,,,,,,"Spring XD 1.1 container will throw following exception: 
{code}
java.lang.IllegalStateException: Can't find class used for type of option 'myField': String 
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.makeSimpleModuleOptions(DefaultModuleOptionsMetadataResolver.java:147)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolveNormalMetadata(DefaultModuleOptionsMetadataResolver.java:202)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolve(DefaultModuleOptionsMetadataResolver.java:164)
	at org.springframework.xd.module.options.DelegatingModuleOptionsMetadataResolver.resolve(DelegatingModuleOptionsMetadataResolver.java:44)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:127)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:174)
	at org.springframework.xd.dirt.stream.AbstractDeployer.save(AbstractDeployer.java:96)
	...
{code}

when module properties have a trailing whitespace character in type property (in example below there is a trailing space in options.myField.type value):

{code}
options.myField.description = this is my field
options.myField.type = String 
{code}

Can the property values be trimmed before comparing to DefaultModuleOptionsMetadataResolver#SHORT_CLASSNAMES map  to avoid this problem?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199324800,,2015-03-17 07:10:02.019,9223372036854775807,true,sabby(sabby),,,,"0|i08a4j:",9223372036854775807,9223372036854775807,,,Sprint 45,,,1.0,,"17/Mar/15 7:10 AM;sabby;Thanks [~kdowbecki] for the contribution.",,,,,,,,,,,,,,,,,
module delete on windows throws exception,XD-2789,62554,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Won't Fix,,grenfro,grenfro,05/Mar/15 5:59 PM,13/Jul/15 12:39 PM,10/Jul/21 8:37 AM,13/Jul/15 12:39 PM,1.1 GA,,,,,,,,Stream Module,,,,,0,,,,,,,"used module upload for processor:payload-conversion (from XD samples)
All worked well until I tried to delete the module.
customModule in servers.yml was set to:
xd:
  customModule:
    home: file://c:/project/mymodulehome

StackTrace:
{noformat}
2015-03-06 01:54:33,460 1.1.0.RELEASE ERROR qtp1891077689-37 rest.RestController
Advice - Caught exception while handling a request
java.lang.IllegalArgumentException: Could not delete module 'processor:payload-c
onversion'
        at org.springframework.util.Assert.isTrue(Assert.java:65)
        at org.springframework.xd.dirt.module.ModuleDefinitionService.delete(Mod
uleDefinitionService.java:121)
        at org.springframework.xd.dirt.rest.ModulesController.delete(ModulesCont
roller.java:155)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.springframework.web.method.support.InvocableHandlerMethod.doInvok
e(InvocableHandlerMethod.java:221)
        at org.springframework.web.method.support.InvocableHandlerMethod.invokeF
orRequest(InvocableHandlerMethod.java:137)
        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocabl
eHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingH
andlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingH
andlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)
        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapt
er.handle(AbstractHandlerMethodAdapter.java:85)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(Dispatch
erServlet.java:943)
        at org.springframework.web.servlet.DispatcherServlet.doService(Dispatche
rServlet.java:877)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(Frame
workServlet.java:966)
        at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkSe
rvlet.java:890)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:761)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkSer
vlet.java:842)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684
)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1496)
        at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConf
iguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConf
iguration.java:291)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInterna
l(HiddenHttpMethodFilter.java:77)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInter
nal(HttpPutFormContentFilter.java:87)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter
Internal(WebRequestTraceFilter.java:100)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.security.web.FilterChainProxy.doFilterInternal(Fi
lterChainProxy.java:186)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChai
nProxy.java:160)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfig
uration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java
:499)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.j
ava:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.jav
a:557)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandl
er.java:231)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandl
er.java:1086)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:
428)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandle
r.java:193)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandle
r.java:1020)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.j
ava:135)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper
.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:370)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(Abstrac
tHttpConnection.java:494)
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(Abstra
ctHttpConnection.java:971)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.header
Complete(AbstractHttpConnection.java:1033)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)

        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnecti
on.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEn
dPoint.java:667)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEnd
Point.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPoo
l.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool
.java:543)
        at java.lang.Thread.run(Unknown Source)

{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200275200,,,9223372036854775807,true,sabby(sabby),,,,"0|i0893z:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
RabbitMQ server.yml options ignored,XD-2783,62546,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,pharris,pharris,05/Mar/15 8:38 AM,09/Mar/15 6:37 AM,10/Jul/21 8:37 AM,09/Mar/15 6:24 AM,,,,,,,,,,,,,,0,waiting-for-reporter,,,,,,"{{p-spring-xd}} defines values for the following parameters in {{servers.yml}}. These values are not being retrieved, and hence have to be manually added to each stream definition.
* {{addresses}}
* {{username}}
* {{password}}
* {{virtual_host}}

(cf XD-2675, XD-2741)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,A RabbitMQ stream can be deployed with default values read from servers.yml,,200016000,,2015-03-05 13:14:15.168,9223372036854775807,true,sabby(sabby),,,,"0|i0893b:",9223372036854775807,9223372036854775807,,,,,,2.0,,"05/Mar/15 1:14 PM;grussell;This has been supported for many moons (XD-1870) [commit | https://github.com/spring-projects/spring-xd/commit/b2a23b4b5cc7b0516062cd8a7675d2cd6d7d95de]; can you describe your test environment in more details?

I just ran a test with no problems...

*servers.yml*
{code}
# RabbitMQ properties
spring:
  rabbitmq:
   addresses: 10.0.0.3:1234
#   username: guest
#   password: guest
   virtual_host: /foo
#   useSSL: false
#   sslProperties:
{code}

{{xd:>stream create foo --definition ""time | rabbit"" --deploy}}

And I see messages arriving in queue {{foo}} in vhost {{/foo}} on {{10.0.0.3}} via port {{1234}}.","09/Mar/15 5:59 AM;nebhale;[~grussell] You're absolutely right.  Our problem with the {{exclusive}} queue appears to have caused this issue as well.  You can close this issue out.","09/Mar/15 6:37 AM;sabby;Thanks [~grussell] and [~nebhale] - closed this.",,,,,,,,,,,,,,,
PostgreSQL server.yml options ignored,XD-2782,62545,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Deferred,,pharris,pharris,05/Mar/15 8:36 AM,13/Jul/15 8:49 AM,10/Jul/21 8:37 AM,13/Jul/15 8:49 AM,,,,,,,,,,,,,,0,,,,,,,"{{p-spring-xd}} defines values for the following parameters in {{servers.yml}}. These values are not being retrieved, and hence have to be manually added to each stream definition.

* {{url}}
* {{username}}
* {{password}}
* {{driverClassName}}
* {{validationQuery}}

(cf XD-2675, XD-2741)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,A PostgreSQL stream can be deployed with default values read from servers.yml,,193190400,,2015-03-09 06:06:15.757,9223372036854775807,true,sabby(sabby),,,,"0|i08933:",9223372036854775807,9223372036854775807,,,,,,2.0,,"09/Mar/15 6:06 AM;nebhale;This issue is directly related to XD-2756.  Fundamentally the {{jdbc.properties}} file needs to prepopulated with something that looks like [this|https://jira.spring.io/browse/XD-2741?focusedCommentId=112657&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-112657].","26/May/15 9:35 AM;pharris;This issue can be closed as Invalid for the same reason as XD-2756 - we've made the changes in p-spring-xd that should handle this configuration correctly",,,,,,,,,,,,,,,,
Not possible to create a RabbitMQ to RabbitMQ stream,XD-2781,62544,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,pharris,pharris,05/Mar/15 8:27 AM,09/Mar/15 5:36 AM,10/Jul/21 8:37 AM,05/Mar/15 12:59 PM,,,,,,,,,,,,,,0,,,,,,,"We get the following error when trying a rabbit to rabbit stream (definition as shown in the error):

{code}
[STREAM TEST] WARN  Failure during end to end test
org.springframework.xd.rest.client.impl.SpringXDException: XD143E:(pos 141): Label 'rabbit' should be unique but module 'rabbit' (at position 0) and module 'rabbit' (at position 1) both use it
rabbit --queues=cxablknzdhvpotpo-source --addresses=10.85.30.129 --username=bef4412739e7d7fe929e --password=b8ace17e56456b7753a2 --vhost=/ | rabbit --exchange=cxablknzdhvpotpo-sink --addresses=10.85.30.129 --username=bef4412739e7d7fe929e --password=b8ace17e56456b7753a2 --vhost=/
                                                                                                                                             ^
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rabbit to rabbit stream possible,,200016000,,2015-03-05 12:59:20.457,9223372036854775807,false,nebhale(nebhale),,,,"0|i0892v:",9223372036854775807,9223372036854775807,,,,,,3.0,,"05/Mar/15 12:59 PM;grussell;When using multiple synonymed modules in a stream, you need to label at least one of them in order to disambiguate.

This is so you can target deployment properties for a specific module in the deployment manifest.

See [Labels | http://docs.spring.io/spring-xd/docs/1.1.0.RELEASE/reference/html/#_labels] for more information.

PS; for questions like this, please ask in the HipChat room first; JIRA is for bugs and feature requests. If a HipChat discussion results in the determination there is a need, that is the time to create a JIRA issue.

Thanks.","05/Mar/15 2:28 PM;pharris;Thanks Gary, I was unaware of labels but that certainly looks like the problem. I'm out of the office tomorrow but will double-check on Monday. And thanks for the HipChat advice.","09/Mar/15 5:36 AM;nebhale;Confirmed",,,,,,,,,,,,,,,
Unable to define port on RabbitMQ streams,XD-2780,62543,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,,pharris,pharris,05/Mar/15 8:05 AM,09/Mar/15 8:48 AM,10/Jul/21 8:37 AM,09/Mar/15 8:48 AM,1.1 GA,,,,,,,,,,,,,0,waiting-for-reporter,,,,,,The documentation for RabbitMQ says to use the --address option to specify a port. We've tried --address=1.2.3.4:5678 (and also --port=5678 just in case) but have been unable to get a successful deployment. Running the same stream definition on a default port (i.e. without specifying a port) does work.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"A successfully deployed stream running against a non-default port for:
a) a source
b) a sink",0.0,199929600,,2015-03-05 12:53:38.312,9223372036854775807,false,grussell(grussell),,,,"0|i0892n:",9223372036854775807,9223372036854775807,,,,,,2.0,,"05/Mar/15 12:53 PM;grussell;Hi Paul, 

Can you provide more context and a DEBUG log and/or stack trace?

First of all, I presume you mean {code}--addresses={code} not {code}--address={code} - address is not a valid module option.

I just tested this with no issues...

{{xd:>stream create foo --definition ""time | rabbit --addresses=10.0.0.3:1234"" --deploy}}

...and confirmed on the rabbit server that we're connected to 1234.
","09/Mar/15 5:44 AM;nebhale;It appears that the {{port}} problem was a red herring.  The problem actually lay with the queue being {{exclusive}} when it was created, but the problem was being masked by an ambiguous error message.

This issue can be closed out.","09/Mar/15 6:12 AM;grussell;Thanks [~nebhale]; is this (the misleading error message) something we should look at fixing in XD and/or Spring AMQP? Or was it something specific to the PCF environment?

I can try to reproduce. Is it as simple as trying to use an exclusive queue in a sink?","09/Mar/15 8:27 AM;nebhale;Yeah, we'd used a {{RabbitAdmin}} to create an exclusive queue and then hooked the {{rabbit}} source to it.  Because we weren't looking at the RabbitMQ logs (which showed a very helpful error):

{noformat}
""cannot obtain exclusive access to locked queue 'fbskftwehjmauqlt-source' in vhost '/'""
{noformat}

we missed the issue.  We were having trouble with some lost logs at the time, so there was a lot of mayhem in our explorations.  I believe that you guys simply kick out the exact same error that Rabbit is writing and that should have been sufficient.  No need to do any exploration for us; we're satisfied with how Spring XD is working here, the problem was on our end.","09/Mar/15 8:48 AM;grussell;Thanks.",,,,,,,,,,,,,
Fix error handling in jdbchdfs job ,XD-2779,62521,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,04/Mar/15 4:26 PM,13/Mar/15 12:53 PM,10/Jul/21 8:37 AM,13/Mar/15 12:53 PM,,,,,,,1.1.1,1.2 M1,Batch,Hadoop,,,,0,,,,,,,"The jdbchdfs job keeps the output stream open in case of error writing to HDFS. We should improve this and close it plus throw an exception.

We should also make sure the step is marked as failed instead of complete when an exception is thrown in the writer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,199584000,,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1492,"0|i088xr:",9223372036854775807,9223372036854775807,,,Sprint 45,,,3.0,,"13/Mar/15 10:59 AM;thomas.risberg;Need this backported to 1.1.x branch",,,,,,,,,,,,,,,,,
Update to SHDP 2.1.1 for fixing hdfs store writer to recover after error writing to hdfs,XD-2774,62495,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,thomas.risberg,thomas.risberg,thomas.risberg,03/Mar/15 9:20 AM,12/Mar/15 8:19 AM,10/Jul/21 8:37 AM,12/Mar/15 8:19 AM,1.0.1,1.1 GA,,,,,1.1.1,1.2 M1,Hadoop,,,,,1,,,,,,,"The hdfs sink doesn't recover after error writing to hdfs.

Steps to reproduce -

create a stream using hdfs sink with a small rollover:

{code}
xd:>stream create --name errtest --definition ""time | hdfs --rollover=50"" --deploy 
{code}

stop the datanode(s) and wait for an exception like:

{code}
2015-03-03 10:41:57,832 1.1.0.RELEASE ERROR task-scheduler-3 handler.LoggingHandler - org.springframework.messaging.MessageHandlingException: failed to write Message payload to HDFS; nested exception is org.apache.hadoop.ipc.RemoteException(java.io.IOException): File /xd/errtest/errtest-7.txt.tmp could only be replicated to 0 nodes instead of minReplication (=1).  There are 1 datanode(s) running and 1 node(s) are excluded in this operation.
	at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:1549)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:3200)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:641)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:482)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:619)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:962)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2039)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2035)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2033)

	at org.springframework.xd.integration.hadoop.outbound.HdfsStoreMessageHandler.handleMessageInternal(HdfsStoreMessageHandler.java:129)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.GeneratedMethodAccessor86.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:107)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:87)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy136.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:114)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:98)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy125.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:248)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:171)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:119)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:248)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:171)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:119)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:114)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:98)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy137.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.SourcePollingChannelAdapter.handleMessage(SourcePollingChannelAdapter.java:130)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:219)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:298)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:292)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.hadoop.ipc.RemoteException(java.io.IOException): File /xd/errtest/errtest-7.txt.tmp could only be replicated to 0 nodes instead of minReplication (=1).  There are 1 datanode(s) running and 1 node(s) are excluded in this operation.
	at org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.chooseTarget4NewBlock(BlockManager.java:1549)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getAdditionalBlock(FSNamesystem.java:3200)
	at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.addBlock(NameNodeRpcServer.java:641)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.addBlock(ClientNamenodeProtocolServerSideTranslatorPB.java:482)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:619)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:962)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2039)
	at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2035)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1628)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2033)

	at org.apache.hadoop.ipc.Client.call(Client.java:1468)
	at org.apache.hadoop.ipc.Client.call(Client.java:1399)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:232)
	at com.sun.proxy.$Proxy134.addBlock(Unknown Source)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.addBlock(ClientNamenodeProtocolTranslatorPB.java:399)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:187)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:102)
	at com.sun.proxy.$Proxy135.addBlock(Unknown Source)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.locateFollowingBlock(DFSOutputStream.java:1532)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.nextBlockOutputStream(DFSOutputStream.java:1349)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:588)
{code}

start the datanode(s) again, the sink never recovers and has to be undeployed and redeployed.
",,,,,,,,,,,,,SHDP-482,,,,XD-2740,,,,,,,,,,,,,,,,,,"* Upgrade to SHDP maintenance release
* Update XD's SHDP dependency to the maintenance release",5.0,200448000,,,9223372036854775807,false,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1493,"0|i088p2:",9223372036854775807,9223372036854775807,,,Sprint 45,,,5.0,,"03/Mar/15 9:22 AM;thomas.risberg;Reference: VESC-375",,,,,,,,,,,,,,,,,
spring-xd-module-parent creates resources outside of target folder,XD-2773,62493,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,kdowbecki,kdowbecki,03/Mar/15 7:07 AM,04/Mar/15 6:05 AM,10/Jul/21 8:37 AM,04/Mar/15 6:05 AM,1.1 GA,,,,,,,,,,,,,0,,,,,,,"Custom modules that use

{code}
<groupId>org.springframework.xd</groupId>
<artifactId>spring-xd-module-parent</artifactId>
<version>1.1.0.RELEASE</version>
{code}

as a parent will get a ""lib"" directory created in the module root source directory. This forces us to add additional ignores in version control system.

Following Maven convention all build files should be created under ""target"" folder so ""lib"" folder should be created as ""target/lib"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,200448000,,2015-03-04 06:05:59.436,9223372036854775807,false,dturanski(dturanski),,,,"0|i088s7:",9223372036854775807,9223372036854775807,,,,,,1.0,,"04/Mar/15 6:05 AM;dturanski;Duplicate of XD-2712",,,,,,,,,,,,,,,,,
spring-xd-dirt is not providing all $XD_HOME/lib libraries,XD-2771,62489,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,dturanski,kdowbecki,kdowbecki,03/Mar/15 5:24 AM,30/Mar/15 8:56 AM,10/Jul/21 8:37 AM,30/Mar/15 8:55 AM,,,,,,,,,,,,,,0,,,,,,,"Spring XD is packaging a spring-xd-dirt dependency which aims to provide runtime libraries.

spring-xd-drit-1.1.0.RELEASE is not providing all libraries from $XD_HOME/lib. See spring-xd-dirt-vs-lib.xlsx attachment generated with ""ls  $XD_HOME/lib"" and ""mvn dependency:list"" on a module with spring-xd-module-parent parent:
- 100+ JARs are not provided
- some are provided in different versions
- some are provided but not available in $XD_HOME/lib

This forces us to add and maintain missing dependencies in our own module parent e.g. to use commons-lang3 in our code which is present in $XD_HOME/lib but is not provided by spring-xd-dirt.

Why there are so many differences between $XD_HOME/lib and spring-xd-dirt?",,,,,,,,,,,,,,,,,,,,,,,,"03/Mar/15 5:24 AM;kdowbecki;spring-xd-dirt-vs-lib.xlsx;https://jira.spring.io/secure/attachment/22670/spring-xd-dirt-vs-lib.xlsx",,,,,,,,,,,,,198115200,,2015-03-04 06:17:38.423,9223372036854775807,true,sabby(sabby),,,,"0|hzzzyq:yk",9223372036854775807,9223372036854775807,,,Sprint 46,,,2.0,,"04/Mar/15 6:17 AM;dturanski;The module parent intentionally excludes some dependencies from spring-xd-dirt. Notably spring-xd-hadoop and spring-xd-spark-streaming.  Specifically here are the dependencies in spring-xd-module-parent.pom.  The intention is to provide spring-xd classes to support module development and test. Not things like commons-lang.  You may need to include third party dependencies if necessary. These will not be exported in your module jar if they are in the dirt class path.

{code}
<dependencies>
    <dependency>
      <groupId>org.springframework.xd</groupId>
      <artifactId>spring-xd-dirt</artifactId>
      <version>${spring.xd.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-xd-hadoop</artifactId>
          <groupId>org.springframework.xd</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-xd-spark-streaming</artifactId>
          <groupId>org.springframework.xd</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.xd</groupId>
      <artifactId>spring-xd-test</artifactId>
      <version>${spring.xd.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>spring-xd-hadoop</artifactId>
          <groupId>org.springframework.xd</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-data-hadoop-test</artifactId>
          <groupId>org.springframework.data</groupId>
        </exclusion>
        <exclusion>
          <artifactId>spring-data-hadoop</artifactId>
          <groupId>org.springframework.data</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
{code}","04/Mar/15 6:23 AM;dturanski;We need to look into the version mismatch issues. Are you using maven or gradle?","04/Mar/15 6:35 AM;kdowbecki;We are using maven.","30/Mar/15 8:55 AM;sabby;[~kdowbecki] Given the current design with {{spring-xd-module-parent.pom}} is working as expected, I'll close this and address the version mismatch problem via XD-2881. ",,,,,,,,,,,,,,
Inconsistent API in AbstractSingleNodeNamedChannelSink ,XD-2769,62478,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,kdowbecki,kdowbecki,02/Mar/15 10:51 AM,22/Apr/15 7:38 AM,10/Jul/21 8:37 AM,07/Apr/15 7:26 AM,1.1 GA,,,,,,1.2 M1,,Testing,,,,,0,,,,,,,"In [AbstractSingleNodeNamedChannelSink|https://github.com/spring-projects/spring-xd/blob/6bd17162c8a6da0f09f6f8809f694a060c71ecc0/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/test/sink/AbstractSingleNodeNamedChannelSink.java] the receive() and receivePayload() methods  are non-blocking.

Methods without timeout parameter are usually blocking and return the first message delivered to the channel (e.g. org.springframework.integration.channel.AbstractPollableChannel#receive()). 

Integration tests based on spring-xd-test dependency and embedded xd-singlenode are asynchronous. This makes AbstractSingleNodeNamedChannelSink receive method return null in all invocations because test thread is progressing faster than container can process the message in the background.

Would it be possible to make receive methods behave like in AbstractPollableChannel?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,198720000,,2015-03-23 06:40:52.155,9223372036854775807,false,sabby(sabby),,,,"0|i08byd:",9223372036854775807,9223372036854775807,,,Sprint 47,,,1.0,,"23/Mar/15 6:40 AM;grussell;Although {{AbstractPollingChannel.receive()}} is blocking, we *never* use it in test cases (and if there are any such remaining tests in SI, they need to be fixed).

The problem is that a bug in a test can hang the CI build server.

It is better to receive with a looong timeout so at least the build can fail rather than hang.

In most cases, in SI we use {{receive(10000)}} but the general rule of thumb is to wait at least 10x the expected timeout or 10 seconds, whichever is the larger.","23/Mar/15 10:09 AM;kdowbecki;In current implementation {{NamedChannelSink.receive()}} is immediately returning null because test thread is processing faster than the background thread which is handling the message, forcing me to use {{receive(10000)}} or similar every time.

In my opinion it would be cleaner if {{receive()}} and {{receivePayload()}} would block because test timeout can be configured externally e.g. with JUnit timeout @Rule or surefire.timeout property in Maven build.","23/Mar/15 10:33 AM;grussell;`receive(10000)` doesn't mean it will wait 10 seconds; it will wait *up to* 10 seconds before failing. This can be hidden within the test fixture.

In my experience, using external rules is too brittle; tests themselves know what a reasonable time to wait is.","23/Mar/15 11:27 AM;kdowbecki;What is the point of {{NamedChannelSink.receive()}} and {{receivePayload()}} if they pretty much always return null?

","23/Mar/15 11:35 AM;grussell;I'll defer to [~dturanski] for that; to be completely honest I am not at all familiar with this code; it was just the addition of a potentially infinitely blocking call within a test raised a red flag with me.","23/Mar/15 2:26 PM;dturanski;It's a bug. not intentional.",,,,,,,,,,,,
JMS Source Does Not Expose `acknowledge`,XD-2767,62473,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,02/Mar/15 6:17 AM,20/Mar/15 7:51 AM,10/Jul/21 8:37 AM,20/Mar/15 7:51 AM,1.0.4,1.1 GA,,,,,1.1.1,1.2 M1,Stream Module,,,,,0,,,,,,,"Since the message-driven adapter uses a {{DMLC}}, the default behavior is to lose messages on exceptions (with the DMLC, the message is ack'd before the listener is invoked).

In order to provide recovery of such situations, the source needs to expose {{acknowledge}} so it can be set to {{transacted}}.

Or, perhaps, given that we don't expose complex configuration, the source should use a {{SimpleMessageListenerContainer}} instead (where the ack is sent after the listener is successfully invoked).
",,,,,,,,,,,,,,,,,INT-3677,,,,,,,,,,,,,,,,,,,3.0,199065600,XD-2052,,9223372036854775807,false,grussell(grussell),,,https://github.com/spring-projects/spring-xd/pull/1499,"0|i000ie:wr78d",9223372036854775807,9223372036854775807,,,Sprint 45,,,1.0,,"20/Mar/15 7:51 AM;grussell;Took a little longer than expected due to parser issues - see related JIRA issues.",,,,,,,,,,,,,,,,,
Fix failing KafkaSingleNodeStreamDeploymentIntegrationTests.verifyOnDemandQueues(),XD-2764,62436,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,26/Feb/15 5:22 PM,02/Mar/15 7:03 AM,10/Jul/21 8:37 AM,02/Mar/15 7:03 AM,,,,,,,1.1.1,1.2 M1,,,,,,0,,,,,,,Test fails in CI when the topic used by the test had its initial segment removed during cleanup.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,200880000,XD-2692,,9223372036854775807,false,mbogoevici(mbogoevici),,,https://github.com/spring-projects/spring-xd/pull/1484,"0|i088fr:",9223372036854775807,9223372036854775807,,,Sprint 44,,,1.0,,,,,,,,,,,,,,,,,,,
"""http post"" in CLI gives IllegalArgumentException",XD-2760,62421,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,,,pharris,pharris,26/Feb/15 2:42 AM,29/Sep/15 9:00 PM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,2.0 M1,,CLI,,,,,0,,,,,,,"In xd-shell the command:
{code}
http post
{code}
gives the following output:
{code}
Command failed java.lang.IllegalArgumentException: One of 'file' or 'data' must be set
{code}

I believe the UI should suppress the exception (just removing ' java.lang.IllegalArgumentException') would suffice).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200966400,,,9223372036854775807,true,sabby(sabby),,,,"0|i088cf:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
LocalMessageBus PubSub Needs a Bounded Task Exectutor,XD-2759,62415,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,25/Feb/15 1:06 PM,26/Feb/15 2:33 PM,10/Jul/21 8:37 AM,26/Feb/15 2:33 PM,1.1 GA,,,,,,1.1.1,1.2 M1,,,,,,1,,,,,,,"Since 1.1, {{PubSub}} channels in the {{LocalMessageBus}} run on a {{CachedThreadPoolExecutor}}.

For high volume environments, where back-pressure might occur on a {{topic:}} thread we could overwhelm the system with threads.

Add a local bus configuration to limit the thread pool used for PubSubs and queue tasks where there are no threads available.

It would be a bus-wide setting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,200966400,,,9223372036854775807,false,grussell(grussell),,,https://github.com/spring-projects/spring-xd/pull/1476,"0|i08851:",9223372036854775807,9223372036854775807,,,Sprint 44,,,1.0,,,,,,,,,,,,,,,,,,,
Large number of required options in jdbc sink definition,XD-2756,62400,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,eric.bottard,pharris,pharris,25/Feb/15 7:01 AM,07/May/15 7:48 AM,10/Jul/21 8:37 AM,07/May/15 7:48 AM,1.1 GA,,,,,,,,,,,,,0,,,,,,,"I'd like to use the following command to define a stream in our Spring XD for PivotalCF test environment:

{code}
stream create --name test --definition ""http --port=9999 | jdbc --username=spring-xd --password=spring-xd --driverClassName=org.postgresql.Driver --url=jdbc:postgresql://1.2.3.4:5432/spring-xd""
{code}

I have to add the following options to the definition to make it work (otherwise I get exceptions and a failed deploy):

{code}
-validationQuery='' --validatorClassName='#{null}' --connectionProperties='' --initSQL='' --jdbcInterceptors='' --initializerScript='' 
{code}

Given that they're empty anyway it seems like some or all of these should not be necessary.

_Notes_
* The validatorClassName cannot be '' like the others, it needs the null.
* Without initSQL='' stream creation fails because it can't find init_db.sql (a file I don't have in my environment), even though it won't be run anyway.",,,,,,,,,,,,,,,,,,,,,,,,"04/Mar/15 7:22 AM;sabby;stream_with_jdbc_sink.png;https://jira.spring.io/secure/attachment/22672/stream_with_jdbc_sink.png",,,,,,,,,,,,10.0,194918400,,2015-03-04 07:22:07.133,9223372036854775807,true,eric.bottard(eric.bottard),,,http://none,"0|i08byc:i",9223372036854775807,9223372036854775807,,,Sprint 48,,,5.0,,"26/Feb/15 5:15 AM;pharris;On further use it appears that at least the jdbcInterceptors value also needs the null, so I've prophylactically added it to all the parameters.","04/Mar/15 7:22 AM;sabby;I tried the following 2 streams (both: master and 1.1GA) and I'm able to create/deploy them successfully. Unless I'm misinterpreting something, the [JDBC sink|https://github.com/spring-projects/spring-xd/blob/master/modules/sink/jdbc/config/jdbc.xml] metadata options that you're referring to are not listed/required. 

{code}
stream create --name test --definition ""http --port=9999 | jdbc --username=spring-xd --password=spring-xd --driverClassName=org.postgresql.Driver --url=jdbc:postgresql://1.2.3.4:5432/spring-xd""
{code}

{code}
stream create jdbcs --definition ""http | jdbc"" --deploy
{code}

What version are you running this?","04/Mar/15 8:56 AM;pharris;My apologies, I certainly could have made this clearer. This is against 1.1.0.RELEASE. The first stream can be created fine, and the deploy raises no immediate errors in xd-admin, but it does fail:

{code}
 Stream Name  Stream Definition                                                                                                                                              Status
  -----------  -------------------------------------------------------------------------------------------------------------------------------------------------------------  ------
  test         http --port=9999 | jdbc --username=spring-xd --password=spring-xd --driverClassName=org.postgresql.Driver --url=jdbc:postgresql://10.85.30.128:5432/spring-xd  failed
{code}

Here's a couple of examples of commands, and the errors that are logged from them:

{code}
stream create --name sabby --definition ""http --port=9999 | jdbc --username=spring-xd --password=spring-xd --driverClassName=org.postgresql.Driver --url=jdbc:postgresql://10.85.30.128:5432/spring-xd""

xd-container-partition-default_az_guid-1:  [Exception] encountered during context initialization - cancelling refresh attempt
xd-container-partition-default_az_guid-1:  [org.springframework.beans.factory.BeanDefinitionStoreException] Invalid bean definition with name 'dataSource' defined in file [/var/vcap/data/packages/spring-xd/dcafed17c0f3d98a4a942749ed81b9b28366694d.1-94e0b4dff9545735b6de4b2653d31bfffebd2b68/modules/sink/jdbc/config/../../../common/jdbc-datasource.xml]: Could not resolve placeholder 'validationQuery' in string value ""${validationQuery}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'validationQuery' in string value ""${validationQuery}""
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:211)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:155)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:214)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
xd-container-partition-default_az_guid-1:  []    at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
xd-container-partition-default_az_guid-1:  []    at java.lang.Thread.run(Thread.java:745)
xd-container-partition-default_az_guid-1:  [Caused] by: java.lang.IllegalArgumentException: Could not resolve placeholder 'validationQuery' in string value ""${validationQuery}""
xd-container-partition-default_az_guid-1:  []    at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
xd-container-partition-default_az_guid-1:  []    at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
xd-container-partition-default_az_guid-1:  []    at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:204)
xd-container-partition-default_az_guid-1:  []    at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:178)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:175)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:204)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:208)
{code}

{code}
stream create --name sabby --definition ""http --port=9999 | jdbc --validationQuery='#{null}' --username=spring-xd --password=spring-xd --driverClassName=org.postgresql.Driver --url=jdbc:postgresql://10.85.30.128:5432/spring-xd""

xd-container-partition-default_az_guid-1:  [Exception] encountered during context initialization - cancelling refresh attempt
xd-container-partition-default_az_guid-1:  [org.springframework.beans.factory.BeanDefinitionStoreException] Invalid bean definition with name 'dataSource' defined in file [/var/vcap/data/packages/spring-xd/dcafed17c0f3d98a4a942749ed81b9b28366694d.1-94e0b4dff9545735b6de4b2653d31bfffebd2b68/modules/sink/jdbc/config/../../../common/jdbc-datasource.xml]: Could not resolve placeholder 'validatorClassName' in string value ""${validatorClassName}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'validatorClassName' in string value ""${validatorClassName}""
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:211)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:155)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
xd-container-partition-default_az_guid-1:  []    at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:214)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
xd-container-partition-default_az_guid-1:  []    at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
xd-container-partition-default_az_guid-1:  []    at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
xd-container-partition-default_az_guid-1:  []    at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
xd-container-partition-default_az_guid-1:  []    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
xd-container-partition-default_az_guid-1:  []    at java.lang.Thread.run(Thread.java:745)
xd-container-partition-default_az_guid-1:  [Caused] by: java.lang.IllegalArgumentException: Could not resolve placeholder 'validatorClassName' in string value ""${validatorClassName}""
xd-container-partition-default_az_guid-1:  []    at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
xd-container-partition-default_az_guid-1:  []    at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
xd-container-partition-default_az_guid-1:  []    at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:204)
xd-container-partition-default_az_guid-1:  []    at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:178)
xd-container-partition-default_az_guid-1:  []    at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:175)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:204)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)
xd-container-partition-default_az_guid-1:  []    at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:208)
{code}

I could continue but the rest follow the same pattern, except the initSQL one as mentioned above. Please let me know if you need more information.","05/Mar/15 2:31 PM;thomas.risberg;There is a properties file that defines the defaults - could you share what is in your `xd/config/modules/sink/jdbc/jdbc.properties` file.
","09/Mar/15 5:49 AM;nebhale;[~thomas.risberg] We've opened this as an issue because it is analogous to [the Redis one|https://jira.spring.io/browse/XD-2741].  Do you have any objections to it behaving the same way?","09/Mar/15 5:59 AM;thomas.risberg;Except that we already have the defaults in place, not sure why this isn't working in your environment. The properties file I referenced above should have everything needed.","09/Mar/15 8:23 AM;nebhale;* [{{jdbc.properties}}|https://gist.github.com/nebhale/3d775df46efc91ec0203#file-jdbc-properties]
* [{{servers.yml}}|https://gist.github.com/nebhale/3d775df46efc91ec0203#file-servers-yml-L120-L126]

With that configuration, when we remove {{driverClassName}} we see (apologies for the formatting, it's all dumped to {{syslog}} which doesn't like stack traces):

{noformat}
Deployment] status for stream 'end-to-end-postgresql-1': DeploymentStatus{state=failed,error(s)=org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'dataSource' defined in file [/var/vcap/data/packages/spring-xd/dcafed17c0f3d98a4a942749ed81b9b28366694d.1-94e0b4dff9545735b6de4b2653d31bfffebd2b68/modules/sink/jdbc/config/../../../common/jdbc-datasource.xml]: Could not resolve placeholder 'driverClassName' in string value ""${driverClassName}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'driverClassName' in string value ""${driverClassName}""#012#011at org.springf...
...ramework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java]211)#012#011at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)#012#011at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:155)#012#011at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)#012#011at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFac...
...toryPostProcessors(PostProcessorRegistrationDelegate.java]162)#012#011at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)#012#011at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)#012#011at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)#012#011at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)#012#011at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)#012#011at org.springframework.xd.module.core.SimpleModule.initialize(Simple...
...Module.java]214)#012#011at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)#012#011at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)#012#011at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)#012#011at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)#012#011at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)#012#011at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)#012#011at org.apache.curator.framework.recipes.cache.Pa...
...thChildrenCache$5.apply(PathChildrenCache.java]509)#012#011at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)#012#011at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)#012#011at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)#012#011at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)#012#011at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)#012#011at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:...
...35)#012#011at] org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)#012#011at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)#012#011at java.util.concurrent.FutureTask.run(FutureTask.java:266)#012#011at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)#012#011at java.util.concurrent.FutureTask.run(FutureTask.java:266)#012#011at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)#012#011at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)#012#011at java.lang.Thread.run(Thread.java:745)#012Caused by: java.lang.IllegalArgumentException: Could not...
...] resolve placeholder 'driverClassName' in string value ""${driverClassName}""#012#011at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)#012#011at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)#012#011at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:204)#012#011at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:178)#012#011at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySource...
...sPlaceholderConfigurer.java]175)#012#011at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)#012#011at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:204)#012#011at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)#012#011at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)#012#011at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:208)#012#011... 31 more#012}
Stream] Stream{name='end-to-end-postgresql-1'} deployment attempt complete
{noformat}

TL;DR: {{java.lang.IllegalArgumentException: Could not resolve placeholder 'driverClassName' in string value ""$\{driverClassName\}}}

If you need a well-formatted log, I'm pretty sure we can provoke the problem again and get one.","09/Apr/15 6:53 AM;eric.bottard;I tried this on yesterday's master and did not see an issue. Was able to create a stream with

{code}
--definition ""time | jdbc --initializeDatabase=true""
{code}

Are you sure you have made the module defaults properties files available to the runtime (what is by default set via -Dxd.module.config.location=$XD_MODULE_CONFIG_LOCATION )","21/Apr/15 3:46 PM;sabby;[~nebhale] What are your thoughts around Eric's observation?","22/Apr/15 4:20 AM;pharris;Sorry everyone, I was on vacation last week. We've investigated some more and we have the necessary file(s) in place. We *think* the issue is that we have a split configuration - {{module_config}} and {{config}} are in different places, and it appears that XD might only be looking at the {{config}} directory. Because it doesn't look in {{module_config}} it doesn't see our {{jdbc.properties}} file, and hence thinks we're missing parameters.

We have an environment running now that is exhibiting this behaviour - let us know on Slack ({{pivotal-cf/#p-spring-xd}}) if you'd like us to walk someone through that environment.","23/Apr/15 3:11 PM;sabby;Thanks for the details - [~pharris]. I'll take this to the next sprint, so Eric can pick it up when he returns next week.","07/May/15 7:48 AM;eric.bottard;The problem was that defaults provided out of the box by XD (which are numerous for the jdbc sink) were not being picked up because of a customization of ${xd.module.config.location} that did not include the ""file:"" prefix (hence it was searching a classpath: location, which was not found).",,,,,,
Scala processor module executor trims messages,XD-2755,62386,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,mbogoevici,mbogoevici,24/Feb/15 12:15 PM,26/Feb/15 1:24 PM,10/Jul/21 8:37 AM,25/Feb/15 8:32 AM,1.1 GA,,,,,,1.1.1,1.2 M1,Runtime,,,,,0,,,,,,,"How to reproduce:

1. Run xd-singlenode (for which setting the Spark master URL to 'local' is a requirement). Use more than 1 worker thread. e.g. {{local[4]}}

2. Deploy the word-count example

3. Create a stream
{{stream create spark-streaming-word-count --definition ""http | word-count | log"" --deploy}}

4. Send data
{{xd:>http post --data ""a b c d e f g""}}

{{xd:>http post --data ""a b c""}}

5.Observe the result

2015-02-24 15:12:46,018 1.2.0.SNAP  INFO Executor task launch worker-3 sink.spark-streaming-word-count - (e,1)
2015-02-24 15:12:46,018 1.2.0.SNAP  INFO Executor task launch worker-1 sink.spark-streaming-word-count - (d,1)
2015-02-24 15:12:46,019 1.2.0.SNAP  INFO Executor task launch worker-2 sink.spark-streaming-word-count - (b,1)
2015-02-24 15:12:46,020 1.2.0.SNAP  INFO Executor task launch worker-1 sink.spark-streaming-word-count - (g,1)
2015-02-24 15:13:40,020 1.2.0.SNAP  INFO Executor task launch worker-1 sink.spark-streaming-word-count - (a,1)
2015-02-24 15:13:40,020 1.2.0.SNAP  INFO Executor task launch worker-2 sink.spark-streaming-word-count - (b,1)
2015-02-24 15:13:40,021 1.2.0.SNAP  INFO Executor task launch worker-3 sink.spark-streaming-word-count - (c,1)

(the last three results are coming from the second invocation))

Note: there seems to be a correlation between the number of values emitted and the number of workers, as, in all the attempts, there aren't more values emitted than the number of workers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,201052800,XD-2464,2015-02-24 18:09:28.736,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1473,"0|i0884v:",9223372036854775807,9223372036854775807,,,Sprint 44,,,5.0,,"24/Feb/15 6:09 PM;iperumal;This is a bug in scala spark stream module executor where the RDD partitions need to be iterated.

Fixed and submitted the PR: https://github.com/spring-projects/spring-xd/pull/1473",,,,,,,,,,,,,,,,,
SqoopTasklet not using hadoop configuration,XD-2752,62379,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,hlagos,hlagos,24/Feb/15 7:31 AM,24/Apr/15 6:13 AM,10/Jul/21 8:37 AM,24/Apr/15 6:13 AM,1.1 RC1,,,,,,1.1.2,1.2 M1,Configuration,Hadoop,Ingest,,,0,hadoop,kerberos,sqoop,,,,"Hey Guys,

I'm trying to use a SqoopTasklet but for some reason it is not getting the hadoop configuration. In the attached sqoop job configuration using the sqooprunner class directly works without problems but the SqoopTasklet is not getting the correct configuration throwing kerberos authentication problems (see singlenode.log).  Could please you guys help me to solve this problem?

Thanks in advance.
Regards,",,,,,,,,,,,,,,,,,XD-2847,,,,,,,"24/Feb/15 7:31 AM;hlagos;singlenode.log;https://jira.spring.io/secure/attachment/22662/singlenode.log","24/Feb/15 7:31 AM;hlagos;sqooptest.xml;https://jira.spring.io/secure/attachment/22663/sqooptest.xml",,,,,,,,,,,8.0,196300800,XD-2476,2015-03-02 08:22:51.043,9223372036854775807,true,thomas.risberg(thomas.risberg),,,https://github.com/spring-projects/spring-xd/pull/1565,"0|hzzzwo:i",9223372036854775807,9223372036854775807,,,Sprint 47,,,8.0,,"02/Mar/15 8:22 AM;jvalkeal;Trouble seem to be a SqoopTasklet which is then launching a process where SqoopRunner is then run. Hadoop configuration is then build manually and it would not do a kerberos login because that's only done in ConfigurationFactoryBean(use by xml namespace). 

@thomas.risberg any ideas how to make better integration for Hadoop Configuration?","30/Mar/15 3:15 PM;thomas.risberg;We should add any properties defined in config/hadoop.properties to the configuration used in SqoopRunner.

We should also allow for connection parameter to be provided using --options-file. If --options-file is specified we will assume explicit connection parameters and will not use the XD batch job default connection.
","07/Apr/15 3:19 PM;wxlund;Here's a sample options-file that we're trying to use:

 import 
--connect 
""jdbc:postgresql://<HOSTNAME>:5432/EDWDEV3"" 
--username 
<USERNAME> 
--password 
<PASSWORD> 
We have a workaround right now by just pulling the parameters into the args we pass to the sqoop job but I think another issue you have is that the sqoop command is also specified in the options file in addition to --connect and authorization.","21/Apr/15 8:36 AM;sabby;The support for Hadoop configuration and HA will be included as part of this story. Created XD-2973 to capture the scope to run Sqoop jobs over a secured Hadoop cluster. ",,,,,,,,,,,,,,
"JDBC | FILE throws ConverterNotFoundException when split=0",XD-2751,62367,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,ali.iqbal@gmail.com,ali.iqbal@gmail.com,23/Feb/15 4:01 PM,07/Mar/15 9:24 AM,10/Jul/21 8:37 AM,07/Mar/15 9:24 AM,1.1 M2,,,,,,,,Stream Module,,,,,0,,,,,,,"I am trying to create a simple JDBC|FILE stream with Split=0 at the jdbc source. following is the DSL

stream create --name test --definition ""jdbc --fixedDelay=5 --split=0 --query='select * from top_movie_companies'|file --dir=/tmp --suffix=xd --name=test"" --deploy

It throws 
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type java.util.ArrayList<?> to type java.lang.String
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:138)

It works fine when I use LOG sink instead of FILE. 

I am assuming that if LOG sink works with JDBC then file should be similar. The converter should be registered out of the box.

It could be something basic I am missing as I'm relatively new to XD.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"FILE sink should work with JDBC source split=0. DSL similar to following should work.

stream create --name test --definition ""jdbc --fixedDelay=5 --split=0 --query='select * from top_movie_companies'|file --dir=/tmp --suffix=xd --name=test"" --deploy",,200102400,,2015-03-07 09:24:07.341,9223372036854775807,true,sabby(sabby),,,,"0|i0880n:",9223372036854775807,9223372036854775807,,,,,,1.0,,"23/Feb/15 10:38 PM;ali.iqbal@gmail.com;Thomas Risberg helped me out here. I did not specify the outputType for jdbc source. The stream works when I specify outputType=text/plain or outputType=application/json.
","07/Mar/15 9:24 AM;sabby;@Muhammad: Thanks for the update. I'll mark this as ""Works as Designed"".",,,,,,,,,,,,,,,,
HDFS StoreMessageHandlers are not very resilient,XD-2740,62334,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Duplicate,,dprotaso,dprotaso,20/Feb/15 11:03 AM,13/Jul/15 10:48 AM,10/Jul/21 8:37 AM,13/Jul/15 10:48 AM,1.1 GA,,,,,,,,Hadoop,,,,,0,,,,,,,"There are cases where hdfs-outbound-channel-adapter (from spring-xd-hadoop module) will keep a broken datawriter's stream open.

For example if the underlying HDFS stream throws a RemoteException (ie. some hadoop error occurred) there's no mitigation. Subsequent writes will always fail.

The MessageHandler could potentially try to close and re-open the stream or trigger a rollover strategy to occur (creating a new stream).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,189043200,,2015-07-13 10:48:35.534,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i087uv:",9223372036854775807,9223372036854775807,,,,,,10.0,,"13/Jul/15 10:48 AM;thomas.risberg;This should be fixed via: XD-2774

Closing this issue, please re-open or create a new issue if this is still a problem.",,,,,,,,,,,,,,,,,
Revert XD specific support for JsonPath 1.2,XD-2736,62316,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,eric.bottard,eric.bottard,eric.bottard,19/Feb/15 7:27 AM,29/Sep/15 8:59 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"Thanks to INT-3624, we don't need our specific class anymore",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,201571200,,,9223372036854775807,true,sabby(sabby),,,,"0|i087rj:",9223372036854775807,9223372036854775807,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Custom Modules can't be found wen using xd.customModule.home on windows ,XD-2733,62289,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Won't Fix,,grenfro,grenfro,18/Feb/15 7:59 AM,13/Jul/15 12:18 PM,10/Jul/21 8:37 AM,13/Jul/15 12:18 PM,1.1 GA,,,,,,,,Stream Module,,,,,0,,,,,,,"XD can not find the custom modules directory after Setting the xd.customModule.home in the windows environment 

Deployment
* xd-singlenode (embedded zookeeper)
* Java 8
* Windows 8 or Windows Server 2012 r2

Steps to reproduce:

1) Start xd-singlenode
2) Start Shell
3) Build either the payload-conversion or rss-feed-source from the spring-xd-samples
4) use the shell to execute a module upload for the custom module (rss-feed-source, payload-conversion)
5) verify it uploaded xd:>module info processor:myTupleProcessor
6) stop xd single node
7) From the command line execute set xd.customModule.home=[path to your custom modules] i.e. C:\project\spring-xd-1.1.0.RELEASE\xd\custom-modules
8) restart xd-singlenode
9) execute module info processor:myTupleProcessor
10) you will get the following error
{noformat}
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Could not find module with name 'myTupleProcessor' and type 'processor'
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,201657600,,,9223372036854775807,true,sabby(sabby),,,,"0|i087lj:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Temp files for stream create not being cleaned,XD-2731,62277,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,eric.bottard,pharris,pharris,18/Feb/15 2:04 AM,06/Mar/15 4:54 PM,10/Jul/21 8:37 AM,04/Mar/15 2:44 AM,1.1 GA,,,,,,1.1.1,,Stream Module,,,,,0,,,,,,,"During testing for Spring XD for PivotalCF we create, deploy, use, undeploy and destroy many streams. Each stream generates {{tmp}} directories (I think 2, one for source, one for sink) in the xd-admin VM's {{/tmp}} directory, e.g.

{noformat}
dummy-module4635787551932601017sinkredis
dummy-module252960009195893204sourcehttp
{noformat}

These {{tmp}} directories are not being cleared up, so our system has hit the inode limit of 32768 files for a volume:

{noformat}
Filesystem     Inodes IUsed  IFree IUse% Mounted on
/dev/loop0      32768 32768      0  100% /tmp
{noformat}

This causes a Java {{IOException}}, the immediately relevant part of which appears to be:

{noformat}
[Caught] exception while handling a request
Feb 18 09:06:06 10.85.30.142-2 xd-admin-partition-default_az_guid-0:  [java.lang.RuntimeException] java.io.IOException: No space left on device
Feb 18 09:06:06 10.85.30.142-2 xd-admin-partition-default_az_guid-0:  []    at org.springframework.xd.module.ModuleDefinitions.dummy(ModuleDefinitions.java:81)
{noformat}

This causes the test system to fail entirely.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,201225600,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1479,"0|hzzzyq:5",9223372036854775807,9223372036854775807,,,Sprint 44,,,3.0,,"23/Feb/15 8:02 AM;pharris;The definition we're using is created from a base string of: ""http --port=%s | redis --topic=%s --sentinelMaster=%s --sentinelNodes=%s""

The %s are substitutions, so a typical output would be: ""http --port=33363 | redis --topic=52453d6b-3c98-4ff4-b153-cb304594a3cb --sentinelMaster=p-spring-xd --sentinelNodes=10.85.30.135:26379,10.85.30.133:26379,10.85.30.134:26379""

The issue seems to come from https://github.com/spring-projects/spring-xd/blob/master/spring-xd-module/src/main/java/org/springframework/xd/module/ModuleDefinitions.java#L66-L82, where temp files are created for testing purposes. Perhaps adding a finally-try-catch block to the existing try-catch to delete the file if any part of the initial try has failed might help, assuming that the temp file creation is still required for testing?",,,,,,,,,,,,,,,,,
Spark streaming processor module: Dispatcher has no subscribers,XD-2728,62270,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,17/Feb/15 1:51 PM,26/Feb/15 1:23 PM,10/Jul/21 8:37 AM,18/Feb/15 11:35 AM,,,,,,,1.1.1,1.2 M1,,,,,,0,,,,,,,"The spark streaming processor module emits the following exception when there are more messages in the RDD partitions:

015-02-17 12:45:02,026 1.2.0.SNAP ERROR Executor task launch worker-2 executor.Executor - Exception in task 0.0 in stage 56.0 (TID 142)
org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'output'.; nested exception is org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:81)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.xd.dirt.plugins.spark.streaming.MessageBusSender.send(MessageBusSender.java:105)
	at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:80)
	at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:55)
	at org.apache.spark.api.java.JavaRDDLike$$anonfun$foreachPartition$1.apply(JavaRDDLike.scala:195)
	at org.apache.spark.api.java.JavaRDDLike$$anonfun$foreachPartition$1.apply(JavaRDDLike.scala:195)
	at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:790)
	at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:790)
	at org.apache.spark.SparkContext$$anonfun$runJob$4.apply(SparkContext.scala:1353)
	at org.apache.spark.SparkContext$$anonfun$runJob$4.apply(SparkContext.scala:1353)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:61)
	at org.apache.spark.scheduler.Task.run(Task.scala:56)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:200)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:107)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	... 17 more
2015-02-17 12:45:02,032 1.2.0.SNAP  WARN task-result-getter-1 scheduler.TaskSetManager - Lost task 0.0 in stage 56.0 (TID 142, localhost): org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'output'.; nested exception is org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:81)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.xd.dirt.plugins.spark.streaming.MessageBusSender.send(MessageBusSender.java:105)
	at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:80)
	at org.springframework.xd.spark.streaming.java.ModuleExecutor$1$1.call(ModuleExecutor.java:55)
	at org.apache.spark.api.java.JavaRDDLike$$anonfun$foreachPartition$1.apply(JavaRDDLike.scala:195)
	at org.apache.spark.api.java.JavaRDDLike$$anonfun$foreachPartition$1.apply(JavaRDDLike.scala:195)
	at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:790)
	at org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:790)
	at org.apache.spark.SparkContext$$anonfun$runJob$4.apply(SparkContext.scala:1353)
	at org.apache.spark.SparkContext$$anonfun$runJob$4.apply(SparkContext.scala:1353)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:61)
	at org.apache.spark.scheduler.Task.run(Task.scala:56)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:200)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:107)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	... 17 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,201657600,,,9223372036854775807,true,iperumal(iperumal),,,https://github.com/spring-projects/spring-xd/pull/1463,"0|i087hj:",9223372036854775807,9223372036854775807,,,Sprint 43,,,3.0,,,,,,,,,,,,,,,,,,,
Spark streaming integration with kafka message does not respect offsetStoreTopic config option,XD-2727,62257,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,16/Feb/15 2:22 PM,26/Mar/15 8:30 AM,10/Jul/21 8:37 AM,20/Feb/15 4:05 PM,1.1 GA,,,,,,1.1.1,1.2 M1,,,,,,0,,,,,,,"The property ""xd.messagebus.kafka.offsetStoreTopic"" was added to Kafka message bus which is not updated to Spark streaming message bus properties that will be transferred to spark cluster for streaming module deployment. 
We also need a better approach to re-use the message bus properties so that we don't have to update the properties in Connection Property Names.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,201744000,,,9223372036854775807,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1462,"0|i086uu:r",9223372036854775807,9223372036854775807,,,Sprint 43,,,3.0,,,,,,,,,,,,,,,,,,,
Partitioned job throws: java.lang.RuntimeException: Could not serialize lambda,XD-2722,62225,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,thomas.risberg,thomas.risberg,13/Feb/15 10:31 AM,27/Apr/15 10:14 AM,10/Jul/21 8:37 AM,16/Apr/15 11:41 AM,1.1 GA,,,,,,,,Batch,,,,,0,,,,,,,"Running a partitioned jdbchdfs job with 12 partitions and 3 xd-containers. Some steps fail with the jdbc connection pool exception XD-2720. I also sometimes see a serialization exception. This results in the partitioner never getting the status for some of the steps, so it keeps running until it times out even though all steps are either complete of failed.

{code}
2015-02-13 13:18:36,294 1.1.0.RELEASE ERROR inbound.files4.0-redis:queue-inbound-channel-adapter1 redis.RedisMessageBus$1 - Failed to deliver message; retries exhausted; message sent to queue 'ERRORS:name'
org.springframework.messaging.MessageHandlingException: error occurred in message handler [files4.0.bridge.handler]; nested exception is com.esotericsoftware.kryo.KryoException: java.lang.RuntimeException: Could not serialize lambda
Serialization trace:
stepExecutions (org.springframework.batch.core.JobExecution)
jobExecution (org.springframework.batch.core.StepExecution)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:267)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:263)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1.doSend(RedisMessageBus.java:263)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:101)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:220)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:314)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.esotericsoftware.kryo.KryoException: java.lang.RuntimeException: Could not serialize lambda
Serialization trace:
stepExecutions (org.springframework.batch.core.JobExecution)
jobExecution (org.springframework.batch.core.StepExecution)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:704)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:682)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.PojoCodec.doDeserialize(PojoCodec.java:41)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoMultiTypeCodec$1.execute(AbstractKryoMultiTypeCodec.java:63)
	at com.esotericsoftware.kryo.pool.KryoPoolQueueImpl.run(KryoPoolQueueImpl.java:43)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoMultiTypeCodec.deserialize(AbstractKryoMultiTypeCodec.java:60)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.PojoCodec.deserialize(PojoCodec.java:30)
	at org.springframework.xd.dirt.integration.bus.serializer.CompositeCodec.deserialize(CompositeCodec.java:72)
	at org.springframework.xd.dirt.integration.bus.serializer.CompositeCodec.deserialize(CompositeCodec.java:78)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:588)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:573)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayloadIfNecessary(MessageBusSupport.java:556)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus.access$1000(RedisMessageBus.java:68)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$ReceivingHandler.handleRequestMessage(RedisMessageBus.java:465)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 21 more
Caused by: java.lang.RuntimeException: Could not serialize lambda
	at com.esotericsoftware.kryo.serializers.ClosureSerializer.read(ClosureSerializer.java:52)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:786)
	at com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:116)
	at com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:22)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:704)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)
	... 40 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: -2
	at java.util.ArrayList.elementData(ArrayList.java:418)
	at java.util.ArrayList.get(ArrayList.java:431)
	at com.esotericsoftware.kryo.util.MapReferenceResolver.getReadObject(MapReferenceResolver.java:42)
	at com.esotericsoftware.kryo.Kryo.readReferenceOrNull(Kryo.java:830)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:680)
	at com.esotericsoftware.kryo.serializers.ClosureSerializer.read(ClosureSerializer.java:49)
	... 45 more
{code} ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,202003200,XD-982,,9223372036854775807,false,sabby(sabby),,,,"0|i082us:zxr",9223372036854775807,9223372036854775807,,,,,,5.0,,"13/Feb/15 11:22 AM;thomas.risberg;Also seeing this:

{code}
2015-02-13 14:16:26,796 1.1.0.RELEASE ERROR inbound.files7.0-redis:queue-inbound-channel-adapter1 redis.RedisMessageBus$1 - Failed to deliver message; retries exhausted; message sent to queue 'ERRORS:name'
org.springframework.messaging.MessageHandlingException: error occurred in message handler [files7.0.bridge.handler]; nested exception is com.esotericsoftware.kryo.KryoException: java.lang.IndexOutOfBoundsException: Index: 116, Size: 17
Serialization trace:
stepName (org.springframework.batch.integration.partition.StepExecutionRequest)
jobExecution (org.springframework.batch.core.StepExecution)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:267)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:263)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1.doSend(RedisMessageBus.java:263)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:101)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:220)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:314)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.esotericsoftware.kryo.KryoException: java.lang.IndexOutOfBoundsException: Index: 116, Size: 17
Serialization trace:
stepName (org.springframework.batch.integration.partition.StepExecutionRequest)
jobExecution (org.springframework.batch.core.StepExecution)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:704)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:682)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.PojoCodec.doDeserialize(PojoCodec.java:41)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoMultiTypeCodec$1.execute(AbstractKryoMultiTypeCodec.java:63)
	at com.esotericsoftware.kryo.pool.KryoPoolQueueImpl.run(KryoPoolQueueImpl.java:43)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.AbstractKryoMultiTypeCodec.deserialize(AbstractKryoMultiTypeCodec.java:60)
	at org.springframework.xd.dirt.integration.bus.serializer.kryo.PojoCodec.deserialize(PojoCodec.java:30)
	at org.springframework.xd.dirt.integration.bus.serializer.CompositeCodec.deserialize(CompositeCodec.java:72)
	at org.springframework.xd.dirt.integration.bus.serializer.CompositeCodec.deserialize(CompositeCodec.java:78)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:588)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:573)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayloadIfNecessary(MessageBusSupport.java:556)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus.access$1000(RedisMessageBus.java:68)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$ReceivingHandler.handleRequestMessage(RedisMessageBus.java:465)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 21 more
Caused by: java.lang.IndexOutOfBoundsException: Index: 116, Size: 17
	at java.util.ArrayList.rangeCheck(ArrayList.java:635)
	at java.util.ArrayList.get(ArrayList.java:411)
	at com.esotericsoftware.kryo.util.MapReferenceResolver.getReadObject(MapReferenceResolver.java:42)
	at com.esotericsoftware.kryo.Kryo.readReferenceOrNull(Kryo.java:830)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:753)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:113)
	... 40 more
{code}",,,,,,,,,,,,,,,,,
Frequent connection pool errors with multi-partitioned jdbchdfs jobs,XD-2720,62223,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Cannot Reproduce,,thomas.risberg,thomas.risberg,13/Feb/15 9:34 AM,16/Oct/15 1:33 PM,10/Jul/21 8:37 AM,06/Jul/15 5:35 AM,1.1 GA,,,,,,,,Batch,,,,,0,,,,,,,"I'm running a jdbchdfs job with 8 partitions and 2 containers. Some steps complete ok while some (3-4 on average) fail with a connection pool error (see below). This happens with a decent size table (1.8M rows).

I tried two different databases - Oracle 11g on a separate server and MySQL running locally where the XD containers where running. Same pattern with both databases.

{code}
2015-02-13 12:21:33,436 1.1.0.RELEASE ERROR inbound.files3.0-redis:queue-inbound-channel-adapter1 step.AbstractStep - Encountered an error executing step step1 in job files3
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.itemReader' defined in file [/home/trisberg/Test/spring-xd-1.1.0.RELEASE/xd/modules/job/jdbchdfs/config/jdbchdfs.xml]: Invocation of init method failed; nested exception is org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Failed to validate a newly established connection.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1566)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:342)
	at org.springframework.batch.core.scope.StepScope.get(StepScope.java:110)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:187)
	at com.sun.proxy.$Proxy90.open(Unknown Source)
	at org.springframework.batch.item.support.CompositeItemStream.open(CompositeItemStream.java:96)
	at org.springframework.batch.core.step.tasklet.TaskletStep.open(TaskletStep.java:310)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:195)
	at org.springframework.batch.integration.partition.StepExecutionRequestHandler.handle(StepExecutionRequestHandler.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:102)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:131)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:164)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:276)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:99)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:107)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:87)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy94.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:114)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:98)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy91.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutput(AbstractMessageProducingHandler.java:248)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.produceOutput(AbstractMessageProducingHandler.java:171)
	at org.springframework.integration.handler.AbstractMessageProducingHandler.sendOutputs(AbstractMessageProducingHandler.java:119)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:105)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:267)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:263)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1.doSend(RedisMessageBus.java:263)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:239)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:115)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:45)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:95)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:101)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:220)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:314)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Failed to validate a newly established connection.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:302)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329)
	at org.springframework.batch.support.DatabaseType.fromMetaData(DatabaseType.java:95)
	at org.springframework.xd.jdbc.NamedColumnJdbcItemReaderFactory.afterPropertiesSet(NamedColumnJdbcItemReaderFactory.java:101)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562)
	... 90 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Failed to validate a newly established connection.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:289)
	... 95 more
Caused by: java.sql.SQLException: Failed to validate a newly established connection.
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:802)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:617)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.getConnection(ConnectionPool.java:186)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 96 more
{code}",,,,,,,,,,,,,,,,,XD-3620,,,,,,,,,,,,,,,,,,,,189734400,,2015-03-06 07:11:35.749,9223372036854775807,false,thomas.risberg(thomas.risberg),,,,"0|i082us:zlyi",9223372036854775807,9223372036854775807,,,,,,5.0,,"06/Mar/15 6:50 AM;thomas.risberg;I've been able to get around this by specifying the ""testOnBorrow"" property

{code}
--testOnBorrow=false
{code}","06/Mar/15 7:11 AM;bzeyben;I am having the same issue with the single partition (default),

Still the same issue when I include '--testOnBorrow=false'. 
I have also skipped the --validationQuery option as well to see if that might cause anything but I get the same error. 

We are using the ojdbc7.jar drivers.

The Error log shows:

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.itemReader' defined in file [/opt/pivotal/spring-xd-1.1.0.RELEASE/xd/modules/job/jdbchdfs/config/jdbchdfs.xml]: Invocation of init method failed; nested exception is org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: Driver:oracle.jdbc.OracleDriver@1c7446a returned null for URL:XXXXXXXXXXXXXXXX
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1566)

I will try to run the process with sqoop and ojdbc6.jar drivers.","20/Mar/15 3:36 PM;sabby;[~bzeyben] Isn't this related to the JDBC URL missing the ""jdbc:oracle"" fragment? ","06/Jul/15 5:35 AM;thomas.risberg;I believe the underlying problem I was having is related to the network and not Spring XD. Closing this issue for now since we haven't had other reports of this being an issue.
",,,,,,,,,,,,,,
Kafka Tests shouldn't assume offset 0 ,XD-2710,62191,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mbogoevici,mbogoevici,mbogoevici,10/Feb/15 3:44 PM,30/Apr/15 12:23 PM,10/Jul/21 8:37 AM,20/Feb/15 5:28 PM,,,,,,,1.2 M1,,,,,,,0,,,,,,,"In `org.springframework.xd.dirt.stream.KafkaSingleNodeStreamDeploymentIntegrationTests#verifyOnDemandQueues`, when testing the queue partitions for content, the read is assumed to start at offset 0.

This is incorrect, because the topics may exist already, especially in a CI environment",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,202262400,XD-2692,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1459,"0|hzzzyq:2",9223372036854775807,9223372036854775807,,,Sprint 43,,,1.0,,,,,,,,,,,,,,,,,,,
Module delete command sporadically fails on windows,XD-2685,62102,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,dturanski,dturanski,04/Feb/15 11:13 AM,18/Feb/15 8:48 AM,10/Jul/21 8:37 AM,,1.1 GA,,,,,,,,Stream Module,,,,,0,,,,,,,"When a user executes a module delete on a custom module it sporadically fails with the following exception below at the bottom of the description.
Deployment:
OS: Windows 8 or Windows Server 2012 R2
Java version Java 8 (build 25.31-b07, mixed mode)
XD Deployment type. XD-Singlenode (embedded zookeeper)

Steps to reproduce:
1) build either the rss-feed-source or the payload-conversion samples from the spring-xd-samples
2) start xd-singlenode
3) start shell
4) from the shell execute module upload for the custom module i.e. module upload --file C:\project\spring-xd-samples\payloadconversion\build\libs\payload-conversion-1.0.0.BUILD-SNAPSHOT.jar --name myTupleProcessor --type processor
5) Verify that the module was uploaded by executing module info processor:myTupleProcessor
6) Execute module delete processor:myTupleProcessor

{noformat}
2015-02-18 14:48:43,908 1.1.0.RELEASE ERROR qtp752571350-38 rest.RestControllerA
dvice - Caught exception while handling a request
org.springframework.xd.dirt.module.DependencyException: Cannot delete module pro
cessor:myTupleProcessor because it is used by [stream:test]
        at org.springframework.xd.dirt.module.ModuleDefinitionService.delete(Mod
uleDefinitionService.java:116)
        at org.springframework.xd.dirt.rest.ModulesController.delete(ModulesCont
roller.java:155)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:483)
        at org.springframework.web.method.support.InvocableHandlerMethod.doInvok
e(InvocableHandlerMethod.java:221)
        at org.springframework.web.method.support.InvocableHandlerMethod.invokeF
orRequest(InvocableHandlerMethod.java:137)
        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocabl
eHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingH
andlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingH
andlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)
        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapt
er.handle(AbstractHandlerMethodAdapter.java:85)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(Dispatch
erServlet.java:943)
        at org.springframework.web.servlet.DispatcherServlet.doService(Dispatche
rServlet.java:877)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(Frame
workServlet.java:966)
        at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkSe
rvlet.java:890)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:761)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkSer
vlet.java:842)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684
)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1496)
        at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConf
iguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConf
iguration.java:291)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInterna
l(HiddenHttpMethodFilter.java:77)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInter
nal(HttpPutFormContentFilter.java:87)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter
Internal(WebRequestTraceFilter.java:100)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.security.web.FilterChainProxy.doFilterInternal(Fi
lterChainProxy.java:186)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChai
nProxy.java:160)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfig
uration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1467)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java
:499)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.j
ava:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.jav
a:557)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandl
er.java:231)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandl
er.java:1086)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:
428)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandle
r.java:193)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandle
r.java:1020)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.j
ava:135)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper
.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:370)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(Abstrac
tHttpConnection.java:494)
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(Abstra
ctHttpConnection.java:971)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.header
Complete(AbstractHttpConnection.java:1033)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)

        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnecti
on.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEn
dPoint.java:667)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEnd
Point.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPoo
l.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool
.java:543)
        at java.lang.Thread.run(Thread.java:745)
2015-02-18 14:50:38,191 1.1.0.RELEASE  INFO main-EventThread server.DeploymentLi
stener - Undeploying module [ModuleDescriptor@14b69ddf moduleName = 'http', modu
leLabel = 'http', group = 'test', sourceChannelName = [null], sinkChannelName =
[null], index = 0, type = source, parameters = map[[empty]], children = list[[em
pty]]]
2015-02-18 14:50:38,380 1.1.0.RELEASE  INFO main-EventThread server.DeploymentLi
stener - Undeploying module [ModuleDescriptor@7c2cd32 moduleName = 'myTupleProce
ssor', moduleLabel = 'myTupleProcessor', group = 'test', sourceChannelName = [nu
ll], sinkChannelName = [null], index = 1, type = processor, parameters = map['in
putType' -> 'application/x-xd-tuple'], children = list[[empty]]]
2015-02-18 14:50:38,470 1.1.0.RELEASE  INFO main-EventThread server.DeploymentLi
stener - Undeploying module [ModuleDescriptor@30ba1084 moduleName = 'log', modul
eLabel = 'log', group = 'test', sourceChannelName = [null], sinkChannelName = [n
ull], index = 2, type = sink, parameters = map[[empty]], children = list[[empty]
]]
2015-02-18 14:50:38,527 1.1.0.RELEASE  INFO DeploymentSupervisor-0 server.Initia
lDeploymentListener - Path cache event: path=/deployments/streams/test, type=CHI
LD_REMOVED
2015-02-18 14:50:38,528 1.1.0.RELEASE  INFO DeploymentsPathChildrenCache-0 serve
r.DeploymentListener - Path cache event: path=/deployments/modules/allocated/f66
35afd-7351-4ac3-baa3-3b98e74a38ca/test.source.http.1, type=CHILD_REMOVED
2015-02-18 14:50:38,530 1.1.0.RELEASE  INFO DeploymentsPathChildrenCache-0 serve
r.DeploymentListener - Path cache event: path=/deployments/modules/allocated/f66
35afd-7351-4ac3-baa3-3b98e74a38ca/test.processor.myTupleProcessor.1, type=CHILD_
REMOVED
2015-02-18 14:50:38,532 1.1.0.RELEASE  INFO DeploymentsPathChildrenCache-0 serve
r.DeploymentListener - Path cache event: path=/deployments/modules/allocated/f66
35afd-7351-4ac3-baa3-3b98e74a38ca/test.sink.log.1, type=CHILD_REMOVED
2015-02-18 14:50:41,486 1.1.0.RELEASE  INFO LeaderSelector-0 server.DeploymentSu
pervisor - Leadership canceled due to thread interrupt
2015-02-18 14:50:41,592 1.1.0.RELEASE  WARN NIOServerCxn.Factory:0.0.0.0/0.0.0.0
:5156 server.NIOServerCnxn - caught end of stream exception
EndOfStreamException: Unable to read additional data from client sessionid 0x14b
9d2656c30000, likely client has closed socket
        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228
)
        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFac
tory.java:208)
        at java.lang.Thread.run(Thread.java:745)
{noformat}
",,,,,,,,,,,,,,,,,XD-2607,,,,,,,,,,,,,,,,,,,,201571200,XD-235,2015-02-18 07:02:23.439,9223372036854775807,true,eric.bottard(eric.bottard),,,,"0|i000ie:xi",9223372036854775807,9223372036854775807,,,,,,3.0,,"18/Feb/15 7:02 AM;grenfro;Originally this problem was identified as ""ModuleCommandsTest.testDeleteUploadedModuleUsedByStream() will not delete the uploaded jar file consistently on Windows""","18/Feb/15 8:48 AM;eric.bottard;This may have to do with Windows locking jar files again",,,,,,,,,,,,,,,,
Message conversion support for spark streaming module,XD-2683,62090,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,03/Feb/15 6:17 PM,06/Feb/15 3:05 PM,10/Jul/21 8:37 AM,05/Feb/15 4:10 PM,,,,,,,1.1 GA,,,,,,,0,,,,,,,The spark streaming module needs to support inputType (for both processor and sink module) and outputType (for processor module) so that message conversion can happen at the MessageBusReceiver and MessageBusSender.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Check the spark streaming processor module with inputType and outputType and sink module with inputType. Verify that the message conversion works.,8.0,202867200,,,9223372036854775807,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1438,"0|i086j7:",9223372036854775807,9223372036854775807,,,Sprint 42,,,5.0,,,,,,,,,,,,,,,,,,,
Add support for Sentinel in Redis Sink,XD-2675,62066,Bug,In Progress,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,mark.pollack,nebhale,nebhale,02/Feb/15 9:10 AM,20/Feb/15 11:37 AM,10/Jul/21 8:37 AM,,1.1 RC1,,,,,,1.1 GA,,,,,,,0,,,,,,,"Currently, the Redis sink appears to be unable to write to a Redis instance if it is connected via Sentinel.  Given the following XD Container {{servers.yml}} configuration:

{noformat}
# Redis properties
spring:
  redis:
#   port: 6379
#   host: localhost
    sentinel:
      master: spring-xd
      nodes: 10.85.30.133:26379,10.85.30.134:26379,10.85.30.135:26379
{noformat}

a stream of {{time | redis --key=ticktock}} results in the following:

{noformat}
Created JedisPool to master at 10.85.30.130:6379
Caused by: org.springframework.messaging.MessageHandlingException: error occurred in message handler [org.springframework.integration.redis.outbound.RedisStoreWritingMessageHandler#0]; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Cannot get Jedis connection; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Cannot get Jedis connection; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
    at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:140)
    at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:229)
    at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:57)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
    at redis.clients.jedis.JedisPool.getResource(JedisPool.java:84)
    at redis.clients.jedis.JedisPool.getResource(JedisPool.java:10)
    at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:133)
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused
    at redis.clients.jedis.Connection.connect(Connection.java:150)
    at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:71)
    at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1783)
    at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:65)
    at redis.clients.jedis.Connection.connect(Connection.java:144)
{noformat}

The parts that sticks out to me is the line
bq. {{Created JedisPool to master at 10.85.30.130:6379}}

The Sentinels aren't at {{.130}}, that's a Redis and the only way that the {{JedisPool}} could know about that host is to have connected to a Sentinel instance and requested the listing of Redis nodes managed by the Sentinel.  Notably, the Redis instance that the JedisPool connects to is actually responsive.

{noformat}
$: redis-cli -h 10.85.30.130 -p 6379
10.85.30.130:6379> ping
PONG
10.85.30.130:6379> 
{noformat}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,201398400,,2015-02-06 15:33:27.261,9223372036854775807,false,mark.pollack(mark.pollack),,,,"0|i086bz:",9223372036854775807,9223372036854775807,,,Sprint 42,,,3.0,,"06/Feb/15 3:33 PM;mark.fisher;merged as https://github.com/spring-projects/spring-xd/commit/3c0a164f209da37caef28de1393fd704d61db718","16/Feb/15 8:37 AM;nebhale;[~mark.fisher] [~mark.pollack] We just attempted this again {{1.1.0.RELEASE}} and it still fails in exactly the same way.  Specifying the connection information as part of the definition works, but the configuration specified in {{servers.yml}} is not read.  Can you please re-open this issue and have another crack at it?","20/Feb/15 11:32 AM;mark.pollack;Hi,
My apologies.  I thought I had put defaults for the redis sink module to use the values that are listed under spring.redis... in servers.yml, but I missed it.

You can fix this in 1.1.0.RELEASE by creating a file in <root-install>/spring-xd-1.1.0.RELEASE/xd/config/modules/sink/redis/redis.properties that contains

{code}
hostname = ${spring.redis.host:#{null}}
port = ${spring.redis.port:#{null}}
#database = ${spring.redis.database}
password = ${spring.redis.password:#{null}}
sentinelMaster = ${spring.redis.sentinel.master:#{null}}
sentinelNodes = ${spring.redis.sentinel.nodes:#{null}}
#maxIdle = ${spring.redis.pool.max-idle}
#minIdle = ${spring.redis.pool.min-idle}
#maxActive = ${spring.redis.pool.max-active}
#maxWait = ${spring.redis.pool.max-wait}
{code}

There are way to do this via environment variables as well if that works better in your scenario.

","20/Feb/15 11:33 AM;mark.pollack;I'll create a new JIRA issue to address the default configuration issue.",,,,,,,,,,,,,,
Support rapid creation and deletion of streams,XD-2671,62042,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,grenfro,grenfro,30/Jan/15 2:04 PM,26/Mar/15 9:16 AM,10/Jul/21 8:37 AM,23/Mar/15 9:55 AM,1.1 RC1,,,,,,1.2 M1,,,,,,,0,,,,,,,"OS: Ubuntu
Deployment Admin Server.  1 Container
Transport Rabbit

* Using the shell execute the file.  ./bin/shell --cmdfile loop.txt  
** This should run successfully
* Rerun the same script ./bin/shell --cmdfile loop.txt
** it states that the stream foo1 is already deployed. 
** Open shell app and destroy foo1 and run a stream list.  No streams will display
** Exit shell and rerun the file.  
*** Another stream will fail to create stating  stream already exists.

* If you look at the modules deployed on the container some are still present.
* To clear you have to shutdown the cluster and flush the xd directories on Zookeeper.
* Note that if I shutdown the container the modules disappear.

 ",,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/15 2:04 PM;grenfro;loop.txt;https://jira.spring.io/secure/attachment/22640/loop.txt",,,,,,,,,,,,36.0,202953600,,,9223372036854775807,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1505,"0|i08a85:",9223372036854775807,9223372036854775807,,,,,,8.0,,"02/Feb/15 10:24 AM;grenfro;The modules are present and undeployed.
{noformat}
                            {producer.next.module.count=1, count=1, sequence=1}           undeployed
  fool1.sink.jdbc.1    de57e6c8-a65e-4862-b920-e408fcdb0204  {suspectTimeout=0, password=byteme23, columns=payload, maxIdle=100, tableName=fool1, initSQL=#{null}, fairQueue=true, minEvictableIdleTimeMillis=60000, driverClassName=com.mysql.jdbc.Driver, username=xdjob, testOnBorrow=true, initializeDatabase=false, maxWait=30000, url=jdbc:mysql://xdjobrepo2.clxqvsposblc.us-east-1.rds.amazonaws.com:3306/xdjob?autoReconnect=true, connectionProperties=#{null}, alternateUsernameAllowed=false, testWhileIdle=false, maxActive=100, jdbcInterceptors=#{null}, validatorClassName=#{null}, initializerScript=init_db.sql, abandonWhenPercentageFull=0, useEquals=true, timeBetweenEvictionRunsMillis=5000, initialSize=0, validationInterval=30000, testOnReturn=false, jmxEnabled=true, logAbandoned=false, validationQuery=select, removeAbandonedTimeout=60, removeAbandoned=false, maxAge=0, minIdle=10}  {consumer.sequence=1, count=1, consumer.count=1, sequence=1}  undeployed
  fool1.source.time.1  de57e6c8-a65e-4862-b920-e408fcdb0204  {initialDelay=0, timeUnit=SECONDS, fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}{producer.next.module.count=1, count=1, sequence=1}           undeployed
  foon1.sink.jdbc.1    de57e6c8-a65e-4862-b920-e408fcdb0204  {suspectTimeout=0, password=byteme23, columns=payload, maxIdle=100, tableName=foon1, initSQL=#{null}, fairQueue=true, minEvictableIdleTimeMillis=60000, driverClassName=com.mysql.jdbc.Driver, username=xdjob, testOnBorrow=true, initializeDatabase=false, maxWait=30000, url=jdbc:mysql://xdjobrepo2.clxqvsposblc.us-east-1.rds.amazonaws.com:3306/xdjob?autoReconnect=true, connectionProperties=#{null}, alternateUsernameAllowed=false, testWhileIdle=false, maxActive=100, jdbcInterceptors=#{null}, validatorClassName=#{null}, initializerScript=init_db.sql, abandonWhenPercentageFull=0, useEquals=true, timeBetweenEvictionRunsMillis=5000, initialSize=0, validationInterval=30000, testOnReturn=false, jmxEnabled=true, logAbandoned=false, validationQuery=select, removeAbandonedTimeout=60, removeAbandoned=false, maxAge=0, minIdle=10}  {consumer.sequence=1, count=1, consumer.count=1, sequence=1}  undeployed
  foon1.source.time.1  de57e6c8-a65e-4862-b920-e408fcdb0204  {initialDelay=0, timeUnit=SECONDS, fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}{producer.next.module.count=1, count=1, sequence=1}           undeployed
{noformat}","02/Feb/15 10:54 AM;grenfro;Also seeing this in the logs
{noformat}
18:42:11,690 1.1.0.SNAP ERROR DeploymentSupervisor-0 cache.PathChildrenCache -
java.lang.IllegalStateException: Expected 'deploying' status for stream 'foo63'; current status: null
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:139)
	at org.springframework.xd.dirt.server.StreamDeploymentListener.onChildAdded(StreamDeploymentListener.java:102)
	at org.springframework.xd.dirt.server.InitialDeploymentListener.childEvent(InitialDeploymentListener.java:107)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

{noformat}",,,,,,,,,,,,,,,,
Can't execute query on Hive,XD-2668,62021,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Fixed,,hlagos,hlagos,29/Jan/15 12:41 PM,08/May/15 9:38 AM,10/Jul/21 8:37 AM,20/Feb/15 4:51 PM,1.1 M2,,,,,,1.1 GA,,,,,,,0,hadoop,Hive,,,,,"Hey Guys,

We are currently trying to connect Hive by spring-xd to create a table.  Unfortunatly we are not able to do it. We are using the attached job configuration (hive.xml) trying to connect by Hive Thrift Client with the following configuration:

<hadoop:hive-client-factory host=""hive_host"" port=""10000"" />
<hadoop:hive-tasklet id=""hive-script"">
   <hadoop:script>
     USE TESTING;
     DROP TABLE IF EXITS testHiveBatchTable; 
     CREATE TABLE testHiveBatchTable (key int, value string);
   </hadoop:script>
</hadoop:hive-tasklet>

For Some reason spring XD is not finding the TTransportException class. The full log is in the singlenode_hivequery.log  file  attached. After that we tried uploading all the dependencies to the lib folder of the job, but now we are facing problems with log4j (full log is in singlenode_hivequery2.log attached) and we are unable to deploy the job in any of the two cases. Please,  Could you help us to solve this problem? 

Thanks in advance.",,,,,,,,,,,,,,,,,XD-2656,,,,,,,"29/Jan/15 12:41 PM;hlagos;hive.xml;https://jira.spring.io/secure/attachment/22637/hive.xml","29/Jan/15 12:41 PM;hlagos;singlenode_hivequery.log;https://jira.spring.io/secure/attachment/22638/singlenode_hivequery.log","29/Jan/15 12:41 PM;hlagos;singlenode_hivequery2.log;https://jira.spring.io/secure/attachment/22639/singlenode_hivequery2.log",,,,,,,,,,,201398400,,2015-02-20 16:51:08.138,9223372036854775807,true,sabby(sabby),,,,"0|i0862f:",9223372036854775807,9223372036854775807,,,,,,3.0,,"20/Feb/15 4:51 PM;sabby;@Hector: We resolved the CP/CL issue (in the context of Hive) as part of the 1.1 GA RELEASE. Please upgrade to the latest and retry this batch job. There's also a [sample application|https://github.com/spring-projects/spring-xd-samples/tree/master/batch-hive] in our repo that can be used as reference. If you still find any anomalies, please re-open this issue.",,,,,,,,,,,,,,,,,
Ensure that only bean definitions for the proper transport are loaded,XD-2647,61966,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,mbogoevici,mbogoevici,mbogoevici,26/Jan/15 9:58 AM,26/Jan/15 10:02 AM,10/Jul/21 8:37 AM,,1.1 M2,,,,,,,,Runtime,,,,,0,,,,,,,"Currently, the org.springframework.xd.dirt.server.SharedServerContextConfiguration will load  everything that matches the  `""classpath*:"" + ConfigLocations.XD_CONFIG_ROOT + ""bus/*.xml""` path. 

In a normal (i.e. production) environment, there are no conflicts, since only one jar containing message bus definitions is ever on the class path. 

However, during testing, *all* the projects containing bus definitions are on the class path, which leads to potential conflicts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ensure that only the bean definitions from the ${XD_TRANSPORT}-bus.xml file are loaded.,,203558400,,,9223372036854775807,false,mbogoevici(mbogoevici),,,,"0|i085rz:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
XD should use same hadoop security keys as Spring for Apache Hadoop,XD-2646,61965,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,jvalkeal,jvalkeal,26/Jan/15 9:24 AM,27/Jan/15 11:33 AM,10/Jul/21 8:37 AM,26/Jan/15 2:36 PM,1.1 M2,,,,,,1.1 RC1,,Hadoop,,,,,0,,,,,,,"For kerberos and other security related settings we use keys like 'spring.hadoop.userPrincipal' mentioned in https://github.com/spring-projects/spring-xd/wiki/Hadoop-Kerberos. However when we added boot config props to shdp, we used a sub keys like 'spring.hadoop.security.userPrincipal'.

It'd be good if we'd fix these to be same in both XD and SHDP not to cause confusion.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,203558400,,2015-01-26 14:03:24.773,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1410,"0|i085rr:",9223372036854775807,9223372036854775807,,,Sprint 41,,,1.0,,"26/Jan/15 2:03 PM;thomas.risberg;PR: https://github.com/spring-projects/spring-xd/pull/1410",,,,,,,,,,,,,,,,,
servers.yaml has a typo that causes XD startup to fail when....,XD-2645,61964,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,steve.mcnamara,steve.mcnamara,26/Jan/15 8:09 AM,26/Jan/15 9:49 AM,10/Jul/21 8:37 AM,26/Jan/15 9:49 AM,1.1 M2,,,,,,1.1 RC1,,,,,,,0,,,,,,,"Line 295 has 2 dashes instead of 3.  There is no effect on XD unless the XD extensions block is uncommented.

I have been using the XD extensions in version 1.0.3 and have merged my servers.yaml with all of the new content in 1.1.0.M2.

The Admin JVM crahes without logging any exception and the container JVM crashes and logs the following:

/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
`--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
1.1.0.M2                         eXtreme Data


Started : ContainerServerApplication
Documentation: https://github.com/spring-projects/spring-xd/wiki

expected '<document start>', but found BlockMappingStart
in 'reader', line 303, column 1:
    xd:
    ^

        at org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart.produce(ParserImpl.java:225)
        at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
        at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:143)
        at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:68)
        at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:93)
        at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:498)
        at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:152)
        at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:137)
        at org.springframework.boot.env.YamlPropertySourceLoader$Processor.process(YamlPropertySourceLoader.java:78)
        at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
        at org.springframework.boot.env.PropertySourcesLoader.load(PropertySourcesLoader.java:126)
        at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadIntoGroup(ConfigFileApplicationListener.java:378)
        at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:366)
        at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:336)
        at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:173)
        at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:144)
        at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:137)
        at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:126)
        at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:151)
        at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
        at org.springframework.boot.context.event.EventPublishingRunListener.publishEvent(EventPublishingRunListener.java:100)
        at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:59)
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:286)
        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
        at org.springframework.xd.dirt.server.ContainerBootstrapContext.<init>(ContainerBootstrapContext.java:48)
        at org.springframework.xd.dirt.server.ContainerServerApplication.run(ContainerServerApplication.java:83)
        at org.springframework.xd.dirt.server.ContainerServerApplication.main(ContainerServerApplication.java:72)
  

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,203558400,,2015-01-26 09:04:33.945,9223372036854775807,false,mark.fisher(mark.fisher),,,https://github.com/spring-projects/spring-xd/pull/1403,"0|i085rj:",9223372036854775807,9223372036854775807,,,Sprint 41,,,1.0,,"26/Jan/15 9:04 AM;thomas.risberg;PR https://github.com/spring-projects/spring-xd/pull/1403","26/Jan/15 9:49 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/637c6245b88c41ad81a226fcbe848f3cf8a603c7",,,,,,,,,,,,,,,,
The shell distribution zip is missing hadoop26 libraries,XD-2638,61927,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,thomas.risberg,thomas.risberg,thomas.risberg,23/Jan/15 7:47 AM,27/Jan/15 11:33 AM,10/Jul/21 8:37 AM,26/Jan/15 12:29 PM,,,,,,,1.1 RC1,,Packaging,,,,,0,,,,,,,"The spring-xd-[version]-shell.zip distribution zip doesn't include the lib/hadoop26 directory and libraries, so we get the following exception when starting the shell:

Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/hadoop/conf/Configuration
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,203558400,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1406,"0|i085rh:",9223372036854775807,9223372036854775807,,,Sprint 41,,,1.0,,"26/Jan/15 10:51 AM;thomas.risberg;PR https://github.com/spring-projects/spring-xd/pull/1406",,,,,,,,,,,,,,,,,
PermGen errors after running for a long time,XD-2627,61878,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,mbogoevici,mbogoevici,20/Jan/15 2:57 PM,20/Jan/15 2:57 PM,10/Jul/21 8:37 AM,,1.1 M2,,,,,,,,Runtime,,,,,0,,,,,,,Leaving the runtime running (e.g. as singlenode) ends up in permgen errors,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,204076800,,,9223372036854775807,false,mbogoevici(mbogoevici),,,,"0|i08593:",9223372036854775807,9223372036854775807,,,,,,5.0,,,,,,,,,,,,,,,,,,,
When setting management.port only the admin is updated,XD-2619,61864,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,20/Jan/15 8:12 AM,20/Jan/15 8:12 AM,10/Jul/21 8:37 AM,,1.1 RC1,,,,,,,,YARN Runtime,,,,,0,,,,,,,"When setting the management.port in the servers.yml all deployments should use the port specified.  Currently only admin is updated, the containers are still using 0.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,204163200,,,9223372036854775807,true,grenfro(grenfro),,,,"0|i08567:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Ensure that metadata for Kafka message bus is propagated before producing/consuming,XD-2616,61830,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,19/Jan/15 9:18 PM,22/Jan/15 1:14 PM,10/Jul/21 8:37 AM,21/Jan/15 7:49 AM,,,,,,,1.1 RC1,,Runtime,,,,,0,,,,,,,"Currently, `ensureTopicCreated` will invoke the creation of the topic on the brokers, however, the calls is not blocking. So, before proceeding, we should make sure that the metadata is readable (therefore propagated)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,204163200,XD-2356,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1389,"0|i0852v:",9223372036854775807,9223372036854775807,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Missing Log Configuration for throughput-sampler,XD-2611,61813,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,19/Jan/15 7:03 AM,22/Jan/15 1:14 PM,10/Jul/21 8:37 AM,20/Jan/15 3:12 PM,,,,,,,1.1 RC1,,,,,,,0,,,,,,,http://stackoverflow.com/questions/28019801/how-to-read-throughput-sampler-sink-values-in-spring-xd/28027544#28027544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,204249600,,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1386,"0|i084zj:",9223372036854775807,9223372036854775807,,,Sprint 41,,,1.0,,,,,,,,,,,,,,,,,,,
Job definition is deleted after restart the srping xd service in single node mode,XD-2610,61809,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Works as Designed,,lizilong,lizilong,18/Jan/15 5:39 PM,21/Jan/15 9:40 AM,10/Jul/21 8:37 AM,21/Jan/15 9:40 AM,1.0.3,,,,,,,,Runtime,,,,,0,,,,,,,"Job definition is deleted after restart the srping xd service in single node mode

repro step:
1.start service as single node
2.create a batch module
3.create a job based on batch module
4.restart service

expect result:
job definition is displayed on the job list

actual result:
job list is empty, all job definitions are missed",,,,,,,,,,,,,,,,,,,,,,,,"18/Jan/15 5:39 PM;lizilong;servers.yml;https://jira.spring.io/secure/attachment/22605/servers.yml",,,,,,,,,,,,,203990400,,2015-01-21 09:39:56.387,9223372036854775807,true,sabby(sabby),,,,"0|i084yn:",9223372036854775807,9223372036854775807,,,,,,2.0,,"21/Jan/15 9:39 AM;sabby;@lizilong: In ""singlenode"" ZK, RDBMS and Redis all run in the same process. If the process dies so is the related metadata in ZK and the references. Although 'singlenode' is not recommended for Production deployment, for your DEV experiments, it'd better that you run ZK and RDBMS separately if you would want to avoid this situation. This is expected to be inconsistent o'wise. You can override ZK/RDBMS properties in ""servers.yml"" file as below. 

{code:xml}
#Config for singlenode.
#Transport for single node may be overridden by --transport command line option
#If the singlenode needs to use external datasource for batch embeddedHsql can be set to false
spring:
  profiles: singlenode
xd:
  transport: local
#embeddedHsql: true
{code}",,,,,,,,,,,,,,,,,
Error when listing Streams in admin-ui,XD-2609,61806,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,sabby,sabby,17/Jan/15 5:02 PM,23/Jan/15 7:04 AM,10/Jul/21 8:37 AM,23/Jan/15 7:04 AM,,,,,,,1.0.4,1.1 RC1,,,,,,0,,,,,,,"As a user, I'm trying to list streams (>20) in admin-ui to use the pagination; however, I ended up with blank page and the server-side errored with _java.lang.IllegalStateException_.

Version: 1.1.0 SNAPSHOT (master build)
Distributed: 1 admin and 2 containers

*Steps to reproduce:*
1) Deploy the following streams.
stream create foo1 --definition ""time | log"" --deploy
stream create foo2 --definition ""time | log"" --deploy
stream create foo3 --definition ""time | log"" --deploy
stream create foo4 --definition ""time | log"" --deploy
stream create foo5 --definition ""time | log"" --deploy
stream create foo6 --definition ""time | log"" --deploy
stream create foo7 --definition ""time | log"" --deploy
stream create foo8 --definition ""time | log"" --deploy
stream create foo9 --definition ""time | log"" --deploy
stream create foo10 --definition ""time | log"" --deploy
stream create foo11 --definition ""time | log"" --deploy
stream create foo12 --definition ""time | log"" --deploy
stream create foo13 --definition ""time | log"" --deploy
stream create foo14 --definition ""time | log"" --deploy
stream create foo15 --definition ""time | log"" --deploy
stream create foo16 --definition ""time | log"" --deploy
stream create foo17 --definition ""time | log"" --deploy
stream create foo18 --definition ""time | log"" --deploy
stream create foo19 --definition ""time | log"" --deploy
stream create foo20 --definition ""time | log"" --deploy
stream create foo21 --definition ""time | log"" --deploy
stream create foo22 --definition ""time | log"" --deploy

2) Go to Streams tab in admin-ui to get a blank page and the following exception in admin logs.

*Error:*
16:55:19,107 1.1.0.SNAP ERROR http-nio-9393-exec-2 rest.RestControllerAdvice - Caught exception while handling a request
java.lang.IllegalStateException: Not all instances were looked at
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.xd.dirt.rest.XDController.enhanceWithDeployments(XDController.java:207)
	at org.springframework.xd.dirt.rest.XDController.listValues(XDController.java:178)
	at org.springframework.xd.dirt.rest.StreamsController.list(StreamsController.java:63)
",,,,,,,,,,,,,,,,,XD-2620,,,,,,,"19/Jan/15 1:23 PM;hillert;reproduce.txt;https://jira.spring.io/secure/attachment/22609/reproduce.txt",,,,,,,,,,,,1.0,204076800,XD-2054,2015-01-19 13:07:50.616,9223372036854775807,true,eric.bottard(eric.bottard),,,https://github.com/spring-projects/spring-xd/pull/1391,"0|i000ib:",9223372036854775807,9223372036854775807,,,Sprint 41,,,1.0,,"19/Jan/15 1:07 PM;hillert;Stacktrace:

{code}
java.lang.IllegalStateException: Not all instances were looked at
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.xd.dirt.rest.XDController.enhanceWithDeployments(XDController.java:207)
	at org.springframework.xd.dirt.rest.XDController.listValues(XDController.java:178)
	at org.springframework.xd.dirt.rest.StreamsController.list(StreamsController.java:63)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:777)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:706)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:857)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:618)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:725)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:291)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:106)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
	at org.apache.catalina.core.StandardHostValve.__invoke(StandardHostValve.java:142)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:537)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1085)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)
	at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1556)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1513)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
{code}","19/Jan/15 1:23 PM;hillert;In order to reproduce the issue quickly, execute the following Spring Shell script *reproduce.txt* using:

{code}
spring> script reproduce.txt
{code}","20/Jan/15 10:49 AM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1391",,,,,,,,,,,,,,,
XD Gemfire modules fail to deploy in  Yarn,XD-2608,61803,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,grenfro,grenfro,17/Jan/15 12:55 PM,27/Jan/15 11:33 AM,10/Jul/21 8:37 AM,27/Jan/15 5:51 AM,1.1 RC1,,,,,,1.1 RC1,,YARN Runtime,,,,,0,,,,,,,"1 admin on slave1
1 container on slave2

Gemfire modules fail to deploy.  with the following exception:
Caused by: java.io.FileNotFoundException: null/modules/common/gemfire-sink.groovy
This is because the modules require a XD_HOME environment variable and this is not set by the yarn deployment.  
{noformat}
Offending resource: URL [file:null/modules/common/gemfire-sink.groovy]; nested exception is java.io.FileNotFoundException: null/modules/common/gemfire-sink.groovy (No such file or directory)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:247)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:202)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:178)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:138)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)
	at org.springframework.boot.SpringApplication.load(SpringApplication.java:620)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Error evaluating Groovy script: null/modules/common/gemfire-sink.groovy (No such file or directory)
Offending resource: URL [file:null/modules/common/gemfire-sink.groovy]; nested exception is java.io.FileNotFoundException: null/modules/common/gemfire-sink.groovy (No such file or directory)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:247)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:202)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.importBeans(GroovyBeanDefinitionReader.java:337)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:324)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:368)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1016)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at beans$_run_closure1.doCall(beans:4)
	at beans$_run_closure1.doCall(beans)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:324)
	at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:278)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1016)
	at groovy.lang.Closure.call(Closure.java:423)
	at groovy.lang.Closure.call(Closure.java:417)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.invokeBeanDefiningClosure(GroovyBeanDefinitionReader.java:426)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$1.call(GroovyBeanDefinitionReader.java:223)
	at groovy.lang.Closure.call(Closure.java:439)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:324)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1207)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1016)
	at groovy.lang.MetaClassImpl.invokePropertyOrMissing(MetaClassImpl.java:1253)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1209)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1016)
	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:141)
	at beans.run(beans:1)
	at groovy.lang.GroovyShell.evaluate(GroovyShell.java:649)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:243)
	... 29 more
Caused by: java.io.FileNotFoundException: null/modules/common/gemfire-sink.groovy (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:146)
	at java.io.FileInputStream.<init>(FileInputStream.java:101)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)
	at org.springframework.core.io.UrlResource.getInputStream(UrlResource.java:168)
	at org.springframework.core.io.support.EncodedResource.getReader(EncodedResource.java:132)
	at org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader.loadBeanDefinitions(GroovyBeanDefinitionReader.java:243)
	... 79 more
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,203558400,,2015-01-26 12:55:19.484,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1409,"0|i085b7:",9223372036854775807,9223372036854775807,,,Sprint 41,,,3.0,,"26/Jan/15 12:55 PM;thomas.risberg;PR https://github.com/spring-projects/spring-xd/pull/1409
",,,,,,,,,,,,,,,,,
Windows build fails,XD-2607,61802,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,dturanski,dturanski,17/Jan/15 10:12 AM,06/Feb/15 3:05 PM,10/Jul/21 8:37 AM,05/Feb/15 2:54 PM,,,,,,,1.1 GA,,,,,,,0,,,,,,,"This Hadoop scenario will not work in Windows. The scope is to *disable* the test for windows build.

org.springframework.batch.integration.x.RemoteFileToHadoopTaskletTests > testWrite FAILED
    java.lang.IllegalStateException
        Caused by: org.springframework.beans.factory.BeanCreationException
            Caused by: java.lang.UnsatisfiedLinkError

org.springframework.batch.integration.x.RemoteFileToHadoopTests > testSimple FAILED
    java.lang.IllegalStateException
        Caused by: org.springframework.beans.factory.BeanCreationException
            Caused by: java.lang.UnsatisfiedLinkError
Java HotSpot(TM) Client VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0

3 tests completed, 2 failed
:spring-xd-extension-batch:test FAILED

FAILURE: Build failed with an exception.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,202694400,XD-2399,,9223372036854775807,false,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1433,"0|i084rh:",9223372036854775807,9223372036854775807,,,Sprint 42,,,1.0,,"05/Feb/15 2:54 PM;dturanski;Discovered some additional bugs in ModuleRegistry that surfaced while testing on windows.  Also hampered by frequent random errors. ",,,,,,,,,,,,,,,,,
TwitterStream/TwitterSearch sources fail when deploying on Yarn,XD-2605,61797,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Duplicate,,grenfro,grenfro,16/Jan/15 12:23 PM,16/Jan/15 2:31 PM,10/Jul/21 8:37 AM,16/Jan/15 2:31 PM,1.1 RC1,,,,,,,,Stream Module,YARN Runtime,,,,0,,,,,,,"We're getting a CNF on org.apache.http.impl.client.HttpClients
{noformat}
20:07:03,556 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/740c5f05-03f9-4b0f-9c3a-80022b594830/ec2Test3.sink.file.1, type=CHILD_ADDED
20:07:03,557 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module 'file' for stream 'ec2Test3'
20:07:03,828 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@8d11c70 moduleName = 'file', moduleLabel = 'file', group = 'ec2Test3', sourceChannelName = [null], sinkChannelName = [null], index = 1, type = sink, parameters = map['binary' -> 'true', 'mode' -> 'REPLACE'], children = list[[empty]]]
20:07:04,456 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/740c5f05-03f9-4b0f-9c3a-80022b594830/ec2Test3.source.twitterstream.1, type=CHILD_ADDED
20:07:04,456 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module 'twitterstream' for stream 'ec2Test3'
20:07:05,040 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@3ec4f104 moduleName = 'twitterstream', moduleLabel = 'twitterstream', group = 'ec2Test3', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map['consumerKey' -> '5ynZLmXyvxXzAlYHRlrb28U8n', 'accessToken' -> '2561860742-sfreUrr2jXwUPBk5eOL4Ow5GKy4Hyl12snKwfg5', 'accessTokenSecret' -> '481BGNZZDwdJ8rVw2hG9IryKuTZsv1cV1hiDpwdHt19xe', 'consumerSecret' -> 'C7ZQhJvy5RQm3QS6ruSkCriZZWtUMRbJbNeDCH7uYACWJPtBVi'], children = list[[empty]]]
20:07:05,871 1.1.0.SNAP  WARN DeploymentsPathChildrenCache-0 annotation.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.x.twitter.TwitterStreamChannelAdapter#0' defined in class path resource [config/twitterstream.xml]: Cannot resolve reference to bean 'twitterTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:275)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 39 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:267)
	... 48 more
Caused by: java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.http.client.HttpComponentsClientHttpRequestFactory.<init>(HttpComponentsClientHttpRequestFactory.java:72)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1.<init>(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.createRequestFactory(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector.getRequestFactory(ClientHttpRequestFactorySelector.java:52)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplateWithCulledMessageConverters(AbstractOAuth1ApiBinding.java:188)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplate(AbstractOAuth1ApiBinding.java:169)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.<init>(AbstractOAuth1ApiBinding.java:70)
	at org.springframework.social.twitter.api.impl.TwitterTemplate.<init>(TwitterTemplate.java:79)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 50 more
Caused by: java.lang.ClassNotFoundException: org.apache.http.impl.client.HttpClients
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 63 more
20:07:05,874 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 boot.SpringApplication - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.x.twitter.TwitterStreamChannelAdapter#0' defined in class path resource [config/twitterstream.xml]: Cannot resolve reference to bean 'twitterTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:275)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 39 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:267)
	... 48 more
Caused by: java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.http.client.HttpComponentsClientHttpRequestFactory.<init>(HttpComponentsClientHttpRequestFactory.java:72)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1.<init>(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.createRequestFactory(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector.getRequestFactory(ClientHttpRequestFactorySelector.java:52)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplateWithCulledMessageConverters(AbstractOAuth1ApiBinding.java:188)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplate(AbstractOAuth1ApiBinding.java:169)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.<init>(AbstractOAuth1ApiBinding.java:70)
	at org.springframework.social.twitter.api.impl.TwitterTemplate.<init>(TwitterTemplate.java:79)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 50 more
Caused by: java.lang.ClassNotFoundException: org.apache.http.impl.client.HttpClients
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 63 more
20:07:05,877 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.x.twitter.TwitterStreamChannelAdapter#0' defined in class path resource [config/twitterstream.xml]: Cannot resolve reference to bean 'twitterTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:359)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in class path resource [config/twitterstream.xml]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:275)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)
	... 39 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:267)
	... 48 more
Caused by: java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.http.client.HttpComponentsClientHttpRequestFactory.<init>(HttpComponentsClientHttpRequestFactory.java:72)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1.<init>(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.createRequestFactory(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector.getRequestFactory(ClientHttpRequestFactorySelector.java:52)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplateWithCulledMessageConverters(AbstractOAuth1ApiBinding.java:188)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplate(AbstractOAuth1ApiBinding.java:169)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.<init>(AbstractOAuth1ApiBinding.java:70)
	at org.springframework.social.twitter.api.impl.TwitterTemplate.<init>(TwitterTemplate.java:79)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 50 more
Caused by: java.lang.ClassNotFoundException: org.apache.http.impl.client.HttpClients
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 63 more
20:07:05,890 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/740c5f05-03f9-4b0f-9c3a-80022b594830/ec2Test3.source.twitterstream.1, type=CHILD_REMOVED
20:07:05,890 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Undeploying module [ModuleDescriptor@3ec4f104 moduleName = 'twitterstream', moduleLabel = 'twitterstream', group = 'ec2Test3', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map['consumerKey' -> '5ynZLmXyvxXzAlYHRlrb28U8n', 'accessToken' -> '2561860742-sfreUrr2jXwUPBk5eOL4Ow5GKy4Hyl12snKwfg5', 'accessTokenSecret' -> '481BGNZZDwdJ8rVw2hG9IryKuTZsv1cV1hiDpwdHt19xe', 'consumerSecret' -> 'C7ZQhJvy5RQm3QS6ruSkCriZZWtUMRbJbNeDCH7uYACWJPtBVi'], children = list[[empty]]]
20:07:19,164 1.1.0.SNAP  INFO main-EventThread server.DeploymentListener - Undeploying module [ModuleDescriptor@8d11c70 moduleName = 'file', moduleLabel = 'file', group = 'ec2Test3', sourceChannelName = [null], sinkChannelName = [null], index = 1, type = sink, parameters = map['binary' -> 'true', 'mode' -> 'REPLACE'], children = list[[empty]]]
20:07:19,457 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/740c5f05-03f9-4b0f-9c3a-80022b594830/ec2Test3.sink.file.1, type=CHILD_REMOVED

{noformat}",,,,,,,,,,,,,,,,XD-2074,,,,,,,,,,,,,,,,,,,,1.0,204422400,,,9223372036854775807,true,grenfro(grenfro),,,,"0|i084wf:",9223372036854775807,9223372036854775807,,,,,,3.0,,"16/Jan/15 12:27 PM;grenfro;Did a sanity check to make sure that it was Yarn specific.   It works on a non-yarn deployment on EC2.","16/Jan/15 2:31 PM;grenfro;Already identified in  https://jira.spring.io/browse/XD-2074
",,,,,,,,,,,,,,,,
Mismatch between configuration class and script XML for location/script,XD-2601,61776,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,paulmcminn,paulmcminn,16/Jan/15 2:59 AM,21/Jan/15 9:49 AM,10/Jul/21 8:37 AM,21/Jan/15 9:49 AM,1.0.3,,,,,,,,Stream Module,,,,,0,,,,,,,"The *org.springframework.xd.module.options.mixins.ScriptMixin* options class shipped with XD 1.0.3 refers to *script* rather than *location* however the XML configuration still references *$\{location\}* in the service activator:

{noformat}
	<service-activator output-channel=""output"" input-channel=""input"">
		<int-groovy:script location=""${location}"" script-variable-generator=""variableGenerator"" refresh-check-delay=""60""/>
	</service-activator>
{noformat}

Creating a stream using the old *location* argument no longer works obviously:

{noformat}
xd:>stream create myJobArchiveTrigger --definition ""tap:job:myJob.job > script --location=job-status.groovy --variables='tgtStatus=COMPLETED' > queue:job:archiveJob"" --deploy
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module script of type processor
    location: option named 'location' is not supported
{noformat}

Creating the same stream using *--script* reports success at the shell prompt but results in an error in the container/admin logs:

{noformat}
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'location' in string value ""${location}""
{noformat}

Working around this by overriding the XML setting in our deployment:

{noformat}
	<service-activator output-channel=""output"" input-channel=""input"">
		<int-groovy:script location=""${script}"" script-variable-generator=""variableGenerator"" refresh-check-delay=""60""/>
	</service-activator>
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,203990400,,2015-01-21 09:49:35.857,9223372036854775807,true,sabby(sabby),,,,"0|i084rr:",9223372036854775807,9223372036854775807,,,,,,1.0,,"21/Jan/15 12:29 AM;paulmcminn;Looks like this is fixed (looking at 1.1.0.M2).

Github history shows this was done under XD-2230.

This JIRA can be closed.","21/Jan/15 9:49 AM;sabby;Thanks, Paul. Yes, we addressed this via XD-2537 to backport the fix - it will be part of 1.0.4 release as well.",,,,,,,,,,,,,,,,
Web UI is not displayed,XD-2593,61736,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,gaojie,gaojie,13/Jan/15 7:57 PM,21/Jan/15 9:09 AM,10/Jul/21 8:37 AM,21/Jan/15 9:09 AM,1.0.3,,,,,,,,UI,,,,,0,springXD,,,,,,"Web UI management interface does not display the stream  list data or deploy status

js ERROR：
definitions.js:28 Uncaught TypeError: undefined is not a function

eg：http://120.27.44.69:9393/admin-ui/#/streams/definitions",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,203990400,,2015-01-21 09:09:55.817,9223372036854775807,true,sabby(sabby),,,,"0|i084jr:",9223372036854775807,9223372036854775807,,,,,,3.0,,"21/Jan/15 9:09 AM;sabby;This is will be fixed in XD-2609. The fix will be ported into 1.1GA and as well as 1.0.4 maintenance releases. Please reopen or create a new issue if you find any other anomalies. Thanks",,,,,,,,,,,,,,,,,
resourceManagerPort value not recognized when deploying container,XD-2585,61715,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,12/Jan/15 12:31 PM,13/Jan/15 7:40 AM,10/Jul/21 8:37 AM,,1.1 RC1,,,,,,,,YARN Runtime,,,,,0,,,,,,,"Attempted to set the rmAddress port to a value other than 8032 by using the resourceManagerPort however the value was not recognized.
I've attached the servers.yml.  
{noformat}
2015-01-12 20:21:48,935 INFO [ConfiguringBeanFactoryPostProcessor] - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2015-01-12 20:21:48,940 INFO [ConfiguringBeanFactoryPostProcessor] - No bean named 'taskExecutor' has been explicitly defined. Therefore, a default SyncTaskExecutor will be created.
2015-01-12 20:21:50,461 INFO [SpringYarnConfiguration] - Enabling CLIENT for Yarn
2015-01-12 20:21:50,475 INFO [SpringYarnConfiguration] - We couldn't figure out if we could use existing configuration
2015-01-12 20:21:50,475 INFO [SpringYarnConfiguration] - Building configuration for bean 'yarnConfiguration'
2015-01-12 20:21:50,498 INFO [SpringYarnConfigBuilder] - Existing yarnConfiguration: null
2015-01-12 20:21:50,649 INFO [ConfigurationFactoryBean] - Overwriting fsUri=[file:///] with fsUri=[hdfs://10.111.172.160:9000]
2015-01-12 20:21:50,649 INFO [ConfigurationFactoryBean] - Overwriting rmAddress=[0.0.0.0:8032] with rmAddress=[10.111.172.160:8032]
2015-01-12 20:21:55,965 INFO [ConfigurationFactoryBean] - Executing with tokens:
2015-01-12 20:21:55,975 INFO [SpringYarnConfigBuilder] - Setting configuration for SpringYarnConfigs:  fs.defaultFS=hdfs://10.111.172.160:9000 yarn.resourcemanager.address=10.111.172.160:8032 Configuration: core-default.xml, core-site.xml, yarn-default.xml, yarn-site.xml, mapred-default.xml, mapred-site.xml
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,"12/Jan/15 12:31 PM;grenfro;servers.yml;https://jira.spring.io/secure/attachment/22592/servers.yml",,,,,,,,,,,"In this scenario the expected result should have been:
INFO [ConfigurationFactoryBean] - Overwriting rmAddress=[0.0.0.0:8032] with rmAddress=[10.111.172.160:9030]",,204768000,,,9223372036854775807,true,grenfro(grenfro),,,,"0|i084f3:",9223372036854775807,9223372036854775807,,,,,,3.0,,"12/Jan/15 1:13 PM;grenfro;This looks to be a possible user error.  In short the config/servers.yml was updated with a new resourceManagerPort.  However the xd-yarn push was not executed after making the change.  The side effect was that when the user tried to run xd-yarn start container, the old manifest was used and thus the resourceManagerPort was not present.  Is this correct?",,,,,,,,,,,,,,,,,
Spring XD Admin UI does not show all the streams,XD-2583,61699,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,AlvaroVega,AlvaroVega,12/Jan/15 5:41 AM,27/Jan/15 2:28 PM,10/Jul/21 8:37 AM,27/Jan/15 2:28 PM,1.0.1,,,,,,,,UI,,,,,0,waiting-for-reporter,,,,,,"From Spring XD Shell, running this command ""stream list"", we counted 30 streams, however Spring XD Admin UI shows only 20.
When destroying some streams from Admin UI, the others that was not in the list start appearing.
We have not reviewed if there is a configuration parameter that tells how many streams to show in the Admin UI.",,,,,,,,,,,,,,,,,,,,,,,,"27/Jan/15 2:26 PM;sabby;streams_list_pagination.png;https://jira.spring.io/secure/attachment/22621/streams_list_pagination.png",,,,,,,,,,,,,203472000,,2015-01-27 14:26:28.387,9223372036854775807,true,sabby(sabby),,,,"0|i084br:",9223372036854775807,9223372036854775807,,,,,,5.0,,"27/Jan/15 2:26 PM;sabby;@Alvaro: We added pagination (refer screenshot) to all list views in _admin-ui_ as part of XD-1864. The pagination support is available in both 1.1M2 and the upcoming 1.0.4 release; would it be possible to upgrade to 1.1M2 from 1.0.1? If you'd rather wait for a 1.1 GA release, it's due on 2/6/2015.",,,,,,,,,,,,,,,,,
JDBC sink doesn't deserialize JSON types correctly,XD-2581,61696,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kdowbecki,kdowbecki,12/Jan/15 3:49 AM,07/Mar/15 9:35 AM,10/Jul/21 8:37 AM,,,,,,,,Waiting for Triage,,,,,,,0,,,,,,,"*Expected* 

1. Create MYTABLE table with DATE or TIMESTAMP column MYTIME
2. Create a stream ending with {code}... | object-to-json | jdbc --tableName=MYTABLE ...{code}
3. Send a message with payload being a Java object that has a property myTime of type java.util.Date
4. Message payload is inserted into MYTABLE table, date is correctly stored in MYTIME column.

*Actual*

4. Exception is thrown from JDBC sink which attempts to bind a long into MYTIME column.

*Root cause*

JDBC sink uses *org.springframework.xd.jdbc.JdbcMessagePayloadTransformer* class to deserialize JSON payload into Map which will later be used to bind parameters into java.sql.PreparedStatement.

Unfortunately JdbcMessagePayloadTransformer, and MessageTransformingHandler which is calling it, doesn't respect *json\_\_TypeId\_\_* message header so information about Java types is lost. Other Spring XD components serialize java.util.Date as Unix timestamp e.g. object-to-json transformer. JDBC sink will deserialize the date as java.lang.Long and later attempt to bind incorrect type to query parameter.

In case of GemFire XD following exception will be thrown during query parameter binding phase:
{code}
com.pivotal.gemfirexd.internal.shared.common.sanity.AssertFailure: ASSERT FAILED Number of parameters expected for message id 22005 (3) does not match number of arguments received (2)
	at com.pivotal.gemfirexd.internal.shared.common.sanity.SanityManager.ASSERT(SanityManager.java:239)
	at com.pivotal.gemfirexd.internal.shared.common.i18n.MessageUtil.formatMessage(MessageUtil.java:245)
	at com.pivotal.gemfirexd.internal.shared.common.i18n.MessageUtil.getCompleteMessage(MessageUtil.java:151)
	at com.pivotal.gemfirexd.internal.shared.common.i18n.MessageUtil.getCompleteMessage(MessageUtil.java:191)
	at com.pivotal.gemfirexd.internal.shared.common.i18n.MessageUtil.getCompleteMessage(MessageUtil.java:107)
	at com.pivotal.gemfirexd.internal.client.am.SqlException.<init>(SqlException.java:184)
	at com.pivotal.gemfirexd.internal.client.am.PreparedStatement$PossibleTypes.throw22005Exception(PreparedStatement.java:4007)
	at com.pivotal.gemfirexd.internal.client.am.PreparedStatement.setLong(PreparedStatement.java:843)
	at com.pivotal.gemfirexd.internal.client.am.PreparedStatement.setObject(PreparedStatement.java:1688)
	at org.springframework.jdbc.core.StatementCreatorUtils.setValue(StatementCreatorUtils.java:402)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValueInternal(StatementCreatorUtils.java:235)
	at org.springframework.jdbc.core.StatementCreatorUtils.setParameterValue(StatementCreatorUtils.java:150)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.setValues(PreparedStatementCreatorFactory.java:300)
	at org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(PreparedStatementCreatorFactory.java:252)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:638)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:909)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:933)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:313)
	at org.springframework.integration.jdbc.JdbcMessageHandler.executeUpdateQuery(JdbcMessageHandler.java:130)
	at org.springframework.integration.jdbc.JdbcMessageHandler.handleMessageInternal(JdbcMessageHandler.java:112)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 372 more
{code}",,,,,,,,,,,,,,,,,XD-2250,,,,,,,,,,,,,,,,,,,,204854400,,,9223372036854775807,true,sabby(sabby),,,,"0|i084b3:",9223372036854775807,9223372036854775807,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Failed to create a stream with Script processor,XD-2580,61694,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Duplicate,,kdowbecki,kdowbecki,11/Jan/15 11:40 AM,12/Jan/15 9:25 AM,10/Jul/21 8:37 AM,12/Jan/15 9:25 AM,1.0.3,,,,,,,,,,,,,0,,,,,,,"I attempted to create a stream with a Script processor using Spring XD shell:
{code}xd:>stream create --name test1 --definition ""tcp --port=17654 | script --location=print-stacktrace.groovy | null""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module script of type processor:
    location: option named 'location' is not supported
{code}

I've corrected the syntax as described in docs by replacing --location with --script:
{code}xd:>stream create --name test1 --definition ""tcp --port=17654 | script --script=print-stacktrace.groovy | null""
Created new stream 'test1'{code}

My stream was created but the deployment failed with exception:
{code}
20:04:45,105 1.0.3.RELEASE  INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'test1': DeploymentStatus{state=failed,error(s)=org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'org.springframework.integration.config.ServiceActivatorFactoryBean#0' defined in null: Could not resolve placeholder 'location' in string value ""${location}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'location' in string value ""${location}""
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.processProperties(PropertySourcesPlaceholderConfigurer.java:180)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.postProcessBeanFactory(PropertySourcesPlaceholderConfigurer.java:155)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:609)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:142)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:201)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'location' in string value ""${location}""
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:194)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:158)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveStringValue(BeanDefinitionVisitor.java:282)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:209)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitIndexedArgumentValues(BeanDefinitionVisitor.java:150)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:84)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:169)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitIndexedArgumentValues(BeanDefinitionVisitor.java:150)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:84)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.resolveValue(BeanDefinitionVisitor.java:169)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitPropertyValues(BeanDefinitionVisitor.java:141)
	at org.springframework.beans.factory.config.BeanDefinitionVisitor.visitBeanDefinition(BeanDefinitionVisitor.java:82)
	at org.springframework.beans.factory.config.PlaceholderConfigurerSupport.doProcessProperties(PlaceholderConfigurerSupport.java:208)
	... 31 more
{code}

# [script.xml in 1.0.3 tag|https://github.com/spring-projects/spring-xd/blob/v1.0.3/modules/processor/script/config/script.xml] uses {code}<int-groovy:script location=""${location}"" ...{code}
# The [Script 1.0.3 processor docs|http://docs.spring.io/autorepo/docs/spring-xd/1.0.3.RELEASE/reference/html/#script] have issues with properties naming e.g. example is using --location while later --script is used. Same with --propertiesLocation and --properties-location.",,,,,,,,,,,,,,,,,,,,,,,,"11/Jan/15 11:40 AM;kdowbecki;script-incorrect-example.jpg;https://jira.spring.io/secure/attachment/22589/script-incorrect-example.jpg",,,,,,,,,,,,,204768000,,2015-01-12 09:25:05.53,9223372036854775807,true,sabby(sabby),,,,"0|i084an:",9223372036854775807,9223372036854775807,,,,,,1.0,,"12/Jan/15 9:25 AM;sabby;This is already fixed in. XD-2537.",,,,,,,,,,,,,,,,,
Custom Module not loading class from the module/lib.,XD-2578,61688,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,mbogoevici,dallaybatta,dallaybatta,10/Jan/15 9:32 PM,09/Apr/15 12:09 PM,10/Jul/21 8:37 AM,05/Feb/15 12:12 PM,1.1 M1,,,,,,1.1 GA,,Runtime,,,,,0,,,,,,,"The module/lib contains the necessary jars but it is not taken, I am attaching the simple custom module which contains just few beans. Here is how I am creating the job from the xd-shell
job create --name job1 --definition ""job-custom"" --deploy

The server logs contains this error
***************************************************************************************
10:43:20,193 1.1.0.M2  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@2963e1e2 moduleName = 'job-custom', moduleLabel = 'job-custom', group = 'job1', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]
10:43:20,697 1.1.0.M2 ERROR DeploymentsPathChildrenCache-0 boot.SpringApplication - Application startup failed
java.lang.NoClassDefFoundError: org/springframework/oxm/Unmarshaller
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2531)
	at java.lang.Class.getDeclaredMethods(Class.java:1855)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:571)
***************************************************************************************

I already had been discussing this over the forums but could not get much help.
stackoverflow.com/questions/27878047/noclassdefinitionerror-with-simple-bean-configuration

If I place the spring-oxm jar in the spring-xd lib I get this error
***************************************************************************************
java.lang.IllegalStateException: Cannot convert value of type [org.springframework.oxm.jaxb.Jaxb2Marshaller] to required type [org.springframework.oxm.Unmarshaller] for property 'unmarshaller': no matching editors or conversion strategy found 
***************************************************************************************
",,,,,,,,,,,,,,,,,XD-2927,,,,,,,"10/Jan/15 9:32 PM;dallaybatta;job-custom.tar.gz;https://jira.spring.io/secure/attachment/22588/job-custom.tar.gz",,,,,,,,,,,,2.0,202780800,,2015-01-26 14:01:10.055,9223372036854775807,false,dturanski(dturanski),,,https://github.com/spring-projects/spring-xd/pull/1439,"0|i085rg:v",9223372036854775807,9223372036854775807,,,Sprint 42,,,2.0,,"13/Jan/15 6:05 AM;dallaybatta;Can someone from the core team validate this, our upcoming release required custom module working?
","26/Jan/15 2:01 PM;dturanski;[~eric.bottard] Can you take look at this? I can reproduce the error. I then tried putting the spring-oxm jar in xd/lib and I get 
 
Caused by: java.util.zip.ZipException: error in opening zip file
	at java.util.zip.ZipFile.open(Native Method)
	at java.util.zip.ZipFile.<init>(ZipFile.java:220)
	at java.util.zip.ZipFile.<init>(ZipFile.java:150)
	at java.util.jar.JarFile.<init>(JarFile.java:166)
	at java.util.jar.JarFile.<init>(JarFile.java:130)
	at org.springframework.boot.loader.jar.JarFile.<init>(JarFile.java:117)
	at org.springframework.boot.loader.jar.JarFile.<init>(JarFile.java:104)
	at org.springframework.boot.loader.jar.JarFile.<init>(JarFile.java:95)
	at org.springframework.boot.loader.archive.JarFileArchive.<init>(JarFileArchive.java:61)
	at org.springframework.boot.loader.archive.JarFileArchive.<init>(JarFileArchive.java:57)
	at org.springframework.boot.loader.archive.ExplodedArchive.getNestedArchive(ExplodedArchive.java:155)
	at org.springframework.boot.loader.archive.ExplodedArchive.getNestedArchives(ExplodedArchive.java:142)
	at org.springframework.xd.module.support.ModuleUtils.createModuleClassLoader(ModuleUtils.java:55)

When loading the 2nd jar from the module. I tried rebuilding the jar myself (using cf and cf0) and get the same result.  ","27/Jan/15 2:44 PM;dturanski;[~dallaybatta] - Still looking into this. Suggest you try moving spring-oxm jar from the module lib to xd/lib.  [~eric.bottard] got that to work. I hit the issue above. So you have a 50% chance :) Post a comment here and let us know if that works for you.","27/Jan/15 9:40 PM;dallaybatta;I have already moved the libraries in the xd/lib and it works but I am not happy with it, it is a workaround for us. Please fix the deployment issue.","03/Feb/15 9:52 AM;mbogoevici;In way of clarification

- deploying the sample project in a 1.0.0.RC1 build fails with CNFE, since the class is not visible;
- copying the jar in the lib folder of a running instance fails with CNFE as well for the same reason as above;
- restarting the XD instance jars in both `xd/lib` and module will yield a conversion issue because of class duplication;
- removing the jar in the module (i.e. ensuring that only the one in `xd/lib` is available) will work correctly.

For the final release, we will make sure that the jar is included (along with other similar dependencies of Spring Batch)","04/Feb/15 5:10 PM;mbogoevici;The error that [~dturanski] has reported is very likely to be OS X specific, and caused by the presence of a {{.DS_Store}} file in one of the subdirectories (the OS automatically creates the files when the directory is opened in Finder).",,,,,,,,,,,,
XD is not logging when deployed using yarn,XD-2577,61533,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,grenfro,grenfro,09/Jan/15 12:10 PM,22/Jan/15 1:14 PM,10/Jul/21 8:37 AM,19/Jan/15 4:55 PM,1.1 RC1,,,,,,1.1 RC1,,YARN Runtime,,,,,0,,,,,,,"When deploying XD (admin & container) using Yarn we only get the first 495 characters of the log which is the Ascii Art and Documentation links.
{noformat}
 _____                           __   _______
/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
 `--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
1.1.0.BUILD-SNAPSHOT             eXtreme Data


Started : ContainerServerApplication
Documentation: https://github.com/spring-projects/spring-xd/wiki
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,204163200,,2015-01-09 15:14:32.511,47606,true,sabby(sabby),,,,"0|i0845r:",47378,47308,,,,,,5.0,,"09/Jan/15 12:11 PM;grenfro;Even when using ""log"" as a sink we see no results written  to the logs.","09/Jan/15 3:14 PM;thomas.risberg;This started happening when we upgraded XD to use Spring Boot 1.2.0. It worked fine with Spring Boot 1.1.7, the logging ended up in the ""stderr"" log, but was available. With Boot 1.2.0 the admin and containers logging gets swallowed. I have no idea why or what changed so we need to do some research.

This is the commit: https://github.com/spring-projects/spring-xd/commit/fb2bbcdbbc43ffc63ede8498547ef2d0a48d06d6","19/Jan/15 4:55 PM;grenfro;Verified that XD-2564  resolved the problem.",,,,,,,,,,,,,,,
Full build with tests fail on Ubuntu,XD-2573,61516,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,thomas.risberg,thomas.risberg,08/Jan/15 1:25 PM,06/Feb/15 3:05 PM,10/Jul/21 8:37 AM,06/Feb/15 7:49 AM,,,,,,,1.1 GA,,,,,,,0,,,,,,,"On Ubuntu 14.04 LTS using OpenJDK version  ""1.7.0_65""

OpenJDK Runtime Environment (IcedTea 2.5.3) (7u71-2.5.3-0ubuntu0.14.04.1)
OpenJDK 64-Bit Server VM (build 24.65-b04, mixed mode)

I see the following failures:

:spring-xd-dirt:test

org.springframework.xd.dirt.security.SingleNodeApplicationWithUserBasedSecurityTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

org.springframework.xd.dirt.security.SingleNodeApplicationWithLdapSimpleBindTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

org.springframework.xd.dirt.security.SingleNodeApplicationWithDefaultSecurityTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

org.springframework.xd.dirt.security.SingleNodeApplicationWithSslTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

org.springframework.xd.dirt.security.SingleNodeApplicationWithUsersFileTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

org.springframework.xd.dirt.security.SingleNodeApplicationWithLdapSearchAndBindTest > classMethod FAILED
    org.springframework.beans.factory.BeanCreationException
        Caused by: java.lang.IllegalStateException
            Caused by: java.net.BindException

595 tests completed, 6 failed, 2 skipped
:spring-xd-dirt:test FAILED

The test reports has this:

Caused by: java.lang.IllegalStateException: HSQLDB could not be started on 0.0.0.0:7714, state: SHUTDOWN
	at org.springframework.xd.batch.hsqldb.server.HSQLServerBean.startServer(HSQLServerBean.java:162)
	at org.springframework.xd.batch.hsqldb.server.HSQLServerBean.afterPropertiesSet(HSQLServerBean.java:82)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562)
	... 42 more
Caused by: java.net.BindException: Address already in use
	at java.net.PlainSocketImpl.socketBind(Native Method)
	at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:376)
	at java.net.ServerSocket.bind(ServerSocket.java:376)
	at java.net.ServerSocket.<init>(ServerSocket.java:237)
	at java.net.ServerSocket.<init>(ServerSocket.java:128)
	at org.hsqldb.server.HsqlSocketFactory.createServerSocket(Unknown Source)
	at org.hsqldb.server.Server.openServerSocket(Unknown Source)
	at org.hsqldb.server.Server.run(Unknown Source)
	at org.hsqldb.server.Server.access$000(Unknown Source)
	at org.hsqldb.server.Server$ServerThread.run(Unknown Source)

So I assume I see this due HSQL running from another test.",,,,,,,,,,,,,,,,,XD-2561,,,,,,,,,,,,,,,,,,,,202694400,XD-2692,2015-01-09 09:57:11.467,47589,true,sabby(sabby),,,,"0|i000ie:wi",47361,47291,,,Sprint 42,,,5.0,,"09/Jan/15 8:44 AM;thomas.risberg;First PR: https://github.com/spring-projects/spring-xd/pull/1369","09/Jan/15 9:46 AM;thomas.risberg;After applying the PR 1369 I see a different error:

:spring-xd-shell:test

org.springframework.xd.shell.command.ShellCommandsTestSuite > org.springframework.xd.shell.command.ModuleCommandTests.testAttemptToDeleteNonComposedModule                                                                                                 FAILED
    java.lang.AssertionError at ModuleCommandTests.java:121

125 tests completed, 1 failed
:spring-xd-shell:test FAILED
","09/Jan/15 9:57 AM;dturanski;I also get the error on ModuleCommandTests.testAttemptToDeleteNonComposedModule. Have seen these as well:

org.springframework.xd.dirt.integration.kafka.KafkaMessageBusTests > testCompression FAILED
    java.lang.AssertionError at KafkaMessageBusTests.java:160

org.springframework.xd.shell.command.ShellCommandsTestSuite > org.springframework.xd.shell.command.KafkaSourceSinkTests.testKafkaSourceAndSink FAILED
    java.lang.NullPointerException at KafkaSourceSinkTests.java:76","09/Jan/15 10:01 AM;thomas.risberg;Also getting this now:

:spring-xd-dirt:test

org.springframework.xd.dirt.integration.bus.MessageBusAwareChannelResolverTests > resolveTopicChannel FAILED
    java.lang.AssertionError at MessageBusAwareChannelResolverTests.java:142

617 tests completed, 1 failed, 2 skipped
:spring-xd-dirt:test FAILED

---

java.lang.AssertionError: expected:<3> but was:<2>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at org.springframework.xd.dirt.integration.bus.MessageBusAwareChannelResolverTests.resolveTopicChannel(MessageBusAwareChannelResolverTests.java:142)
","19/Jan/15 6:14 AM;thomas.risberg;Failures seem to shift around a bit. Currently getting:

{code}
:spring-xd-shell:test
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0

org.springframework.xd.shell.command.ShellCommandsTestSuite > org.springframework.xd.shell.command.ModuleCommandTests.testAttemptToDeleteNonComposedModule                                                                                        FAILED
    java.lang.AssertionError at ModuleCommandTests.java:121

125 tests completed, 1 failed
:spring-xd-shell:test FAILED
{code}

with this in the test output:

{code}
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertFalse(Assert.java:64)
	at org.junit.Assert.assertFalse(Assert.java:74)
	at org.springframework.xd.shell.command.ModuleCommandTests.testAttemptToDeleteNonComposedModule(ModuleCommandTests.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.xd.test.AbstractExternalResourceTestSupport$1.evaluate(AbstractExternalResourceTestSupport.java:71)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.xd.test.AbstractExternalResourceTestSupport$1.evaluate(AbstractExternalResourceTestSupport.java:71)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

This is on Ubuntu 14.10

$ java -version
java version ""1.8.0_25""
Java(TM) SE Runtime Environment (build 1.8.0_25-b17)
Java HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)
","19/Jan/15 6:19 AM;hillert;I tested locally on Friday here with a fresh installation of Ubuntu 14.04 and Open JDK 1.7. Everything Java related ran fine (always). I had issues with the front-end code (experienced problems downloading the NPM related dependencies).","19/Jan/15 10:42 AM;hillert;Today I observed intermittent build issues. Towards the end of running the tests for the *spring-xd-dirt* module Gradle abruptly stopped without meaning full stacktraces:

*Process 'Gradle Test Executor 8' finished with non-zero exit value 1*

Upgraded to Gradle 2.2.1 with the same results:

{code}
Running using:
Gradle 2.2.1
------------------------------------------------------------

Build time:   2014-11-24 09:45:35 UTC
Build number: none
Revision:     6fcb59c06f43a4e6b1bcb401f7686a8601a1fb4a

Groovy:       2.3.6
Ant:          Apache Ant(TM) version 1.9.3 compiled on December 23 2013
JVM:          1.7.0_65 (Oracle Corporation 24.65-b04)
OS:           Linux 3.13.0-32-generic i386
{code}

Afterwards, however, I ran several successful partial builds:

* ./gradlew spring-xd-dirt:test
* ./gradlew test

Then I ran several more builds *SUCCESSFUL*
 
* ./gradlew clean build dist --stacktrace

Was never able to reproduce specific JUnit failures e.g. in *spring-xd-shell*
","19/Jan/15 2:27 PM;thomas.risberg;It looks to me like there is some cruft left over from a previous test. If I disable the testTcpSource method in TcpModulesTests it works fine and I don't see any errors. So somehow the ""tcp"" source left something behind that testAttemptToDeleteNonComposedModule gets tripped up over. Not sure what that test is supposed to test, there is nothing but an assert there that a ""tcp"" source can't be deleted.","30/Jan/15 10:30 AM;mark.pollack;I believe there is some timing issue with the delete non composed module... if you run with -PmaxParallelForks=4 then this test passes (but a hadoop one fails)","02/Feb/15 10:59 AM;hillert;One issue at play is also memory. I noticed that the only 1GB of memory (on VMware Fusion), gradle may fail abruptly. With *2 GB* things look better.","03/Feb/15 7:02 AM;hillert;I think I may be able to explain a few (intermittent) build issues we have seen. While investigating build issues on Ubuntu, one of my Spark tests stopped working in STS (*KafkaTransportSparkStreamingTests#testSparkLog()*), which was odd as usually all tests pass on my Macbook Air. 

I finally noticed that my VMware Fusion instance had 2 GB of memory allocated to it and was running. Once I stopped the VM, my test passed.

In reverse, I had to increase the memory footprint on my Ubuntu VMware dramatically in order to pass all tests. I was finally able to pass all tests once the machine had 5512MB of memory and 2 cores.

Glenn did a comparative build on EC2 with similar results:

* 7.5 GB is complete no errors
* 3.5 GB FAILED with:

{code}
org.springframework.xd.dirt.stream.KafkaSingleNodeStreamDeploymentIntegrationTests > testTappingWithRepeatedModulesDoesNotDuplicateMessages FAILED
    java.lang.AssertionError
{code}
With lower memory allocations (*1GB*) things got even more brutal. With 1GB of RAM Gradle just *hard-fails* (See prior comments). I saw a Linux OS memory dump in the build directory. This error  is particular misleading as Gradle itself does not provide any additional ""hints"".
 
Not sure what the full solution here is. Shall we just state that XD requires at least 6GB of memory for builds to succeed? Shall we try to make the build work with e.g. 4GB? The encountered test failures certainly don't feel like a good user experience (UX). Not sure if anything can be done about that besides improved documentation.
","03/Feb/15 11:27 AM;hillert;Might be related to XD-2596 as problematic tests are Kafka related.","05/Feb/15 12:56 PM;hillert;Added note to the documentation in regards to minimum memory requirements. https://github.com/spring-projects/spring-xd/wiki/Building-Spring-XD",,,,,
Strip MessageBus DeliveryMode Header,XD-2567,61491,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,07/Jan/15 12:50 PM,22/Feb/16 3:28 PM,10/Jul/21 8:37 AM,19/Jan/15 3:34 PM,,,,,,,1.1 RC1,,,,,,,0,,,,,,,"Since the messagebus refactoring, we now see 

{noformat}
15:43:06,379 1.1.0.M2  WARN xdbus.foo.0-1 support.DefaultAmqpHeaderMapper - skipping header 'amqp_deliveryMode' since it is not of expected type [class org.springframework.amqp.core.MessageDeliveryMode], it is [class org.springframework.amqp.core.MessageDeliveryMode]
{noformat}

When using a rabbit transport and a rabbit sink (the sink Spring AMQP is in its own classloader).",,,,,,,,,,,,,,,,,XD-3744,,,,,,,,,,,,,,,,,,,1.0,205200000,XD-2292,2015-01-07 15:33:08.789,47564,false,grussell(grussell),,,,"0|i083wf:",47336,47266,,,Sprint 41,,,1.0,,"07/Jan/15 3:33 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/1d935c7df06ef0a066ca2b07107876eaf5344c88",,,,,,,,,,,,,,,,,
XD on YARN broken due to missing messagebus libs,XD-2563,61475,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,jvalkeal,jvalkeal,06/Jan/15 9:49 AM,08/Jan/15 6:35 AM,10/Jul/21 8:37 AM,08/Jan/15 6:35 AM,1.1 M2,,,,,,1.1 RC1,,YARN Runtime,,,,,0,,,,,,,"Admin on YARN simply fails because messagebus libs are not copied in place during a build.

Already tried and simple fix is for gradle/build-dist.gradle:

{code}
task copyYarnMessageBusLibs(type: Copy) {
  from ""$rootDir/lib/messagebus""
  into ""$buildDir/dist/spring-xd-yarn/xd-yarn/lib/messagebus""
}
{code}

and execute it together with copyMessageBusLibs task.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,205200000,,2015-01-07 14:22:35.982,47548,false,tmarshall(tmarshall),,,,"0|i081jr:",46955,47250,,,Sprint 41,,,1.0,,"07/Jan/15 2:22 PM;thomas.risberg;PR:  https://github.com/spring-projects/spring-xd/pull/1361",,,,,,,,,,,,,,,,,
Document minimum memory requirement for Gradle builds,XD-2561,61466,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,vicchugu,vicchugu,05/Jan/15 12:45 PM,06/Feb/15 3:05 PM,10/Jul/21 8:37 AM,05/Feb/15 1:00 PM,,,,,,,1.1 GA,,,,,,,0,,,,,,,"The build failed on two classes from spring-xd-extension-process:
ShellCommandProcessor.java and ShellCommandProcessorTests.java
with error:
FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':spring-xd-extension-process:licenseTest'.
> License violations were found: /Users/victor.chugunov/git/repos/spring/spring-xd/extensions/spring-xd-extension-process/src/test/java/org/springframework/xd/extension/process/ShellCommandProcessorTests.java}


In both classes the license is misplaced:
package org.springframework.xd.extension.process;/*
 *
 *  * Copyright 2014 the original author or authors.
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the ""License"");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  * http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an ""AS IS"" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 */",,,,,,,,,,,,,XD-2661,XD-2607,,,,,,,,,,,,,,,,,,,,,,,202694400,,2015-01-29 10:50:24.98,47539,true,sabby(sabby),,,,"0|i085ba:r",47305,47241,,,Sprint 42,,,1.0,,"29/Jan/15 10:50 AM;sabby;This may be already fixed. The scope is to verify the reported tests through gradle build.
","04/Feb/15 7:27 AM;hillert;Please also see XD-2573. Having enough memory allocated is critical for all tests to pass. On Ubuntu there are presently issues with less than 5.5 GB of memory (+ 2 cores). ","05/Feb/15 12:45 PM;sabby;Originally reported license related errors are resolved. Follow-up builds failed (test assertion failures) due to memory limits because of kafka, zk and xd all running in a single process. We would have to document the reasoning with our recommendation memory requirement. ","05/Feb/15 12:58 PM;hillert;Added memory requirements: https://github.com/spring-projects/spring-xd/wiki/Building-Spring-XD",,,,,,,,,,,,,,
XD 1.1.0.M2 Won't Run on Windows,XD-2539,61409,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,grussell,grussell,grussell,31/Dec/14 1:28 PM,05/Jan/15 12:54 PM,10/Jul/21 8:37 AM,01/Jan/15 9:17 AM,1.1 M2,,,,,,1.1 RC1,,Runtime,,,,,0,PullRequest,,,,,,"See http://stackoverflow.com/questions/27725905/spring-xd-1-1-0-m2-fails-to-start

With {{XD_HOME}} set with back-whacks, it fails on {{\U...}} with {{XD_HOME}} set with whacks, it fails with {{/xd\...}}. The StackOverflow failure is similar.

1.0.3 works fine.

{noformat}
set XD_HOME=C:\Users\gpr\Documents\spring-xd-1.1.0.M2-dist\spring-xd-1.1.0.M2\xd

Caused by: java.util.regex.PatternSyntaxException: Illegal/unsupported escape sequence near index 5
.*C:\Users\gpr\Documents\spring-xd-1.1.0.M2-dist\spring-xd-1.1.0.M2\xd\lib\messagebus\([^/]*).*

set XD_HOME=C:/Users/gpr/Documents/spring-xd-1.1.0.M2-dist/spring-xd-1.1.0.M2/xd


Caused by: java.util.regex.PatternSyntaxException: Illegal/unsupported escape sequence near index 71
.*C:/Users/gpr/Documents/spring-xd-1.1.0.M2-dist/spring-xd-1.1.0.M2/xd\lib\messagebus\([^/]*).*
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,205804800,,,47482,false,tmarshall(tmarshall),,,,"0|i083dz:",47253,47184,,,,,,5.0,,"31/Dec/14 1:54 PM;grussell;Caused by XD-2381; 


{code}ResourcePatternScanningOptionHandlers.SingleNodeDataTransportOptionHandler.resolveMessageBusPath(){code}


inserts back-whacks ""\"" on Windows (uses {{File.separator}} ) which is invalid when used in a regex. It should always use whacks ""/"", regardless of the OS.","01/Jan/15 8:37 AM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1354",,,,,,,,,,,,,,,,
BackPort script.xml Bug Fix,XD-2537,61382,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,30/Dec/14 7:12 AM,16/Jan/15 7:47 AM,10/Jul/21 8:37 AM,30/Dec/14 7:19 AM,1.0.3,,,,,,1.0.4,,Stream Module,,,,,1,,,,,,,"An additional commit (https://github.com/spring-projects/spring-xd/commit/db1f585) for XD-2230 was applied only to master; it needs to be backported to 1.0.x.

{{s/$\{location\}/$\{script\}/}}


https://gopivotal-com.socialcast.com/messages/22909482",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,204508800,,2015-01-15 07:38:36.506,47455,true,kdowbecki(kdowbecki),,,,"0|i08387:",47227,47157,,,,,,1.0,,"30/Dec/14 9:19 AM;grussell;https://github.com/spring-projects/spring-xd/commit/75c4b850f1b29eac0412deb9a8bd8e8b81b1fd35

One question I have is why the deployment didn't go into a failed state; the processor module failed to deploy due to a missing property so shouldn't the whole stream have been backed out?","15/Jan/15 7:38 AM;kdowbecki;Will you please update script processor documentation when this fix is released.","16/Jan/15 7:32 AM;grussell;The documentation currently shows the correct properties...

http://docs.spring.io/spring-xd/docs/1.0.3.RELEASE/reference/html/#script

This bug was in the script.xml itself.

Let us know if you see a problem elsewhere.

Thanks","16/Jan/15 7:47 AM;kdowbecki;Please correct me if I'm wrong but there are 2 inconsistencies (marked blue and red on my pic) in the docs for Script module (your link):

!http://i58.tinypic.com/fjnx4h.png!",,,,,,,,,,,,,,
Spark Application Job fails when using remote Spark Master,XD-2532,61324,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,19/Dec/14 1:33 PM,22/Jan/15 5:47 AM,10/Jul/21 8:37 AM,22/Jan/15 5:46 AM,1.1 M1,,,,,,1.1 RC1,,,,,,,0,,,,,,,When executing a Spark Application Job on XD against a remote Spark Master we receive a CNF exception for FSDataInputStream.  Running against a local[1] Spark Master works normally.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,203990400,,2015-01-21 13:59:09.327,47397,true,grenfro(grenfro),,,https://github.com/spring-projects/spring-xd/pull/1394,"0|i081y7:",47020,47099,,,Sprint 41,,,5.0,,"22/Dec/14 1:55 PM;grenfro;When attempting to send a SparkApplication to a remote master the application reports a ClassNotFound:
{noformat}
21:14:27,014 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/hadoop/fs/FSDataInputStream
21:14:27,014 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at org.apache.spark.deploy.SparkSubmitArguments.parse$1(SparkSubmitArguments.scala:312)
21:14:27,014 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at org.apache.spark.deploy.SparkSubmitArguments.parseOpts(SparkSubmitArguments.scala:225)
21:14:27,014 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at org.apache.spark.deploy.SparkSubmitArguments.<init>(SparkSubmitArguments.scala:60)
21:14:27,014 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:70)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: Caused by: java.lang.ClassNotFoundException: org.apache.hadoop.fs.FSDataInputStream
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.security.AccessController.doPrivileged(Native Method)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
21:14:27,015 1.1.0.SNAP ERROR xdbus.job:TyJob-1 tasklet.SparkTasklet - Spark Log: 	... 5 more
{noformat}
After adding hadoop-commons the spark sample did load, but then started getting into missing log4j dependencies.  
Copying cp lib/slf4j-api-1.7.7.jar caused this exception
{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tasklet': Cannot resolve reference to bean 'sparkTasklet' while setting bean property 'tasklet'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sparkTasklet' defined in class path resource [config/sparkapp.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.xd.spark.tasklet.SparkTasklet]: Constructor threw exception; nested exception is java.lang.LinkageError: loader constraint violation: when resolving method ""org.slf4j.impl.StaticLoggerBinder.getLoggerFactory()Lorg/slf4j/ILoggerFactory;"" the class loader (instance of org/springframework/xd/module/support/ParentLastURLClassLoader) of the current class, org/slf4j/LoggerFactory, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for resolved class, org/slf4j/impl/StaticLoggerBinder, have different Class objects for the type LoggerFactory; used in the signature
{noformat}
So need to spend some time resolving the Log4j depenencies.  ","05/Jan/15 5:50 AM;grenfro;To identify the missing dependencies in the deployment that was being tested, the following jars were added to the module lib directory.
hadoop-common-2.5.1.jar
slf4j-api-1.7.7.jar

However then the app reported:
{noformat}
Caused by: java.lang.LinkageError: loader constraint violation: when resolving method ""org.slf4j.impl.StaticLoggerBinder.getLoggerFactory()Lorg/slf4j/ILoggerFactory;"" the class loader (instance of org/springframework/xd/module/support/ParentLastURLClassLoader) of the current class, org/slf4j/LoggerFactory, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for resolved class, org/slf4j/impl/StaticLoggerBinder, have different Class objects for the type LoggerFactory; used in the signature
{noformat}","09/Jan/15 7:51 AM;grenfro;* Running java org.apache.spark.deploy.SparkSubmit manually from the machine had some interesting results.
** In order to get it to work I had to install spark on the container machine
*** run $SPARK_HOME/bin/compute-classpath
*** take those results and add it to my classpath i.e.
{noformat}
 export CLASSPATH=/home/ubuntu/spark-1.2.0-bin-hadoop2.4/conf:/home/ubuntu/spark-1.2.0-bin-hadoop2.4/lib/spark-assembly-1.2.0-hadoop2.4.0.jar:/home/ubuntu/spark-1.2.0-bin-hadoop2.4/lib/datanucleus-rdbms-3.2.9.jar:/home/ubuntu/spark-1.2.0-bin-hadoop2.4/lib/datanucleus-api-jdo-3.2.6.jar:/home/ubuntu/spark-1.2.0-bin-hadoop2.4/lib/datanucleus-core-3.2.10.jar
{noformat}
*** Then I could run the command successfully.
*** Also FSDataInputStream is located in spark-assembly-1.2.0-hadoop2.4.0.jar","21/Jan/15 1:59 PM;thomas.risberg;PR: https://jira.spring.io/browse/XD-2532
","22/Jan/15 5:47 AM;grenfro;IN this case is it was caused by the classpath implemented by the use of the Rabbit Transport.
",,,,,,,,,,,,,
In XD shell an incomplete command will be executed as the full command,XD-2525,61279,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,18/Dec/14 12:57 PM,18/Dec/14 12:57 PM,10/Jul/21 8:37 AM,,1.1 M1,,,,,,,,,,,,,0,,,,,,,"When using the XD shell a user can enter the first character of a command and it will be accepted as the full command.  for example

e <return/>  will exit the shell
The following commands below show how a user can target a new cluster and then get a job execution list by using the first character of the command.

server-unknown:>a c s http://ec2-54-90-166-140.compute-1.amazonaws.com:9393
Successfully targeted http://ec2-54-90-166-140.compute-1.amazonaws.com:9393
xd:>j e l
  Id  Job Name                                   Start Time               Step Execution Count  Execution Status  Deployment Status  Definition Status
  --  -----------------------------------------  -----------------------  --------------------  ----------------  -----------------  -----------------
  28  tsle2145f21d-5b0b-49df-b9cc-a3fe65c49ecc   2014-12-18 11:08:47,000  2                     COMPLETED         Undeployed         Destroyed
  27  ec2Job3                                    2014-12-18 11:07:13,000  2                     COMPLETED         Undeployed         Destroyed
  26  ec2Job3",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,The user should use tab complete to finish the command.  ,,206928000,,,47352,true,tmarshall(tmarshall),,,,"0|i082jb:",47115,47054,,,,,,2.0,,,,,,,,,,,,,,,,,,,
spring_rabbitmq_addresses environment variable is ignored,XD-2516,61239,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,mbogoevici,grenfro,grenfro,16/Dec/14 12:03 PM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,17/Dec/14 8:41 AM,,,,,,,1.1 GA,,Configuration,,,,,0,,,,,,,"When trying to configure XD to use a RabbitMQ instance other than the default localhost:5672, a user is supposedto updated the ""spring_rabbitmq_addresses"" environment variable or the spring.rabbitmq.addresses setting in the servers.yml file.  In this case XD is ignoring this environment variable.  

h3. Steps to reproduce 

# set the transport by using ""export XD_TRANSPORT=rabbit""
# set the spring_rabbitmq_addresses by ""export spring_rabbitmq_addresses=foo:5672""
# Startup a admin container on your local machine
# deploy ticktock
#* this should fail
#* start up a local rabbitmq
#* deploy a new ticktock and stream will deploy.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,207100800,,,47312,true,sabby(sabby),,,,"0|i0829j:",47071,47014,,,Sprint 40,,,3.0,,,,,,,,,,,,,,,,,,,
Fix classpath issues for RabbitMQ source/sink,XD-2510,61223,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,15/Dec/14 10:21 PM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,17/Dec/14 9:21 AM,,,,,,,1.1 GA,,Runtime,,,,,0,,,,,,,"RabbitMQ Sink is throwing:
{quote}
09:44:16,031 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 boot.SpringApplication - Application startup failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 19 in XML document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:180)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:138)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)
    at org.springframework.boot.SpringApplication.load(SpringApplication.java:620)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
    at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
    at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
    at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
    at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
    at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
    at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
    at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
    at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
    at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
    at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3237)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2714)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2056)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:766)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:356)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
    at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
    ... 30 more
09:44:16,036 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 19 in XML document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:180)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:138)
    at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)
    at org.springframework.boot.SpringApplication.load(SpringApplication.java:620)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
    at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
    at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
    at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
    at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
    at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
    at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
    at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
    at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
    at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
    at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3237)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2714)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2056)
    at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:766)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:356)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
    at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
    at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,207187200,,,47296,false,sabby(sabby),,,,"0|i0826f:",47057,46998,,,Sprint 40,,,1.0,,,,,,,,,,,,,,,,,,,
Solve CP issues for the Rabbit MessageBus,XD-2509,61222,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,15/Dec/14 10:21 PM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,16/Dec/14 9:40 AM,,,,,,,1.1 GA,,Runtime,,,,,0,,,,,,,"Rabbit Message Bus is throwing:

{quote}
10:14:04,678 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.StreamDeploymentListener - Deployment status for stream 'foo': DeploymentStatus{state=failed,error(s)=org.springframework.amqp.UncategorizedAmqpException: java.lang.IllegalArgumentException: interface org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$ContainerDelegate is not visible from class loader
    at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:66)
    at org.springframework.amqp.rabbit.connection.RabbitAccessor.convertRabbitAccessException(RabbitAccessor.java:110)
    at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.initialize(AbstractMessageListenerContainer.java:426)
    at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.afterPropertiesSet(AbstractMessageListenerContainer.java:385)
    at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus.doRegisterConsumer(RabbitMessageBus.java:367)
    at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus.bindConsumer(RabbitMessageBus.java:308)
    at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindMessageConsumer(AbstractMessageBusBinderPlugin.java:183)
    at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindConsumerAndProducers(AbstractMessageBusBinderPlugin.java:138)
    at org.springframework.xd.dirt.plugins.stream.StreamPlugin.postProcessModule(StreamPlugin.java:73)
    at org.springframework.xd.dirt.module.ModuleDeployer.postProcessModule(ModuleDeployer.java:238)
    at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:218)
    at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
    at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
    at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
    at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
    at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
    at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
    at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
    at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
    at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
    at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: interface org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$ContainerDelegate is not visible from class loader
    at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:616)
    at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:592)
    at java.lang.reflect.WeakCache$Factory.get(WeakCache.java:244)
    at java.lang.reflect.WeakCache.get(WeakCache.java:141)
    at java.lang.reflect.Proxy.getProxyClass0(Proxy.java:455)
    at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:738)
    at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:121)
    at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:111)
    at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:96)
    at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.initializeProxy(SimpleMessageListenerContainer.java:586)
    at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doInitialize(SimpleMessageListenerContainer.java:612)
    at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.initialize(AbstractMessageListenerContainer.java:424)
    ... 28 more
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,8.0,207187200,,,47295,false,sabby(sabby),,,,"0|i08267:",47056,46997,,,Sprint 40,,,2.0,,,,,,,,,,,,,,,,,,,
REST endpoints XML response is broken,XD-2507,61220,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,iperumal,iperumal,15/Dec/14 2:50 PM,08/Jul/15 8:01 AM,10/Jul/21 8:37 AM,,,,,,,,,,REST,,,,,0,,,,,,,"When XML response is requested from the REST clients, the server has XML serialization errors.

For example: the endpoint  /jobs/configurations from the web browser
has:
nested exception is javax.xml.bind.MarshalException - with linked exception: [com.sun.istack.SAXException2: unable to marshal type ""org.springframework.xd.rest.domain.DetailedJobInfoResource"" as an element because it is not known to this context.]",,,,,,,,,,,,,,,,,XD-3234,,,,,,,,,,,,,,,,,,,,189561600,,2014-12-15 15:03:17.176,47293,true,hillert(hillert),,,,"0|i0825z:",47055,46995,,,,,,5.0,,"15/Dec/14 3:03 PM;hillert;Also take a look at endpoint *http://localhost:9393/modules* - That endpoint should at least provide the names of the modules.","15/Dec/14 8:59 PM;hillert;For brevity, shall we just scratch XML endpoint support? See also the PR for XD-2316","08/Jul/15 8:01 AM;hillert;Created XD-3234 to remove XML REST endpoints",,,,,,,,,,,,,,,
Undeploying HDFS module closes filesystem,XD-2505,61217,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,jahubba,jahubba,15/Dec/14 2:17 PM,21/Oct/15 1:40 PM,10/Jul/21 8:37 AM,14/Oct/15 12:55 PM,1.1 M1,,,,,,1.3 RC1,,Hadoop,,,,,0,,,,,,,"When using the hadoop namespace to create a hadoop configuration and filesystem, the FileSystemFactoryBean uses Hadoop FileSystem.get and not newInstance which will return a FileSystem from the cache.  When undeploying the module, the FileSystemFactoryBean destroy method will close the FileSystem which closes for all other deployed Hadoop modules throwing a java.io.IOException: Filesystem closed",,,,,,,,,,,,,,,,,SHDP-529,,,,,,,,,,,,,,,,,,Undeploying a module with hadoop filesystem should not affect other deployed modules and they should still be using an open filesystem.,,180489600,,2015-06-18 01:21:40.933,47290,true,sabby(sabby),,,https://github.com/spring-projects/spring-xd/pull/1805,"0|i0825b:",47052,46992,,,Sprint 59,,,3.0,,"18/Jun/15 1:21 AM;ali.iqbal@gmail.com;I have similar exception when using jobs, root cause looks pretty much similar. When different jdbchdfs job runs one after the other in quick successions then we are frequently getting 
java.io.IOException: Filesystem closed
	at org.apache.hadoop.hdfs.DFSClient.checkOpen(DFSClient.java:795)
.. 
	at org.springframework.xd.batch.item.hadoop.AbstractHdfsItemWriter.initializeCounterIfNecessary(AbstractHdfsItemWriter.java:66)
	at org.springframework.xd.batch.item.hadoop.HdfsTextItemWriter.write(HdfsTextItemWriter.java:60)
 ..","11/Sep/15 2:37 PM;thomas.risberg;We have had issues where Hadoop uses a shared filesystem within a JVM so when one client closes the file system it gets closed for others using it as well. The best way to avoid this is to deploy the jobs on separate containers. One way of doing that is targeting the deployment to a specific host using something like this:

{code}
job deploy hdfsjob1 --properties ""module.jdbchdfs.criteria=host.equals('host1.acme.com')""
job deploy hdfsjob2 --properties ""module.jdbchdfs.criteria=host.equals('host2.acme.com')""
{code}","21/Oct/15 7:25 AM;tdeng;Hi Thomas

We have customer who get the problem in their production environment. If one job is destroyed the other jobs looses connection to the HDFS cluster.

java.io.IOException: Filesystem closed 
at org.apache.hadoop.hdfs.DFSClient.checkOpen(DFSClient.java:632) 
at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:1794) 
at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java:1116) 
at org.apache.hadoop.hdfs.DistributedFileSystem$17.doCall(DistributedFileSystem.java.1112) 
at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81) 
at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1112) 
at org.apache.hadoop.fs.FileSystem.exists(FileSystem.java:1397) 
at org.apache.hadoop.fs.FileSystem.createNewFile(FileSystem.java:1145) 
at org.springframework.xd.batch.

As I see the pull request fixed the problem, can you let me know when the new Spring XD release includes this fix will be available?
https://github.com/spring-projects/spring-xd/pull/1805

Thanks, 

Tao

",,,,,,,,,,,,,,,
"RabbitMQ Message bus, RabbitMQ Source/Sinks are throwing exceptions",XD-2503,61208,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Duplicate,mbogoevici,grenfro,grenfro,13/Dec/14 7:14 AM,16/Dec/14 9:48 AM,10/Jul/21 8:37 AM,16/Dec/14 9:48 AM,1.1 M1,,,,,,,,Runtime,,,,,0,,,,,,,"I believe it is being cause by the following PR:
XD-2381: Split MessageBus and Analytics dependencies from DIRT
PR:  1307
SHA: 8d28b2786acbdea1617d7e903b805e5af5369b90

*RabbitMQ Sink is throwing:*
{noformat}
09:44:16,031 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 boot.SpringApplication - Application startup failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 19 in XML document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:180)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:138)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)
	at org.springframework.boot.SpringApplication.load(SpringApplication.java:620)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3237)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2714)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2056)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:766)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:356)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 30 more
09:44:16,036 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 19 in XML document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:180)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:138)
	at org.springframework.boot.BeanDefinitionLoader.load(BeanDefinitionLoader.java:127)
	at org.springframework.boot.SpringApplication.load(SpringApplication.java:620)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:211)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:217)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 53; cvc-complex-type.3.2.2: Attribute 'default-delivery-mode' is not allowed to appear in element 'int-amqp:outbound-channel-adapter'.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3237)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2714)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2056)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:766)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:356)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
{noformat}
*Rabbit Message Bus is throwing:*
{noformat}
10:14:04,678 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.StreamDeploymentListener - Deployment status for stream 'foo': DeploymentStatus{state=failed,error(s)=org.springframework.amqp.UncategorizedAmqpException: java.lang.IllegalArgumentException: interface org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$ContainerDelegate is not visible from class loader
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:66)
	at org.springframework.amqp.rabbit.connection.RabbitAccessor.convertRabbitAccessException(RabbitAccessor.java:110)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.initialize(AbstractMessageListenerContainer.java:426)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.afterPropertiesSet(AbstractMessageListenerContainer.java:385)
	at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus.doRegisterConsumer(RabbitMessageBus.java:367)
	at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus.bindConsumer(RabbitMessageBus.java:308)
	at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindMessageConsumer(AbstractMessageBusBinderPlugin.java:183)
	at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.bindConsumerAndProducers(AbstractMessageBusBinderPlugin.java:138)
	at org.springframework.xd.dirt.plugins.stream.StreamPlugin.postProcessModule(StreamPlugin.java:73)
	at org.springframework.xd.dirt.module.ModuleDeployer.postProcessModule(ModuleDeployer.java:238)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:218)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployStreamModule(DeploymentListener.java:332)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: interface org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$ContainerDelegate is not visible from class loader
	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:616)
	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:592)
	at java.lang.reflect.WeakCache$Factory.get(WeakCache.java:244)
	at java.lang.reflect.WeakCache.get(WeakCache.java:141)
	at java.lang.reflect.Proxy.getProxyClass0(Proxy.java:455)
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:738)
	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:121)
	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:111)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:96)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.initializeProxy(SimpleMessageListenerContainer.java:586)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doInitialize(SimpleMessageListenerContainer.java:612)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.initialize(AbstractMessageListenerContainer.java:424)
	... 28 more
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,207100800,,2014-12-16 09:48:11.762,47281,false,tmarshall(tmarshall),,,,"0|i08227:",47038,46983,,,Sprint 40,,,3.0,,"16/Dec/14 9:48 AM;mbogoevici;Created XD-2509,XD-2510 to deal with the MessageBus and Source/Sinks separately.",,,,,,,,,,,,,,,,,
Add Request/Reply support to Kafka message bus,XD-2495,61165,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Duplicate,,grenfro,grenfro,10/Dec/14 2:15 PM,28/Jan/15 9:26 AM,10/Jul/21 8:37 AM,28/Jan/15 9:25 AM,1.1 M1,,,,,,,,Batch,,,,,0,,,,,,,"* Environment:
** Can be reproduced on local machine with Admin and a single container.
* create the following job
** job create ogg --definition ""filejdbc --resources=file:filejdbctest//filejdbctestpartition* --names=data --tableName=filejdbctest --initializeDatabase=true "" --deploy
* note: this works on Rabbit and Redis as a message bus
* The following exception is thrown on the admin:
6:54:22,856 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.JobDeploymentListener - Deployment status for job 'ogg': DeploymentStatus{state=failed,error(s)=java.lang.UnsupportedOperationException: Auto-generated method stub
	at org.springframework.xd.dirt.integration.kafka.KafkaMessageBus.bindRequestor(KafkaMessageBus.java:289)
	at org.springframework.xd.dirt.plugins.job.JobPartitionerPlugin.processPartitionedJob(JobPartitionerPlugin.java:69)
	at org.springframework.xd.dirt.plugins.job.JobPartitionerPlugin.postProcessModule(JobPartitionerPlugin.java:53)
	at org.springframework.xd.dirt.module.ModuleDeployer.postProcessModule(ModuleDeployer.java:238)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:218)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployJobModule(DeploymentListener.java:289)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
}

* The following exception is thrown on the container
21:08:14,721 1.1.0.SNAP  WARN DeploymentsPathChildrenCache-0 config.ReleaseStrategyFactoryBean - No annotated method found; falling back to SequenceSizeReleaseStrategy, target:org.springframework.batch.integration.partition.MessageChannelPartitionHandler@692ee39f, methodName:null
21:08:15,946 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
java.lang.UnsupportedOperationException: Auto-generated method stub
	at org.springframework.xd.dirt.integration.kafka.KafkaMessageBus.bindRequestor(KafkaMessageBus.java:289)
	at org.springframework.xd.dirt.plugins.job.JobPartitionerPlugin.processPartitionedJob(JobPartitionerPlugin.java:69)
	at org.springframework.xd.dirt.plugins.job.JobPartitionerPlugin.postProcessModule(JobPartitionerPlugin.java:53)
	at org.springframework.xd.dirt.module.ModuleDeployer.postProcessModule(ModuleDeployer.java:238)
	at org.springframework.xd.dirt.module.ModuleDeployer.doDeploy(ModuleDeployer.java:218)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:200)
	at org.springframework.xd.dirt.server.DeploymentListener.deployModule(DeploymentListener.java:363)
	at org.springframework.xd.dirt.server.DeploymentListener.deployJobModule(DeploymentListener.java:289)
	at org.springframework.xd.dirt.server.DeploymentListener.onChildAdded(DeploymentListener.java:179)
	at org.springframework.xd.dirt.server.DeploymentListener.childEvent(DeploymentListener.java:147)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,,,,,,,,"10/Dec/14 2:15 PM;grenfro;admin-32199.log;https://jira.spring.io/secure/attachment/22414/admin-32199.log","10/Dec/14 2:15 PM;grenfro;container-32241.log;https://jira.spring.io/secure/attachment/22415/container-32241.log",,,,,,,,,,,,203385600,,2014-12-11 12:56:41.976,47238,true,sabby(sabby),,,,"0|i081rb:",46989,46940,,,,,,3.0,,"10/Dec/14 2:42 PM;grenfro;Also saw this with JdbcHdfsTest.  There could be others.  I'll identify those and capture associated logs.","11/Dec/14 12:56 PM;mark.pollack;This is a known gap.  https://github.com/spring-projects/spring-xd/blob/master/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/integration/kafka/KafkaMessageBus.java#L287

We should wait until the new Kafka infrastructure is completed to fix this.   Changing title of this issue to reflect it is a current gap in Kafka message bus.","23/Dec/14 10:56 AM;grenfro;This error also occurs on the BatchBasic tests.  Don't think this one is partitioned but the error still shows up.
{noformat}
18:48:56,735 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Deploying module [ModuleDescriptor@69efc85d moduleName = 'batchbasic', moduleLabel = 'batchbasic', group = 'bb0587ccff-34a2-4aab-aa72-08b71c38901a', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]
18:48:58,943 1.1.0.SNAP  WARN DeploymentsPathChildrenCache-0 consumer.ZookeeperConsumerConnector - [springXD_ip-10-171-67-183-1419360538313-3f26f465], No broker partitions consumed by consumer thread springXD_ip-10-171-67-183-1419360538313-3f26f465-0 for topic job_3Abb0587ccff-34a2-4aab-aa72-08b71c38901a
18:49:07,423 1.1.0.SNAP  INFO main-EventThread server.DeploymentListener - Undeploying module [ModuleDescriptor@69efc85d moduleName = 'batchbasic', moduleLabel = 'batchbasic', group = 'bb0587ccff-34a2-4aab-aa72-08b71c38901a', sourceChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]
18:49:07,453 1.1.0.SNAP  WARN ConsumerFetcherThread-springXD_ip-10-171-67-183-1419360538313-3f26f465-0-0 consumer.SimpleConsumer - Reconnect due to socket error: null
18:49:07,549 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: path=/deployments/modules/allocated/bfef50e1-09a4-441f-8cf8-e81b31c1e62f/bb0587ccff-34a2-4aab-aa72-08b71c38901a.job.batchbasic.1, type=CHILD_REMOVED
{noformat}

Check log entry 18:48:58,943.","28/Jan/15 9:25 AM;sabby;This will be covered in XD-2651.",,,,,,,,,,,,,,
JDBCHDFS Master Process Timeout error,XD-2491,61143,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,bzeyben,bzeyben,09/Dec/14 8:25 PM,07/Mar/15 9:47 AM,10/Jul/21 8:37 AM,07/Mar/15 9:47 AM,1.0.2,,,,,,,,Batch,,,,,0,,,,,,,"The JDBCHDFS Master process fails with a timeout error while the child process is still processing data.

The error message on the error message on the master process is:

org.springframework.integration.MessageTimeoutException: Timeout occurred before all partitions returned
	at org.springframework.batch.integration.partition.MessageChannelPartitionHandler.handle(MessageChannelPartitionHandler.java:141)
	at org.springframework.batch.core.partition.support.PartitionStep.doExecute(PartitionStep.java:106)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:162)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:141)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy47.run(Unknown Source)
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50)
	at sun.reflect.NativeMethodAccessorImpl",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,200102400,,2015-03-07 09:47:47.635,47216,true,sabby(sabby),,,,"0|i081mn:",46968,46918,,,,,,3.0,,"07/Mar/15 9:47 AM;sabby;@Buelent: The suggestion is to adjust {{partitionResultsTimeout}} attribute. If you are still having issues running this job, please reopen. ",,,,,,,,,,,,,,,,,
Context Deserialize Doesn't Use Parent First Classloader,XD-2486,61131,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mminella,jahubba,jahubba,09/Dec/14 7:55 AM,19/Mar/15 7:36 AM,10/Jul/21 8:37 AM,19/Mar/15 7:36 AM,1.1 M1,,,,,,1.1.1,1.2 M1,Batch,,,,,0,,,,,,,"If a class is added to a batch execution context that is located in an isolated context, an exception will be thrown when that object is deserialized.  It appears the serialize doesn't use the ParentFirstClassloader during deserialization.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,205286400,,2015-01-05 10:05:41.032,47204,true,mminella(mminella),,,https://github.com/spring-projects/spring-xd/pull/1500,"0|i085rg:hzzx",47159,46906,,,Sprint 45,,,8.0,,"09/Dec/14 7:58 AM;jahubba;Is there any thing describing how jiras should be created?  This is the first jira I've created for Spring and the XD github page only mentioned creating a ticket but nothing describing the best way to do so.

I asked the question on SO, but didn't get a response, so I opened this ticket as a bug.
http://stackoverflow.com/questions/27022133/spring-xd-executioncontext-deserializer","05/Jan/15 10:05 AM;sabby;[~jahubba]: We will have the JIRA procedure documented in our Github page very soon. 

Thanks for submitting the stack trace in SO thread. It would be beneficial to have the following information to further troubleshoot the reported issue, as we are certain the use case should work as described. 

*Version*
* XD Version Number
* OS & Version Number

*Describing The Problem*
Any other details you can share wrt to job definitions.

*Describe The Deployment*

* SingleNode?
* Admin/Container (Number of admins / Number of containers)

*RabbitMQ deployment*

*RDBMS (Jobs)*

*Peripherals (Mongo, RDBMS, Hadoop, etc)* 
","05/Jan/15 10:08 AM;mminella;[~jahubba], Do you have a simple example that demonstrates this issue or any more detail we can see?  Even in the isolated classpath deployment model for a job module, I'd expect this to work since the custom class is part of the module's classpath...","07/Jan/15 5:29 AM;jahubba;XD Version: 1.0.1.RELEASE
OS RHEL Santiago
1 Admin/1 Container w/ Rabbit transport
Mysql RDBMS for Jobs
RDBMS is MySQL and HSQLDB, File, Hadoop Integrations

I can create a job and add a custom class to the jobs ExecutionContext.  If the job fails and is restarted (or sometimes later if the job needs to be deserialized), the deserialization will fail for the ExecutionContext because of the custom class in the isolated classpath.

Here is a small project on github that reproduces the issue.  If you deploy the job and run it, it will fail first because the step only fails, but if you rerun it, you will see the deserialization issue.  I was able to reproduce in 1.1.0M1 as well.  I believe if the custom POJO is added to the Step ExecutionContext, the web UI will have issues displaying the context for that step as well.

https://github.com/jahubba/batch_isolated_cp

I can open another ticket as well, but I've noticed that the XD_JOB_DEFINITION table for the jobs in the RDBMS only updates correctly for HSQLDB for restarts, but for MYSQL the value for is_restartable gets set to 1 instead of true which the web ui then doesn't allow restarts.  Has anyone else noticed that?",,,,,,,,,,,,,,
Bind Producer Before Consumer,XD-2429,61037,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,05/Dec/14 12:16 PM,05/Dec/14 4:35 PM,10/Jul/21 8:37 AM,05/Dec/14 4:35 PM,,,,,,,1.0.3,1.1 RC1,,,,,,0,PullRequest,,,,,,"{quote}
		Here is the full exception:
		org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'ResourceConfiguredModule [name=filter, type=processor, group=request-rate, index=0 @58b0f318]:use-expression,default,admin,singlenode,hsqldbServer:9393.output'.; nested exception is org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
		and here is that stream:
		topic:httpstartstop > filter --expression=payload.getHttpStartStop().getPeerType().name().equals('Client') | requestRateAggregator | appMetricsSplitter | router --expression='topic:app-request-rate-'+#jsonPath(payload,'$.appId')
[2:59 PM] Gary Russell: @MarkFisher  @IlayaperumalGopinathan @PatrickPeralta  This looks like another (not fixed by the previous fix) timing problem with taps when using singlenode. The tap is started before the tap stream is deployed. But it's not clear to me how the filter module could be deployed/bound as a consumer before the requestRateAggregator
[3:08 PM] Gary Russell: I see the problem: AbstractMessageBusBinderPlugin.bindConsumerAndProducers() binds the consumer before the producer - this is the wrong order for a passive component such as the filter. /cc @DavidTuranski
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,208051200,,2014-12-05 13:10:36.993,47110,false,tmarshall(tmarshall),,,,"0|i0813b:",46881,46812,,,Sprint 39,,,1.0,,"05/Dec/14 1:10 PM;dturanski;I don't quite follow your explanation. ","05/Dec/14 1:20 PM;grussell;Given a passive component, say a processor (filter), attach it to a tap that's a fire hose.

The plugin binds the consumer (input channel) to the bus first, so the messages start flowing before the producer (output channel) is bound. Hence dispatcher has no subscribers. We need to bind the right side of the module before the left (just like we have to bind the modules right to left).

Will push a PR in a few minutes, with a test that reproduces the problem (running a build first).","05/Dec/14 1:35 PM;grussell;This is only a problem when a stream starts with a {{tap}} because with a ""normal"" stream, the last module to be bound is the source, and we don't start it until the source itself is bound; hence no messages flow to the downstream processors.

With a tap, messages can start flowing from the tap as soon as the input channel is bound to the bus.","05/Dec/14 2:05 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1324

Also cherry-pick to 1.0.x",,,,,,,,,,,,,,
SpringXD's syslog source does not fully support syslog RFC5424,XD-2425,61000,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,dokeeffe,dokeeffe,04/Dec/14 12:35 AM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,17/Dec/14 2:57 PM,1.1 M1,,,,,,1.1 GA,,Ingest,,,,,0,PullRequest,,,,,,"SpringXD's syslog source cannot parse rfc5424 messages into a Map.
For the messages we get in RFC 3164, springXD converts these to a Map.

Since the rfc5424 data cannot be interpreted then the map contains just one key called 'UNDECODED'.
The result of this is that we get a string that looks like this (when we convert the message to a String)
{code}
 {UNDECODED=<182>Dec 02 2014 07:56:35: %ASA-6-113008: AAA transaction status ACCEPT : user = jbloggs}
{code}

Should be something like this (note the values below are for illustrative purposes only and should not be used as test data)

{code}
 {FACILITY=22, SEVERITY=6, TIMESTAMP=Tue Dec 02 07:56:35, HOST=the-hostname-that-sent-the-data, TAG=%ASA-6-113008, MESSAGE=........}
{code}

h3. Root Cause
Spring integration does not parse these messages. There is a JIRA for SI here:
https://jira.spring.io/browse/INT-3450
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,207014400,,2014-12-13 06:43:43.23,47073,false,sabby(sabby),,,,"0|i000jj:",89,46775,,,Sprint 40,,,5.0,,"13/Dec/14 6:43 AM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1332","17/Dec/14 2:57 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/6c90a37a6be1b614dd38a5932b01171f87f2a2a5",,,,,,,,,,,,,,,,
WireTap is Applied to OutputChannel Before the Tap Channel has been Bound To The Bus,XD-2423,60946,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,02/Dec/14 2:24 PM,04/Dec/14 12:19 PM,10/Jul/21 8:37 AM,04/Dec/14 12:19 PM,,,,,,,1.0.3,1.1 RC1,,,,,,0,,,,,,,"When establishing the tap, we create the tap channel and add the WireTap before the tap channel has been bound to the bus.

{quote}
17:00:23,918 ERROR task-scheduler-8 handler.LoggingHandler - org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'tap:stream:foo.time.0.tap.bridge'.; nested exception is org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:81)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:277)
	at org.springframework.integration.channel.interceptor.WireTap.preSend(WireTap.java:129)
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,208310400,,,47019,false,tmarshall(tmarshall),,,,"0|i080jj:",46792,46721,,,Sprint 39,,,1.0,,"02/Dec/14 3:19 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1314

Backport to 1.0.x",,,,,,,,,,,,,,,,,
"UI: List of Streams causes ""undefined is not an option""",XD-2421,60943,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Cannot Reproduce,hillert,hillert,hillert,02/Dec/14 1:03 PM,18/Dec/14 5:03 PM,10/Jul/21 8:37 AM,18/Dec/14 5:03 PM,1.1 M1,,,,,,1.0.3,1.1 M2,UI,,,,,0,,,,,,,"See Screenshot.

The error is caused when loading all stream definitions in method *loadStreamDefinitions*. 

Only 1 or two streams exist in the system. 
",,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/14 1:03 PM;hillert;Screen Shot 2014-12-02 at 12.32.51 PM.png;https://jira.spring.io/secure/attachment/22380/Screen+Shot+2014-12-02+at+12.32.51+PM.png",,,,,,,,,,,,,208310400,,,47016,true,tmarshall(tmarshall),,,,"0|i000jz:",91,46718,,,Sprint 40,,,2.0,,"02/Dec/14 1:09 PM;hillert;Error happens with version 1.1.0.SNAPSHOT",,,,,,,,,,,,,,,,,
tcp-client reports error when using --close=true flag,XD-2417,60914,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,01/Dec/14 6:52 AM,01/Dec/14 6:52 AM,10/Jul/21 8:37 AM,,1.1 M1,,,,,,,,Stream Module,,,,,0,,,,,,,"When using the --close=true flag for the tcp-client the following exception is triggered.
Caused by: java.lang.IllegalArgumentException: For client-mode, connection factory must have single-use='false'
	at org.springframework.util.Assert.isTrue(Assert.java:65)
	at org.springframework.integration.ip.tcp.TcpReceivingChannelAdapter.onInit(TcpReceivingChannelAdapter.java:96)
	at org.springframework.integration.context.IntegrationObjectSupport.afterPropertiesSet(IntegrationObjectSupport.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1564)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,208483200,,,46987,true,tmarshall(tmarshall),,,,"0|i080b3:",46754,46689,,,,,,1.0,,,,,,,,,,,,,,,,,,,
"SpelParseException is thrown when using empty string ("""") inside of an expression",XD-2416,60896,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,dhunziker,dhunziker,29/Nov/14 4:32 PM,09/Jan/15 2:47 PM,10/Jul/21 8:37 AM,09/Jan/15 2:47 PM,1.1 M1,,,,,,1.1 RC1,,DSL,,,,,0,,,,,,,"I can only reproduce this when using single quotes around the expression:

{code}
stream create test --definition ""http | transform --expression='payload.replace(\""abc\"", \""\"")' | log"" --deploy true
{code}

The following two alternatives work fine though:
{code}
# Using trim on a single space
stream create test --definition ""http | transform --expression='payload.replace(\""abc\"", \"" \"".trim())' | log"" --deploy true

# Not using single quotes or spaces in the expression
stream create test --definition ""http | transform --expression=payload.replace(\""abc\"",\""\"") | log"" --deploy true
{code}",,,,,,,,,,,,,,,,,,,,,,,,"29/Nov/14 4:32 PM;dhunziker;xd-parse-error.log;https://jira.spring.io/secure/attachment/22378/xd-parse-error.log",,,,,,,,,,,,,205286400,,2014-12-08 07:24:46.841,46969,true,mark.pollack(mark.pollack),,,https://github.com/spring-projects/spring-xd/pull/1358,"0|i081yn:",47022,46671,,,Sprint 41,,,1.0,,"07/Dec/14 2:40 PM;dhunziker;I checked this out in the code (L454 of StreamConfigParser) and can see that this behavior seems to be intended. Based on SPR-9620, double double quotes in SpEL expressions are treated in the same way as double single quotes. They're replaced with a single one.

The SpEL docs only mention single quotes though: http://docs.spring.io/spring/docs/current/spring-framework-reference/html/expressions.html#expressions-ref-literal. Will check if that can be updated.

I wonder though, in Spring XD, why is this behavior not consistent between the expression surrounded with quotes and the one without. Aren't they both considered SpEL expressions and should therefore follow the same rules for escaping?

","08/Dec/14 7:24 AM;eric.bottard;You may find this section of the doc useful: http://docs.spring.io/spring-xd/docs/current-SNAPSHOT/reference/html/#dsl-quotes-escaping
Please tell us if you feel it is unclear/not up to date","09/Dec/14 2:55 PM;dhunziker;The issue I was referring to is related to the following parts in the documentation:

* literals can be enclosed in either single or double quotes
* quotes need to be doubled to embed a literal quote. Single quotes inside double quotes need no special treatment, and vice versa

This is confusing because the parser (see extract below), is replacing double single/double quotes out of context. I think it should be replacing double double quotes only inside of double quoted literals. This would bring it in line with the docs and avoid any problems with the empty String ("""").

{code}
argValue = t.data.substring(1, t.data.length() - 1).replaceAll(""''"", ""'"").replaceAll(""\""\"""", ""\"""");
{code}

If the same was kept consistent for single quotes you'd end up with a more strict definition for escaping quotes in literals, e.g. *Single quotes inside double quotes won't need or receive special treatment, and vice versa*","07/Jan/15 3:45 AM;eric.bottard;PR at https://github.com/spring-projects/spring-xd/pull/1358",,,,,,,,,,,,,,
Using custom classes for module properties leads to ClassNotFoundException,XD-2415,60888,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,,kdowbecki,kdowbecki,28/Nov/14 8:29 AM,11/Jan/15 11:11 AM,10/Jul/21 8:37 AM,05/Jan/15 2:49 PM,,,,,,,,,Runtime,,,,,0,,,,,,,"Attached is module properties file. Both custom Java classes referenced in the properties are available in the JAR file under _SPRING_XD_HOME/xd/module/<the-module>/lib_ directory.

Following exception is thrown:
{code}6:26:03,064 1.0.2.RELEASE ERROR http-nio-9393-exec-4 rest.RestControllerAdvice - Caught exception while handling a request
java.lang.IllegalStateException: Can't find class used for type of option 'binding': com.emc.it.ds.rtd.springxd.binding.BindingStrategy
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.makeSimpleModuleOptions(DefaultModuleOptionsMetadataResolver.java:137)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolveNormalMetadata(DefaultModuleOptionsMetadataResolver.java:193)
	at org.springframework.xd.module.options.DefaultModuleOptionsMetadataResolver.resolve(DefaultModuleOptionsMetadataResolver.java:154)
	at org.springframework.xd.module.options.DelegatingModuleOptionsMetadataResolver.resolve(DelegatingModuleOptionsMetadataResolver.java:44)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver.resolve(EnvironmentAwareModuleOptionsMetadataResolver.java:127)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:173)
	at org.springframework.xd.dirt.stream.AbstractDeployer.save(AbstractDeployer.java:95)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:863)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:646)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:280)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745){code}

Please see attached patch file, this seems to be enough to resolve the problem.
",,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/14 8:29 AM;kdowbecki;XD-2415-the-module.properties;https://jira.spring.io/secure/attachment/22377/XD-2415-the-module.properties","28/Nov/14 8:29 AM;kdowbecki;XD-2415.patch;https://jira.spring.io/secure/attachment/22376/XD-2415.patch",,,,,,,,,,,0.0,204854400,,2014-12-02 10:49:01.187,46961,true,kdowbecki(kdowbecki),,,,"0|i083lr:",47288,46663,,,,,,1.0,,"02/Dec/14 10:49 AM;dturanski;Currently module option values must be primitives, which makes sense for the command line. How do you envision that a user should specify a different for binding in a stream definition? For example,  

stream create --name test --definition ""... the-module --binding=com.emc.it.ds.rtd.springxd.binding.SomeBindingStrategy | ...""  You can't really set the option value to an instance of the object itself, so this would typically be interpreted as a classname.  The corresponding object would have to be instantiated and configured for your module. You can try something like this in XML:

{code}
<bean id=""bindingStrategy"" class=""${binding}""/>  
{code}

which could work if the option is the class name defined as a String, provided the class is on your class path.  On the other hand,  if you intend the module to provide specific alternate implementations, you could bind the option value to a spring profile. There are some examples in XD, such as the jdbc source which activates one of two profiles based on the value of 'split'.  See https://github.com/spring-projects/spring-xd/tree/master/modules/source/jdbc/config.  The options-class referenced is https://github.com/spring-projects/spring-xd/blob/master/extensions/spring-xd-extension-jdbc/src/main/java/org/springframework/xd/jdbc/JdbcSourceModuleOptionsMetadata.java and implements ProfileNamesProvider. 

Note that Spring XD 1.1 already supports uber-jar module packaging so that such an Options meta data class does not need to be provided in a separate jar, as all the OOTB modules currently require. However, we do not yet provide good support for building an uber jar until the upcoming RC release.   

","05/Jan/15 2:49 PM;dturanski;I think the suggestion I made in the comment to use the class name is a better approach. Please re-open if you disagree.","11/Jan/15 11:09 AM;kdowbecki;David, we've followed your advice and removed custom classes from list of parameters.

So far we have observed many limitations in ClassLoader setup in 1.0.X. We are awaiting 1.1 to see if changes to module packaging and deployment will resolve them. 

Thanks for your help here.",,,,,,,,,,,,,,,
"Incorrect ""directory"" option described in hdfs-dataset docs",XD-2414,60845,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,kdowbecki,kdowbecki,27/Nov/14 3:33 AM,11/Dec/14 9:29 AM,10/Jul/21 8:37 AM,11/Dec/14 9:29 AM,,,,,,,1.1 M2,,,,,,,0,,,,,,,"Please see [hdfs-dataset 1.0.2.RELEASE docs|http://docs.spring.io/autorepo/docs/spring-xd/1.0.2.RELEASE/reference/html/#hdfs-dataset-avroparquet].

According to docs there should be ""directory"" option in this sink but in code ""basePath"" is used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,208828800,,,46918,true,tmarshall(tmarshall),,,,"0|i07zjz:",46632,46620,,,Sprint 40,,,1.0,,,,,,,,,,,,,,,,,,,
hdfs-dataset sink with getName() method in Pojo,XD-2409,60811,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,jvalkeal,jvalkeal,25/Nov/14 6:11 AM,19/Dec/14 7:52 AM,10/Jul/21 8:37 AM,11/Dec/14 7:21 AM,1.1 M1,,,,,,1.0.3,1.1 M2,Hadoop,,,,,1,,,,,,,"Having a pojo:
{code}
public class User{
	private String name;
	public String getName() {
		return user;
	}
	public void setName(String name) {
		this.name = name;
	}
}
{code}

with:
{code}
hdfs-dataset --inputType='application/x-java-object;type=test.User'
{code}

throws exception:
{code}
12:43:27,698 1.1.0.SNAP ERROR task-scheduler-1 handler.LoggingHandler - org.springframework.messaging.MessageHandlingException: Expression evaluation failed: payload.getClass().getName(); nested exception is org.springframework.expression.AccessException: Problem invoking method: public java.lang.String test.User.getName()
{code}

Which I believe is caused by `correlation-strategy-expression` spel in aggregator:
{code}
	<int:aggregator
			input-channel=""input""
			correlation-strategy-expression=""payload.getClass().getName()""
			release-strategy-expression=""size() == ${batchSize}""
			expire-groups-upon-completion=""true""
			send-partial-result-on-expiry=""true""
			message-store=""messageStore""
			output-channel=""objects""/>
{code}

Changing `getName()` method in pojo to something else works.",,";08/Dec/14 12:53 PM;thomas.risberg;60",,,,0,60,,,0,60,,SPR-12502,,,,INT-3585,,,,,,,,,,,,,,,,,,,1.0,207792000,,2014-11-25 07:31:03.787,46884,false,tmarshall(tmarshall),,,,"0|i080dj:",46765,46586,,,Sprint 40,,,1.0,,"25/Nov/14 7:31 AM;thomas.risberg;We could try changing the SpEL expression to:

{code}correlation-strategy-expression=""payload.class.name""{code}","25/Nov/14 8:25 AM;wxlund;In the original example it was not a pojo.  It was a java generated class from the avro gradle plugin:

compileJava {
	dependsOn generateAvroJava
	source generateAvroJava.outputDir
}

Not sure if that makes a difference but makes it more accurate.","06/Dec/14 2:06 AM;jvalkeal;I believe original problem is in this spel issue.","08/Dec/14 12:51 PM;thomas.risberg;PR: https://github.com/spring-projects/spring-xd/pull/1326",,,,,,,,,,,,,,
"When a tap is re-deployed after undeploy, it doesn't work",XD-2408,60803,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,24/Nov/14 12:31 PM,24/Nov/14 2:54 PM,10/Jul/21 8:37 AM,24/Nov/14 2:46 PM,,,,,,,1.0.3,1.1 RC1,,,,,,0,,,,,,,"When a tap on a stream is undeployed and re-deployed, it stops working.
To make it work, the main stream associated with the tap needs to be undeployed and re-deployed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,209001600,,,46876,true,tmarshall(tmarshall),,,,"0|i07zon:",46653,46578,,,Sprint 39,,,1.0,,"24/Nov/14 12:35 PM;iperumal;It looks like when the tap stream is undeployed, the main stream's tappable channel entry is removed from the map on tappableChannels. This makes any subsequent taps (even when the undeployed tap gets re-deployed) not able to bind to the tappable channel of the main stream.","24/Nov/14 2:46 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1303","24/Nov/14 2:46 PM;iperumal;This is merged as: 
https://github.com/spring-projects/spring-xd/commit/ad22ed8627ac1a4e0a2ecf5173a39257b4a49336",,,,,,,,,,,,,,,
hdfs-dataset sink should support JSON and a Map as input formats,XD-2385,60745,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,thomas.risberg,thomas.risberg,20/Nov/14 8:39 AM,20/Nov/14 8:39 AM,10/Jul/21 8:37 AM,,,,,,,,,,Stream Module,,,,,0,,,,,,,The hdfs-dataset sink currently requires a POJO as input. We should also support JSON and a Map as input plus the ability to specify an Avro schema to be used.,,,,,,,,,,,,,SHDP-329,,,,,,,,,,,,,,,,,,,,,,,,209347200,,,46819,false,tmarshall(tmarshall),,,,"0|i07ze7:",46606,46521,,,,,,8.0,,,,,,,,,,,,,,,,,,,
"Update ""About"" section in UI with relevant release links",XD-2377,60718,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,sabby,sabby,18/Nov/14 6:53 PM,05/Dec/14 4:04 PM,10/Jul/21 8:37 AM,05/Dec/14 4:02 PM,,,,,,,1.0.3,1.1 RC1,,,,,,0,,,,,,,"As a user, I'd like to have API and Documentation links in the [""About""|https://github.com/spring-projects/spring-xd/blob/master/spring-xd-ui/app/scripts/shared/views/about.html] section within _admin-ui_. 

It would be ideal to have the version # dynamically replaced for every release.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,208051200,,2014-11-24 21:09:35.237,46792,true,tmarshall(tmarshall),,,,"0|i0013j:",179,46494,,,Sprint 39,,,1.0,,"24/Nov/14 9:09 PM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1304","05/Dec/14 11:23 AM;hillert;Follow up PR: https://github.com/spring-projects/spring-xd/pull/1323","05/Dec/14 4:02 PM;iperumal;Merged as https://github.com/spring-projects/spring-xd/commit/4a2ff16f92c6af6ca4251f82ad7f0d6f5a3b7ae3 ","05/Dec/14 4:04 PM;iperumal;Also merged https://github.com/spring-projects/spring-xd/commit/b2a690533a33886ba2a22d3eb21efd5bfa638d55 into 1.0.x",,,,,,,,,,,,,,
Distributed test should verify container shutdown,XD-2373,60710,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,pperalta,pperalta,pperalta,18/Nov/14 9:26 AM,27/Mar/15 8:14 AM,10/Jul/21 8:37 AM,,,,,,,,,,Runtime,,,,,0,,,,,,,"After each test execution, the containers are shut down via:

{code}
@After
public void after() {
	distributedTestSupport.shutdownContainers();
	distributedTestSupport.ensureTemplate().streamOperations().destroyAll();
}
...
public void shutdownContainers() {
	for (Iterator<Map.Entry<Long, JavaApplication<SimpleJavaApplication>>> iterator =
				mapPidContainers.entrySet().iterator(); iterator.hasNext();) {
		iterator.next().getValue().close();
		iterator.remove();
	}
}
{code}

The problem is that {{close()}} guarantees that the process is shut down, but it does not guarantee that the container is no longer registered in ZooKeeper. The cleanup procedure should verify that no containers appear in the output of  the {{runtime containers}} shell command. This will prevent the next test from deploying to a non-existent container.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,209520000,,,46784,true,pperalta(pperalta),,,,"0|i07z87:",46579,46486,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Direct binding with singlenode leaves stream broken,XD-2365,60694,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,jvalkeal,jvalkeal,17/Nov/14 8:45 AM,05/Jan/15 10:38 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"xd:>stream create --name foo --definition ""time|log""
xd:>stream deploy --name foo --properties ""module.*.count=0""

{code}
16:42:35,121 1.1.0.SNAP ERROR DeploymentsPathChildrenCache-0 server.DeploymentListener - Exception deploying module
java.lang.IllegalArgumentException: LocalMessageBus does not support consumer property: directBindingAllowed for foo.0.
{code}

Ok, that's cool. Let's destroy and create again:

xd:>stream destroy --name foo 
xd:>stream create --name foo --definition ""time|log"" --deploy

{code}
org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.integration.monitor.IntegrationMBeanExporter#0#9363c963-41db-4cd6-b273-b52b02aba80d'; nested exception is org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=output'; nested exception is javax.management.InstanceAlreadyExistsException: xd.foo:module=time.0,component=MessageChannel,name=output
{code}


{code}
xd:>runtime modules 
  Module Id       Container Id                          Options                                     Deployment Properties  Unit status
  --------------  ------------------------------------  ------------------------------------------  ---------------------  -----------
  foo.sink.log.1  ce5cf83f-3e62-4960-8d46-e5cb06203992  {name=foo, expression=payload, level=INFO}  {count=1, sequence=1}  failed
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,209606400,,,46768,true,tmarshall(tmarshall),,,,"0|i083mf:",47291,46470,,,,,,3.0,,,,,,,,,,,,,,,,,,,
"The word ""that"" is written in duplicate",XD-2363,60692,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Fixed,,stanley9,stanley9,17/Nov/14 8:02 AM,08/May/15 9:40 AM,10/Jul/21 8:37 AM,07/Mar/15 10:55 AM,,,,,,,1.1.1,1.2 M1,Documentation,,,,,0,error-reporting,,,,,,"The word ""that"" is written in duplicate.
See the attached PNG file.

==========================================================
Caveats
Note that that inputType and outputType parameters only apply to payloads that require type conversion. For example, if a module produces an XML string with outputType=application/json, the payload will not be converted from XML to JSON. This is because the payload at the module’s output channel is already a String so no conversion will be applied at runtime.
==========================================================

http://docs.spring.io/spring-xd/docs/1.0.1.RELEASE/reference/html/
",,,,,,,,,,,,,,,,,,,,,,,,"17/Nov/14 8:02 AM;stanley9;spring-jira2.png;https://jira.spring.io/secure/attachment/22370/spring-jira2.png",,,,,,,,,,,,,200102400,,2015-03-07 10:55:07.697,46766,true,sabby(sabby),,,,"0|i07z53:",46565,46468,,,,,,0.0,,"07/Mar/15 10:55 AM;sabby;Thanks Stanley. The [wiki-section|https://github.com/spring-projects/spring-xd/wiki/Type-conversion#caveats] is updated and the reference document will be published with this change.",,,,,,,,,,,,,,,,,
xd-singlenode --verbose prints configuration information twice,XD-2355,60674,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,iperumal,thomasd,thomasd,16/Nov/14 11:48 AM,25/May/15 10:49 PM,10/Jul/21 8:37 AM,25/May/15 10:47 PM,1.0.1,,,,,,1.2 GA,,CLI,,,,,0,,,,,,,"If you start xd-singlenode with the --verbose flag the configuration information is printed twice.

Steps to reproduce 
1) run {{xd-singlenode --verbose}}

Example output:
{code}

 _____                           __   _______
/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
 `--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
1.1.0.BUILD-SNAPSHOT             eXtreme Data


Started : SingleNodeApplication
Documentation: https://github.com/spring-projects/spring-xd/wiki

20:40:43,098 1.1.0.SNAP  INFO main server.SingleNodeApplication - Starting SingleNodeApplication v1.1.0.BUILD-SNAPSHOT on gauss with PID 79926 (/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-dirt-1.1.0.BUILD-SNAPSHOT.jar started by tom in /Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd)
20:40:43,512 1.1.0.SNAP  INFO main server.SingleNodeApplication - Started SingleNodeApplication in 0.993 seconds (JVM running for 1.374)
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD Home: /Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: local
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config location: file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config names: servers,application
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config location: file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
20:40:56,218 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config name: modules
20:40:56,219 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Admin web UI: http://gauss:9393/admin-ui
20:40:56,219 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:38225
20:40:56,219 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper namespace: xd
20:40:56,219 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Analytics: memory
20:40:56,226 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - 
	Apple_PubSub_Socket_Render=/tmp/launch-k1iYmY/Render
	BROWSER=open
	CRASH_HOME=/Users/tom/.gvm/crash/current
	DISPLAY=/tmp/launch-16fQxe/org.macosforge.xquartz:0
	EDITOR=vim
	GAIDEN_HOME=/Users/tom/.gvm/gaiden/current
	GEM_HOME=/Users/tom/.rvm/gems/ruby-1.9.3-p484
	GEM_PATH=/Users/tom/.rvm/gems/ruby-1.9.3-p484:/Users/tom/.rvm/gems/ruby-1.9.3-p484@global
	GLIDE_HOME=/Users/tom/.gvm/glide/current
	GRADLE_HOME=/Users/tom/.gvm/gradle/current
	GRAILS_HOME=/Users/tom/.gvm/grails/current
	GREP_COLOR=1;33
	GREP_OPTIONS=--color=auto
	GRIFFON_HOME=/Users/tom/.gvm/griffon/current
	GROOVYSERV_HOME=/Users/tom/.gvm/groovyserv/current
	GROOVY_HOME=/Users/tom/.gvm/groovy/current
	GVM_BROADCAST_SERVICE=http://cast.gvm.io
	GVM_BROKER_SERVICE=http://release.gvm.io
	GVM_DIR=/Users/tom/.gvm
	GVM_INIT=true
	GVM_PLATFORM=Darwin
	GVM_SERVICE=http://api.gvmtool.net
	GVM_VERSION=2.2.0
	HADOOP_DISTRO=hadoop25
	HOME=/Users/tom
	IRBRC=/Users/tom/.rvm/rubies/ruby-1.9.3-p484/.irbrc
	JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home
	JAVA_MAIN_CLASS_79926=org.springframework.xd.dirt.server.SingleNodeApplication
	JBAKE_HOME=/Users/tom/.gvm/jbake/current
	LANG=en_US.UTF-8
	LAZYBONES_HOME=/Users/tom/.gvm/lazybones/current
	LC_ALL=en_US.UTF-8
	LC_CTYPE=UTF-8
	LESS=-F -g -i -M -R -S -w -X -z-4
	LESS_TERMCAP_mb=[01;31m
	LESS_TERMCAP_md=[01;31m
	LESS_TERMCAP_me=[0m
	LESS_TERMCAP_se=[0m
	LESS_TERMCAP_so=[00;47;30m
	LESS_TERMCAP_ue=[0m
	LESS_TERMCAP_us=[01;32m
	LOGNAME=tom
	LSCOLORS=exfxcxdxbxGxDxabagacad
	LS_COLORS=di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:
	MAVEN_HOME=/Applications/dev/tools/apache-maven-3.2.1
	MY_RUBY_HOME=/Users/tom/.rvm/rubies/ruby-1.9.3-p484
	OLDPWD=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	PAGER=less
	PATH=/Users/tom/.gvm/vertx/current/bin:/Users/tom/.gvm/springboot/current/bin:/Users/tom/.gvm/lazybones/current/bin:/Users/tom/.gvm/jbake/current/bin:/Users/tom/.gvm/groovyserv/current/bin:/Users/tom/.gvm/groovy/current/bin:/Users/tom/.gvm/griffon/current/bin:/Users/tom/.gvm/grails/current/bin:/Users/tom/.gvm/gradle/current/bin:/Users/tom/.gvm/glide/current/bin:/Users/tom/.gvm/gaiden/current/bin:/Users/tom/.gvm/crash/current/bin:/Users/tom/.rvm/gems/ruby-1.9.3-p484/bin:/Users/tom/.rvm/gems/ruby-1.9.3-p484@global/bin:/Users/tom/.rvm/rubies/ruby-1.9.3-p484/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/go/bin:/usr/texbin:/Users/tom/.rvm/bin:/Users/tom/.yadr/bin:/Users/tom/.yadr/bin/yadr:/Applications/dev/tools/apache-maven-3.2.1/bin:/Applications/dev/tools/apache-ant-1.9.2/bin:/Users/tom/.rvm/bin
	PID=79926
	PS4=+ %* %F{red}%x:%I %F{green}%N:%i%F{white} %_
	PWD=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd
	SCREEN_NO=
	SECURITYSESSIONID=186a4
	SHELL=/bin/zsh
	SHLVL=1
	SPRINGBOOT_HOME=/Users/tom/.gvm/springboot/current
	SSH_AUTH_SOCK=/tmp/launch-KXqpmP/Listeners
	TERM=xterm-256color
	TERM_PROGRAM=Apple_Terminal
	TERM_PROGRAM_VERSION=326
	TERM_SESSION_CLASS_ID=D65D4C24-B8F2-4B53-9179-EC38F2DCD1AE
	TERM_SESSION_ID=3FA5B432-B6C3-4F62-A7FB-00EB6B0F18C7
	TMPDIR=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/
	USER=tom
	VERTX_HOME=/Users/tom/.gvm/vertx/current
	VISUAL=vim
	XD_ANALYTICS=memory
	XD_CONFIG_LOCATION=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	XD_CONFIG_NAME=servers,application
	XD_HOME=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	XD_JMX_ENABLED=true
	XD_MODULE_CONFIG_LOCATION=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
	XD_MODULE_CONFIG_NAME=modules
	XD_TRANSPORT=local
	__CF_USER_TEXT_ENCODING=0x1F5:0:0
	__CHECKFIX1436934=1
	_system_arch=x86_64
	_system_name=OSX
	_system_type=Darwin
	_system_version=10.9
	analytics=memory
	awt.toolkit=sun.lwawt.macosx.LWCToolkit
	catalina.base=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/tomcat.7064945282515648982.9393
	catalina.home=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/tomcat.7064945282515648982.9393
	catalina.useNaming=false
	document=--
	embeddedHsql=true
	endpoints.jmx.enabled=true
	endpoints.jmx.uniqueNames=true
	endpoints.jolokia.enabled=true
	file.encoding=UTF-8
	file.encoding.pkg=sun.io
	file.separator=/
	ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16
	gopherProxySet=false
	http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16
	java.awt.graphicsenv=sun.awt.CGraphicsEnvironment
	java.awt.headless=true
	java.awt.printerjob=sun.lwawt.macosx.CPrinterJob
	java.class.path=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/modules/processor/scripts:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/activation-1.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/amqp-client-3.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aopalliance-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/args4j-2.0.16.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/asm-3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aspectjrt-1.8.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aspectjweaver-1.8.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/avro-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/avro-compiler-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/cglib-2.2.1-v20090111.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/classmate-1.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/com.ibm.jbatch-tck-spi-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-beanutils-1.9.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-cli-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-codec-1.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-collections-3.2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-compress-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-configuration-1.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-daemon-1.0.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-dbcp-1.4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-digester-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-el-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-fileupload-1.3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-httpclient-3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-io-2.4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-jexl-2.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-lang-2.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-math-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-net-3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-pool-1.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-pool2-2.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-client-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-framework-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-recipes-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/disruptor-3.2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/groovy-all-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/gs-collections-5.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/gs-collections-api-5.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guava-16.0.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guice-3.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guice-servlet-3.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hibernate-validator-5.0.3.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hsqldb-2.3.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-annotations-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-core-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-core-asl-1.9.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-databind-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-mapper-asl-1.9.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javassist-3.18.1-GA.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.batch-api-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.inject-1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.mail-1.4.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jboss-logging-3.1.1.GA.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jcl-over-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jedis-2.5.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jersey-guice-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jettison-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jline-2.11.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/joda-time-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jolokia-core-1.2.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jopt-simple-4.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-path-0.9.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-simple-1.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-smart-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jsr305-2.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jul-to-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kafka_2.10-0.8.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kite-data-core-0.17.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kite-hadoop-compatibility-0.17.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kryo-2.22.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/log4j-1.2.17.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/log4j-over-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/metrics-annotation-2.2.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/metrics-core-2.2.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/mongo-java-driver-2.12.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/netty-3.7.0.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/objenesis-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/ognl-3.0.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/opencsv-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/paranamer-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-avro-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-column-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-common-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-encoding-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-format-2.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-generator-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-hadoop-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-jackson-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/postgresql-9.2-1002-jdbc4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/reactor-core-1.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/scala-library-2.10.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/slf4j-api-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/slf4j-log4j12-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/snakeyaml-1.14.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/snappy-java-1.1.0.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-amqp-1.4.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-aop-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-admin-manager-1.3.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-admin-resources-1.3.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-core-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-infrastructure-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-integration-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-beans-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-actuator-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-autoconfigure-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-loader-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-logging-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-security-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-thymeleaf-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-tomcat-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-web-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-cloudfoundry-connector-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-core-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-spring-service-connector-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-context-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-context-support-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-core-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-commons-1.9.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-mongodb-1.5.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-redis-1.4.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-expression-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-hateoas-0.14.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-amqp-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-core-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-event-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-file-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-http-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-jmx-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-kafka-1.0.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-redis-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-jdbc-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-ldap-core-2.0.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-messaging-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-plugin-core-1.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-rabbit-1.4.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-retry-1.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-config-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-core-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-ldap-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-web-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-tx-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-web-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-webmvc-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-analytics-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-batch-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-dirt-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-hadoop-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-module-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-module-spi-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-rest-domain-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-tuple-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-ui-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-2.1.3.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-layout-dialect-1.2.5.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-spring4-2.1.3.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-core-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-el-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-logging-juli-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-websocket-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-jdbc-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-juli-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/unbescape-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/validation-api-1.1.0.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xmlenc-0.52.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xmlpull-1.1.3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xpp3_min-1.1.4c.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xstream-1.4.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xz-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/zkclient-0.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/zookeeper-3.4.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/avro-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-annotations-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-auth-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-distcp-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-hdfs-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-core-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-jobclient-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-shuffle-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-streaming-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-api-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-client-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-server-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-server-nodemanager-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jersey-core-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jersey-server-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jetty-util-6.1.26.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/protobuf-java-2.5.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-batch-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-core-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-hbase-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-hive-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-pig-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-store-2.1.0.M2.jar
	java.class.version=52.0
	java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/endorsed
	java.ext.dirs=/Users/tom/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
	java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre
	java.io.tmpdir=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/
	java.library.path=/Users/tom/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
	java.runtime.name=Java(TM) SE Runtime Environment
	java.runtime.version=1.8.0_25-b17
	java.specification.name=Java Platform API Specification
	java.specification.vendor=Oracle Corporation
	java.specification.version=1.8
	java.vendor=Oracle Corporation
	java.vendor.url=http://java.oracle.com/
	java.vendor.url.bug=http://bugreport.sun.com/bugreport/
	java.version=1.8.0_25
	java.vm.info=mixed mode
	java.vm.name=Java HotSpot(TM) 64-Bit Server VM
	java.vm.specification.name=Java Virtual Machine Specification
	java.vm.specification.vendor=Oracle Corporation
	java.vm.specification.version=1.8
	java.vm.vendor=Oracle Corporation
	java.vm.version=25.25-b02
	line.separator=

	logging.config=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config///xd-singlenode-logger.properties
	management.contextPath=/management
	management.port=9393
	management.security.enabled=false
	os.arch=x86_64
	os.name=Mac OS X
	os.version=10.9.5
	path.separator=:
	rvm_alias_expanded=
	rvm_bin_path=/Users/tom/.rvm/bin
	rvm_docs_type=
	rvm_gemstone_package_file=
	rvm_gemstone_url=
	rvm_niceness=
	rvm_nightly_flag=
	rvm_path=/Users/tom/.rvm
	rvm_prefix=/Users/tom
	rvm_proxy=
	rvm_quiet_flag=
	rvm_ruby_file=
	rvm_ruby_make=
	rvm_ruby_make_install=
	rvm_ruby_mode=
	rvm_script_name=
	rvm_sdk=
	rvm_silent_flag=
	rvm_version=1.25.18 (master)
	rvm_wrapper_name=
	security.basic.enabled=false
	security.basic.realm=SpringXD
	server.port=9393
	socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16
	spring.application.name=admin
	spring.config.location=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	spring.config.name=servers,application
	spring.datasource.abandonWhenPercentageFull=0
	spring.datasource.alternateUsernameAllowed=false
	spring.datasource.driverClassName=org.hsqldb.jdbc.JDBCDriver
	spring.datasource.fairQueue=true
	spring.datasource.initialSize=0
	spring.datasource.jmxEnabled=true
	spring.datasource.logAbandoned=false
	spring.datasource.maxActive=100
	spring.datasource.maxAge=0
	spring.datasource.maxIdle=100
	spring.datasource.maxWait=30000
	spring.datasource.minEvictableIdleTimeMillis=60000
	spring.datasource.minIdle=10
	spring.datasource.password=
	spring.datasource.removeAbandoned=false
	spring.datasource.removeAbandonedTimeout=60
	spring.datasource.suspectTimeout=0
	spring.datasource.testOnBorrow=true
	spring.datasource.testOnReturn=false
	spring.datasource.testWhileIdle=false
	spring.datasource.timeBetweenEvictionRunsMillis=5000
	spring.datasource.url=jdbc:hsqldb:hsql://localhost:9101/xdjob
	spring.datasource.useEquals=true
	spring.datasource.username=sa
	spring.datasource.validationInterval=30000
	spring.datasource.validationQuery=select 1 from INFORMATION_SCHEMA.SYSTEM_USERS
	spring.freemarker.checkTemplateLocation=false
	spring.hadoop.fsUri=hdfs://localhost:8020
	spring.main.show_banner=false
	spring.profiles=singlenode
	spring.profiles.active=default
	spring.rabbitmq.addresses=localhost:5672
	spring.rabbitmq.password=guest
	spring.rabbitmq.sslProperties=
	spring.rabbitmq.useSSL=false
	spring.rabbitmq.username=guest
	spring.rabbitmq.virtual_host=/
	spring.redis.host=localhost
	spring.redis.pool.maxActive=8
	spring.redis.pool.maxIdle=8
	spring.redis.pool.maxWait=-1
	spring.redis.pool.minIdle=0
	spring.redis.port=6379
	sun.arch.data.model=64
	sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/classes
	sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib
	sun.cpu.endian=little
	sun.cpu.isalist=
	sun.io.unicode.encoding=UnicodeBig
	sun.java.command=org.springframework.xd.dirt.server.SingleNodeApplication --verbose
	sun.java.launcher=SUN_STANDARD
	sun.jnu.encoding=UTF-8
	sun.management.compiler=HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level=unknown
	transport=local
	user.country=US
	user.country.format=DE
	user.dir=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd
	user.home=/Users/tom
	user.language=en
	user.name=tom
	user.timezone=Europe/Berlin
	vcs_info_msg_0_=(%F{81}master%f%F{166}●%f)
	vcs_info_msg_1_=
	verbose=true
	xd.config.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	xd.container.groups=
	xd.container.host=
	xd.container.ip=
	xd.data.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/data
	xd.extensions.basepackages=
	xd.extensions.locations=META-INF/spring-xd/ext
	xd.home=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	xd.messageRateMonitoring.enabled=false
	xd.messagebus.kafka.brokers=localhost:9092
	xd.messagebus.kafka.numOfKafkaPartitionsForCountEqualsZero=10
	xd.messagebus.kafka.replicationFactor=1
	xd.messagebus.kafka.zkAddress=localhost:2181
	xd.messagebus.rabbit.default.ackMode=AUTO
	xd.messagebus.rabbit.default.autoBindDLQ=false
	xd.messagebus.rabbit.default.backOffInitialInterval=1000
	xd.messagebus.rabbit.default.backOffMaxInterval=10000
	xd.messagebus.rabbit.default.backOffMultiplier=2.0
	xd.messagebus.rabbit.default.concurrency=1
	xd.messagebus.rabbit.default.deliveryMode=PERSISTENT
	xd.messagebus.rabbit.default.maxAttempts=3
	xd.messagebus.rabbit.default.maxConcurrency=1
	xd.messagebus.rabbit.default.prefetch=1
	xd.messagebus.rabbit.default.prefix=xdbus.
	xd.messagebus.rabbit.default.replyHeaderPatterns=STANDARD_REPLY_HEADERS,*
	xd.messagebus.rabbit.default.requestHeaderPatterns=STANDARD_REQUEST_HEADERS,*
	xd.messagebus.rabbit.default.requeue=true
	xd.messagebus.rabbit.default.transacted=false
	xd.messagebus.rabbit.default.txSize=1
	xd.messagebus.redis.default.backOffInitialInterval=1000
	xd.messagebus.redis.default.backOffMaxInterval=10000
	xd.messagebus.redis.default.backOffMultiplier=2.0
	xd.messagebus.redis.default.concurrency=1
	xd.messagebus.redis.default.maxAttempts=3
	xd.messagebus.redis.headers=
	xd.module.config.location=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
	xd.module.config.name=modules
	xd.module.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/modules
	xd.transport=local
	xd.ui.allow_origin=http://localhost:9889
	xd.ui.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/spring-xd-ui/dist/
	zk.client.connect=
	zk.embedded.client.connect=localhost:38225
	zk.namespace=xd

20:40:56,280 1.1.0.SNAP  INFO LeaderSelector-0 server.DeploymentSupervisor - Leader Admin admin:default,admin,singlenode,hsqldbServer:9393 is watching for stream/job deployment requests.
20:40:56,322 1.1.0.SNAP  INFO main server.AdminServerApplication - Started AdminServerApplication in 5.545 seconds (JVM running for 14.185)
20:40:56,341 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Path cache event: type=INITIALIZED
20:40:58,143 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD Home: /Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
20:40:58,143 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: local
20:40:58,143 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config location: file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
20:40:58,143 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config names: servers,application
20:40:58,143 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config location: file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
20:40:58,144 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config name: modules
20:40:58,144 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Container IP address: 172.16.200.1
20:40:58,144 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Container hostname:   gauss
20:40:58,144 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop Distro: hadoop25
20:40:58,156 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop version detected from classpath: 2.5.1
20:40:58,156 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:38225
20:40:58,156 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper namespace: xd
20:40:58,156 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Analytics: memory
20:40:58,162 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - 
	Apple_PubSub_Socket_Render=/tmp/launch-k1iYmY/Render
	BROWSER=open
	CRASH_HOME=/Users/tom/.gvm/crash/current
	DISPLAY=/tmp/launch-16fQxe/org.macosforge.xquartz:0
	EDITOR=vim
	GAIDEN_HOME=/Users/tom/.gvm/gaiden/current
	GEM_HOME=/Users/tom/.rvm/gems/ruby-1.9.3-p484
	GEM_PATH=/Users/tom/.rvm/gems/ruby-1.9.3-p484:/Users/tom/.rvm/gems/ruby-1.9.3-p484@global
	GLIDE_HOME=/Users/tom/.gvm/glide/current
	GRADLE_HOME=/Users/tom/.gvm/gradle/current
	GRAILS_HOME=/Users/tom/.gvm/grails/current
	GREP_COLOR=1;33
	GREP_OPTIONS=--color=auto
	GRIFFON_HOME=/Users/tom/.gvm/griffon/current
	GROOVYSERV_HOME=/Users/tom/.gvm/groovyserv/current
	GROOVY_HOME=/Users/tom/.gvm/groovy/current
	GVM_BROADCAST_SERVICE=http://cast.gvm.io
	GVM_BROKER_SERVICE=http://release.gvm.io
	GVM_DIR=/Users/tom/.gvm
	GVM_INIT=true
	GVM_PLATFORM=Darwin
	GVM_SERVICE=http://api.gvmtool.net
	GVM_VERSION=2.2.0
	HADOOP_DISTRO=hadoop25
	HOME=/Users/tom
	IRBRC=/Users/tom/.rvm/rubies/ruby-1.9.3-p484/.irbrc
	JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home
	JAVA_MAIN_CLASS_79926=org.springframework.xd.dirt.server.SingleNodeApplication
	JBAKE_HOME=/Users/tom/.gvm/jbake/current
	LANG=en_US.UTF-8
	LAZYBONES_HOME=/Users/tom/.gvm/lazybones/current
	LC_ALL=en_US.UTF-8
	LC_CTYPE=UTF-8
	LESS=-F -g -i -M -R -S -w -X -z-4
	LESS_TERMCAP_mb=[01;31m
	LESS_TERMCAP_md=[01;31m
	LESS_TERMCAP_me=[0m
	LESS_TERMCAP_se=[0m
	LESS_TERMCAP_so=[00;47;30m
	LESS_TERMCAP_ue=[0m
	LESS_TERMCAP_us=[01;32m
	LOGNAME=tom
	LSCOLORS=exfxcxdxbxGxDxabagacad
	LS_COLORS=di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:
	MAVEN_HOME=/Applications/dev/tools/apache-maven-3.2.1
	MY_RUBY_HOME=/Users/tom/.rvm/rubies/ruby-1.9.3-p484
	OLDPWD=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	PAGER=less
	PATH=/Users/tom/.gvm/vertx/current/bin:/Users/tom/.gvm/springboot/current/bin:/Users/tom/.gvm/lazybones/current/bin:/Users/tom/.gvm/jbake/current/bin:/Users/tom/.gvm/groovyserv/current/bin:/Users/tom/.gvm/groovy/current/bin:/Users/tom/.gvm/griffon/current/bin:/Users/tom/.gvm/grails/current/bin:/Users/tom/.gvm/gradle/current/bin:/Users/tom/.gvm/glide/current/bin:/Users/tom/.gvm/gaiden/current/bin:/Users/tom/.gvm/crash/current/bin:/Users/tom/.rvm/gems/ruby-1.9.3-p484/bin:/Users/tom/.rvm/gems/ruby-1.9.3-p484@global/bin:/Users/tom/.rvm/rubies/ruby-1.9.3-p484/bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/go/bin:/usr/texbin:/Users/tom/.rvm/bin:/Users/tom/.yadr/bin:/Users/tom/.yadr/bin/yadr:/Applications/dev/tools/apache-maven-3.2.1/bin:/Applications/dev/tools/apache-ant-1.9.2/bin:/Users/tom/.rvm/bin
	PID=79926
	PS4=+ %* %F{red}%x:%I %F{green}%N:%i%F{white} %_
	PWD=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd
	SCREEN_NO=
	SECURITYSESSIONID=186a4
	SHELL=/bin/zsh
	SHLVL=1
	SPRINGBOOT_HOME=/Users/tom/.gvm/springboot/current
	SSH_AUTH_SOCK=/tmp/launch-KXqpmP/Listeners
	TERM=xterm-256color
	TERM_PROGRAM=Apple_Terminal
	TERM_PROGRAM_VERSION=326
	TERM_SESSION_CLASS_ID=D65D4C24-B8F2-4B53-9179-EC38F2DCD1AE
	TERM_SESSION_ID=3FA5B432-B6C3-4F62-A7FB-00EB6B0F18C7
	TMPDIR=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/
	USER=tom
	VERTX_HOME=/Users/tom/.gvm/vertx/current
	VISUAL=vim
	XD_ANALYTICS=memory
	XD_CONFIG_LOCATION=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	XD_CONFIG_NAME=servers,application
	XD_HOME=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	XD_JMX_ENABLED=true
	XD_MODULE_CONFIG_LOCATION=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
	XD_MODULE_CONFIG_NAME=modules
	XD_TRANSPORT=local
	__CF_USER_TEXT_ENCODING=0x1F5:0:0
	__CHECKFIX1436934=1
	_system_arch=x86_64
	_system_name=OSX
	_system_type=Darwin
	_system_version=10.9
	analytics=memory
	awt.toolkit=sun.lwawt.macosx.LWCToolkit
	catalina.base=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/tomcat.7064945282515648982.9393
	catalina.home=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/tomcat.7064945282515648982.9393
	catalina.useNaming=false
	document=--
	embeddedHsql=true
	endpoints.jmx.enabled=true
	endpoints.jmx.uniqueNames=true
	endpoints.jolokia.enabled=true
	endpoints.shutdown.enabled=true
	file.encoding=UTF-8
	file.encoding.pkg=sun.io
	file.separator=/
	ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16
	gopherProxySet=false
	http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16
	java.awt.graphicsenv=sun.awt.CGraphicsEnvironment
	java.awt.headless=true
	java.awt.printerjob=sun.lwawt.macosx.CPrinterJob
	java.class.path=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/modules/processor/scripts:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/activation-1.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/amqp-client-3.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aopalliance-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/args4j-2.0.16.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/asm-3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aspectjrt-1.8.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/aspectjweaver-1.8.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/avro-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/avro-compiler-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/cglib-2.2.1-v20090111.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/classmate-1.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/com.ibm.jbatch-tck-spi-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-beanutils-1.9.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-cli-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-codec-1.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-collections-3.2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-compress-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-configuration-1.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-daemon-1.0.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-dbcp-1.4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-digester-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-el-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-fileupload-1.3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-httpclient-3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-io-2.4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-jexl-2.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-lang-2.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-math-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-net-3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-pool-1.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/commons-pool2-2.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-client-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-framework-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/curator-recipes-2.6.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/disruptor-3.2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/groovy-all-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/gs-collections-5.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/gs-collections-api-5.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guava-16.0.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guice-3.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/guice-servlet-3.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hibernate-validator-5.0.3.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hsqldb-2.3.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-annotations-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-core-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-core-asl-1.9.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-databind-2.3.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jackson-mapper-asl-1.9.13.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javassist-3.18.1-GA.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.batch-api-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.inject-1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/javax.mail-1.4.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jboss-logging-3.1.1.GA.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jcl-over-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jedis-2.5.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jersey-guice-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jettison-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jline-2.11.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/joda-time-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jolokia-core-1.2.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jopt-simple-4.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-path-0.9.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-simple-1.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/json-smart-1.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jsr305-2.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/jul-to-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kafka_2.10-0.8.1.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kite-data-core-0.17.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kite-hadoop-compatibility-0.17.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/kryo-2.22.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/log4j-1.2.17.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/log4j-over-slf4j-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/metrics-annotation-2.2.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/metrics-core-2.2.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/mongo-java-driver-2.12.2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/netty-3.7.0.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/objenesis-2.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/ognl-3.0.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/opencsv-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/paranamer-2.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-avro-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-column-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-common-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-encoding-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-format-2.0.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-generator-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-hadoop-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/parquet-jackson-1.4.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/postgresql-9.2-1002-jdbc4.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/reactor-core-1.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/scala-library-2.10.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/slf4j-api-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/slf4j-log4j12-1.7.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/snakeyaml-1.14.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/snappy-java-1.1.0.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-amqp-1.4.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-aop-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-admin-manager-1.3.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-admin-resources-1.3.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-core-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-infrastructure-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-batch-integration-3.0.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-beans-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-actuator-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-autoconfigure-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-loader-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-logging-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-security-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-thymeleaf-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-tomcat-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-boot-starter-web-1.2.0.RC1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-cloudfoundry-connector-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-core-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-cloud-spring-service-connector-1.0.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-context-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-context-support-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-core-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-commons-1.9.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-mongodb-1.5.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-data-redis-1.4.1.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-expression-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-hateoas-0.14.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-amqp-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-core-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-event-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-file-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-http-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-jmx-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-kafka-1.0.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-integration-redis-4.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-jdbc-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-ldap-core-2.0.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-messaging-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-plugin-core-1.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-rabbit-1.4.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-retry-1.1.0.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-config-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-core-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-ldap-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-security-web-3.2.4.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-tx-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-web-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-webmvc-4.1.2.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-analytics-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-batch-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-dirt-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-hadoop-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-module-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-module-spi-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-rest-domain-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-tuple-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/spring-xd-ui-1.1.0.BUILD-SNAPSHOT.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-2.1.3.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-layout-dialect-1.2.5.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/thymeleaf-spring4-2.1.3.RELEASE.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-core-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-el-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-logging-juli-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-embed-websocket-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-jdbc-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/tomcat-juli-7.0.55.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/unbescape-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/validation-api-1.1.0.Final.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xmlenc-0.52.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xmlpull-1.1.3.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xpp3_min-1.1.4c.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xstream-1.4.7.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/xz-1.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/zkclient-0.3.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/zookeeper-3.4.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/avro-1.7.6.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-annotations-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-auth-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-distcp-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-hdfs-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-core-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-jobclient-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-mapreduce-client-shuffle-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-streaming-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-api-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-client-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-server-common-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/hadoop-yarn-server-nodemanager-2.5.1.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jersey-core-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jersey-server-1.9.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/jetty-util-6.1.26.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/protobuf-java-2.5.0.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-batch-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-core-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-hbase-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-hive-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-pig-2.1.0.M2.jar:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/lib/hadoop25/spring-data-hadoop-store-2.1.0.M2.jar
	java.class.version=52.0
	java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/endorsed
	java.ext.dirs=/Users/tom/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
	java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre
	java.io.tmpdir=/var/folders/6b/qk0vj57j3dd579_vd8z0_fjr0000gn/T/
	java.library.path=/Users/tom/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
	java.runtime.name=Java(TM) SE Runtime Environment
	java.runtime.version=1.8.0_25-b17
	java.specification.name=Java Platform API Specification
	java.specification.vendor=Oracle Corporation
	java.specification.version=1.8
	java.vendor=Oracle Corporation
	java.vendor.url=http://java.oracle.com/
	java.vendor.url.bug=http://bugreport.sun.com/bugreport/
	java.version=1.8.0_25
	java.vm.info=mixed mode
	java.vm.name=Java HotSpot(TM) 64-Bit Server VM
	java.vm.specification.name=Java Virtual Machine Specification
	java.vm.specification.vendor=Oracle Corporation
	java.vm.specification.version=1.8
	java.vm.vendor=Oracle Corporation
	java.vm.version=25.25-b02
	line.separator=

	logging.config=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config///xd-singlenode-logger.properties
	management.contextPath=/management
	management.port=
	management.security.enabled=false
	os.arch=x86_64
	os.name=Mac OS X
	os.version=10.9.5
	path.separator=:
	rvm_alias_expanded=
	rvm_bin_path=/Users/tom/.rvm/bin
	rvm_docs_type=
	rvm_gemstone_package_file=
	rvm_gemstone_url=
	rvm_niceness=
	rvm_nightly_flag=
	rvm_path=/Users/tom/.rvm
	rvm_prefix=/Users/tom
	rvm_proxy=
	rvm_quiet_flag=
	rvm_ruby_file=
	rvm_ruby_make=
	rvm_ruby_make_install=
	rvm_ruby_mode=
	rvm_script_name=
	rvm_sdk=
	rvm_silent_flag=
	rvm_version=1.25.18 (master)
	rvm_wrapper_name=
	security.basic.enabled=false
	security.basic.realm=SpringXD
	server.port=0
	socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16
	spring.application.name=admin
	spring.config.location=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	spring.config.name=servers,application
	spring.datasource.abandonWhenPercentageFull=0
	spring.datasource.alternateUsernameAllowed=false
	spring.datasource.driverClassName=org.hsqldb.jdbc.JDBCDriver
	spring.datasource.fairQueue=true
	spring.datasource.initialSize=0
	spring.datasource.jmxEnabled=true
	spring.datasource.logAbandoned=false
	spring.datasource.maxActive=100
	spring.datasource.maxAge=0
	spring.datasource.maxIdle=100
	spring.datasource.maxWait=30000
	spring.datasource.minEvictableIdleTimeMillis=60000
	spring.datasource.minIdle=10
	spring.datasource.password=
	spring.datasource.removeAbandoned=false
	spring.datasource.removeAbandonedTimeout=60
	spring.datasource.suspectTimeout=0
	spring.datasource.testOnBorrow=true
	spring.datasource.testOnReturn=false
	spring.datasource.testWhileIdle=false
	spring.datasource.timeBetweenEvictionRunsMillis=5000
	spring.datasource.url=jdbc:hsqldb:hsql://localhost:9101/xdjob
	spring.datasource.useEquals=true
	spring.datasource.username=sa
	spring.datasource.validationInterval=30000
	spring.datasource.validationQuery=select 1 from INFORMATION_SCHEMA.SYSTEM_USERS
	spring.freemarker.checkTemplateLocation=false
	spring.hadoop.fsUri=hdfs://localhost:8020
	spring.main.show_banner=false
	spring.profiles=container
	spring.profiles.active=default
	spring.rabbitmq.addresses=localhost:5672
	spring.rabbitmq.password=guest
	spring.rabbitmq.sslProperties=
	spring.rabbitmq.useSSL=false
	spring.rabbitmq.username=guest
	spring.rabbitmq.virtual_host=/
	spring.redis.host=localhost
	spring.redis.pool.maxActive=8
	spring.redis.pool.maxIdle=8
	spring.redis.pool.maxWait=-1
	spring.redis.pool.minIdle=0
	spring.redis.port=6379
	sun.arch.data.model=64
	sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/classes
	sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib
	sun.cpu.endian=little
	sun.cpu.isalist=
	sun.io.unicode.encoding=UnicodeBig
	sun.java.command=org.springframework.xd.dirt.server.SingleNodeApplication --verbose
	sun.java.launcher=SUN_STANDARD
	sun.jnu.encoding=UTF-8
	sun.management.compiler=HotSpot 64-Bit Tiered Compilers
	sun.os.patch.level=unknown
	transport=local
	user.country=US
	user.country.format=DE
	user.dir=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd
	user.home=/Users/tom
	user.language=en
	user.name=tom
	user.timezone=Europe/Berlin
	vcs_info_msg_0_=(%F{81}master%f%F{166}●%f)
	vcs_info_msg_1_=
	verbose=true
	xd.config.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//
	xd.container.groups=
	xd.container.host=
	xd.container.ip=
	xd.data.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/data
	xd.extensions.basepackages=
	xd.extensions.locations=META-INF/spring-xd/ext
	xd.home=/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd
	xd.messageRateMonitoring.enabled=false
	xd.messagebus.kafka.brokers=localhost:9092
	xd.messagebus.kafka.numOfKafkaPartitionsForCountEqualsZero=10
	xd.messagebus.kafka.replicationFactor=1
	xd.messagebus.kafka.zkAddress=localhost:2181
	xd.messagebus.rabbit.default.ackMode=AUTO
	xd.messagebus.rabbit.default.autoBindDLQ=false
	xd.messagebus.rabbit.default.backOffInitialInterval=1000
	xd.messagebus.rabbit.default.backOffMaxInterval=10000
	xd.messagebus.rabbit.default.backOffMultiplier=2.0
	xd.messagebus.rabbit.default.concurrency=1
	xd.messagebus.rabbit.default.deliveryMode=PERSISTENT
	xd.messagebus.rabbit.default.maxAttempts=3
	xd.messagebus.rabbit.default.maxConcurrency=1
	xd.messagebus.rabbit.default.prefetch=1
	xd.messagebus.rabbit.default.prefix=xdbus.
	xd.messagebus.rabbit.default.replyHeaderPatterns=STANDARD_REPLY_HEADERS,*
	xd.messagebus.rabbit.default.requestHeaderPatterns=STANDARD_REQUEST_HEADERS,*
	xd.messagebus.rabbit.default.requeue=true
	xd.messagebus.rabbit.default.transacted=false
	xd.messagebus.rabbit.default.txSize=1
	xd.messagebus.redis.default.backOffInitialInterval=1000
	xd.messagebus.redis.default.backOffMaxInterval=10000
	xd.messagebus.redis.default.backOffMultiplier=2.0
	xd.messagebus.redis.default.concurrency=1
	xd.messagebus.redis.default.maxAttempts=3
	xd.messagebus.redis.headers=
	xd.module.config.location=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/config//modules/
	xd.module.config.name=modules
	xd.module.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/modules
	xd.transport=local
	xd.ui.allow_origin=http://localhost:9889
	xd.ui.home=file:/Users/tom/Documents/dev/repos/spring/spring-xd/build/dist/spring-xd/xd/spring-xd-ui/dist/
	zk.client.connect=
	zk.embedded.client.connect=localhost:38225
	zk.namespace=xd

20:40:58,171 1.1.0.SNAP  INFO main server.ContainerRegistrar - Container {ip=172.16.200.1, host=gauss, groups=, pid=79926, id=f75f4b79-a82c-442f-954b-3df1687ce25c} joined cluster
20:40:58,174 1.1.0.SNAP  INFO main server.ContainerServerApplication - Started ContainerServerApplication in 0.863 seconds (JVM running for 16.037)
20:40:58,177 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: type=INITIALIZED
20:40:58,178 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Path cache event: path=/containers/f75f4b79-a82c-442f-954b-3df1687ce25c, type=CHILD_ADDED
20:40:58,193 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Container arrived: Container{name='f75f4b79-a82c-442f-954b-3df1687ce25c', attributes={ip=172.16.200.1, host=gauss, groups=, pid=79926, id=f75f4b79-a82c-442f-954b-3df1687ce25c}}
20:40:58,194 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Scheduling deployments to new container(s) in 15000 ms 
20:41:04,880 1.1.0.SNAP  INFO LeaderSelector-0 server.DeploymentSupervisor - Leadership canceled due to thread interrupt
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Configuration information should only printed once when using {{xd-singlenode --verbose}}.,,193276800,,2015-05-25 22:49:41.696,46748,true,iperumal(iperumal),,,,"0|i07z1r:",46550,46450,,,Sprint 50,,,2.0,,"25/May/15 10:49 PM;iperumal;This works as expected as the two configuration information there show admin and container configurations.

Please feel free to re-open if you have a better suggestion to display the configuration info.",,,,,,,,,,,,,,,,,
Boot upgrade caused test failures,XD-2353,60667,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Duplicate,grenfro,grenfro,grenfro,15/Nov/14 8:03 AM,17/Nov/14 8:18 AM,10/Jul/21 8:37 AM,15/Nov/14 9:29 AM,1.1 M1,,,,,,1.1 M1,,Acceptance Testing,,,,,0,,,,,,,"spring.groovy.template.check-template-location=false must now be set in the properties file.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,209779200,XD-1605,,46741,true,tmarshall(tmarshall),,,,"0|i07yz3:",46538,46443,,,Sprint 38,,,3.0,,"15/Nov/14 9:29 AM;grenfro;Duplicate of 2354.  Resolved by thomas",,,,,,,,,,,,,,,,,
XD UI not usable with IE 11,XD-2345,60648,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,hillert,thomas.risberg,thomas.risberg,14/Nov/14 8:07 AM,17/Nov/14 1:59 PM,10/Jul/21 8:37 AM,17/Nov/14 1:59 PM,1.1 M1,,,,,,1.0.2,1.1 M1,UI,,,,,0,,,,,,,Trying to use the XD UI with Internet Explorer (version 11.0.9600.17031) is difficult. The screen doesn't refresh when streams/jobs are created or deployed. Had to erase the browsing history continuously to get state updates to show in the UI.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,209692800,,2014-11-16 15:41:59.764,46722,true,tmarshall(tmarshall),,,,"0|i07yzj:",46540,46424,,,Sprint 38,,,5.0,,"16/Nov/14 3:41 PM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1290",,,,,,,,,,,,,,,,,
UI should quote parameters containing a space,XD-2344,60647,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,hillert,thomas.risberg,thomas.risberg,14/Nov/14 8:03 AM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,18/Nov/14 3:31 PM,1.1 M1,,,,,,1.1 GA,,UI,,,,,0,,,,,,,"Trying to deploy the `timestampfile` job using the UI.

Seems the UI doesn't quote string parameters that contains a space so the job creation fails.

Keeping all the defaults I get the following ""Resulting Definition"" in the UI:

timestampfile --restartable=false --directory=/tmp/xd/output/ --fileExtension=txt --fileName=${xd.job.name} --format=yyyy-MM-dd HH:mm:ss --dateFormat=yyyy-MM-dd --makeUnique=true

(note: the --format parameter has a space)

which causes:

XD100E:(pos 128): Found unexpected data after stream definition: 'HH' timestampfile --restartable=false --directory=/tmp/xd/output/ --fileExtension=txt --fileName=${xd.job.name} --format=yyyy-MM-dd HH:mm:ss --dateFormat=yyyy-MM-dd --makeUnique=true *^
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,209520000,XD-1608,2014-11-18 13:00:17.231,46721,true,sabby(sabby),,,,"0|i07z3z:",46560,46423,,,Sprint 38,,,3.0,,"18/Nov/14 1:00 PM;hillert;Created PR: https://github.com/spring-projects/spring-xd/pull/1298","18/Nov/14 3:32 PM;iperumal;Merged as https://github.com/spring-projects/spring-xd/commit/06c39f1f4bdcc6989afa65ab0c17438957229a6c",,,,,,,,,,,,,,,,
JDBCHDFS Job Password issue,XD-2342,60633,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,bzeyben,bzeyben,13/Nov/14 6:22 PM,19/Dec/14 8:11 AM,10/Jul/21 8:37 AM,19/Dec/14 8:11 AM,,,,,,,1.0.3,1.1 RC1,Batch,,,,,0,,,,,,,"Password for 'jdbchdfs' job definition is only hashing the initial portion of the password not the entire password (See attached image).

The password has an '_' char but it shouldn't matter. The entire password should be masked with '*' instead.",,,,,,,,,,,,,,,,,,,,,,,,"13/Nov/14 6:22 PM;bzeyben;Screen Shot 2014-11-13 at 9.18.47 PM.png;https://jira.spring.io/secure/attachment/22366/Screen+Shot+2014-11-13+at+9.18.47+PM.png",,,,,,,,,,,,4.0,207792000,,2014-12-08 12:08:50.574,46707,true,tmarshall(tmarshall),,,,"0|i000jr:",90,46409,,,Sprint 40,,,3.0,,"08/Dec/14 12:08 PM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1325",,,,,,,,,,,,,,,,,
Job deployment list returns 404 after Laptop wakes up,XD-2331,60576,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,hillert,hillert,11/Nov/14 8:18 AM,05/Dec/14 7:27 PM,10/Jul/21 8:37 AM,05/Dec/14 7:15 PM,1.0.1,,,,,,1.1 RC1,,Batch,REST,,,,0,,,,,,,"*Version:*
XD 1.0.1
Mac OSX 10.9.5

*Problem:*
- Deployed a simple batch job in 'singlenode'
- Laptop put to sleep mode
- After login: notice that ZK is establishing connection 
- Continues to clean-up prior to redeployment, but never goes through successfully
- Listing job both in UI and Shell states it is ""undeployed""

*Gunnar's experiment:*
- System is running in Single Node
- Laptop goes to sleep
- After waking up your laptop from sleep, you cannot retrieve the list of deployed jobs anymore (in AdminUI)

*Error:*
Only getting back a *404* - ""NoSuchBatchJobException"", ""Batch Job with the name abcd doesn't exist""",,,,,,,,,,,,,,,,,,,,,,,,"12/Nov/14 8:40 AM;sabby;Commands.png;https://jira.spring.io/secure/attachment/22363/Commands.png","12/Nov/14 8:40 AM;sabby;Error_After_Sleep.png;https://jira.spring.io/secure/attachment/22362/Error_After_Sleep.png",,,,,,,,,,,5.0,210211200,,,46650,true,tmarshall(tmarshall),,,,"0|i0009b:",43,46352,,,Sprint 39,,,5.0,,,,,,,,,,,,,,,,,,,
Can't create stream running on Windows,XD-2326,60562,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,dturanski,thomas.risberg,thomas.risberg,10/Nov/14 6:44 AM,17/Nov/14 2:56 PM,10/Jul/21 8:37 AM,17/Nov/14 2:56 PM,,,,,,,1.1 M1,,Runtime,,,,,0,,,,,,,"Trying to test on Windows and getting the following exception when createing a stream - 'stream create --name tictoc --definition ""time | log'

{code}
09:34:20,789 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD Home: C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\..
09:34:20,790 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: local
09:34:20,790 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config location: file:C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\../config//
09:34:20,790 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config names: servers,application
09:34:20,793 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config location: file:C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\../config//mo
dules/
09:34:20,794 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config name: modules
09:34:20,795 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Admin web UI: http://Seattle:9393/admin-ui
09:34:20,797 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:64424
09:34:20,798 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper namespace: xd
09:34:20,799 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Analytics: memory
09:34:20,913 1.1.0.SNAP  INFO LeaderSelector-0 server.DeploymentSupervisor - Leader Admin singlenode:default,admin,singlenode,hsqldbServer:9393 is watching for
stream/job deployment requests.
09:34:21,013 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Path cache event: type=INITIALIZED
09:34:21,070 1.1.0.SNAP  INFO main server.AdminServerApplication - Started AdminServerApplication in 6.364 seconds (JVM running for 18.031)
09:34:22,593 1.1.0.SNAP  INFO main server.ContainerRegistrar - Container {ip=192.168.0.120, host=Seattle, groups=, pid=1108, id=08c72e88-66d4-4b47-bd4a-8f5e5849
099f} joined cluster
09:34:22,594 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD Home: C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\..
09:34:22,594 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Transport: local
09:34:22,595 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config location: file:C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\../config//
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD config names: servers,application
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config location: file:C:\Test\spring-xd-1.1.0.BUILD-SNAPSHOT\xd\bin\../config//mo
dules/
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - XD module config name: modules
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Container IP address: 192.168.0.120
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Container hostname:   Seattle
09:34:22,596 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop Distro: hadoop22
09:34:22,597 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Path cache event: path=/containers/08c72e88-66d4-4b47-bd4a-8f5e5849099f, type=CH
ILD_ADDED
09:34:22,600 1.1.0.SNAP  INFO DeploymentsPathChildrenCache-0 server.DeploymentListener - Path cache event: type=INITIALIZED
09:34:22,607 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Container arrived: Container{name='08c72e88-66d4-4b47-bd4a-8f5e5849099f', attrib
utes={ip=192.168.0.120, host=Seattle, groups=, pid=1108, id=08c72e88-66d4-4b47-bd4a-8f5e5849099f}}
09:34:22,609 1.1.0.SNAP  INFO DeploymentSupervisor-0 server.ContainerListener - Scheduling deployments to new container(s) in 15000 ms
09:34:22,611 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Hadoop version detected from classpath: 2.2.0
09:34:22,612 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:64424
09:34:22,613 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Zookeeper namespace: xd
09:34:22,615 1.1.0.SNAP  INFO main util.XdConfigLoggingInitializer - Analytics: memory
09:34:22,616 1.1.0.SNAP  INFO main server.ContainerServerApplication - Started ContainerServerApplication in 0.61 seconds (JVM running for 19.576)
09:36:15,837 1.1.0.SNAP ERROR http-nio-9393-exec-3 rest.RestControllerAdvice - Caught exception while handling a request
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
        at java.lang.String.substring(String.java:1954)
        at org.springframework.xd.dirt.module.ArchiveModuleRegistry.fromResource(ArchiveModuleRegistry.java:140)
        at org.springframework.xd.dirt.module.ArchiveModuleRegistry.findDefinition(ArchiveModuleRegistry.java:68)
        at org.springframework.xd.dirt.module.DelegatingModuleRegistry.findDefinition(DelegatingModuleRegistry.java:48)
        at org.springframework.xd.dirt.module.store.ZooKeeperModuleDefinitionRepository.findByNameAndType(ZooKeeperModuleDefinitionRepository.java:78)
        at org.springframework.xd.dirt.stream.XDStreamParser.resolveModuleType(XDStreamParser.java:317)
        at org.springframework.xd.dirt.stream.XDStreamParser.determineType(XDStreamParser.java:212)
        at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:168)
        at org.springframework.xd.dirt.stream.AbstractDeployer.save(AbstractDeployer.java:96)
        at org.springframework.xd.dirt.rest.XDController.save(XDController.java:223)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:483)
        at org.springframework.web.method.support.InvocableHandalerMethod.invoke(InvocableHandlerMethod.java:215)
        at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:781)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:721)
        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:943)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:877)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:966)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:868)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:646)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:842)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConf
iguration.java:280)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:89)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)
        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
        at java.lang.Thread.run(Thread.java:745)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,210124800,,2014-11-11 11:20:20.243,46636,false,tmarshall(tmarshall),,,,"0|i07ynz:",46488,46338,,,Sprint 38,,,3.0,,"11/Nov/14 11:20 AM;dturanski;I'm running the tests on windows and fixing issues. Started with 81 failed tests in DIRT. Once the build is ok I'll make sure this error is fixed. [~thomas.risberg] you suggested setting up a windows CI build. That's a great idea. These issues are slipping through the cracks. I'm currently testing without redis and rabbit, but I will install after the build works. I think the windows CI environment should include those as well. ",,,,,,,,,,,,,,,,,
"Filejdbc jobs status shows ""STARTED"" even when job is complete",XD-2323,60526,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,grenfro,grenfro,06/Nov/14 12:51 PM,13/Nov/14 2:17 PM,10/Jul/21 8:37 AM,07/Nov/14 12:20 PM,1.1 M1,,,,,,1.1 M1,,Batch,,,,,0,,,,,,,"SHA: 67473dc71332c0727516b6f3fd11a55561b2472e
Deployment: 1 Admin, 2 Containers
JobStore: HSQLDB
OS: Mac OSX & Ubuntu
Reproducible: Yes
Job: job create foo \-\-definition ""filejdbc \-\-resources=file:filejdbctest/filejdbctest.out \-\-names=data --tableName=filejdbctest \-\-initializeDatabase=true ""\-\-deploy

When using Rabbit as a transport with more than one container and launching the job above.  The Job execution stays as ""STARTED"" status, even though the job is actually finished.   We expect it to reach a state of ""COMPLETED"".  Using Redis as a transport the job execution status does reach ""COMPLETED"".   

The execution step list shows: 
Id  Step Name                Job Exec ID  Start Time               End Time                 Status
  --  -----------------------  -----------  -----------------------  -----------------------  ---------
  8   step1-master             4            2014-11-06 15:28:29,820                           STARTED
  9   step1-master:partition0  4            2014-11-06 15:28:29,854  2014-11-06 15:28:29,890  COMPLETED",,,,,,,,,,,,,,,,,XD-2324,,,,,,,,,,,,,,,,,,,7.0,210556800,,2014-11-06 14:19:03.667,46600,false,tmarshall(tmarshall),,,,"0|i07vf3:",45962,46302,,,Sprint 38,,,3.0,,"06/Nov/14 2:19 PM;grussell;Header Mapper is incorrectly mapping the {{replyChannel}} as a String, preventing the overwrite with {{xdReplyChannel}}.","06/Nov/14 2:24 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1271",,,,,,,,,,,,,,,,
Enable configuration of replication factor on the Kafka message bus,XD-2322,60512,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,05/Nov/14 9:19 PM,16/Dec/14 9:49 AM,10/Jul/21 8:37 AM,07/Nov/14 7:18 AM,,,,,,,1.1 M1,,Runtime,,,,,0,,,,,,,"The field exists and it is referred to in application.yml, but it does not have a setter and the bus will always use the configured default, which is 1.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,210643200,XD-2356,,46586,false,tmarshall(tmarshall),,,,"0|i07vfb:",45963,46288,,,Sprint 38,,,3.0,,,,,,,,,,,,,,,,,,,
"REST: ""jobs/configurations"" returns 404 if one job has error",XD-2316,60505,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,hillert,hillert,05/Nov/14 10:38 AM,16/Dec/14 10:56 AM,10/Jul/21 8:37 AM,16/Dec/14 10:56 AM,1.0.1,,,,,,1.0.3,1.1 M2,REST,,,,,0,,,,,,,"There is a bug in the deployments rest end-point. 

*How to reproduce:* 

* Deploy a Batch job (success) that for example does not all necessary libraries in the class-patch and thus causes a “java.lang.ClassNotFoundException”

*Result:*

You cannot retrieve the list of deployments list anymore using:

* http://localhost:9393/jobs/configurations

The rest endpoint will now report:

[{""links"":[],""logref"":""NoSuchBatchJobException"",""message"":""Batch Job with the name myJob doesn't exist""}]

This message is not entirely wrong…but extremely misleading. I think we should still return the entire list and rather mark the job as having an error.

Also returning an “404 Not Found” is misleading as well.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,207100800,,2014-12-16 10:56:10.099,46579,true,tmarshall(tmarshall),,,,"0|i000k7:",92,46281,,,Sprint 40,,,3.0,,"16/Dec/14 10:56 AM;iperumal;Merged as https://github.com/spring-projects/spring-xd/commit/1ebfe5fa7d07b1e9e41465f251f74a8d6603f1c7",,,,,,,,,,,,,,,,,
Parsing issues with kafka-bus.xml,XD-2310,60498,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,04/Nov/14 10:22 AM,16/Dec/14 9:49 AM,10/Jul/21 8:37 AM,05/Nov/14 11:25 AM,,,,,,,1.1 M1,,Runtime,,,,,0,,,,,,,"Using Kafka as a transport option yields:

[2014-11-04 12:18:30.528] boot - 24061 ERROR [main] --- SpringApplication: Application startup failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from URL location [classpath*:/META-INF/spring-xd/transports/kafka-bus.xml]
Offending resource: class path resource [META-INF/spring-xd/bus/message-bus.xml]; nested exception is org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 9 in XML document from URL [jar:file:/Users/mbogoevici/.gradle/caches/modules-2/files-2.1/org.springframework.xd/spring-xd-dirt/1.1.0.BUILD-SNAPSHOT/cf6a9a013dbde49d2925e2b5177d01a028379758/spring-xd-dirt-1.1.0.BUILD-SNAPSHOT.jar!/META-INF/spring-xd/transports/kafka-bus.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 26; Open quote is expected for attribute ""{1}"" associated with an  element type  ""value"".
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:70)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:248)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:199)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:184)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:141)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:110)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportedResources(ConfigurationClassBeanDefinitionReader.java:313)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:138)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:330)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:243)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:254)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:94)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:609)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:464)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:142)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.xd.dirt.server.SingleNodeApplication.run(SingleNodeApplication.java:63)
	at org.springframework.xd.demo.kafka.KafkaDemo.main(KafkaDemo.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)
Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 9 in XML document from URL [jar:file:/Users/mbogoevici/.gradle/caches/modules-2/files-2.1/org.springframework.xd/spring-xd-dirt/1.1.0.BUILD-SNAPSHOT/cf6a9a013dbde49d2925e2b5177d01a028379758/spring-xd-dirt-1.1.0.BUILD-SNAPSHOT.jar!/META-INF/spring-xd/transports/kafka-bus.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 26; Open quote is expected for attribute ""{1}"" associated with an  element type  ""value"".
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:398)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:335)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:242)
	... 31 more
Caused by: org.xml.sax.SAXParseException; lineNumber: 9; columnNumber: 26; Open quote is expected for attribute ""{1}"" associated with an  element type  ""value"".
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:441)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1436)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(XMLScanner.java:829)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanAttribute(XMLNSDocumentScannerImpl.java:439)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:255)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:428)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	... 36 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,210729600,XD-2356,,46572,false,tmarshall(tmarshall),,,,"0|i07vcf:",45950,46274,,,Sprint 38,,,1.0,,,,,,,,,,,,,,,,,,,
Intermittent TcpModulesTests.testTcpSink test failure,XD-2274,60339,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,pperalta,pperalta,24/Oct/14 6:52 AM,24/Oct/14 9:55 AM,10/Jul/21 8:37 AM,24/Oct/14 9:55 AM,,,,,,,1.0.2,1.1 M1,,,,,,0,,,,,,,"{noformat}
org.junit.ComparisonFailure: org.junit.ComparisonFailure: expected:<[Hi there!
]> but was:<[]>
org.junit.ComparisonFailure: expected:<[Hi there!
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at org.springframework.xd.shell.command.TcpModulesTests.testTcpSink(TcpModulesTests.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
(60 more lines...)
{noformat}

https://build.spring.io/browse/XD-JDK8-JOB1-1162/test",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,211680000,,2014-10-24 09:55:15.845,46413,false,tmarshall(tmarshall),,,,"0|i0017j:",197,46115,,,Sprint 37,,,1.0,,"24/Oct/14 7:55 AM;pperalta;https://github.com/spring-projects/spring-xd/pull/1248","24/Oct/14 9:55 AM;mark.fisher;merged to master:
https://github.com/spring-projects/spring-xd/commit/8f337e31725c383b6c844a4761482e759d80eedb

merged to 1.0.x:
https://github.com/spring-projects/spring-xd/commit/f46c47603ba28c678a53069225d5b670bee6d63c",,,,,,,,,,,,,,,,
Gemfire Source and Sink deployments cause OOME PermGen,XD-2248,60217,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,15/Oct/14 8:05 AM,15/Oct/14 9:54 AM,10/Jul/21 8:37 AM,15/Oct/14 9:54 AM,1.1 M1,,,,,,1.1 M1,,,,,,,0,,,,,,,"If you create more than 4 gemfire modules, the container will throw a OOME Permgen on Java 7.  

The solution is to put a technote into the wiki for the gemfire modules stating that for Java 7 they will need to add the following to environment.  
export JAVA_OPTS=""-XX:PermSize=256m""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,212544000,,,46291,true,tmarshall(tmarshall),,,,"0|i07wpr:",46172,45993,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Gemfire Source throws classnotfound ,XD-2245,60210,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,grenfro,grenfro,15/Oct/14 6:24 AM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,17/Oct/14 8:32 AM,,,,,,,1.1 GA,,,,,,,0,,,,,,,"* Steps to reproduce.
** Start admin & container.
** Follow the instructions from https://github.com/spring-projects/spring-xd/wiki/Sources#gemfire-source
*** When you post the message is when the stacktrace shows up in the container.

Copying the gemfire-7.0.2.jar to the lib directory will resolve the error.  
The stacktrace is attached.
",,,,,,,,,,,,,,,,,,,,,,,,"15/Oct/14 6:24 AM;grenfro;stacktrace.txt;https://jira.spring.io/secure/attachment/22327/stacktrace.txt",,,,,,,,,,,,2.0,212544000,,,46284,true,sabby(sabby),,,,"0|i00b1z:",1818,45986,,,Sprint 36,,,1.0,,,,,,,,,,,,,,,,,,,
Streams sending to Job Queue issue,XD-2244,60203,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Cannot Reproduce,,venkyz,venkyz,14/Oct/14 6:25 PM,30/Oct/14 5:18 PM,10/Jul/21 8:37 AM,30/Oct/14 5:18 PM,1.0.1,,,,,,,,Stream Module,,,,,0,,,,,,,"Look at the below Stream definition. This gets to ""deployed"" state even without the corresponding job. And then from there the same Job or any other Job can't be deployed and it goes to a hung state. 

Here is an example of the Stream definition:

stream create --name jobName --definition ""file --ref=true --dir=/tmp/springxdsource/dropbox --pattern=*.csv > queue:job:filetsjob-sample002"" --deploy
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,211161600,,2014-10-14 20:09:15.539,46277,true,tmarshall(tmarshall),,,,"0|i000xz:",154,45979,,,Sprint 38,,,1.0,,"14/Oct/14 8:09 PM;iperumal;I tried to replicate the issue. I could create stream/job as mentioned above in single-node and distributed-node successfully.
Is there a stack trace available? or, the log from the admin/container upon processing the deployment of job could help debugging this.","16/Oct/14 3:45 AM;venkyz;Thanks for trying! We will verify in 1.0.1 and get back to you. Thanks!","16/Oct/14 10:53 PM;venkyz;Verified this, and yes this is not an reproducible in 1.0.1. We can close this!","30/Oct/14 5:18 PM;sabby;This was fixed in 1.0.1 release. ",,,,,,,,,,,,,,
Stream Definition Calls Times-out often,XD-2243,60202,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Incomplete,,venkyz,venkyz,14/Oct/14 6:14 PM,14/Mar/15 5:59 PM,10/Jul/21 8:37 AM,14/Mar/15 5:59 PM,1.0.1,,,,,,,,Runtime,,,,,0,waiting-for-reporter,,,,,,"We are using the SpringXD REST endpoints for creating and managing streams. With Version 1.0.0 and 1.0.1, the Stream Definition API Call Times-out at times. Here is the log from the admin node.  Look at the 30000 ms in the logs. I have also left a few other lines around for context. 

API Call: http://<hostname>:9393/jobs/definitions

We need to come up with a fix for this. 

14 Oct 2014 17:40:28,062   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/sample, type: CHILD_ADDED
14 Oct 2014 17:40:28,198   INFO Deployer server.StreamDeploymentListener - Deploying stream Stream{name='sample'}
14 Oct 2014 17:40:38,847   INFO Deployer server.JobDeploymentListener - Deployment status for job 'filetsjob-sample002': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='filetsjob-sample002', type=job, label='filepollsomething'}' to container 'c77bc83e-bcba-4e4d-9753-e71f603566b1' timed out after 30000 ms}
14 Oct 2014 17:41:28,225   INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'sample': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='sample', type=sink, label='something'}' to container 'f877a8e8-08b3-44f9-8f73-bf163acb0cef' timed out after 30000 ms; Deployment of module 'ModuleDeploymentKey{stream='sample', type=source, label='http'}' to container 'c77bc83e-bcba-4e4d-9753-e71f603566b1' timed out after 30000 ms}
14 Oct 2014 17:41:28,227   INFO Deployer server.StreamDeploymentListener - Stream Stream{name='sample'} deployment attempt complete
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,199497600,,2014-10-29 13:09:32.304,46276,true,sabby(sabby),,,,"0|i000tj:",134,45978,,,,,,1.0,,"29/Oct/14 1:09 PM;grussell;I am having some difficulty reproducing this. Are you saying

{{http://<hostname>:9393/jobs/definitions}}

hangs after these timeouts?

Would it be possible to get (complete) DEBUG level logs from the admin and containers while reproducing this problem?

Thanks","30/Oct/14 8:27 AM;pperalta;This condition indicates that a container never replied to the admin when the admin asked a container to deploy a module. As Gary mentioned, having the complete set of logs from the admin and all containers will be very useful in troubleshooting this.","14/Mar/15 5:59 PM;sabby;Given this is an old issue and we haven't received the complete details wrt to the reported scenario, I'm closing this JIRA. [~venkyz] Please upgrade to 1.1 GA release and let us know if you're still seeing any anomaly. ",,,,,,,,,,,,,,,
NullPointerException while fetching runtime containers,XD-2242,60201,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Duplicate,,leochu,leochu,14/Oct/14 4:46 PM,14/Oct/14 8:48 PM,10/Jul/21 8:37 AM,14/Oct/14 8:48 PM,1.0.1,,,,,,,,Runtime,,,,,0,,,,,,,"In SpringXD ver 1.0.1, runtime/containers fetches additional runtime modules information for each container.  When a user queries the runtime containers while a stream is being deploy it throws a NullPointerException.

See below:

15:56:02,829  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: path=/deployments/streams/testCreateHTTPStream_postData1413327352991, type=CHILD_ADDED
15:56:02,935  INFO Deployer server.StreamDeploymentListener - Deploying stream Stream{name='testCreateHTTPStream_postData1413327352991'}
15:56:05,069 ERROR http-nio-9393-exec-9 rest.RestControllerAdvice - Caught exception while handling a request
java.lang.NullPointerException
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.updateDeploymentStatus(ZooKeeperModuleMetadataRepository.java:209)
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findAllByContainerId(ZooKeeperModuleMetadataRepository.java:313)
	at org.springframework.xd.dirt.container.store.ZooKeeperContainerRepository.findAllRuntimeContainers(ZooKeeperContainerRepository.java:339)
	at org.springframework.xd.dirt.rest.ContainersController.list(ContainersController.java:97)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:620)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:280)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:186)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:724)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,212544000,,2014-10-14 20:48:47.969,46275,true,tmarshall(tmarshall),,,,"0|i07wn3:",46160,45977,,,,,,1.0,,"14/Oct/14 8:48 PM;iperumal;Thanks for reporting. This is currently being tracked in https://jira.spring.io/browse/XD-2215 and we have PR: https://github.com/spring-projects/spring-xd/pull/1226.",,,,,,,,,,,,,,,,,
NoNode Exception in SpringXD Admin,XD-2241,60200,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Invalid,,venkyz,venkyz,14/Oct/14 4:24 PM,13/Nov/14 3:55 PM,10/Jul/21 8:37 AM,13/Nov/14 3:55 PM,1.0.1,,,,,,,,Runtime,,,,,0,,,,,,,"Sorry to set it ""Blocker""; but the problem makes SpringXD unusable. We are getting this weird, NoNode exception on the status ZNode. Example and Log given below. Once this happens, both streams and jobs cannot be deployed. For whatever reason the ""status"" znode goes missing.  

The only way for us to get the cluster back to working state, is to clear the zk znode /xd tree and restart spring-xd. At which point, we have to recreate all our streams and jobs back again.. 

/xd/deployments/streams/testCreateStream_SrcHttp_SinkFile1413234903170/status

NoNode Exception:

13 Oct 2014 14:16:16,044   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/testDestroyStream1413234903170, type: CHILD_REMOVED
13 Oct 2014 14:16:16,705   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/testListStreams1413234903170, type: CHILD_ADDED
13 Oct 2014 14:16:22,818   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/testListStreams1413234903170, type: CHILD_REMOVED
13 Oct 2014 14:16:23,585   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/testStreamSrcHttpTimeseriesSink1413234903170, type: CHILD_ADDED
13 Oct 2014 14:16:37,694   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/filetsjob-newjob001, type: CHILD_ADDED
13 Oct 2014 14:16:49,950   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/streams/testStreamSrcHttpTimeseriesSink1413234903170, type: CHILD_REMOVED
13 Oct 2014 14:16:54,490   INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'testCreateStream_SrcHttp_SinkFile1413234903170': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='testCreateStream_SrcHttp_SinkFile1413234903170', type=sink, label='file'}' to container 'd03bccd6-524b-4ff8-84d2-88f3f6daac42' timed out after 30000 ms; Deployment of module 'ModuleDeploymentKey{stream='testCreateStream_SrcHttp_SinkFile1413234903170', type=source, label='http'}' to container '52abf1c8-ba45-4994-8324-6079b03c670c' timed out after 30000 ms}
13 Oct 2014 14:16:54,493  ERROR Deployer server.InitialDeploymentListener - Exception caught while handling event
org.springframework.xd.dirt.zookeeper.ZooKeeperAccessException: KeeperErrorCode = NoNode for /xd/deployments/streams/testCreateStream_SrcHttp_SinkFile1413234903170/status
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:111)
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:95)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:185)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.onChildAdded(StreamDeploymentListener.java:100)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/testCreateStream_SrcHttp_SinkFile1413234903170/status
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:179)
        ... 7 more
13 Oct 2014 14:16:56,251   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/filetsjob-newjob001, type: CHILD_REMOVED
13 Oct 2014 14:17:08,179   INFO Deployer server.JobDeploymentListener - Deployment status for job 'filetsjob-newjob001': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='filetsjob-newjob001', type=job, label='filepolltimeseries'}' to container '244d5076-f69d-42a4-8110-3b046cea2667' timed out after 30000 ms}
13 Oct 2014 14:17:08,181  ERROR Deployer server.InitialDeploymentListener - Exception caught while handling event
org.springframework.xd.dirt.zookeeper.ZooKeeperAccessException: KeeperErrorCode = NoNode for /xd/deployments/jobs/filetsjob-newjob001/status
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:111)
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:95)
        at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:175)
        at org.springframework.xd.dirt.server.JobDeploymentListener.onChildAdded(JobDeploymentListener.java:99)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/filetsjob-newjob001/status
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
        at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:165)
        ... 7 more
13 Oct 2014 14:17:10,553   INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/filetsjob-newjob001, type: CHILD_ADDED

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,209952000,,2014-10-14 20:41:33.535,46274,true,tmarshall(tmarshall),,,,"0|i000tb:",133,45976,,,,,,1.0,,"14/Oct/14 8:41 PM;iperumal;Based on the stack trace, you seem to be using 1.0.0.RELEASE. Are you sure you have 1.0.1.RELEASE version of spring xd deployed in all the nodes of your cluster?","14/Oct/14 9:57 PM;venkyz;Thanks Ilayaperumal! We can try to reproduce this in 1.0.1 Release tomorrow. But do you know if there was a related bug that was fixed in 1.0.1? 

Thanks!","16/Oct/14 3:42 AM;venkyz;Here you go! This is from the latest SpringXD Version 1.0.1. Pls. let me know if I can help. 

16 Oct 2014 02:11:18,242  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: path=/deployments/jobs/filetsjob_testCreateStream_SrcFile_SomeSink_Distributed_Mode1413450622452, type=CHILD_REMOVED
16 Oct 2014 02:11:43,149  INFO Deployer server.JobDeploymentListener - Deployment status for job 'filetsjob_testCreateStream_SrcFile_Sink_Distributed_Mode1413450622452': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='filetsjob_testCreateStream_SrcFile_SomeSink_Distributed_Mode1413450622452', type=job, label='filepollSome'}' to container '79aa124f-b615-43e2-8a76-a3efd8cc0633' timed out after 30000 ms}
16 Oct 2014 02:11:43,151 ERROR Deployer server.InitialDeploymentListener - Exception caught while handling event
org.springframework.xd.dirt.zookeeper.ZooKeeperAccessException: KeeperErrorCode = NoNode for /xd/deployments/jobs/filetsjob_testCreateStream_SrcFile_SomeSink_Distributed_Mode1413450622452/status
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:113)
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:97)
        at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:186)
        at org.springframework.xd.dirt.server.JobDeploymentListener.onChildAdded(JobDeploymentListener.java:100)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/filetsjob_testCreateStream_SrcFile_SomeSink_Distributed_Mode1413450622452/status
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
        at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:176)
        ... 7 more
16 Oct 2014 02:11:46,412  INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'testCreateStream_SrcHttp_SomeSink_Distributed_Mode1413450622452': DeploymentStatus{state=failed,error(s)=Deployment of module 'ModuleDeploymentKey{stream='testCreateStream_SrcHttp_SomeSink_Distributed_Mode1413450622452', type=sink, label='Some'}' to container 'd72121e7-794b-41fa-ba25-f2ea795cdafa' timed out after 30000 ms; Module deployment returned null}
16 Oct 2014 02:11:46,414 ERROR Deployer server.InitialDeploymentListener - Exception caught while handling event
org.springframework.xd.dirt.zookeeper.ZooKeeperAccessException: KeeperErrorCode = NoNode for /xd/deployments/streams/testCreateStream_SrcHttp_SomeSink_Distributed_Mode1413450622452/status
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:113)
        at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:97)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:197)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.onChildAdded(StreamDeploymentListener.java:100)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
        at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/testCreateStream_SrcHttp_SomeSink_Distributed_Mode1413450622452/status
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
        at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
        at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
        at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:191)
        ... 7 more
16 Oct 2014 02:16:33,038  INFO DeploymentSupervisorCacheListener-0 server.ContainerListener - Path cache event: path=/containers/680528c4-834c-424a-beab-8489c0710996, type=CHILD_REMOVED
16 Oct 2014 02:16:33,039  INFO DeploymentSupervisorCacheListener-0 server.ContainerListener - Container departed: Container{name='680528c4-834c-424a-beab-8489c0710996', attributes={groups=, host=sjc1ibdetl4.research.ge.com, id=680528c4-834c-424a-beab-8489c0710996, ip=3.39.89.47, pid=80260}}
","16/Oct/14 10:18 AM;iperumal; Could you provide me the steps that you did to get this exception?
Also, do you have any previous streams/jobs data in ZK from using previous 1.0.0 release when you get started with 1.0.1 release?","16/Oct/14 11:06 PM;venkyz;No, this cluster uses a different zk ensemble/quorum. So this is not a carryover. 

Sorry, I don't have the steps to give it to you. This is getting triggered from our automation system. It creates a bunch of streams, posts data and destroys them. We get this problem once in a while. ","16/Oct/14 11:14 PM;venkyz;What we have also noticed, sometimes is there is some dangling zk nodes during destroy all. It cleans up with stream/job definition, but fails to remove the zk nodes from deployment tree. So if we check ""runtime modules"", it still shows some of those jobs/streams as allocated to containers. 

We are yet to find the exact steps to reproduce for this as well...","13/Nov/14 3:55 PM;sabby;There was a confusion with version usage. Please let us know if you find any anomalies with 1.0.1 or if you are able to reproduce.",,,,,,,,,,,
Fix incorrect IP Address associated with containers,XD-2239,60194,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,sabby,sabby,14/Oct/14 10:57 AM,27/Oct/14 7:57 AM,10/Jul/21 8:37 AM,27/Oct/14 7:57 AM,,,,,,,1.0.2,1.1 M1,,,,,,0,,,,,,,"The XD Container IP address displayed on both 'singlenode' and Distributed modes are incorrect both on _Shell_ as well as _Admin-UI_. 

*Example:*
Noticed IP address as 10.10.10.*

Following function in [RuntimeUtils|http://docs.spring.io/autorepo/docs/spring-xd/1.0.1.RELEASE/api/org/springframework/xd/dirt/util/RuntimeUtils.html] could be flawed:
{code}
public static String getIpAddress() {
	try {
		for(Enumeration<NetworkInterface> enumNic = NetworkInterface.getNetworkInterfaces();
				enumNic.hasMoreElements();) {
			NetworkInterface ifc = enumNic.nextElement();
			if (ifc.isUp()) {
				for (Enumeration<InetAddress> enumAddr = ifc.getInetAddresses();
						enumAddr.hasMoreElements(); ) {
					InetAddress address = enumAddr.nextElement();
					if (address instanceof Inet4Address && !address.isLoopbackAddress()) {
						return address.getHostAddress();
					}
				}
			}
		}
	}
	catch (IOException e) {
		// ignore
	}

	return ""unknown"";
}
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,211507200,XD-2054,2014-10-17 06:30:35.29,46268,true,tmarshall(tmarshall),,,,"0|i0014f:",183,45970,,,Sprint 37,,,5.0,,"17/Oct/14 6:30 AM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1242","27/Oct/14 7:57 AM;sabby;Code merged and documentation complete.",,,,,,,,,,,,,,,,
Cannot send null values as job parameters,XD-2236,60188,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,prietzler,prietzler,14/Oct/14 5:13 AM,07/Mar/15 11:01 AM,10/Jul/21 8:37 AM,,1.0.1,,,,,,Waiting for Triage,,Batch,,,,,0,,,,,,,"Cannot use a JSON null value as job paramter value, e.g. 

{code}
job launch --params {""name"":null}
{code}

The problem seems to be the usage of a HashTable, which does not allow null values.

{code}
Caused by: java.lang.NullPointerException
	at java.util.Hashtable.put(Hashtable.java:459)
	at java.util.Hashtable.putAll(Hashtable.java:523)
	at org.springframework.xd.dirt.plugins.job.ExpandedJobParametersConverter.getJobParametersForMap(ExpandedJobParametersConverter.java:191)
	at org.springframework.xd.dirt.plugins.job.ExpandedJobParametersConverter.getJobParametersForJsonString(ExpandedJobParametersConverter.java:177)
	at org.springframework.xd.dirt.plugins.job.JobLaunchRequestTransformer.toJobLaunchRequest(JobLaunchRequestTransformer.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:122)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:44)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:84)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:268)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	... 62 more 
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,212630400,,,46262,true,sabby(sabby),,,,"0|i07wl3:",46151,45964,,,,,,0.0,,,,,,,,,,,,,,,,,,,
Basic authentication realm is always 'null',XD-2235,60181,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,13/Oct/14 2:06 PM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,15/Oct/14 5:28 AM,1.0.1,,,,,,1.1 GA,,,,,,,0,,,,,,,"Besides the Basic authentication realm being always {{null}}, {{security.basic.realm}} is always ignored.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,212630400,XD-1694,,46255,false,sabby(sabby),,,,"0|i00b1r:",1817,45957,,,Sprint 36,,,1.0,,,,,,,,,,,,,,,,,,,
Incorrect port in resource manager address overwrite,XD-2234,60177,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Deferred,,bulmanp,bulmanp,13/Oct/14 8:55 AM,31/Oct/14 12:28 PM,10/Jul/21 8:37 AM,31/Oct/14 12:28 PM,1.0.1,,,,,,,,Configuration,,,,,0,spring,yarn,,,,,"the resource manager address overwrite is setting the port to 8032; the value cannot be set in servers.yml.  this occurs when pushing the config to hdfs and also when attempting to start the admin server on yarn.


 [ConfigurationFactoryBean] - Overwriting rmAddress=[0.0.0.0:8032] with rmAddress=[host:8032]

[root spring-xd-1.0.1.RELEASE-yarn]# ./bin/xd-yarn start admin

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.1.7.RELEASE)

2014-10-13 16:50:28,710 INFO [ConfiguringBeanFactoryPostProcessor] - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2014-10-13 16:50:28,724 INFO [ConfiguringBeanFactoryPostProcessor] - No bean named 'taskExecutor' has been explicitly defined. Therefore, a default SyncTaskExecutor will be created.
2014-10-13 16:50:30,311 INFO [SpringYarnConfiguration] - Enabling CLIENT for Yarn
2014-10-13 16:50:30,335 INFO [SpringYarnConfiguration] - We couldn't figure out if we could use existing configuration
2014-10-13 16:50:30,335 INFO [SpringYarnConfiguration] - Building configuration for bean 'yarnConfiguration'
2014-10-13 16:50:30,383 INFO [SpringYarnConfigBuilder] - Existing yarnConfiguration: null
2014-10-13 16:50:30,658 INFO [ConfigurationFactoryBean] - Overwriting fsUri=[hdfs://host:8020] with fsUri=[hdfs://host:8020]
2014-10-13 16:50:30,659 INFO [ConfigurationFactoryBean] - Overwriting rmAddress=[0.0.0.0:8032] with rmAddress=[host:8032]




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,211075200,,2014-10-27 20:38:55.524,46251,true,tmarshall(tmarshall),,,,"0|i0013r:",180,45953,,,Sprint 39,,,1.0,,"27/Oct/14 8:38 PM;thomas.risberg;Can you post the content of config/servers.yml? Also, would you any env vars set for the same properties?","28/Oct/14 7:03 AM;thomas.risberg;Also, if you just want to change the port (it defaults to 8032) then you can use:

{code}
    spring:
        hadoop:
            resourceManagerPort: 8050
{code}
","28/Oct/14 7:36 AM;thomas.risberg;You can find the full set of options here: http://docs.spring.io/spring-hadoop/docs/2.0.2.RELEASE/reference/html/yarn.html#yarn:bootconfigprops","31/Oct/14 12:28 PM;sabby;Please re-open if you're still facing any problem with relevant information as requested by Thomas. ",,,,,,,,,,,,,,
Fix the configuration problem with Filter and Transform modules,XD-2230,60156,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,sabby,sabby,10/Oct/14 11:24 AM,23/Oct/14 11:41 AM,10/Jul/21 8:37 AM,23/Oct/14 11:41 AM,,,,,,,1.0.2,1.1 M1,,,,,,0,,,,,,,"As a user, I'd like to leverage _propertieis-location_ parameter while using *Filter* or *Transform* modules so that I can load the user-defined properties included in the external properties file. 

Attempting to include the _propertieis-location_ attribute errors out - refer to the attachment.

It could also be beneficial to load user-defined properties through stream definition similar to deployment properties.

Example:
--script=myscript.groovy --variables=foo=bar,goo=gaz
",,,,,,,,,,,,,,,,,,,,,,,,"10/Oct/14 11:24 AM;sabby;Untitled.png;https://jira.spring.io/secure/attachment/22318/Untitled.png",,,,,,,,,,,,10.0,212889600,XD-2204,,46230,true,tmarshall(tmarshall),,,,"0|i000d3:",60,45932,,,Sprint 37,,,5.0,,,,,,,,,,,,,,,,,,,
When using --deletefile option for filejdbc all files are deleted before processing complete,XD-2229,60155,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,10/Oct/14 10:59 AM,10/Oct/14 11:00 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"In this scenario I copied 2 files (fakeFile.csv, anotherFile.csv) into the bar directory.  
* Created thew following job:
job create myjob2 --definition ""filejdbc --resources=file:bar/*.csv --names=name --tableName=people2 --initializeDatabase=true --commitInterval=1 --deleteFiles=true"" --deploy
* Then launched the job:
job launch myjob2

* The result was that the first file was processed, but then the module deleted all *.csv files in the directory before processing the 2nd file.  
* The net result was that the job failed and the 2nd file was not processed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,All files should be successfully processed.  And delete after the file has been processed.,,212889600,,,46229,true,tmarshall(tmarshall),,,,"0|i07wef:",46121,45931,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Need to set small commit level for Acceptance tests.  ,XD-2227,60140,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Won't Fix,grenfro,grenfro,grenfro,09/Oct/14 5:04 PM,15/Oct/14 8:36 AM,10/Jul/21 8:37 AM,15/Oct/14 8:36 AM,,,,,,,,,,,,,,0,,,,,,,"XD-2180 introduced a default commit level for jobs to be 1000, vs the original 100.  Now tests sporadically fail.  Need to set the --commitInterval for the tests to a small value.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,212544000,XD-1605,,46215,true,tmarshall(tmarshall),,,,"0|i07wbj:",46108,45917,,,,,,3.0,,"15/Oct/14 8:36 AM;grenfro;It was an environment issue, not related to the Jira story.  Reviewed the code, ran tests locally and reran the tests.  Code looked good, couldn't reproduce.",,,,,,,,,,,,,,,,,
Generated pom does not include spring boot 1.1. dependency,XD-2217,60112,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,mark.pollack,mark.pollack,07/Oct/14 1:30 PM,07/Oct/14 1:30 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,The change in XD 1.0.1 to use Spring Boot 1.1.7 meant that we can't pickup the boot dependency by importing the platform-bom.  Andy W's suggestion is to change the generated pom to refer to the platform-bom as a parent (not import) and then declare the explicit dependency on Boot 1.1.7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Download the generated pom for an XD snapshot artifact and verify that it was generated correctly,,213148800,,,46187,false,tmarshall(tmarshall),,,,"0|i07w73:",46088,45889,,,,,,5.0,,,,,,,,,,,,,,,,,,,
NPE in ContainerRedeploymentTests,XD-2215,60094,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,06/Oct/14 10:46 AM,08/May/15 10:07 AM,10/Jul/21 8:37 AM,17/Oct/14 8:40 AM,,,,,,,1.1 GA,,Runtime,,,,,0,,,,,,,"Running the distributed tests ({{-Drun_distributed_tests=true}}) against d109a3a and got the following:

{noformat}
   java.lang.NullPointerException
   	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.updateDeploymentStatus(ZooKeeperModuleMetadataRepository.java:209)
   	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findAllByContainerId(ZooKeeperModuleMetadataRepository.java:313)
   	at org.springframework.xd.dirt.container.store.ZooKeeperContainerRepository.findAllRuntimeContainers(ZooKeeperContainerRepository.java:339)
   	at org.springframework.xd.dirt.rest.ContainersController.list(ContainersController.java:97)
   	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
   	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   	at java.lang.reflect.Method.invoke(Method.java:483)
   	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
   	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
   	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
   	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
   	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
   	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
   	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)
   	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)
   	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
   	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852)
   	at javax.servlet.http.HttpServlet.service(HttpServlet.java:620)
   	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
   	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
   	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0,212889600,,,46169,true,sabby(sabby),,,,"0|i00b1j:",1816,45871,,,Sprint 36,,,2.0,,"10/Oct/14 12:25 PM;pperalta;https://github.com/spring-projects/spring-xd/pull/1226",,,,,,,,,,,,,,,,,
HTTPS Source Configuration issues,XD-2214,60091,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mbogoevici,mbogoevici,mbogoevici,06/Oct/14 7:14 AM,08/May/15 10:06 AM,10/Jul/21 8:37 AM,06/Oct/14 12:07 PM,1.0.1,,,,,,1.1 GA,,Configuration,,,,,0,,,,,,,"1. The sample {{httpSSLproperties}} file that is included in the distribution contains the line:

{quote}
keystore.passPhrase=secret
{quote}

The correct key value is {{keyStore.passPhrase}}. This issue causes HTTPS sources to deploy, but not bind to the port.

2. The password is always defaulting to ""secret""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,213321600,,,46166,false,sabby(sabby),,,,"0|i07w13:",46061,45868,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Exception in a tap will stop the tapped stream from sinking data,XD-2201,60056,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,dokeeffe,dokeeffe,02/Oct/14 8:38 AM,21/Nov/14 2:13 PM,10/Jul/21 8:37 AM,21/Nov/14 2:13 PM,1.0 GA,,,,,,1.0.2,1.1 M1,Runtime,,,,,0,PullRequest,,,,,,"Exception in a tap will stop the tapped stream from sinking data.

h2. Background
Running xd-singlenode.
We experienced this when streaming data from a rabbit queue to hdfs. The stream was tapped and we had a groovy processor on the tap stream. Any exceptions in the processor stopped the main stream from writing data to the hdfs sink.

h2. Steps to reproduce.
1: Create a groovy script that throws an exception in  modules/processor/scripts/exceptionthrower.groovy. Code below
{code}
/**
 * Custom processor to be wired into a tap to throw an exception.
 */
 throw new RuntimeException(""Error from processor"")
{code}
2: Create a sample main stream
{code}
xd:>stream create --name ticktock --definition ""time | log"" --deploy
{code}
3: Tail the log to confirm the data is going to the sink. We see  'sink.ticktock' appearing in the log as expected.
4: Add a tap to the stream that will throw an exception.
{code}
xd:>stream create --name exTap --definition ""tap:stream:ticktock > script --location=exceptionthrower.groovy | log"" --deploy
{code}
5: Tail the log and we see that there are no more 'sink.ticktock' strings being logged. Looks like the main stream is no longer sending messages to the sink.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,209952000,,2014-11-14 07:05:32.097,46131,false,tmarshall(tmarshall),,,,"0|i07vw7:",46039,45833,,,,,,5.0,,"03/Oct/14 3:39 AM;dokeeffe;Tried this again in a 2-container cluster and it looks like the ticks were being sent to the log sink this time","14/Nov/14 7:05 AM;grussell;When using a {{LocalMessageBus}} , we need to ignore failures on the wiretap {{PublishSubscribeChannel}}. We should also run taps on a separate thread so as not to impact the main stream thread.","14/Nov/14 8:26 AM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1286",,,,,,,,,,,,,,,
JsonStringToObjectTransformerTests fail on mac if local machine name is not in /etc/hosts,XD-2194,60036,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,01/Oct/14 5:35 AM,01/Oct/14 5:35 AM,10/Jul/21 8:37 AM,,,,,,,,,,Testing,,,,,0,,,,,,,"When running the gradlew build the JsonStringToObjectTransformerTests unit test failed.  The cause is enumerated below:
Caused by: com.gemstone.gemfire.internal.tcp.ConnectionException: While creating ServerSocket and Stub on port 0 with address glenns-mbp/192.168.1.254

If I added 127.0.0.1 glenns-mbp to my /etc/hosts the tests succeeded.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,213753600,,,46111,true,tmarshall(tmarshall),,,,"0|i07vsv:",46024,45813,,,,,,2.0,,,,,,,,,,,,,,,,,,,
xd-shell from 1.0.1 doesn't work with 1.0.0 GA admin,XD-2190,60009,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,kparikh,kparikh,29/Sep/14 12:05 PM,01/Oct/14 11:18 AM,10/Jul/21 8:37 AM,30/Sep/14 3:16 PM,1.0.1,,,,,,1.0.1,,CLI,,,,,0,,,,,,,"Targeting xd-shell from 1.0.1 to 1.0.0 GA admin server fails

server-unknown:>admin config info
  -------------  -------------------------------------------------------------
  Result         Unable to contact XD Admin Server at 'http://localhost:9393'.
  Target         http://localhost:9393
  Timezone used  Pacific Standard Time (UTC -8:00)
  -------------  -------------------------------------------------------------
-------------------------------------------------------------------------------
An exception ocurred during targeting:
java.lang.NullPointerException
    at org.springframework.xd.rest.client.impl.SpringXDTemplate.<init>(SpringXDTemplate.java:110)
    at org.springframework.xd.rest.client.impl.SpringXDTemplate.<init>(SpringXDTemplate.java:137)
    at org.springframework.xd.shell.command.ConfigCommands.target(ConfigCommands.java:106)
    at org.springframework.xd.shell.command.ConfigCommands.afterPropertiesSet(ConfigCommands.java:191)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,213753600,XD-233,2014-09-30 07:52:09.663,46084,true,tmarshall(tmarshall),,,,"0|i001e7:",227,45786,,,Sprint 35,,,1.0,,"30/Sep/14 7:52 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1207","30/Sep/14 3:16 PM;iperumal;Merged as https://github.com/spring-projects/spring-xd/commit/5a345dd233fc9b9ef04363f5a7583a91ac251eac",,,,,,,,,,,,,,,,
FilePollHdfs sporadically fails ,XD-2188,59989,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,grenfro,grenfro,grenfro,26/Sep/14 5:27 PM,26/Sep/14 5:27 PM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,Acceptance Testing,,,,,0,,,,,,,"Need to add a retry to the mkdir command, in the case that it fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214099200,XD-1605,,46064,true,tmarshall(tmarshall),,,,"0|i07viv:",45979,45766,,,,,,3.0,,,,,,,,,,,,,,,,,,,
testHdfsSink  sporadically fails because twitter data is written to file.,XD-2187,59988,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,grenfro,grenfro,grenfro,26/Sep/14 5:21 PM,26/Sep/14 5:28 PM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,Acceptance Testing,,,,,0,,,,,,,"The hdfs sink needs to have a unique stream name.  Because the twitterSearch test uses the ""defaultName"" and it may broadcast more than one message to the sink for the search.  So when the stream is destroyed the message is abandoned until hdfsTest starts up using the same 
""defaultName"" and the message is delivered to hdfs sink and thus the twitter data is written to the file.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214099200,XD-1605,,46063,true,tmarshall(tmarshall),,,,"0|i07vin:",45978,45765,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Module (re) deployment failed after ZK Cluster Ensemble lost quorum,XD-2176,59875,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,24/Sep/14 11:41 AM,24/Sep/14 11:41 AM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,Runtime,,,,,0,,,,,,,"When simulating a slow network by deploying a Zookeeper with 3 nodes.
* Zookeeper 1 (follower)was located at US-East-1
* Zookeeper 2 (follower) was in Sydney 
* Zookeeper 3 (Leader) was in Sydney
XD Admin and containers were running in US-East-1 Zone

In this case we simulated a loss of quorum by killing the zookeeper 2 (follower in Sydney).  All modules were undeployed.  When I restarted the zookeeper 2 all containers and admin recognized the ensemble was up and tried to redeploy the modules, but the stream was left in a ""Failed"" state.

Steps to reproduce: 
* Deploy Stream ""http|file""
* Start Data Flow to stream from JMeter
* Terminate ZK Follower in AU
* Restart ZK Follower in AU

The workaround is to undeploy and deploy the stream.",,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/14 11:41 AM;grenfro;nohup.out.failDeploy2;https://jira.spring.io/secure/attachment/22217/nohup.out.failDeploy2","24/Sep/14 11:41 AM;grenfro;zookeeper.out.failDeploy2;https://jira.spring.io/secure/attachment/22216/zookeeper.out.failDeploy2",,,,,,,,,,,,214272000,,,46028,true,tmarshall(tmarshall),,,,"0|i07v7z:",45930,45730,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Throughput in a stream with any processor,XD-2175,59864,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,kparikh,kparikh,23/Sep/14 5:35 PM,05/Dec/14 7:40 PM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Performance Testing,,,,,0,,,,,,,"One of the goal for a micro benchmark is to compare throughput difference  between two types of streams:
1. source | sink
2. source | processor | sink

For this test I used reactor-tcp source, throughput-sampler as sink and created a NoOp processor. Tests were performed on a single node container with direct binding turned on for all streams.

1. Throughput for ""source|sink""

{noformat}
stream create reactortcp --definition ""reactor-ip --transport=tcp --port=4000 | throughput-sampler""
stream deploy reactortcp --properties module.*.count=0
{noformat}

On my system I get following numbers:
Throughput sampled for 5000000 items: 345423/s in 14475ms elapsed time

2. Throughput for ""source|processor|sink""

Code for NoOpProcessor is available here:
https://github.com/parikhkc/xd-noop-processor

{noformat}
stream create reactornoop --definition ""reactor-ip --transport=tcp --port=5000 | noopprocessor | throughput-sampler""
stream deploy reactornoop --properties module.*.count=0
{noformat}

On the same system the throughput reduces to less then 70K/sec.
Throughput sampled for 5000000 items: 67250/s in 74349ms elapsed time

Yourkit shows 50% of CPU time on following thread:

{noformat}
* ringBuffer-17 [RUNNABLE] [DAEMON]
java.lang.reflect.Method.getParameterAnnotations() Method.java:770
org.springframework.xd.integration.reactor.net.NetServerInboundChannelAdapter$1.accept(Object) NetServerInboundChannelAdapter.java:53
reactor.net.AbstractNetChannel$3.accept(Event) AbstractNetChannel.java:131
reactor.net.AbstractNetChannel$3.accept(Object) AbstractNetChannel.java:128
reactor.event.routing.ArgumentConvertingConsumerInvoker.invoke(Consumer, Class, Object) ArgumentConvertingConsumerInvoker.java:73
reactor.event.routing.ConsumerFilteringEventRouter.route(Object, Event, List, Consumer, Consumer) ConsumerFilteringEventRouter.java:78
reactor.event.dispatch.AbstractLifecycleDispatcher.route(AbstractLifecycleDispatcher$Task) AbstractLifecycleDispatcher.java:64
reactor.event.dispatch.AbstractSingleThreadDispatcher$SingleThreadTask.run() AbstractSingleThreadDispatcher.java:50
reactor.event.dispatch.RingBufferDispatcher$3.onEvent(RingBufferDispatcher$RingBufferTask, long, boolean) RingBufferDispatcher.java:115
reactor.event.dispatch.RingBufferDispatcher$3.onEvent(Object, long, boolean) RingBufferDispatcher.java:112
com.lmax.disruptor.BatchEventProcessor.run() BatchEventProcessor.java:128
java.lang.Thread.run() Thread.java:745

{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214358400,XD-2062,,46017,true,tmarshall(tmarshall),,,,"0|i0813z:",46884,45719,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Shell does not report failed deploy attempt ,XD-2173,59861,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,23/Sep/14 11:03 AM,23/Sep/14 11:13 AM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,,,,,,0,,,,,,,"During the slow network tests the user undeployed a stream and then immediately redeployed the same stream to get the modules on different containers.  The deployment failed as reflected in the stacktrace below from the admin server, however the the shell did not report an error and the user could not deploy the stream.  
* The stream in question is ""http|log"" 
* The Shell did not report any error.  
* Stream list does show the state of the stream as failed. 
* executing a stream deploy fails with the following error:
    ** Command failed org.springframework.xd.rest.client.impl.SpringXDException: The stream named 'foo' is already deployed
 * Undeploy and deploy of the stream worked.
 
17:54:39,487  INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'foo': DeploymentStatus{state=failed,error(s)=org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/allocated/73f0a93d-e213-414d-8337-6c04409ec210/foo.source.http.1/status
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.writeDeployment(ModuleDeploymentWriter.java:205)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.writeDeployment(ModuleDeploymentWriter.java:163)
	at org.springframework.xd.dirt.server.StreamDeploymentListener.deployStream(StreamDeploymentListener.java:166)
	at org.springframework.xd.dirt.server.StreamDeploymentListener.onChildAdded(StreamDeploymentListener.java:100)
	at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
	at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
}
17:54:39,496  INFO Deployer server.StreamDeploymentListener - Stream Stream{name='foo'} deployment attempt complete",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214358400,,,46014,true,tmarshall(tmarshall),,,,"0|i07v53:",45917,45716,,,,,,3.0,,,,,,,,,,,,,,,,,,,
NoNodeException for job creation,XD-2170,59851,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,pperalta,pperalta,22/Sep/14 11:01 AM,01/Oct/14 11:18 AM,10/Jul/21 8:37 AM,29/Sep/14 8:26 AM,,,,,,,1.0.1,,Runtime,,,,,0,,,,,,,"The following exception was encountered by a few parties: for example https://gopivotal-com.socialcast.com/messages/21678398

{noformat}
ERROR LeaderSelector-0 leader.LeaderSelector - The leader threw an exception
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/NNNN/modules
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1586)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:214)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:203)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.pathInForeground(GetChildrenBuilderImpl.java:199)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:191)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:38)
	at org.springframework.xd.dirt.server.JobDeploymentListener.recalculateJobStates(JobDeploymentListener.java:197)
	at org.springframework.xd.dirt.server.DeploymentSupervisor$LeaderListener.takeLeadership(DeploymentSupervisor.java:389)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$WrappedListener.takeLeadership(LeaderSelector.java:536)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWork(LeaderSelector.java:398)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWorkLoop(LeaderSelector.java:443)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.access$100(LeaderSelector.java:63)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:244)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:238)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

No specific details on reproducing yet; although the Socialcast thread indicates:

{quote}
I only hit this when I have tried to deploy a job that fails deployment the first time
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,214358400,,,46004,true,tmarshall(tmarshall),,,,"0|i001dz:",226,45706,,,Sprint 35,,,5.0,,"23/Sep/14 12:54 PM;pperalta;When an admin process is elected leader/supervisor, it will query the state of all streams and jobs. It does this by iterating all streams under {{/xd/deployments/streams/stream-name}} and jobs under {{/xd/deployments/jobs/job-name}}. Under each path, it is expecting a modules node which contains all of the modules deployed for the stream or job.

The issue is that if no modules were deployed for the stream/job, that node will not exist because it is created lazily by the container. This is unlikely in the case of streams since a stream contains at least two modules, but is much more likely with jobs since they only contain one module.

The fix is to ensure that the {{/xd/deployments/streams/stream-name/modules}} path (and the same for jobs) is created upfront by the supervisor prior to creating the module deployment requests. This will allow the supervisor to see that no modules for the stream/job have been deployed and thus take appropriate action.","23/Sep/14 12:55 PM;pperalta;https://github.com/spring-projects/spring-xd/pull/1195",,,,,,,,,,,,,,,,
HDFS sink should honor --fileExtension parameter for bzip2 compressed files,XD-2151,59812,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,19/Sep/14 8:35 AM,14/Nov/14 2:09 PM,10/Jul/21 8:37 AM,14/Nov/14 2:08 PM,,,,,,,1.1 M1,,,,,,,0,,,,,,,"Looks like the --fileExtension isn't used when compressing files with bzip2, some use cases requirer bz2 instead of bzip2 as the extension. Also, '.bz2' should be the default extension. At the same time we should change the default gzip extension to '.gz'.",,,,,,,,,,,,,SHDP-416,,,,,,,,,,,,,,,,,,,,,,,,209865600,XD-234,,45969,false,tmarshall(tmarshall),,,,"0|i0010f:",165,45671,,,Sprint 38,,,3.0,,"07/Nov/14 1:28 PM;thomas.risberg;This was fixed with SHDP-416 and once we publish SHDP 2.1.0.M2 XD-2307 will bring in this change.","14/Nov/14 2:09 PM;thomas.risberg;The .bz2 or .gz extension will be appended after the fileExtension which is .txt by default",,,,,,,,,,,,,,,,
FilePollHdfsTest fails intermittently ,XD-2150,59811,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,grenfro,grenfro,grenfro,19/Sep/14 8:12 AM,22/Jan/15 9:40 AM,10/Jul/21 8:37 AM,22/Jan/15 9:40 AM,,,,,,,,,,,,,,0,,,,,,,"From time to time FilePollHdfsTest fails in the CI Acceptance Tests. The exception that is fired is as follows: 
java.lang.AssertionError: java.lang.AssertionError: The data returned from hadoop was different than was sent.   expected:<942b9f47-8169-4dc3-a2ba-3d8fab04a4dc
> but was:<null>

Need to investigate if this is a timing issue with the test (more than likely) or with the actual module.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,203904000,XD-1605,,45968,true,grenfro(grenfro),,,,"0|i07uxj:",45883,45670,,,,,,3.0,,"22/Jan/15 9:40 AM;grenfro;XD-2188 is the root cause.",,,,,,,,,,,,,,,,,
Preserve partition state on container restarts,XD-2137,59759,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,16/Sep/14 4:49 PM,16/Sep/14 4:49 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a user, I'd like to retain the data partitioning state so that when I restart the containers, I continue to write based on the original partitioning strategy. 

Currently, the state is not preserved; hence, on restarts the definition of partitioning strategy is lost due to different _hashCode()_.

*Design consideration:*
Mine through the container info to derive the ""partition index"" instead of relying on _hashCode()_.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214963200,XD-2134,,45917,true,tmarshall(tmarshall),,,,"0|i001pj:",278,45619,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Restrict the use of reserved keywords,XD-2136,59758,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,sabby,sabby,16/Sep/14 4:43 PM,16/Sep/14 4:43 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"As a user, I should not be allowed to create a custom module with a _reserved_ keywords so that I it will avoid confusions from seeing duplicate strings in deployment manifest.

*Example:*
We would like to avoid a _custom_ module name of *producer* to eliminate the confusion below:
{code}

xd:>stream deploy --name test1 --properties ""module.producer.producer.deliveryMode= PERSISTENT,module.log.criteria=groups.contains('group1')""

{code}

[List of available reserved keywords|https://github.com/spring-projects/spring-xd/wiki/Deployment#deployment-properties]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,214963200,XD-2134,,45916,true,tmarshall(tmarshall),,,,"0|i001pb:",277,45618,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Spring XD very poor performance when using redis as transport,XD-2117,59732,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,,pperalta,jbrunodomingues,jbrunodomingues,16/Sep/14 6:11 AM,02/Feb/16 5:07 PM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Runtime,,,,,1,,,,,,,"When using redis as transport bus there is a problem when using many streams and taps. Basically the maxTotal parameter of org.apache.commons.pool2.GenericObjectPool default is 8. After some streams are deployed it starts to occur concurrency problems hence the number of inbound redis channel adapters is larger than that number.

A more detailed explanation is in stackoverflow:

http://stackoverflow.com/questions/25851660/spring-xd-very-poor-performance-when-using-redis-as-transport",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,171417600,XD-2062,2016-02-02 17:07:20.959,45890,true,david_geary(david_geary),,,,"0|i000r3:",123,45592,,,,,,8.0,,"02/Feb/16 5:07 PM;david_geary;I think this can be solved by increasing the size of the Redis connection pool from the default value of 8, see my answer on the stackoverflow question. This hasnt been well documented in Spring XD, but there is already a an issue to improve the documentation - https://jira.spring.io/browse/XD-3733",,,,,,,,,,,,,,,,,
"Job stuck in ""deploying"" state when no containers are available",XD-2114,59653,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,leochu,leochu,09/Sep/14 4:13 PM,31/Oct/14 9:21 AM,10/Jul/21 8:37 AM,31/Oct/14 9:21 AM,1.0 GA,,,,,,1.1 M1,,Runtime,,,,,0,,,,,,,"A job gets stuck in ""deploying"" state when a job is deployed when there are no containers available.  When a container is started after this event, the job doesn't automatically start because of the job is stuck in the ""deploying"" state instead of the ""failed"" state.  

Refer to https://github.com/spring-projects/spring-xd/blob/193088dc164c73e07d7b4509de22241b28bf42b3/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/server/JobDeploymentListener.java

Update of the status in Zookeeper is inside the NoContainerException catch block.

This works correctly for streams.",,,,,,,,,,,,,XD-2286,,,,,,,,,,,"09/Sep/14 4:13 PM;leochu;Screen Shot 2014-09-09 at 4.12.01 PM.png;https://jira.spring.io/secure/attachment/22206/Screen+Shot+2014-09-09+at+4.12.01+PM.png",,,,,,,,,,,,,211248000,,2014-10-29 10:19:55.445,45811,true,tmarshall(tmarshall),,,,"0|i000cn:",58,45513,,,Sprint 37,,,5.0,,"29/Oct/14 10:19 AM;pperalta;https://github.com/spring-projects/spring-xd/pull/1255",,,,,,,,,,,,,,,,,
Redis aggregate-counter fails when end of interval is on the hour,XD-2113,59621,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,eric.bottard,eric.bottard,05/Sep/14 8:32 AM,29/Oct/14 8:07 AM,10/Jul/21 8:37 AM,29/Oct/14 8:07 AM,,,,,,,1.0.2,1.1 M1,,,,,,0,,,,,,,"curl http://localhost:9393/metrics/aggregate-counters/smartgrid_h_28_load_predicted\?resolution\=minute\&from\=2013-09-01T12:55:00.000Z\&to\=2013-09-01T13:00:00.000Z 

would return 0 as the last bucket, while

curl http://localhost:9393/metrics/aggregate-counters/smartgrid_h_28_load_predicted\?resolution\=minute\&from\=2013-09-01T12:55:00.000Z\&to\=2013-09-01T13:05:00.000Z

would correctly return the value for 13:00:00",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,211334400,,2014-10-29 08:07:11.204,45779,true,tmarshall(tmarshall),,,,"0|i0014v:",185,45481,,,Sprint 37,,,2.0,,"30/Sep/14 6:41 AM;eric.bottard;Note that fix is available on the springone branch","29/Oct/14 8:07 AM;sabby;Code changes were merged.",,,,,,,,,,,,,,,,
JDBC driver classpath issues for custom job modules,XD-2111,59563,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,thomas.risberg,thomas.risberg,03/Sep/14 8:07 AM,03/Sep/14 8:07 AM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Batch,,,,,0,,,,,,,"There is a class-loader issue when defining JDBC driver/pool dataSource for a custom job module. If I use the Tomcat DataSource it pulls the driver classes from /xd/lib, but if I use a DataSource class that's not loaded by the XD runtime like SimpleDriverDataSource then it pulls the jdbc driver jars from my job module's lib directory which I was expecting since the JDBC drivers I'm using are not delivered as part of XD. 

The whole class-loading scheme for custom modules needs either better documentation or improvement. Currently it's difficult to tell where classes will be loaded from and what classes are available on the server classpath and which classes have already been loaded. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,216172800,,,45721,false,tmarshall(tmarshall),,,,"0|i07tnb:",45675,45423,,,,,,3.0,,,,,,,,,,,,,,,,,,,
No way to set 'makeUnique' false when creating job in UI,XD-2109,59549,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,thomas.risberg,thomas.risberg,02/Sep/14 9:35 AM,05/Nov/14 10:12 AM,10/Jul/21 8:37 AM,05/Nov/14 10:12 AM,1.0 GA,1.1 M1,,,,,1.0.2,,,,,,,0,,,,,,,The resulting definition starts with --makeUnique=true even if the MakeUnique checkbox is unchecked. I can check and uncheck the box and the --make unique parameter isn't included. Since the default for this parameter is true the end result is the same. There doesn't seem to be a way to set --makeUnique=false.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,211075200,,2014-10-31 10:00:34.737,45707,true,tmarshall(tmarshall),,,,"0|i07vd3:",45953,45409,,,Sprint 38,,,3.0,,"31/Oct/14 10:00 AM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1259",,,,,,,,,,,,,,,,,
Remove unavailable jobs,XD-2099,59413,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,chucky81,chucky81,25/Aug/14 7:17 AM,04/Jul/15 11:56 AM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,Waiting for Triage,,,,,,,0,,,,,,,"If a job is deployed an the singlenode job is canceled, the job name cannot neither be reused nor destroyed.
See screenshots.
",,,,,,,,,,,,,,,,,,,,,,,,"25/Aug/14 7:21 AM;chucky81;jobShell.png;https://jira.spring.io/secure/attachment/22190/jobShell.png","25/Aug/14 7:21 AM;chucky81;jobsWeb.png;https://jira.spring.io/secure/attachment/22191/jobsWeb.png",,,,,,,,,,,,198115200,,2014-08-25 17:06:37.714,45571,true,sabby(sabby),,,,"0|i07ss7:",45535,45273,,,,,,1.0,,"25/Aug/14 5:06 PM;iperumal;It looks like the job you are trying to access was previously created on a job repository that is currently used by the new singlenode server. By any chance, are you pointing to the same batch repo again? By default it is $XD_HOME/data that hsqldb uses as the data directory for batch repo.","26/Aug/14 12:04 PM;chucky81;Yes, I've never changed the XD_HOME nor the batch repo. It happened several times.
1) Create and deploy a job
2) Exit singlenode with CTRL-C
3) Try either to create or destroy the previously job again (i.e. JobShell.png)","28/Jan/15 11:45 PM;chucky81;Any news about this bug?","07/Mar/15 11:24 AM;sabby;@Sandro: When the {{singlenode}} process is killed, the metadata remains within {{$XD_HOME/data}} so that the historical executions can be listed in admin-ui.

We don't recommend singlenode for production installations; however, if you would like to clean-up in order to reuse the same job name, as a workaround, you could: rm -rf $XD_HOME/data/* 

We could come up with a clean-up by job name as an option. Example: {code} job clean foo {code}","30/Mar/15 9:46 PM;chucky81;Thanks for the reply.
The solution with the clean up job sounds good, 'cause other people will struggle over the same thing as I did.",,,,,,,,,,,,,
singlestep-partition-support needs to allow grid size to be configurable,XD-2083,59359,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,mminella,mminella,20/Aug/14 9:05 AM,21/Sep/14 12:24 PM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Batch,,,,,0,batch,batch-remote-partitioning,,,,,"h3.  Narrative
As a developer, I need to be able to configure a partitioned job's grid size so that the correct number of partitions are created (the current code is hard coded to 1 for the grid size).

h3.  Acceptance Criteria
# Expose the gridSize attribute of the {{MessageChannelPartitionHandler}} as an option.

h3.  Assumptions
# Existing OOTB jobs should not be impacted by this given they don't use the grid size.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,217296000,,,45517,true,tmarshall(tmarshall),,,,"0|i001br:",216,45219,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Container does not fail if sharing same ports on same machine with another container.,XD-2081,59340,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,19/Aug/14 6:56 AM,19/Aug/14 6:57 AM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,Runtime,,,,,0,,,,,,,"* SHA baddfc24b08286a78392d5f565742c9bab5adfea
* EC2 Environment
** Look at Zookeeper Ec2 Deployment Test Topology.png for a view of the topology

h2. The test scenario 
# Can be duplicated with single server ZK ensemble
# Start Container on a EC2 instance.  Wait till it joins cluster
# Start 2nd container on same EC2 instance.

h2. Observed Behavior. 
# Container 1 starts normally
# Container 2 reports that failed to bind to address.  (shown in attached stack trace)
## But does not terminate 
## Shown as valid container when executing ""runtime containers"" command.
xd:>runtime containers
  Container Id                          Host              IP Address     PID   Groups  Custom Attributes

  0c88a300-9469-4f21-a256-7733259b13c7  ip-10-70-11-185   10.70.11.185   2061
  256c35b7-c9f4-43ba-81dd-e1bfff0fb7c1  ip-10-70-9-57     10.70.9.57     3604
  31fedc48-2762-4c45-8075-1dce64af5391  ip-10-110-186-48  *10.110.186.48*  2396  GROUPA
  524bb933-a8b5-4014-a0b5-06d4fa8b30c2  ip-10-2-209-174   10.2.209.174   2123
  e993026e-e2ac-4d16-9890-0786149d7b75  ip-10-110-186-48  *10.110.186.48*  2524  GROUPA
  f9437b15-1ee2-4827-99d4-e7957f9abdf2  ip-10-70-9-153    10.70.9.153    2366  GROUP0
 
",,,,,,,,,,,,,,,,,,,,,,,,"19/Aug/14 6:56 AM;grenfro;stacktrace.txt;https://jira.spring.io/secure/attachment/22181/stacktrace.txt",,,,,,,,,,,,,217468800,,,45498,true,tmarshall(tmarshall),,,,"0|i07sev:",45475,45200,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Modules do not redeploy properly when Zookeeper node is lost.,XD-2080,59327,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,grenfro,grenfro,18/Aug/14 11:29 AM,01/Oct/14 8:24 PM,10/Jul/21 8:37 AM,22/Aug/14 8:01 AM,1.0 GA,,,,,,1.0.1,,Runtime,Stream Module,,,,0,,,,,,,"* SHA baddfc24b08286a78392d5f565742c9bab5adfea
* EC2 Environment
** Look at Zookeeper Ec2 Deployment Test Topology.png for a view of the topology

h2. The test scenario 
# Bring up a up a 5 container 2 admin XD Cluster up using 3 ZK Server ensemble.
# Create ticktock  stream ""time|log""
# Deploy with --properties ""module.log.count=5""
# Kill one of the ZK Servers in the ensemble

h2. Observed Behavior. 
# In this particular scenario 3 containers were affected by killing (sudo kill <pid>) Zookeeper 2
# 2 Containers did not come back online even though they did show up in the runtime containers
 
h2. Timeline
# 14:08:21 deployed stream
# 14:09:10 kill server in ZK Ensemble
# After waiting a few seconds ran runtime Modules (*Note:* log2 is undeployed and log5 is then deployed)  :

xd:>runtime modules
  Module             Container Id                          Options                                     Deployment Properties
  -----------------  ------------------------------------  ------------------------------------------  ---------------------
  foo.sink.log.1     98a32c62-302a-484b-af9c-d670f2a3cfc2  {name=foo, expression=payload, level=INFO}  {count=5, sequence=1}
  foo.sink.log.2     9a3a1846-bac4-4504-81fd-151665d851dc  {name=foo, expression=payload, level=INFO}  {count=5, sequence=2}
  foo.source.time.1  9a3a1846-bac4-4504-81fd-151665d851dc  {fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}  {count=1, sequence=1}

xd:>runtime modules
  Module             Container Id                          Options                                     Deployment Properties
  -----------------  ------------------------------------  ------------------------------------------  ---------------------
  foo.sink.log.1     98a32c62-302a-484b-af9c-d670f2a3cfc2  {name=foo, expression=payload, level=INFO}  {count=5, sequence=1}
  foo.sink.log.5     5c454a39-fc4c-4bd3-b828-08cd837dc4ba  {name=foo, expression=payload, level=INFO}  {count=5, sequence=5}
  foo.source.time.1  9a3a1846-bac4-4504-81fd-151665d851dc  {fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}  {count=1, sequence=1}

xd:>runtime modules
  Module             Container Id                          Options                                     Deployment Properties
  -----------------  ------------------------------------  ------------------------------------------  ---------------------
  foo.sink.log.1     98a32c62-302a-484b-af9c-d670f2a3cfc2  {name=foo, expression=payload, level=INFO}  {count=5, sequence=1}
  foo.sink.log.5     5c454a39-fc4c-4bd3-b828-08cd837dc4ba  {name=foo, expression=payload, level=INFO}  {count=5, sequence=5}
  foo.source.time.1  9a3a1846-bac4-4504-81fd-151665d851dc  {fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}  {count=1, sequence=1}

xd:>runtime containers
  Container Id                          Host              IP Address     PID   Groups  Custom Attributes
  ------------------------------------  ----------------  -------------  ----  ------  -----------------
  0ba5e6ce-aedf-429c-b846-1cd4e32836c7  ip-10-2-209-174   10.2.209.174   1045
  5c454a39-fc4c-4bd3-b828-08cd837dc4ba  ip-10-70-9-57     10.70.9.57     1099
  707a968b-15a5-451f-9034-1e7f05cdcf97  ip-10-70-11-185   10.70.11.185   1055
  98a32c62-302a-484b-af9c-d670f2a3cfc2  ip-10-110-186-48  10.110.186.48  1056  GROUPA
  9a3a1846-bac4-4504-81fd-151665d851dc  ip-10-70-9-153    10.70.9.153    1020  GROUP0


h2.  Undeploy and redeploy stream 

# 14:16:42 Undeploy and redploy with module.log.count=5
xd:>runtime modules
  Module             Container Id                          Options                                     Deployment Properties
  -----------------  ------------------------------------  ------------------------------------------  ---------------------
  foo.sink.log.1     98a32c62-302a-484b-af9c-d670f2a3cfc2  {name=foo, expression=payload, level=INFO}  {count=5, sequence=1}
  foo.sink.log.2     5c454a39-fc4c-4bd3-b828-08cd837dc4ba  {name=foo, expression=payload, level=INFO}  {count=5, sequence=2}
  foo.sink.log.5     9a3a1846-bac4-4504-81fd-151665d851dc  {name=foo, expression=payload, level=INFO}  {count=5, sequence=5}
  foo.source.time.1  98a32c62-302a-484b-af9c-d670f2a3cfc2  {fixedDelay=1, format=yyyy-MM-dd HH:mm:ss}  {count=1, sequence=1}

xd:>runtime containers
  Container Id                          Host              IP Address     PID   Groups  Custom Attributes
  ------------------------------------  ----------------  -------------  ----  ------  -----------------
  0ba5e6ce-aedf-429c-b846-1cd4e32836c7  ip-10-2-209-174   10.2.209.174   1045
  5c454a39-fc4c-4bd3-b828-08cd837dc4ba  ip-10-70-9-57     10.70.9.57     1099
  707a968b-15a5-451f-9034-1e7f05cdcf97  ip-10-70-11-185   10.70.11.185   1055
  98a32c62-302a-484b-af9c-d670f2a3cfc2  ip-10-110-186-48  10.110.186.48  1056  GROUPA
  9a3a1846-bac4-4504-81fd-151665d851dc  ip-10-70-9-153    10.70.9.153    1020  GROUP0
  
# 14:21:06 undeploy foo

",,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/14 11:29 AM;grenfro;Zookeeper Ec2 Deployment Test Topology.png;https://jira.spring.io/secure/attachment/22169/Zookeeper+Ec2+Deployment+Test+Topology.png","18/Aug/14 11:29 AM;grenfro;admin1-nohup.out;https://jira.spring.io/secure/attachment/22176/admin1-nohup.out","18/Aug/14 11:29 AM;grenfro;admin2-nohup.out;https://jira.spring.io/secure/attachment/22175/admin2-nohup.out","18/Aug/14 11:29 AM;grenfro;container1-nohup.out;https://jira.spring.io/secure/attachment/22174/container1-nohup.out","18/Aug/14 11:29 AM;grenfro;container2-nohup.out;https://jira.spring.io/secure/attachment/22173/container2-nohup.out","18/Aug/14 11:29 AM;grenfro;container3-nohup.out;https://jira.spring.io/secure/attachment/22172/container3-nohup.out","18/Aug/14 11:29 AM;grenfro;container4-nohup.out;https://jira.spring.io/secure/attachment/22171/container4-nohup.out","18/Aug/14 11:29 AM;grenfro;container5-nohup.out;https://jira.spring.io/secure/attachment/22170/container5-nohup.out","18/Aug/14 11:29 AM;grenfro;zookeeper1.out;https://jira.spring.io/secure/attachment/22178/zookeeper1.out","18/Aug/14 11:29 AM;grenfro;zookeeper2.out;https://jira.spring.io/secure/attachment/22179/zookeeper2.out","18/Aug/14 11:29 AM;grenfro;zookeeper3.out;https://jira.spring.io/secure/attachment/22177/zookeeper3.out",,4.0,217209600,,,45485,true,tmarshall(tmarshall),,,,"0|i07sc7:",45463,45187,,,,,,5.0,,"22/Aug/14 8:01 AM;grenfro;In this case the PR for  XD-2004 resolves this issue.  Worked with Patrick and executed the single server failure in the ZK ensemble, loss of quorum, loss of ensemble tests  and they all passed with the updated PR.  
",,,,,,,,,,,,,,,,,
"""http | hdfs"" stream starts throwing exceptions after a few minutes ",XD-2078,59296,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,ssojoodi,ssojoodi,13/Aug/14 9:02 PM,08/Nov/14 3:05 AM,10/Jul/21 8:37 AM,22/Oct/14 11:50 AM,1.0 RC1,,,,,,1.0.2,1.1 M1,,,,,,0,,,,,,,"Environment:
- Hadoop Installation: PHD Service for PCF  (PHD1.1 based on Apache Hadoop 2.0.5:  2.0.5-alpha-gphd-2.1.0.0 ) running on vCHS
- Spring XD running in singlenode mode (version 1.0.0.RC1) on a vCHS VM

Steps to reproduce:
1- Setup a stream in Spring XD shell: ""http --port=9000 | hdfs --rollover=10M --idleTimeout=60000"" --deploy
2- Hit port 9000 every second with 1-10KB of JSON data
3- Observe the temp file being created in HDFS under /xd/<stream name>
4- Run `hadoop fs tail <file> --follow` to see that data is being written to HDFS

Expected result:
- HDFS sink continues to operate and eventually roll-over at 10MB

Actual:
- After about 2 minutes of successful HDFS writes, the HDFS sink crashes and starts throwing exceptions (see full log attached): 
""'java.io.IOException: All datanodes 192.168.109.61:50010 are bad. Aborting...""
- The temp file is never closed even after the stream is undeployed or destroyed.  

Here are some details of our investigation that may be useful:
- I start both the shell and the singlenode runner with --hadoopDistro phd1;  I also configured the hadoop fs namenode correctly in the XD shell.
- ""http <options> | file <options>"" work as expected; so does ""http <options> | log""
- ""time | hdfs"" does not show the same crash problem. Up until now only the http source combined with hdfs sink presents this problem
- Putting a 4-10MB file in HDFS via the `Hadoop fs put` commands in Spring XD worked fine; so it's not a disk limitation.
- This could be related to PHD service running on vCHS since supporting this configuration is fairly new. But it's only reproducable (consistently) with Spring XD's ""http | hdfs"" stream. ",,,,,,,,,,,,,,,,,,,,,,,,"13/Aug/14 9:02 PM;ssojoodi;singlenode.log.1.bck;https://jira.spring.io/secure/attachment/22167/singlenode.log.1.bck",,,,,,,,,,,,,210470400,,2014-08-15 08:39:25.756,45454,true,tmarshall(tmarshall),,,,"0|i000u7:",137,45156,,,Sprint 37,,,0.0,,"15/Aug/14 8:39 AM;mark.pollack;Thanks for reporting this.  Can you try with 1.0 GA release of Spring XD?  Also, is it possible to show a sample of the JSON you are sending - just to try and reproduce accurately.

","15/Aug/14 8:55 AM;mark.pollack;Thomas R. found this posting

https://groups.google.com/a/cloudera.org/forum/#!topic/cdh-user/kJRUkVxmfhw

maybe related to increasing ulimit.","19/Aug/14 8:10 AM;ssojoodi;You can find the sample data here: http://goo.gl/BlBdTQ  (accessible to Pivotal employees only)
- Each JSON array represents a call to the XD http source (every 0.2 seconds - 4 seconds):
[{ },{ },{ }, ]
[{ }, ]
...","19/Aug/14 8:14 AM;ssojoodi;This was the original stream definition.  I wonder if the options on hdfs sink are causing the issue:
>stream create hbhttptohdfs --definition ""http --port=9000 | hdfs --rollover=10M --idleTimeout=60000"" --deploy

Later this was defined as three streams (so we have some flat files):
hblog ""http --port=9000 | log"", 
hbfiletap ""tap:stream:hblog > file --name=hbbackup --dir=/root/heartbeat/"" and 
hbhdfstap ""tap:stream:hblog > hdfs --rollover=10M --idleTimeout=60000"" 

But the result was the same for the hdfs sink. Though payloads show up fine in the log and flat file","19/Aug/14 8:17 AM;mark.pollack;Thomas has requested access to the same PHD service infrastructure that you are using.  The type of error seems to indicate it maybe an issue on the hadoop cluster side of things.  Until we get access to a similar environment, I suggest not using the PHD Hadoop service.   Thanks for the additional information, that helps greatly.","19/Aug/14 8:23 AM;ssojoodi;@mark.pollack, we are setting up another XD env in distributed mode based on the 1.0 GA release on AWS this time.  We'll try and see if the same issue manifests itself. 

The caveat is that PHD 1.1 will be running on AWS (not PHD Service for PCF on vCHS).  The original env on vCHS will stay active and we can do further diagnosis on it if you wish.","21/Aug/14 9:04 AM;thomas.risberg;I worked a bit with Sina on this. Once the environment that showed this problem is available for further testing, we'll see if we can figure this out. I tried to reproduce on a separate PHD on PCF instance, but didn't see this error. I was posting manually to the http source, so it wasn't quite the same setup.
","17/Sep/14 6:37 AM;ssojoodi;We have moved production to another environment. The old one where we discovered the problem is now available for testing/diagnosis.","26/Sep/14 11:01 AM;thomas.risberg;I was able to reproduce this error though it took a while for it to show up.

set up two streams:
> stream create --name tomtweets --definition ""twitterstream | hdfs  --rollover=10M --idleTimeout=60000""
> stream create myfile --definition ""tail | hdfs --rollover=10M --idleTimeout=60000""

deployed both streams and then i did: 
$ cat largefile >> /tmp/xd/input/myfile

this ran OK for a while, but then I saw an error in the XD log:

{code}
12:39:32,435  WARN ResponseProcessor for block BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922 hdfs.DFSClient - DFSOutputStream ResponseProcessor exception  for block BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922
java.io.EOFException: Premature EOF: no length prefix available
	at org.apache.hadoop.hdfs.protocolPB.PBHelper.vintPrefixed(PBHelper.java:1340)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck.readFields(PipelineAck.java:116)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer$ResponseProcessor.run(DFSOutputStream.java:671)
12:40:55,866 ERROR taskExecutor-1 output.TextFileWriter - error closing
java.io.IOException: All datanodes 192.168.109.61:50010 are bad. Aborting...
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:941)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.processDatanodeError(DFSOutputStream.java:756)
	at org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:425)
{code}

I saw this in the logs on the datanode:

{code}
2014-09-26 17:36:22,375 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-5578894672657576314_1494
2014-09-26 17:36:31,513 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Exception for BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922
java.net.SocketTimeoutException: 20000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/192.168.109.61:50010 remote=/192.168.109.11:46349]
	at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)
	at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:159)
	at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.FilterInputStream.read(FilterInputStream.java:116)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:258)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:317)
	at java.io.DataInputStream.read(DataInputStream.java:132)
	at org.apache.hadoop.io.IOUtils.readFully(IOUtils.java:192)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.doReadFully(PacketReceiver.java:213)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.doRead(PacketReceiver.java:134)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.receiveNextPacket(PacketReceiver.java:109)
	at org.apache.hadoop.hdfs.server.datanode.BlockReceiver.receivePacket(BlockReceiver.java:424)
	at org.apache.hadoop.hdfs.server.datanode.BlockReceiver.receiveBlock(BlockReceiver.java:656)
	at org.apache.hadoop.hdfs.server.datanode.DataXceiver.writeBlock(DataXceiver.java:512)
	at org.apache.hadoop.hdfs.protocol.datatransfer.Receiver.opWriteBlock(Receiver.java:98)
	at org.apache.hadoop.hdfs.protocol.datatransfer.Receiver.processOp(Receiver.java:65)
	at org.apache.hadoop.hdfs.server.datanode.DataXceiver.run(DataXceiver.java:219)
	at java.lang.Thread.run(Thread.java:662)
2014-09-26 17:36:31,514 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: PacketResponder: BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922, type=LAST_IN_PIPELINE, downstreams=0:[]: Thread is interrupted.
2014-09-26 17:36:31,514 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: PacketResponder: BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922, type=LAST_IN_PIPELINE, downstreams=0:[] terminating
2014-09-26 17:36:31,514 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: opWriteBlock BP-1024819543-192.168.109.60-1406496333972:blk_5176155619750461509_1922 received exception java.net.SocketTimeoutException: 20000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/192.168.109.61:50010 remote=/192.168.109.11:46349]
2014-09-26 17:36:31,514 ERROR org.apache.hadoop.hdfs.server.datanode.DataNode: 0.phd-slave.default.phd-2.microbosh:50010:DataXceiver error processing WRITE_BLOCK operation  src: /192.168.109.11:46349 dest: /192.168.109.61:50010
java.net.SocketTimeoutException: 20000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/192.168.109.61:50010 remote=/192.168.109.11:46349]
	at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)
	at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:159)
	at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:129)
	at java.io.FilterInputStream.read(FilterInputStream.java:116)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:258)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:317)
	at java.io.DataInputStream.read(DataInputStream.java:132)
	at org.apache.hadoop.io.IOUtils.readFully(IOUtils.java:192)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.doReadFully(PacketReceiver.java:213)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.doRead(PacketReceiver.java:134)
	at org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.receiveNextPacket(PacketReceiver.java:109)
	at org.apache.hadoop.hdfs.server.datanode.BlockReceiver.receivePacket(BlockReceiver.java:424)
	at org.apache.hadoop.hdfs.server.datanode.BlockReceiver.receiveBlock(BlockReceiver.java:656)
	at org.apache.hadoop.hdfs.server.datanode.DataXceiver.writeBlock(DataXceiver.java:512)
	at org.apache.hadoop.hdfs.protocol.datatransfer.Receiver.opWriteBlock(Receiver.java:98)
	at org.apache.hadoop.hdfs.protocol.datatransfer.Receiver.processOp(Receiver.java:65)
	at org.apache.hadoop.hdfs.server.datanode.DataXceiver.run(DataXceiver.java:219)
	at java.lang.Thread.run(Thread.java:662)
2014-09-26 17:36:32,575 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-4132365566339562810_1906
2014-09-26 17:36:42,574 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_8474334079005459143_1586
2014-09-26 17:36:52,575 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-484045794738736399_1482
2014-09-26 17:36:54,934 INFO org.apache.hadoop.hdfs.server.datanode.DataNode.clienttrace: src: /192.168.109.11:46302, dest: /192.168.109.61:50010, bytes: 10488978, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_397450186_42, offset: 0, srvID: DS-1287506912-192.168.109.61-50010-1406496338391, blockid: BP-1024819543-192.168.109.60-1406496333972:blk_-4556564811258446582_1832, duration: 54167328804
2014-09-26 17:36:54,934 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: PacketResponder: BP-1024819543-192.168.109.60-1406496333972:blk_-4556564811258446582_1832, type=LAST_IN_PIPELINE, downstreams=0:[] terminating
2014-09-26 17:36:54,997 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Receiving BP-1024819543-192.168.109.60-1406496333972:blk_362560850469939152_1924 src: /192.168.109.11:46353 dest: /192.168.109.61:50010
2014-09-26 17:37:02,775 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_9211816047167897659_1758
2014-09-26 17:37:12,775 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_4501239615436392434_1796
2014-09-26 17:37:22,975 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_8395285511011218952_1490
2014-09-26 17:37:32,974 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-1288324345413730112_1370
2014-09-26 17:37:42,975 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_5117611913851676852_1784
2014-09-26 17:37:53,175 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_4127284189731453720_1450
2014-09-26 17:37:53,890 INFO org.apache.hadoop.hdfs.server.datanode.DataNode.clienttrace: src: /192.168.109.11:46353, dest: /192.168.109.61:50010, bytes: 10490142, op: HDFS_WRITE, cliID: DFSClient_NONMAPREDUCE_397450186_42, offset: 0, srvID: DS-1287506912-192.168.109.61-50010-1406496338391, blockid: BP-1024819543-192.168.109.60-1406496333972:blk_362560850469939152_1924, duration: 58891806951
2014-09-26 17:37:53,890 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: PacketResponder: BP-1024819543-192.168.109.60-1406496333972:blk_362560850469939152_1924, type=LAST_IN_PIPELINE, downstreams=0:[] terminating
2014-09-26 17:37:54,013 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Receiving BP-1024819543-192.168.109.60-1406496333972:blk_-4397136117867871880_1926 src: /192.168.109.11:46360 dest: /192.168.109.61:50010
2014-09-26 17:38:03,175 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-8681809995169903798_1874
2014-09-26 17:38:13,375 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_5558575301389096195_1692
2014-09-26 17:38:23,375 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_-9002073101468138747_1496
2014-09-26 17:38:33,375 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_4487138689902792262_1510
2014-09-26 17:38:43,574 INFO org.apache.hadoop.hdfs.server.datanode.BlockPoolSliceScanner: Verification succeeded for BP-1024819543-192.168.109.60-1406496333972:blk_6515633360056057121_1634
{code}

The namenode doesn't have any errors but the log for the same period is this:

{code}
2014-09-26 17:36:11,062 INFO org.apache.hadoop.hdfs.StateChange: DIR* completeFile: /xd/myfile/myfile-299.txt.tmp is closed by DFSClient_NONMAPREDUCE_397450186_42
2014-09-26 17:36:11,073 INFO org.apache.hadoop.hdfs.StateChange: BLOCK* allocateBlock: /xd/myfile/myfile-300.txt.tmp. BP-1024819543-192.168.109.60-1406496333972 blk_4003102070562615524_1920{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]}
2014-09-26 17:36:11,290 INFO BlockStateChange: BLOCK* addStoredBlock: blockMap updated: 192.168.109.61:50010 is added to blk_4003102070562615524_1920{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]} size 0
2014-09-26 17:36:11,291 INFO org.apache.hadoop.hdfs.StateChange: DIR* completeFile: /xd/myfile/myfile-300.txt.tmp is closed by DFSClient_NONMAPREDUCE_397450186_42
2014-09-26 17:36:11,301 INFO org.apache.hadoop.hdfs.StateChange: BLOCK* allocateBlock: /xd/myfile/myfile-301.txt.tmp. BP-1024819543-192.168.109.60-1406496333972 blk_5176155619750461509_1922{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]}
2014-09-26 17:36:54,931 INFO BlockStateChange: BLOCK* addStoredBlock: blockMap updated: 192.168.109.61:50010 is added to blk_-4556564811258446582_1832{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]} size 0
2014-09-26 17:36:54,935 INFO org.apache.hadoop.hdfs.StateChange: DIR* completeFile: /xd/tomtweets/tomtweets-43.txt.tmp is closed by DFSClient_NONMAPREDUCE_397450186_42
2014-09-26 17:36:54,935 INFO org.apache.hadoop.hdfs.server.namenode.FSEditLog: Number of transactions: 2886 Total time for transactions(ms): 107 Number of transactions batched in Syncs: 3266 Number of syncs: 3917 SyncTimes(ms): 1752 
2014-09-26 17:36:54,992 INFO org.apache.hadoop.hdfs.StateChange: BLOCK* allocateBlock: /xd/tomtweets/tomtweets-44.txt.tmp. BP-1024819543-192.168.109.60-1406496333972 blk_362560850469939152_1924{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]}
2014-09-26 17:37:53,886 INFO BlockStateChange: BLOCK* addStoredBlock: blockMap updated: 192.168.109.61:50010 is added to blk_362560850469939152_1924{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]} size 0
2014-09-26 17:37:53,890 INFO org.apache.hadoop.hdfs.StateChange: DIR* completeFile: /xd/tomtweets/tomtweets-44.txt.tmp is closed by DFSClient_NONMAPREDUCE_397450186_42
2014-09-26 17:37:54,007 INFO org.apache.hadoop.hdfs.StateChange: BLOCK* allocateBlock: /xd/tomtweets/tomtweets-45.txt.tmp. BP-1024819543-192.168.109.60-1406496333972 blk_-4397136117867871880_1926{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]}
2014-09-26 17:38:52,765 INFO BlockStateChange: BLOCK* addStoredBlock: blockMap updated: 192.168.109.61:50010 is added to blk_-4397136117867871880_1926{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]} size 0
2014-09-26 17:38:52,770 INFO org.apache.hadoop.hdfs.StateChange: DIR* completeFile: /xd/tomtweets/tomtweets-45.txt.tmp is closed by DFSClient_NONMAPREDUCE_397450186_42
2014-09-26 17:38:52,770 INFO org.apache.hadoop.hdfs.server.namenode.FSEditLog: Number of transactions: 2898 Total time for transactions(ms): 108 Number of transactions batched in Syncs: 3266 Number of syncs: 3923 SyncTimes(ms): 1784 
2014-09-26 17:38:52,822 INFO org.apache.hadoop.hdfs.StateChange: BLOCK* allocateBlock: /xd/tomtweets/tomtweets-46.txt.tmp. BP-1024819543-192.168.109.60-1406496333972 blk_-186035260921686250_1928{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]}
2014-09-26 17:39:50,000 INFO BlockStateChange: BLOCK* addStoredBlock: blockMap updated: 192.168.109.61:50010 is added to blk_-186035260921686250_1928{blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[192.168.109.61:50010|RBW]]} size 0
{code}

The file that failed is `/xd/myfile/myfile-301.txt.tmp` and it is still sitting there, no further data is written to it.
{code}
-rw-r--r--   3 root hadoop   10486222 2014-09-26 12:36 /xd/myfile/myfile-300.txt
-rw-r--r--   3 root hadoop          0 2014-09-26 12:36 /xd/myfile/myfile-301.txt.tmp
{code}

The other stream continues processing and writing to hdfs

","13/Oct/14 1:46 PM;thomas.risberg;Created an issue in SHDP to investigate what we could do - https://jira.spring.io/browse/SHDP-404","20/Oct/14 10:34 AM;sabby;We will have to document *--idleTimeout* setting to not exceed the HDFS timeout value. A sub-task will be created.","08/Nov/14 3:05 AM;jvalkeal;Per comments I wrote to SHDP-404, this problem goes away either using lower `idleTimeout` than what datanodes uses for sockets or setting same config values in `hadoop.properties`.

{code}
# Use servers.yml to change URI for namenode
# You can add additional properties in this file
dfs.client.socket-timeout=20000
dfs.datanode.socket.write.timeout=20000
{code}

I was able to reproduce this error and after above setting was applied, problem went away.",,,,,,
Problem using twittersearch when system where container is running has two network interfaces.,XD-2077,59294,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,thomas.risberg,thomas.risberg,13/Aug/14 1:17 PM,14/Aug/14 8:16 AM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Stream Module,,,,,0,,,,,,,"Problem using twittersearch when the system where the XD container is running has two network interfaces.

With the following config:

eth0      local network, resolves `hostname` 
eth1      internet network

I get an error deploying the stream:

{code}
12:08:22,965  WARN twitterSource-1-1 client.RestTemplate - GET request for ""https://stream.twitter.com/1.1/statuses/sample.json"" resulted in 401 (Authorization Required); invoking error handler
12:08:22,972 ERROR twitterSource-1-1 twitter.TwitterStreamChannelAdapter - Twitter authentication failed: 401 Authorization Required
{code}

If I flip the network interfaces to be:

eth0      internet network, resolves `hostname`
eth1      local network  

then it seems to work.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,217900800,,,45452,false,tmarshall(tmarshall),,,,"0|i07s53:",45431,45154,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Add --binary Option to MQTT Source,XD-2075,59244,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,10/Aug/14 10:00 AM,09/Jan/15 11:38 AM,10/Jul/21 8:37 AM,09/Jan/15 11:38 AM,,,,,,,1.1 RC1,,Stream Module,,,,,0,PullRequest,,,,,,See http://stackoverflow.com/questions/25226527/mqtt-source-spring-xd/25227531#25227531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,205027200,,2015-01-09 11:38:39.48,45402,false,mark.fisher(mark.fisher),,,https://github.com/spring-projects/spring-xd/pull/1355,"0|i081z3:",47024,45104,,,Sprint 41,,,1.0,,"05/Jan/15 3:48 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1355","09/Jan/15 11:38 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/48c9eac160a36c7d960a78e10810116db92cfac5",,,,,,,,,,,,,,,,
Modules that depend on HttpClient fail when running on YARN on Hadoop 2.4.x and later,XD-2074,59230,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,thomas.risberg,thomas.risberg,thomas.risberg,08/Aug/14 12:18 PM,31/Aug/15 5:46 PM,10/Jul/21 8:37 AM,,1.0 GA,,,,,,,,Runtime,Stream Module,,,,1,,,,,,,"Trying to run a twitterstream on YARN on HDP 2.1 and get the following:

{code}
14/08/08 12:12:50 ERROR server.ContainerRegistrar: Exception deploying module
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.integration.x.twitter.TwitterStreamChannelAdapter#0' defined in URL [file:./spring-xd-yarn-1.0.0.RELEASE.zip/modules/source/twitterstream/config/twitterstream.xml]: Cannot resolve reference to bean 'twitterTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in URL [file:./spring-xd-yarn-1.0.0.RELEASE.zip/modules/source/twitterstream/config/twitterstream.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:336)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:646)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:140)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1114)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1017)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:703)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:142)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:203)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:98)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:88)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:78)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployModule(ContainerRegistrar.java:231)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:577)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:447)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$800(ContainerRegistrar.java:95)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:826)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterTemplate' defined in URL [file:./spring-xd-yarn-1.0.0.RELEASE.zip/modules/source/twitterstream/config/twitterstream.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:278)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1114)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1017)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	... 41 more
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.social.twitter.api.impl.TwitterTemplate]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:164)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:125)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:270)
	... 50 more
Caused by: java.lang.NoClassDefFoundError: org/apache/http/impl/client/HttpClients
	at org.springframework.http.client.HttpComponentsClientHttpRequestFactory.<init>(HttpComponentsClientHttpRequestFactory.java:74)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1.<init>(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator.createRequestFactory(ClientHttpRequestFactorySelector.java:77)
	at org.springframework.social.support.ClientHttpRequestFactorySelector.getRequestFactory(ClientHttpRequestFactorySelector.java:52)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplateWithCulledMessageConverters(AbstractOAuth1ApiBinding.java:188)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.createRestTemplate(AbstractOAuth1ApiBinding.java:169)
	at org.springframework.social.oauth1.AbstractOAuth1ApiBinding.<init>(AbstractOAuth1ApiBinding.java:70)
	at org.springframework.social.twitter.api.impl.TwitterTemplate.<init>(TwitterTemplate.java:79)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	... 52 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,203817600,,2014-11-19 08:50:24.16,45388,false,sabby(sabby),,,,"0|i000ie:wrn0qzzzzzz000008u3ygfii",45368,45090,,,,,,5.0,,"08/Aug/14 2:18 PM;thomas.risberg;Turns out Hadoop 2.4.x includes httpclient-4.2.5.jar on the classpath so the Spring Social ClientHttpRequestFactory finds ""org.apache.http.client.HttpClient"" on the classpath and tries using this calling HttpComponentsClientHttpRequestFactory in Spring Framework which ""Requires Apache HttpComponents 4.3 or higher, as of Spring 4.0"" and it tries to load ""org.apache.http.impl.client.HttpClients"" which doesn't exists in the older version of HttpComponents. BOOM!","19/Nov/14 8:50 AM;dokeeffe;I have also come across this same issue when using a custom sink module that uses HttpClient. Its pretty much the same as this rest sink described in this improvement JIRA XD-2380.

I'm getting java.lang.ClassNotFoundException: org.apache.http.client.methods.HttpUriRequest.
I have packaged  httpclient-4.3.2.jar in the lib of my custom module but its loading the classes from somewhere else.","21/Nov/14 6:57 AM;dokeeffe;I think this JIRA could be renamed to something like: 
   ""Modules that depend on httpclient 4.2.x+ fail when running on YARN""","21/Nov/14 12:05 PM;thomas.risberg;What version of Hadoop are you running on?","22/Nov/14 4:19 AM;dokeeffe;Hi Thomas, Its 2.2 (2.2.0-gphd-3.1.0.0 )","19/Jan/15 12:37 AM;dokeeffe;Currently this is not a high priority for us as we are not using YARN at the moment.","23/Jan/15 8:43 AM;thomas.risberg;Created an issue with Spring Social - https://github.com/spring-projects/spring-social/issues/147",,,,,,,,,,,
FilePollHdfs sporadically fails to create files on remote machines,XD-2059,59163,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,grenfro,grenfro,grenfro,04/Aug/14 5:04 PM,28/Apr/15 5:46 AM,10/Jul/21 8:37 AM,,1.0.1,,,,,,,,Acceptance Testing,,,,,0,,,,,,,"Need to add a retry to the createDataFileOnRemote machine, because the creation of the test file on the remote machine fails from time to time.
Usually related to network issues.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,218678400,XD-1605,,45321,true,grenfro(grenfro),,,,"0|i07ren:",45312,45023,,,,,,3.0,,,,,,,,,,,,,,,,,,,
"Deploy,Undeploy,Deploy Acceptance tests run back to back causes exception.",XD-2045,59105,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,31/Jul/14 2:13 PM,14/Mar/15 3:58 PM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"SHA: 33de93797106c8dd413dfb08f2fdbbb4931b528c
Deployment: 1 Admin, 1 Container
DataStore: MySQL

A SpringXDException is thrown when running the  testJobDeployUndeployFlow test in Acceptance tests back to back.

# Ran the test once.  Success
# Ran the test a second time.
## The following exception is thrown: SpringXDException: Batch Job with the name deployundeployjob already exists 
## The XD_JOB_REGISTRY_STEP_NAMES & XD_JOB_REGISTRY still have job_name deployunderployjob still stored.
## The following Exception is seen on the admin server
### 20:45:59,214  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/deployundeployjob, type: CHILD_ADDED
20:46:04,741  INFO Deployer server.JobDeploymentListener - Deployment status for job 'deployundeployjob': DeploymentStatus{state=deployed}
20:46:05,436  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/deployundeployjob, type: CHILD_REMOVED
20:46:12,471  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/deployundeployjob, type: CHILD_ADDED
20:46:16,330  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/deployundeployjob, type: CHILD_REMOVED
20:46:17,819  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/deployundeployjob, type: CHILD_ADDED
20:46:17,832  INFO Deployer server.JobDeploymentListener - Deployment status for job 'deployundeployjob': DeploymentStatus{state=deployed}
20:46:17,834 ERROR Deployer server.InitialDeploymentListener - Exception caught while handling event
org.springframework.xd.dirt.zookeeper.ZooKeeperAccessException: KeeperErrorCode = NoNode for /xd/deployments/jobs/deployundeployjob/status
	at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:111)
	at org.springframework.xd.dirt.zookeeper.ZooKeeperUtils.wrapThrowable(ZooKeeperUtils.java:95)
	at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:175)
	at org.springframework.xd.dirt.server.JobDeploymentListener.onChildAdded(JobDeploymentListener.java:99)
	at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:217)
	at org.springframework.xd.dirt.server.InitialDeploymentListener$EventHandler.call(InitialDeploymentListener.java:186)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/deployundeployjob/status
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.server.JobDeploymentListener.deployJob(JobDeploymentListener.java:165)
	... 7 more

# Clear  XD_JOB_REGISTRY_STEP_NAMES & XD_JOB_REGISTRY tables and run the test a third time 
# Ran the test a third time.
## The following exception is thrown: SpringXDException: The job named 'deployundeployjob' is already deployed
## The following Exception was reported by the admin server.
### 21:18:29,355  WARN http-nio-9393-exec-4 zookeeper.ZooKeeperJobRepository - Exception while transitioning job 'deployundeployjob' state to undeploying
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/deployundeployjob/status
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1270)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:274)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:270)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:266)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:253)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:174)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:196)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:54)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeploy(AbstractInstancePersistingDeployer.java:77)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeployAll(AbstractInstancePersistingDeployer.java:103)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.deleteAll(AbstractInstancePersistingDeployer.java:111)
	at org.springframework.xd.dirt.rest.XDController.deleteAll(XDController.java:114)
	at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:885)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextFilterConfiguration$1.doFilterInternal(EndpointWebMvcAutoConfiguration.java:257)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:85)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:683)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1720)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1679)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
# Ran the test a fourth time.  Success
",,,,,,,,,,,,,XD-2671,,,,,,,,,,,,,,,,,,,,,,,,218678400,,,45264,true,sabby(sabby),,,,"0|i07r2v:",45259,44966,,,,,,5.0,,"31/Jul/14 2:30 PM;grenfro;* Waits did not have an effect on 1 admin, 1 container using MySql db
* Waits did have an effect running singlenode with hsqldb.
* Also looked at the zkClient /xd/jobs and saw no entry after each run.","31/Jul/14 2:32 PM;grenfro;Once XD-788 is Merge the tests looks like:
	@Test
	public void testJobDeployUndeployFlow() throws InterruptedException {
		waitForXD();
		FileJdbcJob job = new FileJdbcJob(FileJdbcJob.DEFAULT_DIRECTORY, FileJdbcJob.DEFAULT_FILE_NAME,
				FileJdbcJob.DEFAULT_TABLE_NAME, FileJdbcJob.DEFAULT_NAMES);
		job(""deployundeployjob"", job.toDSL());
		checkJob(""deployundeployjob"", job.toDSL(), true);
		undeployJob(""deployundeployjob"");
		checkJob(""deployundeployjob"", job.toDSL(), false);
		deployJob(""deployundeployjob"");
		checkJob(""deployundeployjob"", job.toDSL(), true);
		undeployJob(""deployundeployjob"");
	}","05/Aug/14 6:37 AM;grenfro;The workaround for this was to give each test run a unique job name.  
",,,,,,,,,,,,,,,
allow deletion of invalid streams,XD-2043,59092,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,,glingappa,glingappa,30/Jul/14 2:13 PM,14/Mar/15 5:05 PM,10/Jul/21 8:37 AM,,1.0 RC1,,,,,,,,CLI,,,,,0,,,,,,,"rabbit source was modified to accept addresses instead of host and existing stream definitions fail. we cannot even destroy the strream

Although this is still not GA wanted to file this to keep track of the issue.

Ex 

xd:>stream list
  Stream Name   Stream Definition                                                                                                                                                                                                                                                                Status
  ------------  -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  ----------
  logIngestion  rabbit --queues=demo --host=rhel64-5 | script --location=linemerge.groovy | hdfs --rollover=10M --idleTimeout=1000 --fileUuid=true --directory=/data/loganalysis --partitionPath=path(payload.split('')[1],dateFormat('yyyy/MM/dd/HH',payload.split('')[0],'yyyyMMddHHmmss'))  undeployed

xd:>stream destroy logIngestion
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module rabbit of type source:
    host: option named 'host' is not supported

xd:>stream deploy logIngestion
Command failed org.springframework.xd.rest.client.impl.SpringXDException: Error with option(s) for module rabbit of type source:
    host: option named 'host' is not supported

In general, destroying a stream should not validate the stream definition",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219110400,,,45251,true,sabby(sabby),,,,"0|i07qzr:",45245,44953,,,,,,0.0,,,,,,,,,,,,,,,,,,,
Restore JDK6 compatibility,XD-2038,59070,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,mark.fisher,mark.fisher,29/Jul/14 6:48 AM,29/Jul/14 9:11 AM,10/Jul/21 8:37 AM,29/Jul/14 9:11 AM,,,,,,,1.0 GA,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219283200,,,45229,false,tmarshall(tmarshall),,,,"0|i07qu7:",45220,44931,,,Sprint 32,,,2.0,,"29/Jul/14 8:12 AM;mark.fisher;submitted PR:
https://github.com/spring-projects/spring-xd/pull/1140",,,,,,,,,,,,,,,,,
Exclude HealthIndicatorAutoConfiguration,XD-2035,59062,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,28/Jul/14 8:24 PM,28/Jul/14 9:48 PM,10/Jul/21 8:37 AM,28/Jul/14 9:48 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"With HealthIndicatorAutoConfiguration, the health endpoint shows up:

{""status"":""DOWN"",""healthIndicator"":{""status"":""UP""},""rabbit"":{""status"":""DOWN"",""error"":""org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused""},""redis"":{""status"":""UP"",""version"":""2.8.9""},""mongo"":{""status"":""DOWN"",""error"":""org.springframework.dao.InvalidDataAccessResourceUsageException: Timed out while waiting to connect after 3894 ms; nested exception is com.mongodb.MongoTimeoutException: Timed out while waiting to connect after 3894 ms""},""db"":{""status"":""UP"",""database"":""HSQL Database Engine"",""hello"":1}}

We can only use vanilla health indicator, since other status may not be relevant.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219283200,,,45221,true,tmarshall(tmarshall),,,,"0|i07qtj:",45217,44923,,,Sprint 32,,,1.0,,,,,,,,,,,,,,,,,,,
Custom location for modules.yml not working,XD-2034,59061,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Works as Designed,iperumal,thomas.risberg,thomas.risberg,28/Jul/14 5:42 PM,29/Jul/14 7:58 AM,10/Jul/21 8:37 AM,29/Jul/14 7:58 AM,,,,,,,1.0 GA,,Runtime,,,,,0,,,,,,,"tried local xd-admin/xd-container after setting

{code}
export XD_MODULE_CONFIG_LOCATION=file:./spring-xd-1.0.0.BUILD-SNAPSHOT-yarn/config/
{code}

have my twitter stuff in modules.yml in that directory but not picked up by the twitterstream module

Also not working for me deploying on YARN, this used to work at some point, not sure how long ago I actually tested this part - M6/M7?

The setting used for YARN deployment:

{code}
-Dxd.module.config.location: ""file:./""
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,219283200,,2014-07-28 20:56:44.643,45220,false,tmarshall(tmarshall),,,,"0|i07qtb:",45216,44922,,,Sprint 32,,,3.0,,"28/Jul/14 8:56 PM;iperumal;It looks like the problem is with not copying the entire module config directory when configuring for twitterstream. Also, it turns out that,
XD_MODULE_CONFIG_LOCATION pointing to the complete directory structure is needed only for the modules that share common properties (rabbit, jdbc, twitter). otherwise, any other module properties require moduleType.<moduleName>.option syntax. ","28/Jul/14 8:58 PM;mark.pollack;Setting 
{code}
export XD_MODULE_CONFIG_LOCATION=file:/data/xd/config/modules/
{code}
works as well as
{code}
export XD_MODULE_CONFIG_LOCATION=file:///data/xd/config/modules/
{code}

worked.


",,,,,,,,,,,,,,,,
Connection pool settings need to be in their own section in server.yml,XD-2033,59060,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,28/Jul/14 4:09 PM,29/Jul/14 8:55 AM,10/Jul/21 8:37 AM,29/Jul/14 8:55 AM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"The 
#ConnectionPoolSettings

define this in the beginning - 

{code}
#spring:
#  datasource:
{code}

uncommenting this will override/invalidate any changes made earlier in the section since it defines spring:datasource again

should either be removed or in separate section",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219283200,,,45219,false,tmarshall(tmarshall),,,,"0|i07qt3:",45215,44921,,,Sprint 32,,,1.0,,"28/Jul/14 4:23 PM;thomas.risberg;Pull Request https://github.com/spring-projects/spring-xd/pull/1134",,,,,,,,,,,,,,,,,
Make producible media type to `application/json` for Job executions GET request endpoints ,XD-2030,59054,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,28/Jul/14 11:31 AM,28/Jul/14 8:54 PM,10/Jul/21 8:37 AM,28/Jul/14 8:54 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"As a temporary work around to fix XD-1935, make producible media type to 'application/json' for Job executions GET request endpoints.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,219283200,,,45213,true,tmarshall(tmarshall),,,,"0|i07qrr:",45209,44915,,,Sprint 32,,,1.0,,"28/Jul/14 11:38 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1127","28/Jul/14 2:30 PM;iperumal;Merged as:

https://github.com/spring-projects/spring-xd/commit/0f17203b40de25df7cedf62086f5602d72dd1c71","28/Jul/14 2:56 PM;iperumal;It looks like the same issue happens with three other REST endpoints; fixed them here:

https://github.com/spring-projects/spring-xd/pull/1131",,,,,,,,,,,,,,,
Admin UI: Deployment Status tooltip should close when the controller scope is lost,XD-2021,59022,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,25/Jul/14 2:24 PM,28/Jul/14 11:18 AM,10/Jul/21 8:37 AM,28/Jul/14 11:18 AM,,,,,,,1.0 GA,,UI,,,,,0,,,,,,,Please refer to: https://github.com/spring-projects/spring-xd/issues/1119,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219283200,,,45181,true,tmarshall(tmarshall),,,,"0|i07qlj:",45181,44883,,,Sprint 32,,,1.0,,"25/Jul/14 3:08 PM;iperumal;Submitted PR: https://github.com/spring-projects/spring-xd/pull/1123

We would revisit handling tooltip by introducing a directive instead of the current approach.","28/Jul/14 11:18 AM;iperumal;Merged as https://github.com/spring-projects/spring-xd/commit/bc5a2d3563a19c255c0eecfe972f0c956883f78d",,,,,,,,,,,,,,,,
Fix images alignment in reference pdf doc,XD-2018,59019,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,25/Jul/14 8:58 AM,25/Jul/14 4:45 PM,10/Jul/21 8:37 AM,25/Jul/14 4:44 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"The reference pdf doc has some of the images not aligned well within the document.

For the latest doc from snapshot build, please refer here:

http://repo.spring.io/libs-snapshot-local/org/springframework/xd/spring-xd/1.0.0.BUILD-SNAPSHOT/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,219542400,,,45178,true,tmarshall(tmarshall),,,,"0|i07qkv:",45178,44880,,,Sprint 32,,,3.0,,"25/Jul/14 4:44 PM;iperumal;Updated the misaligned images to use fixed width and verified the html and pdf docs.

Going forward any image getting added to the wiki can follow this.","25/Jul/14 4:45 PM;iperumal;Fixed with this commit: 

https://github.com/spring-projects/spring-xd/wiki/XD-Distributed-Runtime/f4b74bdecbc5ea7125b3148262a503f6af7814fc",,,,,,,,,,,,,,,,
Spring XD UI: end-to-end tests do not work,XD-2015,59012,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,fbiville,fbiville,25/Jul/14 5:06 AM,02/Oct/14 11:24 AM,10/Jul/21 8:37 AM,26/Aug/14 9:38 AM,,,,,,,1.0.1,,UI,,,,,0,,,,,,,"Currently, end-to-end tests of Spring XD UI will not run, as protractor relies on a non-existing chromedriver.exe file.

Either the configuration has to be removed from the Gruntfile or the necessary dependencies should be there.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,6.0,218419200,XD-2054,2014-08-05 09:13:03.408,45171,true,tmarshall(tmarshall),,,,"0|i001r3:",285,44873,,,Sprint 33,,,2.0,,"05/Aug/14 9:13 AM;hillert;[~fbiville] Are you trying to run the E2E tests on windows?","07/Aug/14 2:47 PM;hillert;This bug caused by multiple issues:

* The non-existence error of ""chromedriver.exe"" is a known issue. Made the documentation (README.md) clearer in that regard.
* Due to the recently introduced addition of *polling* the E2E tests were partially broken. Added *browser.ignoreSynchronization=true* to the tests as described at https://github.com/angular/protractor/issues/49
","07/Aug/14 2:51 PM;hillert;Submitted PR: https://github.com/spring-projects/spring-xd/pull/1151","07/Aug/14 2:56 PM;fbiville;Sorry for not replying earlier, I tried to run the E2E tests on my machine (Ubuntu 13.10).
Thanks for the doc clarification! I'll give it a try!","08/Aug/14 6:36 AM;hillert;Thanks!! If you get a chance please try with the PR - https://github.com/spring-projects/spring-xd/pull/1151 as there was another issue I fixed. ",,,,,,,,,,,,,
IllegalStateException when shutting down container,XD-2005,58961,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,pperalta,pperalta,23/Jul/14 10:45 AM,23/Jul/14 1:59 PM,10/Jul/21 8:37 AM,23/Jul/14 1:59 PM,,,,,,,1.0 GA,,Runtime,,,,,0,,,,,,,"{noformat}
13:23:57,643  INFO main-EventThread server.ContainerRegistrar - Undeploying module [ModuleDescriptor@1c736092 moduleName = 'log', moduleLabel = 'log', group = 'paymenttap', sourceChannelName = 'tap:job:payment', sinkChannelName = [null], sinkChannelName = [null], index = 0, type = sink, parameters = map[[empty]], children = list[[empty]]]
13:23:57,643 ERROR main-EventThread imps.CuratorFrameworkImpl - Watcher exception
java.lang.IllegalStateException: instance must be started before calling this method
at com.google.common.base.Preconditions.checkState(Preconditions.java:176)
at org.apache.curator.framework.imps.CuratorFrameworkImpl.delete(CuratorFrameworkImpl.java:344)
at org.springframework.xd.dirt.server.ContainerRegistrar.unregisterTap(ContainerRegistrar.java:292)
at org.springframework.xd.dirt.server.ContainerRegistrar.undeployModule(ContainerRegistrar.java:257)
at org.springframework.xd.dirt.server.ContainerRegistrar$StreamModuleWatcher.process(ContainerRegistrar.java:711)
at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:67)
at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
{noformat}

Sequence of events:
* Stream module ZK path is removed
* Event is raised
* ZK connection is closed
* Event handler causes module undeployment which includes unregistration of tap
* Since connection is closed, exception is thrown
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,219715200,,2014-07-23 13:59:41.566,45120,false,tmarshall(tmarshall),,,,"0|i07q4n:",45105,44822,,,Sprint 32,,,3.0,,"23/Jul/14 1:59 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/07e80a2226f9b9fb2f0522367bb47914b94e3dd9",,,,,,,,,,,,,,,,,
Containers stopped responding to Admin,XD-2004,58958,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,grenfro,grenfro,23/Jul/14 6:29 AM,02/Oct/14 11:24 AM,10/Jul/21 8:37 AM,22/Aug/14 1:13 PM,,,,,,,1.0.1,,,,,,,0,,,,,,,"SHA = a205d43f0b59e1984bf55c3368b031a373a03712
Environment: Rabbit Transport Test 1 admin 2 containers.

[Initial Event]
During the run of FileJdbcTest.testPartitionedFileJdbcJob the containers quit responding to the admin server.   After the initial failure at 12:26:46 no other streams can be deployed.  

[Secondary Event]
When shutting down one of the container 1 the following exception occurs on the admin server:
12:51:12,004  INFO DeploymentSupervisorCacheListener-0 server.DepartingContainerModuleRedeployer - Container departed: Container{name='5353dc4b-6068-49a0-8981-fa175869edf0', attributes={id=5353dc4b-6068-49a0-8981-fa175869edf0, host=domU-12-31-39-07-81-02, pid=1270, groups=, ip=10.209.130.240}}
12:51:12,004 ERROR DeploymentSupervisorCacheListener-0 cache.PathChildrenCache - 
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/allocated/5353dc4b-6068-49a0-8981-fa175869edf0
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1590)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:214)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:203)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.pathInForeground(GetChildrenBuilderImpl.java:199)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:191)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:38)
	at org.springframework.xd.dirt.server.DepartingContainerModuleRedeployer.deployModules(DepartingContainerModuleRedeployer.java:101)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:104)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

The attached container logs are only partial, because they have rolled over.  The attached admin log is fairly complete.
",,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/14 1:49 PM;grenfro;Log2ndtry.zip;https://jira.spring.io/secure/attachment/22146/Log2ndtry.zip","23/Jul/14 6:29 AM;grenfro;admin.log;https://jira.spring.io/secure/attachment/22134/admin.log","28/Jul/14 2:02 PM;grenfro;breakit.sh;https://jira.spring.io/secure/attachment/22147/breakit.sh","23/Jul/14 6:29 AM;grenfro;container1.log;https://jira.spring.io/secure/attachment/22136/container1.log","23/Jul/14 6:29 AM;grenfro;container2.log;https://jira.spring.io/secure/attachment/22135/container2.log","01/Aug/14 12:42 PM;pperalta;module-path-seq.png;https://jira.spring.io/secure/attachment/22157/module-path-seq.png",,,,,,,25.0,217123200,,2014-08-01 12:42:36.514,45117,true,tmarshall(tmarshall),,,,"0|i001q7:",281,44819,,,Sprint 33,,,12.0,,"23/Jul/14 6:35 AM;grenfro;Stopping container 2 I got the following Exception in the admin log.
13:33:16,004  INFO DeploymentSupervisorCacheListener-0 server.DepartingContainerModuleRedeployer - Container departed: Container{name='990e20e5-7a71-49ab-b9fe-aa0bd0cffbea', attributes={id=990e20e5-7a71-49ab-b9fe-aa0bd0cffbea, host=ip-10-72-66-107, pid=1200, groups=, ip=10.72.66.107}}
13:33:16,005 ERROR DeploymentSupervisorCacheListener-0 cache.PathChildrenCache - 
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/allocated/990e20e5-7a71-49ab-b9fe-aa0bd0cffbea
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1590)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:214)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:203)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.pathInForeground(GetChildrenBuilderImpl.java:199)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:191)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:38)
	at org.springframework.xd.dirt.server.DepartingContainerModuleRedeployer.deployModules(DepartingContainerModuleRedeployer.java:101)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:104)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
","23/Jul/14 6:45 AM;grenfro;After restarting containers, streams could be deployed again.","23/Jul/14 9:28 AM;grenfro;Patrick and I spent a little time going through the log.  The FileJdbcTest.testPartitionedFileJdbcJob does a quick series of stream creates to setup the environment for the job.   During this cycle of creating stream the container lost connectivity to the admin server and quickly reconnected.   This caused a quick deploy & undeploy of the dataSender4 and thus the failure.   Patrick can add more to this.  ","28/Jul/14 1:49 PM;grenfro;The logs from connection drop tests.","28/Jul/14 2:01 PM;grenfro;To Reproduce:

* On EC2 , deployed admin & 2 containers.  
* Each XD component was on its own instance.  
* The Admin instance hosted the ZK, Redis & Rabbit.
* Artifacts: Log2ndtry.zip & breakit.sh
** Log2ndtry.zip contains the logs
** breakit.sh the script used to close & open ports.

# from the shell: stream create foo --definition ""time|log"" --deploy
## Deployed 20:22:39,558
# Kicked off script to 
## close port 2181
## sleep 18 seconds
## open port 2181
# Container1 detected disconnect at 20:23:07, with the following warning: ConnectionStateManager-0 server.ContainerRegistrar - >>> disconnected container: 3fa30b73-3946-44bb-98b0-b081616e9594
# Stopped Both containers thus causing exceptions on the admin server at 20:24:36,005  & 20:25:28,006

Note: Before 20:16:01  you will see some artifacts from a previous run and should be ignored. ","01/Aug/14 12:42 PM;pperalta;There is a race condition that exists between the following entities:

# The container which creates the {{/xd/deployments/modules/allocated/container-id}} path. The container listens for new children on this path. When the admin supervisor picks this container for module deployment, it writes an entry as a child of this path.

# When the container departs, the supervisor will determine which modules the container was running by examining this path. (It is for this reason that it is not created as an ephemeral node.) Once its modules have been redeployed (if needed) that path is removed.

The race condition occurs when there is a momentary disconnect between the container and the ZooKeeper server. When the container reconnects it ensures that the {{.../modules/allocated/...}} path has been created. In the meantime the supervisor is still processing the event for container exit which takes a while because it has to redeploy that container's modules. When it is done processing the departure event, it removes the path that was just created by the container.

Since the path for deployment no longer exists, modules cannot be deployed to the container. In a small cluster, this can render streams undeployable since one of the modules will always target that container.

A proposed fix is to make the supervisor responsible for creating the module deployment path. This removes the race condition between the supervisor and the container. It means that only the supervisor can create and delete the path. A sequence diagram is attached.

At the moment this is causing a test failure in ContainerRedeploymentTests. Since it takes longer for a container to become available, modules are not distributed evenly in the case where a stream is deployed and all of the containers are started at once.
","05/Aug/14 9:17 AM;pperalta;After changing the supervisor to create the allocated modules path for each container, another race condition was exposed. It works as follows:

# Multiple containers join at the same time. Each creates an ephemeral node under {{/containers}}.
# The event for the first container is processed. That container has its allocated module path created.
# The event causes module deployments for pending modules.
# If the second, third, etc containers are targeted for deployment, those containers don't have their allocated modules path created yet (because they are handled when the event for those containers is emitted). This causes a {{NoNodeException}} upon deployment. ","22/Aug/14 1:13 PM;pperalta;https://github.com/spring-projects/spring-xd/pull/1161",,,,,,,,,,
Inconsistent failure while deploying job from admin UI,XD-1996,58906,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,iperumal,iperumal,18/Jul/14 4:02 PM,25/Jul/14 8:01 AM,10/Jul/21 8:37 AM,25/Jul/14 8:01 AM,,,,,,,1.0 GA,,UI,,,,,0,,,,,,,"After clicking 'deploy' on the definitions page, the 'deploy' button is deactivated and message says:

""An error occurred. We were unable to retrieve the module name from the provided definition ....""
and web console says:

TypeError: Cannot read property '0' of null
    at Object.getModuleNameFromJobDefinition (http://localhost:9393/admin-ui/scripts/shared/services.js:43:26)
    at http://localhost:9393/admin-ui/scripts/job/controllers/definition-deploy.js:35:36
    at wrappedCallback (http://localhost:9393/admin-ui/lib/angular/angular.js:11319:81)
    at http://localhost:9393/admin-ui/lib/angular/angular.js:11405:26
    at Scope.$eval (http://localhost:9393/admin-ui/lib/angular/angular.js:12412:28)
    at Scope.$digest (http://localhost:9393/admin-ui/lib/angular/angular.js:12224:31)
    at Scope.$apply (http://localhost:9393/admin-ui/lib/angular/angular.js:12516:24)
    at done (http://localhost:9393/admin-ui/lib/angular/angular.js:8204:45)
    at completeRequest (http://localhost:9393/admin-ui/lib/angular/angular.js:8412:7)
    at XMLHttpRequest.xhr.onreadystatechange (http://localhost:9393/admin-ui/lib/angular/angular.js:8351:11) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,219628800,,2014-07-21 09:05:41.865,45065,true,tmarshall(tmarshall),,,,"0|i00akv:",1741,44767,,,Sprint 32,,,3.0,,"21/Jul/14 9:05 AM;thomas.risberg;Same issue? Is XD-1996 fixed after these changes for XD-1976?","21/Jul/14 9:10 AM;iperumal;Seems like I got the error even after the fix in XD-1976.","25/Jul/14 8:01 AM;hillert;PR merged: https://github.com/spring-projects/spring-xd/pull/1115",,,,,,,,,,,,,,,
Step execution count is zero for the job execution list result,XD-1995,58905,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,18/Jul/14 3:18 PM,21/Jul/14 10:19 AM,10/Jul/21 8:37 AM,21/Jul/14 10:19 AM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"For the Job execution list, the step execution count for each job execution is always set to zero.

For a single job execution display command, the step execution count is set correctly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,219888000,,2014-07-21 10:19:19.488,45064,false,tmarshall(tmarshall),,,,"0|i00al3:",1742,44766,,,Sprint 32,,,4.0,,"18/Jul/14 4:42 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1090","21/Jul/14 10:19 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/80124d35d7d69d7b9f9adc8766adf9c275106d77",,,,,,,,,,,,,,,,
ParentLastURLClassLoader should set itself as context ClassLoader,XD-1994,58900,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,hillert,hillert,18/Jul/14 11:04 AM,24/Jul/14 8:32 AM,10/Jul/21 8:37 AM,24/Jul/14 8:32 AM,,,,,,,1.0 GA,,Runtime,,,,,0,,,,,,,"I am converting a Spring XD Sample (Batch notifications) from copying jars to (old way)

{code}
$XD_HOME/lib
{code}

To rather copy the module jar to (new preferred way)

{code}
$XD_HOME/modules/job/payment-import/lib
{code}

By doing so, I hit a classloader issue. Custom classes and resources are loaded in Spring XD using *org.springframework.xd.module.support.ParentLastURLClassLoader*.

However, the sample is initializing custom bean definitions and one of those creates a new *DataSource* using the *EmbeddedDatabaseBuilder*. This class however, under the hood, uses the *Default* class loader to load SQL scripts:

{code}
	public DefaultResourceLoader() {
		this.classLoader = ClassUtils.getDefaultClassLoader();
	}
{code}

Therefore, the SQL scripts are NOT FOUND.

*Possible Solution*

A possible solution seems to be for *ParentLastURLClassLoader* to set itself as the context ClassLoader for the current thread:

{code}
	public ParentLastURLClassLoader(URL[] classpath, ClassLoader parent) {
		...
		Thread.currentThread().setContextClassLoader(this);
		...
	}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,4.0,219715200,,2014-07-22 07:51:29.462,45059,true,tmarshall(tmarshall),,,,"0|i00akn:",1740,44761,,,Sprint 32,,,4.0,,"22/Jul/14 7:51 AM;eric.bottard;Not sure we want this to be the systematic default.

See the mail source (the xml file) where I ran into a similar problem and applied a fix on a module per module basis.

I guess the ultimate solution would be to have each module advertise whether it wants the context CL to be set (in the module properties file)","22/Jul/14 7:54 AM;hillert;Dug a bit deeper into the EmbeddedDatabaseBuilder - Unless I miss something - there is nothing to be addressed in Spring itself. The *EmbeddedDatabaseBuilder* is just a builder (not a bean definition; and as such there does not seem to be a point to have it implement *ResourceLoaderAware*). In fact the *InitializeDatabaseBeanDefinitionParser* does not even use the EmbeddedDatabaseBuilder. Thus, it seems that Java configuration has a few pitfalls regarding loading of resources.

The question is, is this just a specialty case? Should we just treat this as a documentation issue for Spring XD?

E.g. “For your custom modules, please ensure to always use/inject the *ResourceLoader* to load additional resource” (And mention the EmbeddedDatabaseBuilder as a specialty case, stating that users should not use the default constructor for Spring XD modules)

This works for the Batch Notification sample:

{code}
@Autowired 
	private ResourceLoader resourceLoader;

@Bean
	public DataSource dataSource() {
		final EmbeddedDatabaseBuilder builder = new EmbeddedDatabaseBuilder(resourceLoader);
		builder.setType(EmbeddedDatabaseType.HSQL)
			.addScript(""classpath:/org/springframework/batch/core/schema-drop-hsqldb.sql"")
			.addScript(""classpath:/org/springframework/batch/core/schema-hsqldb.sql"")
			.addScript(""classpath:/database/dbinit2.sql"");
		return builder.build();
	}
{code}
","24/Jul/14 8:32 AM;hillert;PR Merged: https://github.com/spring-projects/spring-xd/pull/1091
Commit: https://github.com/spring-projects/spring-xd/commit/faa8bfc1bf7765be1b1c851627ac851e809a484f",,,,,,,,,,,,,,,
Fix package tangle,XD-1986,58865,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,16/Jul/14 11:33 PM,17/Jul/14 12:24 PM,10/Jul/21 8:37 AM,17/Jul/14 12:24 PM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Fix package tangle issue reported here:

https://build.spring.io/browse/XD-SONAR-490",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,220233600,,,45024,true,tmarshall(tmarshall),,,,"0|i07pqf:",45041,44726,,,Sprint 31,,,1.0,,"17/Jul/14 7:21 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1084","17/Jul/14 12:24 PM;iperumal;Merged as:

https://github.com/spring-projects/spring-xd/commit/dd456afcc523d64284a869ada3709c09e4f525a4",,,,,,,,,,,,,,,,
Remove duplicate logger info on application started,XD-1980,58838,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,15/Jul/14 8:12 PM,16/Jul/14 8:04 AM,10/Jul/21 8:37 AM,16/Jul/14 8:04 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"When the admin, container and singlenode servers start, the ""Started ..Application"" log message is displayed everytime the spring application is created.
We should only log when the server is started eventually.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220406400,,,44997,true,tmarshall(tmarshall),,,,"0|i07pk7:",45013,44699,,,Sprint 31,,,1.0,,"15/Jul/14 8:22 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1079",,,,,,,,,,,,,,,,,
Change xd.sink logging level to INFO,XD-1979,58834,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,eric.bottard,grenfro,grenfro,15/Jul/14 5:29 PM,16/Jul/14 7:24 AM,10/Jul/21 8:37 AM,16/Jul/14 7:20 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"The log sink is not writing information to the log.
Not the solution but, when log4j.rootLogger is set to INFO, the log sink information is written to the log.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220406400,,,44993,true,tmarshall(tmarshall),,,,"0|i07pjb:",45009,44695,,,Sprint 31,,,2.0,,"16/Jul/14 6:25 AM;grenfro;I guess the question is, that do we want to set the default for logging to WARN, so that it will work out of the box or adjust the properties?
Or do I update my tests to set the level to WARN.  ",,,,,,,,,,,,,,,,,
Unable to deploy job in UI,XD-1976,58822,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,hillert,thomas.risberg,thomas.risberg,15/Jul/14 7:09 AM,21/Jul/14 9:05 AM,10/Jul/21 8:37 AM,16/Jul/14 9:34 AM,,,,,,,1.0 RC1,,UI,,,,,0,,,,,,,"This only happens when creating jobs via the CLI and deploying using the UI

On the job page:
http://localhost:9393/admin-ui/#/jobs/definitions

I click [Deploy] for a Job and get a screen asking for Container Match Criteria and Job Module Count - clicking on the [Deploy] button on that screen does nothing - I see this error reported:

Deploying Job Definition undefined angular.js:9778
TypeError: Cannot read property 'jobDefinition' of undefined
    at Scope.$scope.deployDefinition (http://localhost:9393/admin-ui/scripts/job/controllers/definition-deploy.js:52:78)
    at http://localhost:9393/admin-ui/lib/angular/angular.js:10567:21
    at http://localhost:9393/admin-ui/lib/angular/angular.js:18627:17
    at Scope.$eval (http://localhost:9393/admin-ui/lib/angular/angular.js:12412:28)
    at Scope.$apply (http://localhost:9393/admin-ui/lib/angular/angular.js:12510:23)
    at HTMLButtonElement.<anonymous> (http://localhost:9393/admin-ui/lib/angular/angular.js:18626:21)
    at HTMLButtonElement.jQuery.event.dispatch (http://localhost:9393/admin-ui/lib/jquery/jquery.js:5095:9)
    at HTMLButtonElement.elemData.handle (http://localhost:9393/admin-ui/lib/jquery/jquery.js:4766:46) angular.js:9778",,,,,,,,,,,,,,,,,XD-1996,,,,,,,,,,,,,,,,,,,,220406400,,2014-07-15 08:55:58.992,44981,true,tmarshall(tmarshall),,,,"0|i07pgv:",44998,44683,,,Sprint 31,,,5.0,,"15/Jul/14 8:55 AM;hillert;Verified. Steps to reproduce:

* create job definition via the Shell (This is important, via the UI this issue does not reproduce)

{code}
job create --name helloSpringXD --definition ""myjob""
{code}

* then try to deploy the definition via the UI
","15/Jul/14 11:36 AM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/1071",,,,,,,,,,,,,,,,
Undeploying twitterstream logs warning - MessageDeliveryException,XD-1975,58820,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,thomas.risberg,thomas.risberg,15/Jul/14 5:41 AM,23/Jul/14 8:11 AM,10/Jul/21 8:37 AM,23/Jul/14 8:11 AM,,,,,,,1.0 GA,,Runtime,,,,,0,PullRequest,,,,,,"To reproduce - 

Download recent snapshot - http://repo.spring.io/libs-snapshot-local/org/springframework/xd/spring-xd/1.0.0.BUILD-SNAPSHOT/spring-xd-1.0.0.BUILD-20140715.101224-1-dist.zip

Start XD and shell -
xd:>stream create --name tweets --definition ""twitterstream | file"" --deploy 
xd:>stream undeploy --name tweets 

(Note: the IllegalStateException has been fixed for RC1, still need to fix the MessageDeliveryException)

There is an error logged in the logs:

{code}
08:37:57,022  INFO DeploymentsPathChildrenCache-0 module.ModuleDeployer - deployed SimpleModule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]
08:38:02,685  INFO main-EventThread server.ContainerRegistrar - Undeploying module [ModuleDescriptor@4807f3e2 moduleName = 'twitterstream', moduleLabel = 'twitterstream', group = 'tweets', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map[[empty]], children = list[[empty]]]
08:38:02,687  INFO main-EventThread module.ModuleDeployer - removed SimpleModule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]
08:38:02,705  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar - Path cache event: /deployments/modules/allocated/fa40cb45-3c16-4b19-81e9-eb6d357d186d/tweets.source.twitterstream.1, type: CHILD_REMOVED
08:38:02,779  WARN task-scheduler-4 twitter.TwitterStreamChannelAdapter - Exception while reading stream.
org.springframework.messaging.MessageDeliveryException: Dispatcher has no subscribers for channel 'SimpleModule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]:default,container:0.to.discardDeletes'.
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:81)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor86.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy81.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.x.twitter.TwitterStreamChannelAdapter.doSendLine(TwitterStreamChannelAdapter.java:154)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:553)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:521)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.integration.MessageDispatchingException: Dispatcher has no subscribers
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:107)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	... 33 more
08:38:02,780  WARN task-scheduler-4 twitter.TwitterStreamChannelAdapter - Exception while reading stream, waiting for 250 ms before restarting
08:38:02,781 ERROR task-scheduler-4 handler.LoggingHandler - java.lang.IllegalStateException: java.lang.InterruptedException: sleep interrupted
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:258)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.waitLinearBackoff(AbstractTwitterInboundChannelAdapter.java:232)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.access$600(AbstractTwitterInboundChannelAdapter.java:54)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:174)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:254)
	... 11 more
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.0,219801600,,2014-07-22 13:57:16.128,44979,false,tmarshall(tmarshall),,,,"0|i00anb:",1752,44681,,,Sprint 32,,,3.0,,"15/Jul/14 1:01 PM;thomas.risberg;Saw similar error when using twittersearch too.

{code}
02:39:37,351  INFO http-nio-9393-exec-3 zookeeper.ZooKeeperStreamRepository - Undeploying stream jdbc_tweets
02:39:37,355  INFO main-EventThread server.ContainerRegistrar - Undeploying module [ModuleDescriptor@76f339c5 moduleName = 'twittersearch', moduleLabel = 'twittersearch', group = 'jdbc_tweets', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map['query' -> 'hadoop', 'outputType' -> 'application/json'], children = list[[empty]]]
02:39:37,356  INFO main-EventThread module.ModuleDeployer - removed SimpleModule [name=twittersearch, type=source, group=jdbc_tweets, index=0 @d66dcbe]
02:39:37,357  WARN task-scheduler-3 twitter.TwitterSearchChannelAdapter - Exception while reading stream.
java.lang.IllegalStateException: java.lang.InterruptedException: sleep interrupted
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:258)
	at org.springframework.integration.x.twitter.TwitterSearchChannelAdapter.doSendLine(TwitterSearchChannelAdapter.java:144)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:553)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:521)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:254)
	... 16 more
02:39:37,359  WARN task-scheduler-3 twitter.TwitterSearchChannelAdapter - Exception while reading stream, waiting for 250 ms before restarting
02:39:37,360 ERROR task-scheduler-3 handler.LoggingHandler - java.lang.IllegalStateException: java.lang.InterruptedException: sleep interrupted
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:258)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.waitLinearBackoff(AbstractTwitterInboundChannelAdapter.java:232)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.access$600(AbstractTwitterInboundChannelAdapter.java:54)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:174)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.InterruptedException: sleep interrupted
	at java.lang.Thread.sleep(Native Method)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter.wait(AbstractTwitterInboundChannelAdapter.java:254)
	... 12 more
{code}
","22/Jul/14 1:57 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1099","23/Jul/14 8:11 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/c0e809d1e074f70841b8c8593c40846a686291d0",,,,,,,,,,,,,,,
Send count check occasionally fails on Acceptance tests.,XD-1969,58803,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grenfro,grenfro,14/Jul/14 1:25 PM,21/Jul/14 7:42 AM,10/Jul/21 8:37 AM,,,,,,,,,,,,,,,0,,,,,,,"Acceptance tests check the number of ""sends"" for each module after a single event is triggered.  This should entail that each module in the stream should have a send count of ""1"".  
Sporadically this test will fail on a sink, where the send count will be 2.  

The stacktrace below occurred on a singleAdmin/2 container deployment with rabbit as its transport and this stream was used: ""tcp --port=1234 |file --binary=true --mode=REPLACE""

java.lang.AssertionError: java.lang.AssertionError: Module file.1 for channel input did not have expected count  expected:<1> but was:<2>
java.lang.AssertionError: Module file.1 for channel input did not have expected count  expected:<1> but was:<2>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.springframework.xd.integration.util.XdEc2Validation.verifySendCounts(XdEc2Validation.java:349)
	at org.springframework.xd.integration.util.XdEc2Validation.verifySendCounts(XdEc2Validation.java:323)
	at org.springframework.xd.integration.util.XdEc2Validation.assertReceived(XdEc2Validation.java:140)
	at org.springframework.xd.integration.test.AbstractIntegrationTest.assertReceived(AbstractIntegrationTest.java:490)
	at org.springframework.xd.integration.test.TcpTest.testTCPSourceCRLF(TcpTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220492800,,,44962,true,tmarshall(tmarshall),,,,"0|i07ptr:",45056,44664,,,,,,5.0,,,,,,,,,,,,,,,,,,,
HdfsTest in Acceptance test fails sporadically (uses trigger as a source),XD-1968,58802,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,,grenfro,grenfro,14/Jul/14 1:04 PM,27/Jan/15 12:19 PM,10/Jul/21 8:37 AM,27/Jan/15 12:19 PM,,,,,,,,,,,,,,0,,,,,,,"HdfsTest uses the following stream to test the hdfs sink.  trigger --payload='foobar' | hdfs.  In the test failure, the test reported that no file was created on the hdfs.  

I'm wondering if the trigger fired before the hdfs was fully deployed. 

I would say that we set the phase to the maximum, but the problem is that by default it is MAX_INT.  Thoughts?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,203472000,,2014-07-15 08:53:40.519,44961,true,grenfro(grenfro),,,,"0|i07ptj:",45055,44663,,,,,,3.0,,"15/Jul/14 8:53 AM;mark.fisher;If the sink module were not deployed and not bound to the message bus, you would see a ""dispatcher has no subscribers"" error upon sending. Do you see that in the log anywhere?","15/Jul/14 9:49 AM;grenfro;In short the answer is no.  This is because these are fresh deploys from our binaries and thus our log rotation is very tight, so by the time I see the failed test the exception has already been lost.  I'll provision a cluster and configure logging and run the tests. ","27/Jan/15 12:19 PM;grenfro;Has not occurred in quite some time.",,,,,,,,,,,,,,,
Acceptance Tests fail to map some EC2 internal IPs to External IPs,XD-1962,58789,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,14/Jul/14 5:06 AM,18/Jul/14 9:10 AM,10/Jul/21 8:37 AM,14/Jul/14 5:01 PM,,,,,,,1.0 RC1,,Acceptance Testing,,,,,0,,,,,,,"The acceptance tests interrogate the XD-Admin for the containers that are available.  When on EC2 the admin only returns the internal EC2 addresses without the associated suffix of .ec2.internal or .compute-1.internal.   

[Defect]
The acceptance tests only handled the most common suffix of .ec2.internal.  Thus some CI Acceptance tests will fail because, because the container's IPs were not properly mapped.  Thus the acceptance tests should map internal to external IP without regard to the suffixes EC2 issues.

FYI
EC2 issues addresses in 2 different formats: ip-XXX-XXX-XXX-XXX.ec2.internal or domU-XX-XX-XX-XX-XX-XX.compute-1.internal.  The code only able to handle ip-XXX-XXX-XXX-XXX.ec2.internal.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,220579200,XD-1605,,44949,true,tmarshall(tmarshall),,,,"0|i07pbz:",44976,44651,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Prevent deploying modules of same type on a given stream/job when new leadership election happens,XD-1960,58778,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,11/Jul/14 4:58 PM,18/Jul/14 9:08 AM,10/Jul/21 8:37 AM,14/Jul/14 6:26 PM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"When the leadership election happens, the new deployment supervisor's container listener tries to deploy unallocated modules (via ArrivingContainerModuleRedeployer) into existing container that has the modules of the same type on a given stream/job already deployed.

Currently, on a given stream/job we don't allow more than one deployment of the same module type and there by avoiding any conflicting properties for the given module type.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,220492800,,,44938,true,tmarshall(tmarshall),,,,"0|i07p9j:",44965,44640,,,,,,2.0,,"11/Jul/14 5:00 PM;iperumal;One other reason why the module of the same module type on a given stream can not be deployed on the same container:

If JMX enabled, this would throw exception:


15:21:54,871 ERROR DeploymentsPathChildrenCache-0 boot.SpringApplication - Application startup failed
org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.integration.monitor.IntegrationMBeanExporter#0#41ea104d-d4ed-4238-9e0d-154931f3f042'; nested exception is org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=input, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=input'; nested exception is javax.management.InstanceAlreadyExistsException: xd.s:module=log.1,component=MessageChannel,name=input
     at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:176)
     at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:51)
     at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:346)
     at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:149)
     at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:112)
     at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:773)
     at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
     at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)
     at org.springframework.boot.SpringApplication.run(SpringApplication.java:320)
     at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:142)
     at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:191)
     at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:127)
     at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:117)
     at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:107)
     at org.springframework.xd.dirt.server.ContainerRegistrar.deployModule(ContainerRegistrar.java:231)
     at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:559)
     at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:442)
     at org.springframework.xd.dirt.server.ContainerRegistrar.access$800(ContainerRegistrar.java:95)
     at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:807)
     at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
     at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
     at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
     at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
     at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
     at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
     at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
     at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
     at java.util.concurrent.FutureTask.run(FutureTask.java:262)
     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
     at java.util.concurrent.FutureTask.run(FutureTask.java:262)
     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
     at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=input, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=input'; nested exception is javax.management.InstanceAlreadyExistsException: xd.s:module=log.1,component=MessageChannel,name=input
     at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:609)
     at org.springframework.integration.monitor.IntegrationMBeanExporter.registerChannels(IntegrationMBeanExporter.java:837)
     at org.springframework.integration.monitor.IntegrationMBeanExporter.doStart(IntegrationMBeanExporter.java:459)
     at org.springframework.integration.monitor.IntegrationMBeanExporter.start(IntegrationMBeanExporter.java:410)
     at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:173)
     ... 33 more
Caused by: javax.management.InstanceAlreadyExistsException: xd.s:module=log.1,component=MessageChannel,name=input
     at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)
     at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)
     at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)
     at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)
     at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)
     at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
     at org.springframework.jmx.support.MBeanRegistrationSupport.doRegister(MBeanRegistrationSupport.java:195)
     at org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:662)
     at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:605)
     ... 37 more","11/Jul/14 5:02 PM;iperumal;More than that, the arriving container module redeployer  should be considered for deploying unallocated modules only if it is actually **arriving**.
In this case, the existing container is considered as arriving container when the deployment supervisor changes.","11/Jul/14 5:50 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1060","14/Jul/14 6:26 PM;iperumal;Merged as:

https://github.com/spring-projects/spring-xd/commit/fbaa8a47ad609a995de4dff9c9b2ad08f9f1ff5c",,,,,,,,,,,,,,
NoNodeException after bouncing admin server,XD-1959,58777,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,11/Jul/14 1:44 PM,18/Jul/14 9:12 AM,10/Jul/21 8:37 AM,11/Jul/14 2:10 PM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"Steps to reproduce:

h6. 1. Clear out ZK
{code}
[zk: localhost:2181(CONNECTED) 0] rmr /xd
{code}

h6. 2. Start admin

h6. 3. Deploy stream
{code}
xd:>stream create --name tt --definition ""time|log"" --deploy 
{code}

Admin log:
{code}
16:38:10,537  INFO Deployer server.StreamDeploymentListener - Deploying stream Stream{name='tt'}
16:38:10,545  WARN Deployer server.StreamDeploymentListener - No containers available for deployment of module 'log' for stream 'tt'
16:38:10,547  WARN Deployer server.StreamDeploymentListener - No containers available for deployment of module 'time' for stream 'tt'
16:38:10,547  INFO Deployer server.StreamDeploymentListener - Deployment status for stream 'tt': DeploymentStatus{state=failed}
16:38:10,550  INFO Deployer server.StreamDeploymentListener - Stream Stream{name='tt'} deployment attempt complete
{code}

h6. 4. Shut down and restart admin. The following is logged:
{code}
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/tt/modules
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1590)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:214)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:203)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.pathInForeground(GetChildrenBuilderImpl.java:199)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:191)
	at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:38)
	at org.springframework.xd.dirt.server.StreamDeploymentListener.recalculateStreamStates(StreamDeploymentListener.java:207)
	at org.springframework.xd.dirt.server.DeploymentSupervisor$LeaderListener.takeLeadership(DeploymentSupervisor.java:352)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$WrappedListener.takeLeadership(LeaderSelector.java:536)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWork(LeaderSelector.java:398)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWorkLoop(LeaderSelector.java:443)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.access$100(LeaderSelector.java:63)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:244)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:238)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)

{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,220752000,,2014-07-11 14:10:09.196,44937,false,tmarshall(tmarshall),,,,"0|i07p9b:",44964,44639,,,Sprint 31,,,1.0,,"11/Jul/14 2:02 PM;pperalta;https://github.com/spring-projects/spring-xd/pull/1058","11/Jul/14 2:10 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/758dc513dac9080ec7b182b8eaafcedb8c8e5aea",,,,,,,,,,,,,,,,
filejdbc job broken in distributed mode,XD-1958,58776,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,grussell,thomas.risberg,thomas.risberg,11/Jul/14 12:59 PM,14/Jul/14 9:19 PM,10/Jul/21 8:37 AM,14/Jul/14 9:19 PM,,,,,,,1.0 RC1,,Batch,,,,,0,PullRequest,,,,,,"The filejdbc job is broken in distributed mode (redis and rabbit)

To reproduce:

export XD_TRANSPORT=rabbit

start xd-admin
start xd-container

start shell and create this job:

{code}
>job create mydata --definition ""filejdbc --names=col1,col2,col3 --resources=file:///home/trisberg/Test/input/*.csv --initializeDatabase=true"" --deploy
>job launch mydata
{code}

results in JOB starting but never completing:

{code}
>job execution list
  Id  Job Name  Start Time                            Step Execution Count  Execution Status  Deployment Status  Definition Status
  --  --------  ------------------------------------  --------------------  ----------------  -----------------  -----------------
    0  mydata      2014-07-11 15:44:33 America/New_York  0                     STARTED           Deployed           Exists
{code}

Steps:

{code}
Step Id	Step Name	Reads	Writes	Commits	Rollbacks	Duration	Status	Details
0	step1-master	0	0	0	0	-1405349644032 ms	EXECUTING	
1	step1-master:partition0	292	292	3	0	302 ms	COMPLETED	
2	step1-master:partition1	292	292	3	0	203 ms	COMPLETED	
3	step1-master:partition2	292	292	3	0	193 ms	COMPLETED	
{code}

When using Redis, I also get this stacktrace in container:

{code}
15:40:51,220  INFO DeploymentsPathChildrenCache-0 boot.SpringApplication - Started application in 1.965 seconds (JVM running for 66.949)
15:40:51,220  INFO DeploymentsPathChildrenCache-0 core.SimpleModule - initialized module: SimpleModule [name=filejdbc, type=job, group=job1, index=0 @64a28a58]
15:40:51,233  INFO DeploymentsPathChildrenCache-0 redis.RedisMessageBus - binding requestor: job1.0
15:40:51,236  INFO DeploymentsPathChildrenCache-0 redis.RedisMessageBus - binding replier: job1.0
15:40:51,243  INFO DeploymentsPathChildrenCache-0 module.ModuleDeployer - deployed SimpleModule [name=filejdbc, type=job, group=job1, index=0 @64a28a58]
15:40:57,110 ERROR inbound.job1.0-redis:queue-inbound-channel-adapter1 redis.RedisMessageBus$1 - Failed to deliver message; retries exhausted; message sent to queue 'ERRORS:name'
org.springframework.messaging.MessageHandlingException: error occurred in message handler [org.springframework.integration.aggregator.AggregatingMessageHandler#0]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy84.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy78.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:251)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:247)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1.doSend(RedisMessageBus.java:247)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:211)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:290)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.IllegalStateException: Null correlation not allowed.  Maybe the CorrelationStrategy is failing?
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler.handleMessageInternal(AbstractCorrelatingMessageHandler.java:383)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 60 more
15:41:00,129 ERROR inbound.job1.0-redis:queue-inbound-channel-adapter1 redis.RedisMessageBus$1 - Failed to deliver message; retries exhausted; message sent to queue 'ERRORS:name'
org.springframework.messaging.MessageHandlingException: error occurred in message handler [org.springframework.integration.aggregator.AggregatingMessageHandler#0]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy84.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor89.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy78.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:251)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1$1.doWithRetry(RedisMessageBus.java:247)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:263)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:168)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$1.doSend(RedisMessageBus.java:247)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:211)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:290)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.IllegalStateException: Null correlation not allowed.  Maybe the CorrelationStrategy is failing?
	at org.springframework.util.Assert.state(Assert.java:385)
	at org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler.handleMessageInternal(AbstractCorrelatingMessageHandler.java:383)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 60 more
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,220492800,,2014-07-14 08:13:17.772,44936,false,tmarshall(tmarshall),,,,"0|i07p8v:",44962,44638,,,Sprint 31,,,5.0,,"12/Jul/14 10:42 AM;thomas.risberg;Running with rabbit I get the same bahavior, the job runs but never transitions to COMPLETED.

Container logs:
{code}
13:36:23,168  INFO main util.XdConfigLoggingInitializer - XD Home: /home/trisberg/Test/spring-xd-1.0.0.BUILD-SNAPSHOT/xd
13:36:23,168  INFO main util.XdConfigLoggingInitializer - Transport: rabbit
13:36:23,168  INFO main util.XdConfigLoggingInitializer - Hadoop Distro: hadoop22
13:36:23,170  INFO main util.XdConfigLoggingInitializer - Hadoop version detected from classpath: 2.2.0
13:36:23,170  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:2181
13:36:23,171  INFO main util.XdConfigLoggingInitializer - Analytics: redis
13:36:23,194  INFO main server.ContainerRegistrar - Started container {id=a959f790-1c5e-4bf7-966b-4cbd393a2c54, host=carbon, pid=24055, groups=, ip=192.168.0.104}
13:36:23,203  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar - Path cache event: null, type: INITIALIZED
Jul 12, 2014 1:36:23 PM org.apache.coyote.AbstractProtocol init
INFO: Initializing ProtocolHandler [""http-nio-auto-1""]
Jul 12, 2014 1:36:23 PM org.apache.coyote.AbstractProtocol start
INFO: Starting ProtocolHandler [""http-nio-auto-1""]
Jul 12, 2014 1:36:23 PM org.apache.tomcat.util.net.NioSelectorPool getSharedSelector
INFO: Using a shared selector for servlet write/read
13:36:23,248  INFO main tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 58862/http
13:36:23,249  INFO main server.ContainerServerApplication - Started ContainerServerApplication in 3.045 seconds (JVM running for 12.836)
13:37:14,014  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar - Path cache event: /deployments/modules/allocated/a959f790-1c5e-4bf7-966b-4cbd393a2c54/mydata.job.filejdbc.1, type: CHILD_ADDED
13:37:14,023  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar - Deploying job 'mydata'
13:37:14,597  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar - Deploying module [ModuleDescriptor@5cf59010 moduleName = 'filejdbc', moduleLabel = 'filejdbc', group = 'mydata', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map['resources' -> 'file:///home/trisberg/Test/input/*.csv', 'initializeDatabase' -> 'true', 'names' -> 'col1,col2,col3'], children = list[[empty]]]
13:37:15,007  WARN DeploymentsPathChildrenCache-0 logging.LoggingApplicationListener - Logging environment value 'file:/home/trisberg/Test/spring-xd-1.0.0.BUILD-SNAPSHOT/xd/config///xd-container-logger.properties' cannot be opened and will be ignored
13:37:15,965  WARN DeploymentsPathChildrenCache-0 config.ReleaseStrategyFactoryBean - No annotated method found; falling back to SequenceSizeReleaseStrategy, target:org.springframework.batch.integration.partition.MessageChannelPartitionHandler@5057c688, methodName:null
13:37:16,765  INFO DeploymentsPathChildrenCache-0 boot.SpringApplication - Started application in 1.817 seconds (JVM running for 66.352)
13:37:16,766  INFO DeploymentsPathChildrenCache-0 core.SimpleModule - initialized module: SimpleModule [name=filejdbc, type=job, group=mydata, index=0 @66cc70d7]
13:37:16,766  INFO DeploymentsPathChildrenCache-0 rabbit.RabbitMessageBus - declaring queue for inbound: job:mydata
13:37:16,889  INFO DeploymentsPathChildrenCache-0 rabbit.RabbitMessageBus - binding requestor: mydata.0
13:37:16,906  INFO DeploymentsPathChildrenCache-0 rabbit.RabbitMessageBus - binding replier: mydata.0
13:37:16,922  INFO DeploymentsPathChildrenCache-0 module.ModuleDeployer - deployed SimpleModule [name=filejdbc, type=job, group=mydata, index=0 @66cc70d7]
{code}

Admin logs:
{code}
13:36:13,662  INFO main util.XdConfigLoggingInitializer - XD Home: /home/trisberg/Test/spring-xd-1.0.0.BUILD-SNAPSHOT/xd
13:36:13,662  INFO main util.XdConfigLoggingInitializer - Transport: rabbit
13:36:13,662  INFO main util.XdConfigLoggingInitializer - Zookeeper at: localhost:2181
13:36:13,663  INFO main util.XdConfigLoggingInitializer - Analytics: redis
Jul 12, 2014 1:36:13 PM org.apache.coyote.AbstractProtocol init
INFO: Initializing ProtocolHandler [""http-nio-9393""]
13:36:13,732  INFO LeaderSelector-0 server.DeploymentSupervisor - Leader Admin 192.168.0.104:9393 is watching for stream/job deployment requests.
Jul 12, 2014 1:36:13 PM org.apache.coyote.AbstractProtocol start
INFO: Starting ProtocolHandler [""http-nio-9393""]
Jul 12, 2014 1:36:13 PM org.apache.tomcat.util.net.NioSelectorPool getSharedSelector
INFO: Using a shared selector for servlet write/read
13:36:13,858  INFO main tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 9393/http
13:36:13,860  INFO main server.AdminServerApplication - Started AdminServerApplication in 6.02 seconds (JVM running for 12.95)
13:36:13,865  INFO DeploymentSupervisorCacheListener-0 server.ContainerListener - Path cache event: null, type: INITIALIZED
13:36:23,194  INFO DeploymentSupervisorCacheListener-0 server.ContainerListener - Path cache event: /containers/a959f790-1c5e-4bf7-966b-4cbd393a2c54, type: CHILD_ADDED
13:36:23,210  INFO DeploymentSupervisorCacheListener-0 server.ArrivingContainerModuleRedeployer - Container arrived: a959f790-1c5e-4bf7-966b-4cbd393a2c54
Jul 12, 2014 1:36:49 PM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring FrameworkServlet 'dispatcherServlet'
13:37:13,390  INFO http-nio-9393-exec-5 zookeeper.ZooKeeperJobDefinitionRepository - Saved job /jobs/mydata with properties {definition=filejdbc --names=col1,col2,col3 --resources=file:///home/trisberg/Test/input/*.csv --initializeDatabase=true}
13:37:13,687  INFO DeploymentSupervisorCacheListener-0 server.InitialDeploymentListener - Path cache event: /deployments/jobs/mydata, type: CHILD_ADDED
13:37:16,947  INFO Deployer server.JobDeploymentListener - Deployment status for job 'mydata': DeploymentStatus{state=deployed}
13:37:21,492  INFO http-nio-9393-exec-7 rabbit.RabbitMessageBus - declaring queue for outbound: job:mydata
{code}","14/Jul/14 8:13 AM;grussell;The Redis bus doesn't currently pass ""user"" headers.

I am not sure how we can fix this in a generic way, we might have to (at least temporarily) just pass the partitioned-batch job headers (correlationId, sequenceNumber, sequenceSize).","14/Jul/14 1:28 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/1065","14/Jul/14 8:23 PM;thomas.risberg;Merged, not sure how much time you spent, so I'll let you close this.",,,,,,,,,,,,,,
"filepollhdfs --deleteFiles=true has no effect, files are not deleted",XD-1956,58773,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,mminella,thomas.risberg,thomas.risberg,11/Jul/14 11:16 AM,18/Jul/14 9:08 AM,10/Jul/21 8:37 AM,11/Jul/14 2:10 PM,,,,,,,1.0 RC1,,Batch,,,,,0,,,,,,,"Setting --deleteFiles=true has no effect any longer. This also causes the Script Integration Tests to fail.

Suspect this is related to the change here https://github.com/spring-projects/spring-xd/commit/6dbac167758ce23b9a4dbf07169b2d26d1eddef1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220752000,,,44933,false,tmarshall(tmarshall),,,,"0|i07p87:",44959,44635,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Investigate deployed module context close upon container shutdown,XD-1954,58771,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,11/Jul/14 10:33 AM,21/Jul/14 1:29 PM,10/Jul/21 8:37 AM,21/Jul/14 1:29 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"Upon the container shutdown, the deployed modules' contexts get closed before the corresponding `Stream/JobModuleWatcher` does the undeployment of the stream/job modules.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,219888000,,2014-07-21 08:14:41.88,44931,true,tmarshall(tmarshall),,,,"0|i00anj:",1753,44633,,,Sprint 32,,,3.0,,"21/Jul/14 8:14 AM;mark.pollack;Need some more info on this...","21/Jul/14 11:18 AM;iperumal;The below exception suggests the module context is closed before the undeployment of the module happens. The possible reason is that,
the container context (along with its deployed modules contexts) is closed before the Stream/JobModuleWatcher thread acts on undeployment of the actual module. We added the defensive check here: https://github.com/spring-projects/spring-xd/commit/7941c9827e33ef65573c580b5146dba54038255f to proceed with undeployment only if the context is active. Hence, the below exception wouldn't be thrown with the changes in this commit is applied.

ERROR main-EventThread imps.CuratorFrameworkImpl:555 - Watcher exception
java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@422fd7b7 has been closed already
at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:956)
at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:978)
at org.springframework.xd.module.core.SimpleModule.getComponent(SimpleModule.java:164)
at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.unbindConsumerAndProducers(AbstractMessageBusBinderPlugin.java:219)
at org.springframework.xd.dirt.plugins.job.JobPlugin.removeModule(JobPlugin.java:70)
at org.springframework.xd.dirt.module.ModuleDeployer.removeModule(ModuleDeployer.java:204)
at org.springframework.xd.dirt.module.ModuleDeployer.destroyModule(ModuleDeployer.java:162)
at org.springframework.xd.dirt.module.ModuleDeployer.handleUndeploy(ModuleDeployer.java:140)
at org.springframework.xd.dirt.module.ModuleDeployer.undeploy(ModuleDeployer.java:112)
at org.springframework.xd.dirt.server.ContainerRegistrar.undeployModule(ContainerRegistrar.java:256)
at org.springframework.xd.dirt.server.ContainerRegistrar$JobModuleWatcher.process(ContainerRegistrar.java:753)
at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:67)
at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
10:10:27,561 INFO main-EventThread zookeeper.ClientCnxn:512 - EventThread shut down
10:10:27,564 INFO Thread-2 jmx.EndpointMBeanExporter:433 - Unregistering JMX-exposed beans on shutdown","21/Jul/14 11:26 AM;iperumal;I believe this issue can be closed as the module contexts are obviously closed/destroyed upon container shutdown. and, if the message bus handles the acknowledgement of messages being sent (ex: Rabbit auto ack mode), we can possibly eliminate the messages being lost at this scenario.","21/Jul/14 12:08 PM;pperalta;I think the order of events is as follows:
# Container shutdown (via ^C) is initiated
# Shutdown hook causes module application context(s) to shut down
# Shutdown hook causes ZK to shutdown, thus raising the ZK events that cause module undeployment

Given the changes for XD-1953 I don't think we need to do anything else for this issue.","21/Jul/14 12:36 PM;iperumal;Right, the step 3. above: ""Shutdown hook causes ZK to shutdown, thus raising the ZK events that cause module undeployment"" could happen only in case of singlenode. right?

In distributed mode, if ZK is available, what causes the NodeDeleted event to be triggered for each module that subsequently triggers Stream/JobModuleWatchers to undeploy module:

Upon container shutdown, I see this message after module context is closed:
 Got WatchedEvent state:SyncConnected type:NodeDeleted path:/xd/deployments/streams/s/modules/sink.log.1.780708dd-fb40-42af-8314-ecbef656fc01 for sessionid 0x146def241780358","21/Jul/14 12:55 PM;iperumal;To understand it better, here is the set of actions happening upon container shutdown:

11:17:26,147 DEBUG Thread-2 imps.CuratorFrameworkImpl - Closing
11:17:26,148 DEBUG Thread-2 curator.CuratorZookeeperClient - Closing
11:17:26,148 DEBUG Thread-2 curator.ConnectionState - Closing
11:17:26,149 DEBUG Thread-2 zookeeper.ZooKeeper - Closing session: 0x146def241780358
11:17:26,149 DEBUG Thread-2 zookeeper.ClientCnxn - Closing client for session: 0x146def241780358
11:17:26,150 DEBUG main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn - Got notification sessionid:0x146def241780358
11:17:26,150 DEBUG main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn - Got WatchedEvent state:SyncConnected type:NodeDeleted path:/xd/deployments/streams/s/modules/source.http.1.780708dd-fb40-42af-8314-ecbef656fc01 for sessionid 0x146def241780358
11:17:26,151 DEBUG main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn - Got notification sessionid:0x146def241780358
11:17:26,151 DEBUG main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn - Got WatchedEvent state:SyncConnected type:NodeDeleted path:/xd/deployments/streams/s/modules/sink.log.1.780708dd-fb40-42af-8314-ecbef656fc01 for sessionid 0x146def241780358
11:17:26,151  INFO main-EventThread server.ContainerRegistrar - Undeploying module [ModuleDescriptor@61dd583 moduleName = 'http', moduleLabel = 'http', group = 's', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map[[empty]], children = list[[empty]]]
11:17:26,151  INFO main-EventThread module.ModuleDeployer - removed SimpleModule [name=http, type=source, group=s, index=0 @211ede94]
11:17:26,151 DEBUG main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn - Reading reply sessionid:0x146def241780358, packet:: clientPath:null serverPath:null finished:false header:: 53,-11  replyHeader:: 53,29951,0  request:: null response:: null
11:17:26,151 DEBUG Thread-2 zookeeper.ClientCnxn - Disconnecting client for session: 0x146def241780358
11:17:26,151  INFO Thread-2 zookeeper.ZooKeeper - Session: 0x146def241780358 closed
11:17:26,151  WARN main-EventThread module.ModuleDeployer - Failed to invoke plugin StreamPlugin during shutdown. org.springframework.context.annotation.AnnotationConfigApplicationContext@132b618b has been closed already
11:17:26,151 DEBUG main-EventThread module.ModuleDeployer - java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@132b618b has been closed already
11:17:26,151  INFO main-EventThread server.ContainerRegistrar - Undeploying module [ModuleDescriptor@4462685f moduleName = 'log', moduleLabel = 'log', group = 's', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 1, type = sink, parameters = map[[empty]], children = list[[empty]]]
11:17:26,151  INFO main-EventThread module.ModuleDeployer - removed SimpleModule [name=log, type=sink, group=s, index=1 @63a4a257]
11:17:26,151  WARN main-EventThread module.ModuleDeployer - Failed to invoke plugin StreamPlugin during shutdown. org.springframework.context.annotation.AnnotationConfigApplicationContext@9f073 has been closed already
11:17:26,151 DEBUG main-EventThread module.ModuleDeployer - java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@9f073 has been closed already
11:17:26,151  INFO main-EventThread zookeeper.ClientCnxn - EventThread shut down","21/Jul/14 1:12 PM;iperumal;In distributed mode, this is order of events:

1) Ctrl C causes orderly shutdown of container
2) Container context shuts down by the shutdown hook which also closes all the deployed module contexts
3) The Stream/JobDeployments paths corresponding to this container (the ephemeral nodes) causes ""NodeDeleted"" event which leads to Stream/Job module watchers to respond and trigger the undeployment of modules. Since the modules were undeployed at step 2) the exception thrown here is suppressed (XD-1953).","21/Jul/14 1:29 PM;iperumal;Closing as there is no specific work to be done in this case and this doesn't do any harm.",,,,,,,,,,
Stacktrace on container with deployed modules is shutdown,XD-1953,58770,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,11/Jul/14 10:09 AM,18/Jul/14 9:08 AM,10/Jul/21 8:37 AM,11/Jul/14 2:34 PM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"When the container that has deployed module is shutdown, following stacktrace is thrown:

10:10:27,560  INFO main-EventThread server.ContainerRegistrar:254 - Undeploying module [ModuleDescriptor@3a615460 moduleName = 'job', moduleLabel = 'job', group = 'j4', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]
10:10:27,560  INFO main-EventThread module.ModuleDeployer:158 - removed SimpleModule [name=job, type=job, group=j4, index=0 @7df1aff2]
10:10:27,561 ERROR main-EventThread imps.CuratorFrameworkImpl:555 - Watcher exception
java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@422fd7b7 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:956)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:978)
	at org.springframework.xd.module.core.SimpleModule.getComponent(SimpleModule.java:164)
	at org.springframework.xd.dirt.plugins.AbstractMessageBusBinderPlugin.unbindConsumerAndProducers(AbstractMessageBusBinderPlugin.java:219)
	at org.springframework.xd.dirt.plugins.job.JobPlugin.removeModule(JobPlugin.java:70)
	at org.springframework.xd.dirt.module.ModuleDeployer.removeModule(ModuleDeployer.java:204)
	at org.springframework.xd.dirt.module.ModuleDeployer.destroyModule(ModuleDeployer.java:162)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleUndeploy(ModuleDeployer.java:140)
	at org.springframework.xd.dirt.module.ModuleDeployer.undeploy(ModuleDeployer.java:112)
	at org.springframework.xd.dirt.server.ContainerRegistrar.undeployModule(ContainerRegistrar.java:256)
	at org.springframework.xd.dirt.server.ContainerRegistrar$JobModuleWatcher.process(ContainerRegistrar.java:753)
	at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:67)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
10:10:27,561  INFO main-EventThread zookeeper.ClientCnxn:512 - EventThread shut down
10:10:27,564  INFO Thread-2 jmx.EndpointMBeanExporter:433 - Unregistering JMX-exposed beans on shutdown",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,220752000,,,44930,true,tmarshall(tmarshall),,,,"0|i07p7r:",44957,44632,,,,,,2.0,,"11/Jul/14 2:34 PM;iperumal;Merged as

https://github.com/spring-projects/spring-xd/commit/7941c9827e33ef65573c580b5146dba54038255f",,,,,,,,,,,,,,,,,
Single step partition support on filejdbc module uses module's datasource,XD-1950,58753,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,iperumal,iperumal,iperumal,10/Jul/14 12:50 PM,15/Jul/14 8:01 AM,10/Jul/21 8:37 AM,10/Jul/14 2:38 PM,,,,,,,1.0 RC1,,Batch,,,,,0,,,,,,,"The filejdbc module's single step partition support configures to use jdbc module's datasource rather than XD's batch datasource.

```
org.springframework.messaging.MessageHandlingException: org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID = ?]; SQL state [null]; error code [0]; [SQLITE_ERROR] SQL error or missing database (no such table: BATCH_JOB_EXECUTION); nested exception is java.sql.SQLException: [SQLITE_ERROR] SQL error or missing database (no such table: BATCH_JOB_EXECUTION)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:78)
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy115.send(Unknown Source)
	at org.springframework.xd.dirt.integration.bus.LocalMessageBus$3.handleMessage(LocalMessageBus.java:188)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.access$000(UnicastingDispatcher.java:48)
	at org.springframework.integration.dispatcher.UnicastingDispatcher$1.run(UnicastingDispatcher.java:92)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_EXECUTION_ID = ?]; SQL state [null]; error code [0]; [SQLITE_ERROR] SQL error or missing database (no such table: BATCH_JOB_EXECUTION); nested exception is java.sql.SQLException: [SQLITE_ERROR] SQL error or missing database (no such table: BATCH_JOB_EXECUTION)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:660)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:695)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:727)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:737)
	at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:811)
	at org.springframework.batch.core.repository.dao.JdbcJobExecutionDao.getJobExecution(JdbcJobExecutionDao.java:267)
	at org.springframework.batch.core.explore.support.SimpleJobExplorer.getStepExecution(SimpleJobExplorer.java:142)
	at org.springframework.batch.integration.partition.StepExecutionRequestHandler.handle(StepExecutionRequestHandler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:122)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:44)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:84)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:268)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	... 41 more
Caused by: java.sql.SQLException: [SQLITE_ERROR] SQL error or missing database (no such table: BATCH_JOB_EXECUTION)
	at org.sqlite.DB.newSQLException(DB.java:383)
	at org.sqlite.DB.newSQLException(DB.java:387)
	at org.sqlite.DB.throwex(DB.java:374)
	at org.sqlite.NestedDB.prepare(NestedDB.java:134)
	at org.sqlite.DB.prepare(DB.java:123)
	at org.sqlite.PrepStmt.<init>(PrepStmt.java:42)
	at org.sqlite.Conn.prepareStatement(Conn.java:404)
	at org.sqlite.Conn.prepareStatement(Conn.java:399)
	at org.sqlite.Conn.prepareStatement(Conn.java:383)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.tomcat.jdbc.pool.ProxyConnection.invoke(ProxyConnection.java:126)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:109)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:80)
	at com.sun.proxy.$Proxy109.prepareStatement(Unknown Source)
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1557)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:638)
	... 63 more
12:23:37,941  INFO main-EventThread server.ContainerRegistrar:254 - Undeploying module [ModuleDescriptor@d192973 moduleName = 'filejdbc', moduleLabel = 'filejdbc', group = 'csvjdbcjob0', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = job, parameters = map['resources' -> 'file:///tmp/xdtest/jdbc/delete_after_use.csv', 'initializeDatabase' -> 'true', 'names' -> 'col1,col2,col3', 'deleteFiles' -> 'true', 'driverClassName' -> 'org.sqlite.JDBC', 'url' -> 'jdbc:sqlite:/tmp/xdtest/jdbc/jdbc.db'], children = list[[empty]]]
12:23:37,941  INFO main-EventThread module.ModuleDeployer:158 - removed SimpleModule [name=filejdbc, type=job, group=csvjdbcjob0, index=0 @73cc35b5]
12:23:37,944 ERROR task-scheduler-1 step.AbstractStep:225 - Encountered an error executing step step1-master in job csvjdbcjob0
org.springframework.integration.MessageTimeoutException: Timeout occurred before all partitions returned
	at org.springframework.batch.integration.partition.MessageChannelPartitionHandler.handle(MessageChannelPartitionHandler.java:141)
	at org.springframework.batch.core.partition.support.PartitionStep.doExecute(PartitionStep.java:106)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:162)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:141)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:127)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy44.run(Unknown Source)
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:122)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:44)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:84)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:268)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy115.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy115.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:109)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:94)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.endpoint.PollingConsumer.handleMessage(PollingConsumer.java:74)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:205)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:284)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:278)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
```",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,220838400,,,44913,true,tmarshall(tmarshall),,,,"0|i07p4v:",44944,44615,,,Sprint 31,,,1.0,,"10/Jul/14 2:38 PM;iperumal;Merged as 

https://github.com/spring-projects/spring-xd/commit/a9a9f8b67623156ed8d73a304e06f6c89de06641",,,,,,,,,,,,,,,,,
XD_CONFIG_LOCATION doesn't seem to be set for log4j config files ,XD-1945,58746,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,thomas.risberg,thomas.risberg,10/Jul/14 6:51 AM,18/Jul/14 9:08 AM,10/Jul/21 8:37 AM,10/Jul/14 8:54 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Starting xd-singlenode and then ctrl-c to shut down produces WARN message that should be suppressed according to log4j config

Setting XD_CONFIG_LOCATION explicitly works for suppressing the message.

The message I see:

[2014-07-10 09:39:59.786] boot - 58034  WARN [Thread-2] --- MBeanRegistry: Failed to unregister MBean InMemoryDataTree
[2014-07-10 09:39:59.786] boot - 58034  WARN [Thread-2] --- MBeanRegistry: Error during unregister
javax.management.InstanceNotFoundException: org.apache.ZooKeeperService:name0=StandaloneServer_port-1,name1=InMemoryDataTree
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.zookeeper.jmx.MBeanRegistry.unregister(MBeanRegistry.java:115)
	at org.apache.zookeeper.jmx.MBeanRegistry.unregister(MBeanRegistry.java:132)
	at org.apache.zookeeper.server.ZooKeeperServer.unregisterJMX(ZooKeeperServer.java:465)
	at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:458)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.shutdown(NIOServerCnxnFactory.java:271)
	at org.apache.zookeeper.server.ZooKeeperServerMain.shutdown(ZooKeeperServerMain.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.xd.dirt.zookeeper.EmbeddedZooKeeper.stop(EmbeddedZooKeeper.java:176)
	at org.springframework.xd.dirt.zookeeper.EmbeddedZooKeeper.stop(EmbeddedZooKeeper.java:204)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:229)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$300(DefaultLifecycleProcessor.java:51)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:363)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:202)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:118)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:888)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:841)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:100)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:84)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:98)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:333)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:880)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:809)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,220924800,,,44906,false,tmarshall(tmarshall),,,,"0|i07p3r:",44939,44608,,,,,,3.0,,,,,,,,,,,,,,,,,,,
Error deploying stream when admin running and container arrives after stream deployment request,XD-1944,58745,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,pperalta,thomas.risberg,thomas.risberg,10/Jul/14 6:29 AM,10/Jul/14 12:43 PM,10/Jul/21 8:37 AM,10/Jul/14 12:43 PM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"Steps to reproduce:

1. start xd-admin

2. start shell and create and deploy stream (""time | hdfs"")

3. start container

I got:

[2014-07-10 09:10:29.019] boot - 19923  INFO [DeploymentSupervisorCacheListener-0] --- InitialDeploymentListener: Path cache event: /deployments/streams/test, type: CHILD_ADDED
[2014-07-10 09:10:29.137] boot - 19923  INFO [Deployer] --- StreamDeploymentListener: Deploying stream Stream{name='test'}
[2014-07-10 09:10:29.146] boot - 19923  WARN [Deployer] --- StreamDeploymentListener: No containers available for deployment of stream test
[2014-07-10 09:10:29.146] boot - 19923  INFO [Deployer] --- StreamDeploymentListener: Stream Stream{name='test'} deployment attempt complete
[2014-07-10 09:11:08.003] boot - 19923  INFO [DeploymentSupervisorCacheListener-0] --- ContainerListener: Path cache event: /containers/007c2bcc-13f4-466e-95d3-bd926bb456ea, type: CHILD_ADDED
[2014-07-10 09:11:08.006] boot - 19923  INFO [DeploymentSupervisorCacheListener-0] --- ArrivingContainerModuleRedeployer: Container arrived: 007c2bcc-13f4-466e-95d3-bd926bb456ea
[2014-07-10 09:11:08.176] boot - 19923 ERROR [DeploymentSupervisorCacheListener-0] --- PathChildrenCache: 
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/test/modules
  at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
  at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
  at org.apache.zookeeper.ZooKeeper.getChildren(ZooKeeper.java:1590)
  at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:214)
  at org.apache.curator.framework.imps.GetChildrenBuilderImpl$3.call(GetChildrenBuilderImpl.java:203)
  at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
  at org.apache.curator.framework.imps.GetChildrenBuilderImpl.pathInForeground(GetChildrenBuilderImpl.java:199)
  at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:191)
  at org.apache.curator.framework.imps.GetChildrenBuilderImpl.forPath(GetChildrenBuilderImpl.java:38)
  at org.springframework.xd.dirt.server.ArrivingContainerModuleRedeployer.deployUnallocatedStreamModules(ArrivingContainerModuleRedeployer.java:133)
  at org.springframework.xd.dirt.server.ArrivingContainerModuleRedeployer.deployModules(ArrivingContainerModuleRedeployer.java:106)
  at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:99)
  at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
  at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
  at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
  at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
  at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
  at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
  at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
  at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
  at java.util.concurrent.FutureTask.run(FutureTask.java:262)
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
  at java.util.concurrent.FutureTask.run(FutureTask.java:262)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
  at java.lang.Thread.run(Thread.java:744)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3.0,220924800,,2014-07-10 07:32:57.166,44905,true,tmarshall(tmarshall),,,,"0|i07p3j:",44938,44607,,,Sprint 31,,,3.0,,"10/Jul/14 7:32 AM;pperalta;https://github.com/spring-projects/spring-xd/pull/1044",,,,,,,,,,,,,,,,,
No main manifest attribute in xd-yarn-client jar,XD-1941,58738,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,thomas.risberg,thomas.risberg,thomas.risberg,09/Jul/14 1:39 PM,09/Jul/14 4:28 PM,10/Jul/21 8:37 AM,09/Jul/14 4:28 PM,,,,,,,1.0 RC1,,Packaging,,,,,0,,,,,,,"Error deploying to YARN - 

$ ./spring-xd-1.0.0.BUILD-SNAPSHOT-yarn/bin/xd-yarn push -p spring-xd-1.0.0.BUILD-SNAPSHOT-yarn
no main manifest attribute, in spring-xd-1.0.0.BUILD-SNAPSHOT-yarn/lib/spring-xd-yarn-client-1.0.0.BUILD-SNAPSHOT.jar

probably related to boot changes",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,220924800,XD-1317,,44898,false,tmarshall(tmarshall),,,,"0|i07p27:",44932,44600,,,Sprint 31,,,3.0,,"09/Jul/14 4:21 PM;thomas.risberg;Pull Request https://github.com/spring-projects/spring-xd/pull/1036",,,,,,,,,,,,,,,,,
Batch jobs executions by jobname causes stackoverflow,XD-1935,58729,Bug,In Progress,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,,eric.bottard,eric.bottard,eric.bottard,09/Jul/14 9:37 AM,18/Nov/14 7:46 PM,10/Jul/21 8:37 AM,,,,,,,,1.2 TRIAGE,,,,,,,0,,,,,,,"Whether it's after applying https://github.com/spring-projects/spring-xd/pull/1034/ or not, this causes the following problem:

{noformat}
....
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:100)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:21)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:100)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:21)
Caused by: java.lang.StackOverflowError
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:660)
	... 1011 more
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,219283200,XD-1608,2014-07-21 07:50:24.121,44889,true,tmarshall(tmarshall),,,,"0|i001i7:",245,44591,,,,,,4.0,,"21/Jul/14 7:50 AM;mark.pollack;I believe this endpoint isn't being used by the UI.  If we want to keep this endpoint as part of the REST API, then it should be fixed for 1.0 GA , or we could remove it and add it in a later version.","23/Jul/14 7:15 AM;eric.bottard;http://localhost:9393/jobs/executions has the problem (amongst others)

After much investigation, seems that
- the error does not appear when requesting as Accept: application/json (which the shell does)
- the error does appear when doing a simple curl


The root of the problem is that we have all those converters installed I believe:

[org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@3e604297, org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter@40ede36c, org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@41ede8c1, org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter@6a4bf8b7, org.springframework.http.converter.ResourceHttpMessageConverter@21b5ece6, org.springframework.http.converter.ByteArrayHttpMessageConverter@2ed40154, org.springframework.http.converter.StringHttpMessageConverter@60a349d0, org.springframework.http.converter.ResourceHttpMessageConverter@432841, org.springframework.http.converter.xml.SourceHttpMessageConverter@3907c389, org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter@2cb6749f, org.springframework.http.converter.feed.AtomFeedHttpMessageConverter@7ea289a7, org.springframework.http.converter.feed.RssChannelHttpMessageConverter@60fb73e4, org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@1c75af7a, org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter@7253812e]


while we only would want those configured by \[1\] (and \[2\]).

This then lead me to HttpMessageConvertersAutoConfiguration, but trying to exclude it seems to have some nasty ripple effects. 


[1] https://github.com/spring-projects/spring-xd/blob/4374f423743255a1994657c470bc7464f64234a0/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/rest/RestConfiguration.java#L73-L89
[2] https://github.com/spring-projects/spring-xd/blob/4374f423743255a1994657c470bc7464f64234a0/spring-xd-rest-domain/src/main/java/org/springframework/xd/rest/domain/support/RestTemplateMessageConverterUtil.java#L95-L108","28/Jul/14 11:37 AM;iperumal;As a temporary workaround, the producible media type is set to ""application/json"" for job executions GET REST endpoints XD-2030. 

We need to revisit this issue to fix the root cause post GA.",,,,,,,,,,,,,,,
Exception for sample hdfs sample,XD-1917,58658,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,thomas.risberg,chucky81,chucky81,07/Jul/14 7:00 AM,04/Aug/14 12:08 PM,10/Jul/21 8:37 AM,23/Jul/14 11:22 AM,M7,,,,,,1.0 GA,,,,,,,0,,,,,,,"Hi

If I create a hdfs stream as proposed in the documentation I get some errors.

Example:
stream create --name xxx --definition ""http --port=8000 | hdfs --rollover=10"" 
stream deploy --name xxx

The exception:
Caused by: java.io.FileNotFoundException: ...spring-xd-1.0.0.M7/config/hadoop.properties (No such file or directory)
	at java.io.FileInputStream.open(Native Method)

There is a folder /spring-xd-1.0.0.M7/xd/config but no folder /spring-xd-1.0.0.M7/config
when I copied the file from /xd/config to /config it worked fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,218678400,,2014-07-21 08:54:27.006,44818,true,tmarshall(tmarshall),,,,"0|i00akf:",1739,44520,,,Sprint 32,,,1.0,,"21/Jul/14 8:54 AM;thomas.risberg;The only way I can reproduce this is to set XD_HOME to ""spring-xd-1.0.0.M7"" instead of ""spring-xd-1.0.0.M7/xd"".

Did you set XD_HOME? If so what did you set it to?","23/Jul/14 11:22 AM;thomas.risberg;Closing this for now, please re-open or create new issue if this is still a problem.","04/Aug/14 12:08 PM;chucky81;It did not happen with the new XD version",,,,,,,,,,,,,,,
"Stream/Job deployment state is always ""incomplete"" in case of module count zero",XD-1914,58608,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,02/Jul/14 2:35 PM,02/Jul/14 9:19 PM,10/Jul/21 8:37 AM,02/Jul/14 9:19 PM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"In case of the deployment property module count for a specific module in a stream/job is zero, the stream/job deployment status is calculated as ""zero"" even though the modules are deployed to all matching containers.

Currently, the DefaultStateCalculator's 'calculate' method doesn't check if the expected count is zero. 
Also, we would need all the matching containers to determine the same module is deployed to all the matching containers (in case of module count = 0)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,221529600,,,44768,true,tmarshall(tmarshall),,,,"0|i07odz:",44823,44470,,,,,,4.0,,"02/Jul/14 4:25 PM;iperumal;Submitted PR: 

https://github.com/spring-projects/spring-xd/pull/1011",,,,,,,,,,,,,,,,,
Rabbitmq source is not ingested the data into jdbc sink,XD-1912,58588,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,thomas.risberg,AyyappanA,AyyappanA,02/Jul/14 12:06 AM,24/Jul/14 9:54 AM,10/Jul/21 8:37 AM,24/Jul/14 9:54 AM,M5,,,,,,1.0 GA,,Stream Module,,,,,0,,,,,,,"I am using Spring XD to ingest the data into Pivotal HD.My source is log files which is coming from logstash through Rabbitmq. I could able to ingest the log files in HDFS (by using Rabbitmq source and HDFS sink)
However when i try to ingest the data directly into Hawq by using JDBC sink,it's not working. Shall we directly load Rabbitmq source into any databases like Hawq?


stream create --name pivotalqueue --definition ""rabbit --host=<my host name>   | jdbc   --columns='colum list'""      ---Not working

I configured jdbc in jdbc.properties. There was no issue with jdbc configuration(because i tested this with simple tail source it's working and load the data into HAWQ.
stream create --name pivotalqueue --definition ""tail --name=/tmp/xd/output/test.out   | jdbc  --columns='columns list'""  )
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,219628800,,2014-07-21 21:18:27.34,44750,false,tmarshall(tmarshall),,,,"0|i00ajz:",1737,44452,,,Sprint 32,,,3.0,,"21/Jul/14 9:18 PM;mark.pollack;Couple questions to start understanding what is going on.

1. What version of PHD/HAWK are you using?

2. What version of logstash are you using?  Are you using this output http://logstash.net/docs/1.4.2/outputs/rabbitmq  I notice it is at a milestone level 1 - did you observe message being published from logstash to the broker - you can view this using the rabbitmq mgmt plugin.

3. What errors do you observe when trying rabbit | jdbc?  any stack trace?

4. what version of XD are you using","23/Jul/14 2:50 PM;mark.pollack;Any update [~AyyappanA]?","24/Jul/14 9:53 AM;thomas.risberg;I was able to ingest logstash logs via rabbitmq into jdbc using the following stream definition:

{code}
stream create --name rq --definition ""rabbit --outputType=text/plain | jdbc --columns='message,host' --initializeDatabase=true"" --deploy
{code}
","24/Jul/14 9:54 AM;thomas.risberg;Closing this for now. Please re-open or create a new issue if you are still having issues. If so, please provide the format of your logstash records and any exceptions you see in the XD logs.",,,,,,,,,,,,,,
Job undeploy operation throws exception,XD-1901,58552,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,30/Jun/14 10:28 AM,07/Jul/14 3:50 PM,10/Jul/21 8:37 AM,07/Jul/14 3:50 PM,,,,,,,1.0 RC1,,REST,Runtime,,,,0,,,,,,,"Job `undeploy` operation throws the following stacktrace:

```
http-nio-9393-exec-5 zookeeper.ZooKeeperJobRepository - Exception while transitioning job 'j' state to undeploying
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/jobs/j/status
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.setData(ZooKeeper.java:1266)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:260)
	at org.apache.curator.framework.imps.SetDataBuilderImpl$4.call(SetDataBuilderImpl.java:256)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.pathInForeground(SetDataBuilderImpl.java:252)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:239)
	at org.apache.curator.framework.imps.SetDataBuilderImpl.forPath(SetDataBuilderImpl.java:39)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:177)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:199)
	at org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository.delete(ZooKeeperJobRepository.java:1)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.undeploy(AbstractInstancePersistingDeployer.java:68)
	at org.springframework.xd.dirt.rest.XDController.undeploy(XDController.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
```",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2.0,221097600,,,44715,true,tmarshall(tmarshall),,,,"0|i001zb:",322,44417,,,Sprint 30,Sprint 31,,2.0,,"30/Jun/14 12:06 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/999","07/Jul/14 3:50 PM;iperumal;Merged:

https://github.com/spring-projects/spring-xd/commit/0bc1fc85660f0f4eb7f71d13fcd778a059a784a6",,,,,,,,,,,,,,,,
Batch job is marked as undeployed once computer comes back from hibernation,XD-1900,58551,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,hillert,hillert,30/Jun/14 10:26 AM,01/Jul/14 8:54 AM,10/Jul/21 8:37 AM,01/Jul/14 8:54 AM,,,,,,,1.0 RC1,,Batch,Runtime,,,,0,,,,,,,"I have a deployed Batch Job (Single Node Server, running inside STS). My machine goes to sleep. Once I bring it back up I see the following log: 

{code}
12:57:35,854 ERROR LeaderSelector-5 leader.LeaderSelector - The leader threw an exception
java.lang.IllegalArgumentException: Label is required
	at org.springframework.util.Assert.hasText(Assert.java:162)
	at org.springframework.xd.module.ModuleDescriptor$Key.<init>(ModuleDescriptor.java:616)
	at org.springframework.xd.dirt.server.JobDeploymentListener.recalculateJobStates(JobDeploymentListener.java:218)
	at org.springframework.xd.dirt.server.DeploymentSupervisor$LeaderListener.takeLeadership(DeploymentSupervisor.java:354)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$WrappedListener.takeLeadership(LeaderSelector.java:536)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWork(LeaderSelector.java:398)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.doWorkLoop(LeaderSelector.java:443)
	at org.apache.curator.framework.recipes.leader.LeaderSelector.access$100(LeaderSelector.java:63)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:244)
	at org.apache.curator.framework.recipes.leader.LeaderSelector$2.call(LeaderSelector.java:238)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)
{code}

In the UI the job is marked as *undeployed* - however, when I click *deploy* I get an error: *The job named 'bbb' is already deployed*.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,221702400,,2014-06-30 11:39:25.589,44714,true,tmarshall(tmarshall),,,,"0|i07o5b:",44784,44416,,,Sprint 30,,,4.0,,"30/Jun/14 10:44 AM;hillert;Looks like you must put your laptop into *deep-sleep* mode (Hibernation). Normal sleep is not enough.","30/Jun/14 11:39 AM;iperumal;The issue is that the Job modules' deployments path isn't set correctly when the deployed jobs' states are re-calculated by the DeploymentSupervisor.
Fixing it.","30/Jun/14 12:30 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1000",,,,,,,,,,,,,,,
dist task failure - unable to access http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd,XD-1898,58533,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,,vagees,vagees,29/Jun/14 9:19 PM,18/Jul/14 9:08 AM,10/Jul/21 8:37 AM,01/Jul/14 12:59 PM,M7,,,,,,1.0 RC1,,,,,,,0,,,,,,,"The build task ""gradlew dist"" fails with the following error.

00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	... 52 more
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: javax.xml.transform.TransformerException: Failure reading /Users/ixr303/spring-xd/build/reference-work/index.xml
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	at com.icl.saxon.om.Builder.build(Builder.java:267)
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	at com.icl.saxon.Controller.transform(Controller.java:936)
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	at com.icl.saxon.Controller$transform.call(Unknown Source)
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	at AbstractDocbookReferenceTask.transform(DocbookReferencePlugin.groovy:146)
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:63)
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] 	... 59 more
00:20:16.976 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: java.io.IOException: Server returned HTTP response code: 500 for URL: http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLEntityManager.startDTDEntity(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
00:20:16.977 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
00:20:16.978 [ERROR] [org.gradle.BuildExceptionReporter] 	at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
00:20:16.978 [ERROR] [org.gradle.BuildExceptionReporter] 	at com.icl.saxon.om.Builder.build(Builder.java:265)


The URL http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd returns 500 error most of the times. 

Tried to circumvent the error by manually getting the did file locally and running again causes unintended relative path issues.

Help is very much appreciated. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,221616000,,,44696,true,tmarshall(tmarshall),,,,"0|i07o1z:",44769,44398,,,,,,1.0,,"01/Jul/14 11:07 AM;vagees;I could rerun an eventually get the dist task completed. The site http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd seems stable now. The issue can be closed, but it is a point to note.",,,,,,,,,,,,,,,,,
Tap lifecycle connection listener should close the tap path children cache upon ZK disconnect,XD-1872,58404,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,23/Jun/14 10:48 AM,23/Jun/14 11:13 AM,10/Jul/21 8:37 AM,23/Jun/14 11:13 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Currently, TapLifecycleConnectionListener (which implements ZooKeeperConnectionListener) clears(but not closes) the taps (PathChildrenCache) upon ZK `onDisconnect` child event.
Since, `onConnect` child event re-creates the tap PathChildrenCache, the previously created PathChildrenCache is still hanging in there.
I would be better to close the cache upon disconnect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222307200,,2014-06-23 11:13:23.783,44567,false,tmarshall(tmarshall),,,,"0|i07n5z:",44625,44269,,,Sprint 30,,,1.0,,"23/Jun/14 11:13 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/9f9d8fa0a4f6268346e08eb4b2c2b9aa1624f73b",,,,,,,,,,,,,,,,,
Rabbit Sink & Source --host and --port are not updating module host/port.,XD-1870,58371,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,20/Jun/14 2:18 PM,15/Jul/14 8:02 AM,10/Jul/21 8:37 AM,24/Jun/14 9:33 AM,,,,,,,1.0 RC1,,Stream Module,,,,,0,,,,,,,"Acceptance Tests failed on the Rabbit Source and Sink Tests.  The test started failing when XD-1824 was introduced (Support RabbitMQ Cluster in source/sink).  This story added addresses to support rabbit cluster failover.  
Currently if a user set --host --port to a remote Rabbit instance, XD will use the default host=localhost and port=5672.  However using --addresses does work.  ",,,,,,,,,,,,,,,,XD-1860,,,,,,,,,,,,,,,,,,,,,222393600,,2014-06-23 08:01:57.306,44534,false,tmarshall(tmarshall),,,,"0|i07n5j:",44623,44236,,,Sprint 30,,,5.0,,"23/Jun/14 8:01 AM;grussell;We should be able to still use {{--host --port}}. [~eric.bottard] expressed some concern that this might not work and he was right.

Running in the debugger,  {{\-\-addresses}} is injected into mixin but {{--host}} is not for some reason. Investigating...","23/Jun/14 8:34 AM;grussell;Confirmed; for some reason, during the parse phase, the options metadata is calling back into the setter with the results of the getter, before the host has been set.

It is bizarre that it does that.

{code}
java.lang.RuntimeException: org.springframework.xd.dirt.modules.metadata.RabbitConnectionMixin@33ee555f setAdd localhost:5672
	at org.springframework.xd.dirt.modules.metadata.RabbitConnectionMixin.setAddresses(RabbitConnectionMixin.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1157)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:922)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:82)
	at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:728)
	at org.springframework.validation.DataBinder.doBind(DataBinder.java:624)
	at org.springframework.validation.DataBinder.bind(DataBinder.java:609)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.bindAndValidate(PojoModuleOptionsMetadata.java:191)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.interpolate(PojoModuleOptionsMetadata.java:139)
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.interpolate(FlattenedCompositeModuleOptionsMetadata.java:151)
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.interpolate(FlattenedCompositeModuleOptionsMetadata.java:151)
	at org.springframework.xd.module.options.EnvironmentAwareModuleOptionsMetadataResolver$ModuleOptionsMetadataWithDefaults.interpolate(EnvironmentAwareModuleOptionsMetadataResolver.java:167)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:161)
	at org.springframework.xd.dirt.stream.StreamFactory.createStream(StreamFactory.java:84)
...
java.lang.RuntimeException: org.springframework.xd.dirt.modules.metadata.RabbitConnectionMixin@33ee555f setHost 10.0.0.3
	at org.springframework.xd.dirt.modules.metadata.RabbitConnectionMixin.setHost(RabbitConnectionMixin.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1157)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:922)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:82)
	at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:728)
	at org.springframework.validation.DataBinder.doBind(DataBinder.java:624)
	at org.springframework.validation.DataBinder.bind(DataBinder.java:609)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.bindAndValidate(PojoModuleOptionsMetadata.java:191)
	at org.springframework.xd.module.options.PojoModuleOptionsMetadata.interpolate(PojoModuleOptionsMetadata.java:139)
{code}

We can add a band-aid to avoid it in this case, but it seems very odd (to me at least) that we are re-injecting these values.

Or, as [~grenfro] says, maybe we should just remove host/port.",,,,,,,,,,,,,,,,
Fix XD config initializer for ZK connection string,XD-1861,58316,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,17/Jun/14 5:17 PM,18/Jun/14 9:59 AM,10/Jul/21 8:37 AM,18/Jun/14 9:59 AM,,,,,,,1.0 RC1,,Configuration,,,,,0,,,,,,,"Spring Boot 1.1.1 has the following change:

https://github.com/spring-projects/spring-boot/commit/b75578d99c8d435e1f8bf18d0dbb3a2ddf56fdc4

where, an external property source precedence would get re-ordered after the application configuration properties. This change affects Spring XD config initializer which expects an external ""zk-properties"" property source always preceding over the application configuration properties.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222739200,,,44479,true,tmarshall(tmarshall),,,,"0|i002dr:",387,44181,,,Sprint 30,,,3.0,,"17/Jun/14 5:26 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/956","18/Jun/14 9:59 AM;iperumal;Merged:

https://github.com/spring-projects/spring-xd/commit/982dced1b08921915b473f106dd28557bb0a73bb",,,,,,,,,,,,,,,,
Can't use webhdfs with hdfs sink,XD-1857,58296,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,thomas.risberg,thomas.risberg,17/Jun/14 8:08 AM,18/Jun/14 9:40 AM,10/Jul/21 8:37 AM,18/Jun/14 9:40 AM,M7,,,,,,1.0 RC1,,Hadoop,,,,,0,,,,,,,"When using spring.hadoop.fsUri set to webhdfs://localhost/ I'm getting an error:

java.lang.NoClassDefFoundError: javax/ws/rs/core/MediaType

including the following in xd/lib seems to fix this:
- jersey-core-1.9.jar
- jersey-server-1.9.jar
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222739200,XD-234,2014-06-18 09:40:22.821,44459,false,tmarshall(tmarshall),,,,"0|i002cv:",383,44161,,,Sprint 30,,,3.0,,"18/Jun/14 6:27 AM;thomas.risberg;PR: https://github.com/spring-projects/spring-xd/pull/959","18/Jun/14 9:40 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/89b6aa3df7c259c662528478653f32e94a22c108",,,,,,,,,,,,,,,,
IllegalStateException when deploying orphaned stream modules upon a matching container arrival,XD-1850,58269,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,iperumal,iperumal,13/Jun/14 12:52 PM,13/Jun/14 1:14 PM,10/Jul/21 8:37 AM,13/Jun/14 1:14 PM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"Upon a matching container arrival, if there are orphaned stream modules to be deployed, then following exception is thrown:

java.lang.IllegalStateException: Container missing
    at org.springframework.util.Assert.state(Assert.java:385)
    at org.springframework.xd.dirt.core.StreamDeploymentsPath.hasDeploymentInfo(StreamDeploymentsPath.java:275)
    at org.springframework.xd.dirt.core.StreamDeploymentsPath.build(StreamDeploymentsPath.java:233)
    at org.springframework.xd.dirt.server.ContainerListener.getContainersForStreamModule(ContainerListener.java:337)
    at org.springframework.xd.dirt.server.ContainerListener.redeployStreams(ContainerListener.java:278)
    at org.springframework.xd.dirt.server.ContainerListener.onChildAdded(ContainerListener.java:186)
    at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:155)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223171200,,2014-06-13 13:14:51.642,44432,false,tmarshall(tmarshall),,,,"0|i002bj:",377,44134,,,Sprint 30,,,3.0,,"13/Jun/14 1:14 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/28b7ccbdfbb4a410b9f7ce81c420d90fab090036",,,,,,,,,,,,,,,,,
LocalMessageBus Does Not Destroy Channels,XD-1842,58249,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,grussell,grussell,12/Jun/14 1:14 PM,18/Nov/14 7:46 PM,10/Jul/21 8:37 AM,,,,,,,,1.2 TRIAGE,,,,,,,0,,,,,,,"When a {{LocalMessageBus}} bridges producer and consumers, it creates an internal channel and registers it with the application context. This can be a {{DirectChannel}}, a {{QueueChannel}} (for named {{queue:*}} channels) or a {{PublishSubscribeChannel}} (for named {{topic:*}} channels).

These channels remain in the context when both the producer and consumer are undeployed. It's rather benign in that the channels will be reused if the modules are redeployed, but it is a leak and should be addressed at some point. A {{QueueChannel}} should remain in the context if its queue is not empty.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223257600,,,44412,false,tmarshall(tmarshall),,,,"0|i00b0n:",1812,44114,,,,,,2.0,,,,,,,,,,,,,,,,,,,
Remove Dynamically Created Producers,XD-1841,58248,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,liujiong,grussell,grussell,12/Jun/14 1:05 PM,14/Mar/15 5:49 PM,10/Jul/21 8:37 AM,,,,,,,,1.2 TRIAGE,,,,,,,0,,,,,,,"When producers are created/bound dynamically (e.g. from the router sink), they are not unbound when the module is undeployed.

There is currently no metadata in the binding to provide that functionality.

It is not critical because the producers are just sitting there (and may be reused if the module is redeployed, but it is a leak and should be addressed at some time.",,,,,,,,,,,,,XD-434,,,,,,,,,,,,,,,,,,,,,,,,223257600,,,44411,false,sabby(sabby),,,,"0|i00b07:",1810,44113,,,,,,5.0,,,,,,,,,,,,,,,,,,,
FileSourceTest needs to apply label to source and sink,XD-1838,58202,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,11/Jun/14 6:01 PM,15/Jul/14 8:03 AM,10/Jul/21 8:37 AM,13/Jun/14 12:19 PM,M7,,,,,,1.0 RC1,,Acceptance Testing,,,,,0,,,,,,,"* Currently Acceptance FileSource Acceptance Tests are failing
** This is because the sink that tests the result for the file source test is a filesink.  Both use the ""file"" token.  Thus causing a failure
* SimpleFileSource and SimpleFileSink needs to support a label method.
* Update testFileSource to use the labels.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223344000,XD-1605,,44365,true,tmarshall(tmarshall),,,,"0|i0027b:",358,44067,,,Sprint 30,,,3.0,,,,,,,,,,,,,,,,,,,
ContainerListener to redeploy modules based on stream order.,XD-1817,58131,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,eric.bottard,mark.pollack,mark.pollack,06/Jun/14 8:58 AM,15/Jul/14 8:04 AM,10/Jul/21 8:37 AM,17/Jun/14 10:10 AM,,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,When redeploying in the case of a container failure the modules are now redeployed in a random order.  The list of modules in the failed container needs to be sorted based on its position in a given stream and then redeployed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223776000,,,44294,false,tmarshall(tmarshall),,,,"0|i0029b:",367,43996,,,Sprint 30,,,5.0,,,,,,,,,,,,,,,,,,,
Assess XD Fails to connect to remote Redis Instance,XD-1810,58113,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,05/Jun/14 7:09 AM,12/Jun/14 12:08 PM,10/Jul/21 8:37 AM,12/Jun/14 12:08 PM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Deployment: Admin/Container Redis as data transport
SHA: 45e1beb

[Description]
In the case that the Redis is not running locally XD cannot connect to the Redis instance even though the environment variable spring_redis_host has been set.  

[Steps to reproduce]
* Shutdown local instance of Redis.
* For both the admin and container execute the command prior to running the instances:
** export spring_redis_host=YourRedisHost
* Start admin and container instances
* deploy a simple stream 
** You will see the following error:  13:56:59,647 ERROR task-scheduler-9 handler.LoggingHandler:145 - org.springframework.messaging.MessageHandlingException: error occurred in message handler [org.springframework.integration.redis.outbound.RedisQueueOutboundChannelAdapter@6a1f1d12]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.xd.dirt.integration.redis.RedisMessageBus$SendingHandler.handleMessageInternal(RedisMessageBus.java:235)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy57.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:93)
	at org.springframework.integration.endpoint.SourcePollingChannelAdapter.handleMessage(SourcePollingChannelAdapter.java:110)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.doPoll(AbstractPollingEndpoint.java:205)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint.access$000(AbstractPollingEndpoint.java:55)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:149)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$1.call(AbstractPollingEndpoint.java:146)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller$1.run(AbstractPollingEndpoint.java:284)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor.execute(ErrorHandlingTaskExecutor.java:49)
	at org.springframework.integration.endpoint.AbstractPollingEndpoint$Poller.run(AbstractPollingEndpoint.java:278)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Cannot get Jedis connection; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:97)
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:143)
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.getConnection(JedisConnectionFactory.java:41)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:85)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:55)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:169)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:149)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:84)
	at org.springframework.data.redis.core.DefaultListOperations.leftPush(DefaultListOperations.java:68)
	at org.springframework.data.redis.core.DefaultBoundListOperations.leftPush(DefaultBoundListOperations.java:60)
	at org.springframework.integration.redis.outbound.RedisQueueOutboundChannelAdapter.handleMessageInternal(RedisQueueOutboundChannelAdapter.java:109)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 43 more
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool
	at redis.clients.util.Pool.getResource(Pool.java:42)
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.fetchJedisConnector(JedisConnectionFactory.java:90)
	... 54 more
Caused by: redis.clients.jedis.exceptions.JedisConnectionException: java.net.ConnectException: Connection refused
	at redis.clients.jedis.Connection.connect(Connection.java:142)
	at redis.clients.jedis.BinaryClient.connect(BinaryClient.java:75)
	at redis.clients.jedis.BinaryJedis.connect(BinaryJedis.java:1724)
	at redis.clients.jedis.JedisFactory.makeObject(JedisFactory.java:65)
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:819)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:429)
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:360)
	at redis.clients.util.Pool.getResource(Pool.java:40)
	... 55 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at redis.clients.jedis.Connection.connect(Connection.java:137)
	... 62 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223257600,,,44276,true,tmarshall(tmarshall),,,,"0|i0028v:",365,43978,,,Sprint 30,,,5.0,,"10/Jun/14 1:17 PM;grenfro;* Retried after the Boot 1.1.1.BUILD-SNAPSHOT update.  Tests still fail.
* The following settings were used.  
** export spring_redis_host=54.198.128.130
** export XD_TRANSPORT=redis
* As a post test ""redis-cli -h 54.198.128.130 "" was able to connect.","12/Jun/14 12:08 PM;grenfro;* Locally deployed: single node, admin/container: Passed field tests
* EC2 deployed: admin/container: Passed field tests
* Ran full regression on EC2 instance: passed
* Enabled Redis CI Acceptance tests on Bamboo.

",,,,,,,,,,,,,,,,
Twittersearch: ArrayIndexOutOfBoundsException,XD-1799,58075,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,iperumal,iperumal,02/Jun/14 8:53 PM,29/Jul/14 5:32 PM,10/Jul/21 8:37 AM,29/Jul/14 5:32 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"{noformat}
0:44:30,715  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException: 255
	at groovy.json.internal.CharBuf.doAddJsonEscapedString(CharBuf.java:525)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:394)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:357)
	at groovy.json.JsonOutput.writeCharSequence(JsonOutput.java:309)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:260)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeIterator(JsonOutput.java:442)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:272)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.toJson(JsonOutput.java:204)
	at org.springframework.integration.x.twitter.TwitterSearchChannelAdapter.doSendLine(TwitterSearchChannelAdapter.java:137)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:549)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:517)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
20:44:30,718  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:31,136  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException: 255
	at groovy.json.internal.CharBuf.doAddJsonEscapedString(CharBuf.java:525)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:394)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:357)
	at groovy.json.JsonOutput.writeCharSequence(JsonOutput.java:309)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:260)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeIterator(JsonOutput.java:442)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:272)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.toJson(JsonOutput.java:204)
	at org.springframework.integration.x.twitter.TwitterSearchChannelAdapter.doSendLine(TwitterSearchChannelAdapter.java:137)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:549)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:517)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
20:44:31,137  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:31,525  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException: 255
	at groovy.json.internal.CharBuf.doAddJsonEscapedString(CharBuf.java:525)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:394)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:357)
	at groovy.json.JsonOutput.writeCharSequence(JsonOutput.java:309)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:260)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeIterator(JsonOutput.java:442)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:272)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.toJson(JsonOutput.java:204)
	at org.springframework.integration.x.twitter.TwitterSearchChannelAdapter.doSendLine(TwitterSearchChannelAdapter.java:137)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:549)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:517)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
20:44:31,526  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:31,948  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException: 255
	at groovy.json.internal.CharBuf.doAddJsonEscapedString(CharBuf.java:525)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:394)
	at groovy.json.internal.CharBuf.addJsonEscapedString(CharBuf.java:357)
	at groovy.json.JsonOutput.writeCharSequence(JsonOutput.java:309)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:260)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeIterator(JsonOutput.java:442)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:272)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.writeObject(JsonOutput.java:270)
	at groovy.json.JsonOutput.writeMap(JsonOutput.java:425)
	at groovy.json.JsonOutput.toJson(JsonOutput.java:204)
	at org.springframework.integration.x.twitter.TwitterSearchChannelAdapter.doSendLine(TwitterSearchChannelAdapter.java:137)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:200)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask$2.extractData(AbstractTwitterInboundChannelAdapter.java:186)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:549)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:517)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.readStream(AbstractTwitterInboundChannelAdapter.java:180)
	at org.springframework.integration.x.twitter.AbstractTwitterInboundChannelAdapter$StreamReadingTask.run(AbstractTwitterInboundChannelAdapter.java:158)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
20:44:31,949  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:32,345  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:32,346  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:32,727  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:32,727  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:33,103  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:33,104  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:33,548  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:33,548  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:33,935  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:33,935  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:34,318  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:34,318  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:34,696  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:34,696  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:35,060  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:35,061  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:35,445  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:35,445  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:35,825  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:35,825  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:36,221  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:36,221  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:36,602  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:36,602  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:37,006  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:37,006  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:37,396  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:37,396  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:37,790  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:37,790  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:38,179  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:38,179  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:38,559  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:38,559  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:38,967  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:38,967  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:39,365  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:39,365  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:39,747  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:39,747  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:40,179  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:40,179  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:40,596  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:40,597  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:40,978  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:40,979  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:41,342  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:41,342  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:41,732  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:41,732  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:42,125  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:42,126  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:42,511  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:42,512  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:42,918  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:42,918  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:43,309  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:43,309  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:43,689  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:43,689  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:44,071  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:44,071  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:44,470  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:44,470  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:44,847  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:44,847  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:45,307  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:45,308  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:45,710  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:45,710  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:46,136  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:46,137  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:46,530  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:46,530  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:46,913  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:46,913  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:47,306  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:47,306  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:47,700  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:47,700  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:48,124  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:48,124  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:48,520  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:48,520  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:48,912  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:48,912  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:49,292  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:49,293  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:49,683  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:49,683  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:44:50,135  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:173 - Exception while reading stream.
java.lang.ArrayIndexOutOfBoundsException
20:44:50,135  WARN task-scheduler-6 twitter.TwitterSearchChannelAdapter:231 - Exception while reading stream, waiting for 250 ms before restarting
20:45:06,533  INFO main-EventThread server.ContainerRegistrar:260 - Undeploying module [ModuleDescriptor@707a9713 moduleName = 'twittersearch', moduleLabel = [null], group = 's2', sourceChannelName = [null], sinkChannelName = [null], sinkChannelName = [null], index = 0, type = source, parameters = map['query' -> 'clinton'], children = list[[empty]]]
20:45:06,533  INFO main-EventThread module.ModuleDeployer:158 - removed SimpleModule [name=twittersearch, type=source, group=s2, index=0 @21839092]
20:45:06,539  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar:83 - Path cache event: /deployments/modules/db6bb769-0764-41a6-8080-7ca4870cb364/s2.source.twittersearch-0, type: CHILD_REMOVED
igopinathan:spring-xd-1.0.0.M7 igopinatha$ 20:46:08,739  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar:83 - Path cache event: /deployments/modules/db6bb769-0764-41a6-8080-7ca4870cb364/s2.source.twittersearch-0, type: CHILD_ADDED
20:46:08,739  INFO DeploymentsPathChildrenCache-0 server.ContainerRegistrar:545 - Deploying module 'twittersearch-0' for stream 's2'
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,219196800,,2014-06-03 07:36:21.86,44239,false,tmarshall(tmarshall),,,,"0|i002mf:",426,43941,,,Sprint 29,,,2.0,,"03/Jun/14 7:36 AM;dturanski;[~iperumal] What search did you run?","04/Jun/14 3:10 PM;iperumal;[~dturanski] I used this:

stream create s1 --definition ""twittersearch --query='clinton' | log"" --deploy","10/Jun/14 9:41 AM;dturanski;Reopen if it happens again.","29/Jul/14 5:32 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/fdb5f4b8533e14140034711b42e751173b100aac",,,,,,,,,,,,,,
Module count value at module deployments path,XD-1794,58070,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,02/Jun/14 2:33 PM,08/Jul/14 12:02 PM,10/Jul/21 8:37 AM,08/Jul/14 12:02 PM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"In case of module count > 1, the module deployments path for each deployed module always has: {""count"":""1""}

For a scenario:
The stream test1: ""http | log""
with the deployment manifest:
module.log.count=3,module.log.criteria=groups.contains('test')

get /xd/deployments/streams/test1 module.log.count=3,module.log.criteria=groups.contains('test')
get /xd/deployments/modules/9ecaf59a-a1f5-4ed9-984d-f5dff8cc9b57/test1.sink.log-1 {""count"":""1""}
get /xd/deployments/modules/1bbdb2dd-97ed-48a2-a3cd-3633c3e82f52/test1.sink.log-1 {""count"":""1""}",,,,,,,,,,,,,XD-1777,,,,,,,,,,,,,,,,,,,,,,,10.0,221011200,XD-1820,2014-06-12 11:32:50.828,44234,true,tmarshall(tmarshall),,,,"0|i001yv:",320,43936,,,Sprint 30,Sprint 31,,5.0,,"02/Jun/14 3:17 PM;iperumal;It looks like this only happens in case of onContainerAdded() event which subsequently redeploys an orphaned module.","12/Jun/14 11:32 AM;mark.fisher;If this is only happening for an orphaned module, I think it's actually just one manifestation of the problem that will be addressed by XD-1777","12/Jun/14 11:38 AM;mark.fisher;I did verify that the count is accurate upon initial deployment, but only ""1"" after a deferred deploy (deferred meaning there was no container available for immediate redeployment of the module at the time its initial hosting container departed).","12/Jun/14 11:43 AM;mark.fisher;This issue should actually be resolvable once XD-1777 is fixed. In fact, testing the problem described here is one part of verifying the fix for XD-1777.","12/Jun/14 11:44 AM;iperumal;Yes, based on what I see, during the deployment of stream/job upon new container arrival, the ModuleDeploymentWriter uses defaultProvider to get the module deployment properties (which always set to count=1).","07/Jul/14 9:41 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/1021","08/Jul/14 12:02 PM;iperumal;Merged as:

https://github.com/spring-projects/spring-xd/commit/afe27fd02aedddff33823e9dbb693574a9306226",,,,,,,,,,,
Make failed deployment cleanup more robust,XD-1783,58039,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,mark.fisher,mark.fisher,30/May/14 2:32 PM,30/May/14 4:18 PM,10/Jul/21 8:37 AM,30/May/14 4:17 PM,,,,,,,M7,,,,,,,0,,,,,,,"When a deployment fails, the supervisor will clean up failed deployment attempts. If the deployment path is removed while the supervisor is waiting (for instance if the target container departs the cluster) then a NoNodeException will be thrown:

{code}
17:22:59,702  WARN ContainersPathChildrenCache-0 server.ModuleDeploymentWriter:361 - Error while cleaning up failed deployment /deployments/modules/40494bdb-0d8c-4b5d-a895-bf94432d9d3b/s.sink.log-1
org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/40494bdb-0d8c-4b5d-a895-bf94432d9d3b/s.sink.log-1
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.delete(ZooKeeper.java:873)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:239)
	at org.apache.curator.framework.imps.DeleteBuilderImpl$5.call(DeleteBuilderImpl.java:234)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.pathInForeground(DeleteBuilderImpl.java:230)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:215)
	at org.apache.curator.framework.imps.DeleteBuilderImpl.forPath(DeleteBuilderImpl.java:42)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.processResults(ModuleDeploymentWriter.java:355)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.writeDeployment(ModuleDeploymentWriter.java:325)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.writeDeployment(ModuleDeploymentWriter.java:247)
	at org.springframework.xd.dirt.server.ContainerListener.redeployStreamModule(ContainerListener.java:432)
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:403)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:159)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
17:22:59,718 ERROR ContainersPathChildrenCache-0 cache.PathChildrenCache:557 -

java.lang.IllegalStateException: Container 40494bdb-0d8c-4b5d-a895-bf94432d9d3b experienced the following error deploying module log-1 of type sink: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.validateResults(ModuleDeploymentWriter.java:523)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.validateResult(ModuleDeploymentWriter.java:474)
	at org.springframework.xd.dirt.server.ContainerListener.redeployStreamModule(ContainerListener.java:436)
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:403)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:159)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
{code}

Additionally, if the supervisor tries to remove a failed deployment after the container has written to it, the following appears in the log:

{code}
WARN ContainersPathChildrenCache-0 server.ModuleDeploymentWriter:361 - Error while cleaning up failed deployment /deployments/modules/18c7b4d7-991c-487b-a6e3-006b2dbf87fa/s.source.http-0
org.apache.zookeeper.KeeperException$NotEmptyException: KeeperErrorCode = Directory not empty for /xd/deployments/modules/18c7b4d7-991c-487b-a6e3-006b2dbf87fa/s.source.http-0
{code}

The supervisor has to force the removal of the node, including children.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224380800,,,44203,false,tmarshall(tmarshall),,,,"0|i07ldr:",44336,43905,,,,,,2.0,,"30/May/14 4:17 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/802206ce74d2d037d8aa1e8c430659abecd82791",,,,,,,,,,,,,,,,,
Exception thrown when all containers are shut down,XD-1782,58038,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,30/May/14 2:20 PM,30/May/14 4:18 PM,10/Jul/21 8:37 AM,30/May/14 4:18 PM,,,,,,,M7,,,,,,,0,,,,,,,"If all containers are shut down and there's a stream deployed this exception is thrown on the admin:

{noformat}
java.util.NoSuchElementException
	at java.util.ArrayList$Itr.next(ArrayList.java:839)
	at org.springframework.xd.dirt.server.ModuleDeploymentWriter.writeDeployment(ModuleDeploymentWriter.java:260)
	at org.springframework.xd.dirt.server.ContainerListener.redeployStreamModule(ContainerListener.java:432)
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:403)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:159)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:509)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:503)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:500)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$10.run(PathChildrenCache.java:762)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)
{noformat}

This is a regression caused by the earlier code refactoring for stream deployment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224380800,,2014-05-30 16:18:31.993,44202,false,tmarshall(tmarshall),,,,"0|i07ldj:",44335,43904,,,,,,2.0,,"30/May/14 4:18 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/f8869e6c08f7c41409a703e1735436fbd43446da",,,,,,,,,,,,,,,,,
Exception thrown when running undeploy and redeploy a stream tests,XD-1779,58020,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,29/May/14 7:11 PM,08/May/15 10:05 AM,10/Jul/21 8:37 AM,02/Jun/14 4:49 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"Environment: Running on local Mac Instance:
XD Deployment Type: XD-SingleNode 
SHA: 66c28e3

While running a test that deployed and undeployed a stream over 500 times the following exception is thrown:
org.apache.zookeeper.KeeperException$NotEmptyException: KeeperErrorCode = Directory not empty for /xd/deployments/modules/54ef010f-3d5d-4f86-a50f-44453e48633d/streamfoo.source.http-0

[Steps to reproduce]
* Created the following Job and Stream using xd-shell:
** stream create streamfoo --definition ""http --port=9000 | hdfs --directory=/xd/streamfoo --fileName=streamfoo "" 
** job create foo --definition ""hdfsjdbc --resources=/xd/streamfoo/*.txt --names=data --tableName=streamfoo --initializeDatabase=true "" --deploy
* Repeated the following 500 times using xd-shell --cmdfile
** Ran a script that would deploy streamfoo
** Ran a script that would execute the following 25 times
*** http post --data ""hello world0 ""
** Ran a script to undeploy streamfoo
** Ran a script that would launch the job

[Artifacts]
The logfile of the singlenode is attached.",,,,,,,,,,,,,,,,,,,,,,,,"29/May/14 7:11 PM;grenfro;nohup.out;https://jira.spring.io/secure/attachment/22046/nohup.out",,,,,,,,,,,,,224121600,,,44184,true,sabby(sabby),,,,"0|i07ldz:",44337,43886,,,,,,10.0,,"30/May/14 6:59 AM;grenfro;Need to reproduce.","02/Jun/14 12:45 PM;grenfro;Reran the test, had to stop early, but it made it past the previous test.  Will re-run again.","02/Jun/14 4:49 PM;grenfro;The latest release resolves this defect.",,,,,,,,,,,,,,,
Do not allow a stream definition to contain ambiguous module references,XD-1772,57994,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,eric.bottard,mark.pollack,mark.pollack,28/May/14 2:53 PM,11/Jun/14 5:31 AM,10/Jul/21 8:37 AM,11/Jun/14 5:31 AM,,,,,,,1.0 RC1,,DSL,,,,,0,,,,,,,"A stream definition such as http | transform | transform | file 

will limit functionality such as taps since you can't reference which specific module to apply the tap. 

Should be proactive in parsing the DSL and force the use of a label to disambiguate.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223430400,,2014-06-02 05:09:13.24,44158,false,tmarshall(tmarshall),,,,"0|i07lvj:",44416,43860,,,Sprint 29,,,4.0,,"02/Jun/14 5:09 AM;eric.bottard;Do we want to fail such an attempt, or have the system automatically come up with an alias for the modules? I remember speaking with MF about the second solution, even though it may not be the most intuitive to the user IMO.","02/Jun/14 9:16 AM;mark.fisher;I think I'm leaning toward forcing the user to provide an explicit label. Otherwise, I'm afraid there will always be confusion regarding any counter suffix (is it the incrementing number of instances for a given module name, or is it the index of each module within the overall stream definition?).","06/Jun/14 10:33 AM;mark.pollack;let's require an explicit label.","11/Jun/14 5:31 AM;mark.fisher;https://github.com/markfisher/spring-xd/commit/03cf962845499610ad021d9e6689bccbf5e13cef",,,,,,,,,,,,,,
Handle NPE while deploying stream module at the Container,XD-1770,57990,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,28/May/14 8:13 AM,28/May/14 2:45 PM,10/Jul/21 8:37 AM,28/May/14 9:45 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"When trying to deploy a stream module, the ContainerRegistrar throws NPE if the deployment loader couldn't load a non-null stream based on the stream name.

07:10:29,902 ERROR DeploymentsPathChildrenCache-0 server.ContainerRegistrar:450 - Exception deploying module
java.lang.NullPointerException
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:549)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:436)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$800(ContainerRegistrar.java:96)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:803)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224553600,XD-1473,2014-05-28 09:45:22.371,44154,false,tmarshall(tmarshall),,,,"0|i07l3j:",44290,43856,,,Sprint 28,,,1.0,,"28/May/14 9:45 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/8d480c617fd35fc19e30f7c84bda07b45e8752cb",,,,,,,,,,,,,,,,,
Status on Shell command prompt is inconsistent,XD-1759,57958,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,26/May/14 7:32 AM,11/Jun/14 1:35 AM,10/Jul/21 8:37 AM,11/Jun/14 1:35 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Deployment: xd-shell local, xd-singlenode (ec2)
SHA: 942c7868e3e0d0cf7730b536170438a0291f5cab

[Description]
<Case 1>
Once successfully connected to a server, if you connect to a server that is not present.  The prompt still shows XD when it should show server-unknown.  Can be reproduced consistently.
Conversely:
<Case 2>
Attempted to connect to a xd-singlenode on ec2 using a local xd-shell.  
The xd-singlenode was not running.  After bringing up the xd-singlenode, I was able to connect however the status did not change from ""server-unknown""  *This behavior, can not be consistently reproduced, but have seen it happen on multiple accounts.* 

[Steps to reproduce]
<Case 1>
1. Bring up shell while xd-singlenode is not running.
2. Bring up xd-singlenode
3. Connect to xd-singlenode
* xd:>admin config server http://localhost:9393

4. Connect to a fake address
* xd:>admin config server http://foo.bar:9393

<Case 2>
1.  Attempt to connect to remote server that is not available
* xd:>admin config server http://ec2-54-237-186-186.compute-1.amazonaws.com:9393
* Unable to contact XD Admin Server at 'http://ec2-54-237-186-186.compute-1.amazonaws.com:9393'.

2. Bring up xd-singlenode on remote
* server-unknown:>admin config server http://ec2-54-237-186-186.compute-1.amazonaws.com:9393
* Successfully targeted http://ec2-54-237-186-186.compute-1.amazonaws.com:9393

3. Still see the incorrect prompt.
server-unknown:>
server-unknown:>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223430400,XD-1820,2014-06-11 01:35:35.118,44122,true,tmarshall(tmarshall),,,,"0|i07lv3:",44414,43824,,,Sprint 29,,,5.0,,"10/Jun/14 6:37 AM;grenfro;After Reviewing the code, it looks like the problem is on the Spring-Shell side.  
In the org.springframework.shell.core.JLineShell promptLoop method the application caches the first prompt.  And thus when generatePromptUpdate is called for the first time the new prompt will be generated and shellPrompt will be set.  Any change to the prompt that occurs will call the generatePromptUpdate and the shellPrompt will be set accordingly.  
Until you try to return to the original prompt. In this case the loop will see that the new prompt and the cached prompt are the same and it will NOT update the shellPrompt.  

The solution is to set the cached prompt on each prompt change.
","11/Jun/14 1:35 AM;eric.bottard;Merged https://github.com/spring-projects/spring-shell/commit/8fa5688ae0ece753437a7f3bb8e278e3d31e6294
and
https://github.com/spring-projects/spring-xd/commit/565576d71a035e679745aac8035c8294aad58076",,,,,,,,,,,,,,,,
JMS Source (ActiveMQ) failing to use jmsUrl environment variable,XD-1758,57956,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,26/May/14 7:08 AM,15/Jul/14 8:04 AM,10/Jul/21 8:37 AM,20/Jun/14 2:04 PM,,,,,,,1.0 RC1,,Stream Module,,,,,0,,,,,,,"Deployed on: SingleNode Ec2, SingleNode Mac
SHA: 942c7868e3e0d0cf7730b536170438a0291f5cab

[Description]
JMS Source (Activemq) tried to access a broker on localhost.  
The current deployment uses the following to set the JMS Broker:
* export amq_url=tcp://ec2-54-221-32-82.compute-1.amazonaws.com:61616

[Analysis]
After reviewing the configuration of the jms-activemq-infrastructure-context.xml, it was noted that the brokerUrl environment variable has been changed from amq.url to amqUrl.  While the jms-activemq.properties has not been changed (still amq.url).  
After setting the following, the test still failed:
* export amqUrl=tcp://ec2-54-221-32-82.compute-1.amazonaws.com:61616

After going into the jms-activemq-infrastructure-context.xml and replacing the amqUrl with amq.url, the jms source (activemq) returned to normal operation.


[Incident]
Acceptance tests reported a failure on Saturday Morning's build that the JMS Source failed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224208000,,2014-06-02 02:57:01.095,44120,true,tmarshall(tmarshall),,,,"0|i00287:",362,43822,,,Sprint 30,,,2.0,,"02/Jun/14 2:57 AM;eric.bottard;Still, no module option should have a dot in its name (as that is used for composed module options).

We should investigate why using amqUrl failed (it's ok to use any non-dotted name)

",,,,,,,,,,,,,,,,,
Resolve runtime module option properties using module metadata,XD-1757,57940,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,23/May/14 11:33 AM,23/May/14 3:52 PM,10/Jul/21 8:37 AM,23/May/14 3:52 PM,,,,,,,M7,,Configuration,,,,,0,,,,,,,"Since the module metadata properties are resolved at runtime (when the module gets deployed), we can resolve the module options values that are already resolved in there.

For example, currently the ""runtime modules"" command for ""log"" module would show this:

runtime modules

[7m[27;32m  Module            Container Id                          Options
  ----------------  ------------------------------------  --------------------------------------------------------
  s1.source.http-0  633f0fb1-5396-4bc0-8f1e-c9d5104e0ea7  {port=9000}
  s1.sink.log-1     633f0fb1-5396-4bc0-8f1e-c9d5104e0ea7  {name=${xd.stream.name}, expression=payload, level=INFO}

In this case, we can resolve the module option ""name"" from the module metadata.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224985600,,,44104,true,tmarshall(tmarshall),,,,"0|i07ku7:",44248,43806,,,Sprint 28,,,2.0,,"23/May/14 11:59 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/888","23/May/14 3:52 PM;iperumal;Merged:

https://github.com/spring-projects/spring-xd/commit/942c7868e3e0d0cf7730b536170438a0291f5cab",,,,,,,,,,,,,,,,
Assess if GemfireJsonServer & gemfireServer sinks should close the client cache,XD-1754,57934,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Complete,dturanski,grenfro,grenfro,23/May/14 10:27 AM,17/Jun/14 5:42 AM,10/Jul/21 8:37 AM,17/Jun/14 5:42 AM,,,,,,,1.0 RC1,,,,,,,0,,,,,,,"* OS - Mac
* XD Deployment Type - Singlenode
* SHA - bb4dd58
* Required Software - XD Gemfire Sample Server

[Description]
After creating and destroying 3 streams with gemfireJsonServer sink the 4th will fail with this error:  
* 44707 refused connection: The number of clients, 4, exceeded the limit of 3 allowed by the default evaluation license.

[Steps to reproduce]
* From your shell execute the following 4 times:
** stream create --name stocks --definition ""http --port=9090 | gemfire-json-server --regionName=Stocks --host=ec2-54-221-32-82.compute-1.amazonaws.com --port=40404 --keyExpression=payload.getField('symbol')"" --deploy
** stream destroy stocks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222912000,,2014-05-23 13:47:44.517,44098,false,tmarshall(tmarshall),,,,"0|i0029j:",368,43800,,,Sprint 30,,,4.0,,"23/May/14 1:47 PM;dturanski;This one is actually tricky because we have close=false on purpose:
{code}
<gfe:client-cache id=""client-cache""
		use-bean-factory-locator=""false"" close=""false"" />
{code}

This is because the Gemfire Cache is a true singleton. The problem with closing the cache when the stream is undeployed (context closed) is that all other deployed streams that involve a gemfire client lose their connections as well. So this will take some further investigation. ","23/May/14 4:46 PM;grenfro;This maybe a non issue.  The only case it could be a problem, is if the user is in development mode creating and destroying streams (that use the gemfire-server).  Even with that they probably will have more connections because they will be using a real gemfire server.
As far as testing is concerned I will have to re-order the Acceptance tests to do eager destruction of servers as so that I won't run out of connections (since we are limited to 3). Right now its a  lazy destruction.  Also be judicious on how the gemfire tests are executed.  ","17/Jun/14 5:42 AM;dturanski;XD depends on SDG 1.4 which transitively includes gemfire-7.0.2.jar. Starting with 7.0.2, there are no restrictions on the number of client connections with the evaluation license. Therefore this is no longer an issue for XD.",,,,,,,,,,,,,,,
Exception handling at Module info command,XD-1750,57927,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,22/May/14 4:28 PM,27/May/14 5:56 PM,10/Jul/21 8:37 AM,27/May/14 5:56 PM,,,,,,,M7,,CLI,,,,,0,,,,,,,"When not prefixing with appropriate module type, module info command throws StringIndexOutOfBoundsException:


xd:>module info file
java.lang.StringIndexOutOfBoundsException: Failed to convert 'file' to type QualifiedModuleName for option 'name,'
String index out of range: -1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224640000,,2014-05-27 17:56:06.06,44090,false,tmarshall(tmarshall),,,,"0|i07ksf:",44240,43792,,,Sprint 28,,,2.0,,"22/May/14 5:39 PM;iperumal;There are couple of other issues as well:

xd>module info source:hdfs
module info source:hdfs
GET request for ""http://localhost:9393/modules/source/hdfs"" resulted in 500 (Internal Server Error); invoking error handler

[7m[27;31mCommand failed org.springframework.xd.rest.client.impl.SpringXDException: NullPointerException


xd:>[mmodule info test:source
module info test:source

[7m[27;35mjava.lang.IllegalArgumentException: Failed to convert 'test:source' to type QualifiedModuleName for option 'name,'


","22/May/14 6:20 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/886","27/May/14 5:56 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/32fd56145d24d625e974e281168abc97e9268c2a",,,,,,,,,,,,,,,
ClassNotFoundException: o.s.social.twitter.api.Tweet with Rabbit-transport,XD-1743,57899,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,hillert,hillert,21/May/14 12:53 PM,21/May/14 1:25 PM,10/Jul/21 8:37 AM,21/May/14 1:25 PM,,,,,,,,,,,,,,0,,,,,,,"Using Rabbit as a transport, I get the below error when creating the following stream:

{code}
stream create mytweets --definition ""twittersearch --query='spring' | log"" --deploy true
{code}

In local mode, the stream executes just fine. Of course it works with *--outputType=application/json*. Nevertheless, I was not expecting that exception (see below)

Issue was also verified by [~grenfro]. 

{code}
org.springframework.amqp.rabbit.listener.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:758)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:653)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:576)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$001(SimpleMessageListenerContainer.java:75)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$1.invokeListener(SimpleMessageListenerContainer.java:154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:69)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:255)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:162)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:87)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy102.invokeListener(Unknown Source)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeListener(SimpleMessageListenerContainer.java:1111)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:559)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:904)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:888)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$500(SimpleMessageListenerContainer.java:75)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:989)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.messaging.MessageHandlingException: error occurred in message handler [se.0.convert.bridge]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:93)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter.access$400(AmqpInboundChannelAdapter.java:44)
	at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$1.onMessage(AmqpInboundChannelAdapter.java:90)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:650)
	... 24 more
Caused by: org.springframework.xd.dirt.integration.bus.serializer.SerializationException: unable to deserialize [null]. Class not found.
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:381)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:363)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayloadIfNecessary(MessageBusSupport.java:346)
	at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus.access$500(RabbitMessageBus.java:70)
	at org.springframework.xd.dirt.integration.rabbit.RabbitMessageBus$ReceivingHandler.handleRequestMessage(RabbitMessageBus.java:448)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 37 more
Caused by: java.lang.ClassNotFoundException: org.springframework.social.twitter.api.Tweet
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.springframework.xd.dirt.integration.bus.MessageBusSupport.deserializePayload(MessageBusSupport.java:375)
	... 43 more
{code}",,,,,,,,,,,,,,,,,XD-1654,,,,,,,,,,,,,,,,,,,,225158400,,2014-05-21 13:25:54.925,44062,false,tmarshall(tmarshall),,,,"0|i07knz:",44220,43764,,,,,,4.0,,"21/May/14 1:25 PM;mark.pollack;This is to be addressed by XD-1654",,,,,,,,,,,,,,,,,
Container reconnection to ZK fails intermittently,XD-1739,57868,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,20/May/14 9:27 AM,28/May/14 2:07 PM,10/Jul/21 8:37 AM,21/May/14 2:12 PM,M6,,,,,,M7,,Runtime,,,,,0,,,,,,,"As reported by Matt Stine:

After closing and reopening a laptop, the following stack trace appears in the container log:

{noformat}
00:47:28,226  INFO main-EventThread state.ConnectionStateManager:194 - State change: RECONNECTED
00:47:28,226  INFO ConnectionStateManager-0 zookeeper.ZooKeeperConnection:255 - >>> Curator connected event: RECONNECTED
00:47:28,322 ERROR ConnectionStateManager-0 listen.ListenerContainer:96 - Listener (org.springframework.xd.dirt.zookeeper.ZooKeeperConnection$DelegatingConnectionStateListener@6abf4158) threw an exception
java.lang.RuntimeException: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /xd/containers/5a8deb7b-fd93-42a7-a393-2f15023e007a
        at org.springframework.xd.dirt.server.ContainerRegistrar.registerWithZooKeeper(ContainerRegistrar.java:301)
        at org.springframework.xd.dirt.server.ContainerRegistrar.access$100(ContainerRegistrar.java:93)
        at org.springframework.xd.dirt.server.ContainerRegistrar$ContainerAttributesRegisteringZooKeeperConnectionListener.onConnect(ContainerRegistrar.java:316)
        at org.springframework.xd.dirt.zookeeper.ZooKeeperConnection$DelegatingConnectionStateListener.stateChanged(ZooKeeperConnection.java:257)
        at org.apache.curator.framework.state.ConnectionStateManager$2.apply(ConnectionStateManager.java:222)
        at org.apache.curator.framework.state.ConnectionStateManager$2.apply(ConnectionStateManager.java:218)
        at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
        at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
        at org.apache.curator.framework.state.ConnectionStateManager.processEvents(ConnectionStateManager.java:215)
        at org.apache.curator.framework.state.ConnectionStateManager.access$000(ConnectionStateManager.java:42)
        at org.apache.curator.framework.state.ConnectionStateManager$1.call(ConnectionStateManager.java:110)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /xd/containers/5a8deb7b-fd93-42a7-a393-2f15023e007a
        at org.springframework.xd.dirt.container.store.ZooKeeperContainerAttributesRepository.save(ZooKeeperContainerAttributesRepository.java:75)
        at org.springframework.xd.dirt.container.store.ZooKeeperContainerAttributesRepository.save(ZooKeeperContainerAttributesRepository.java:42)
        at org.springframework.xd.dirt.server.ContainerRegistrar.registerWithZooKeeper(ContainerRegistrar.java:295)
        ... 15 more
Caused by: org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists for /xd/containers/5a8deb7b-fd93-42a7-a393-2f15023e007a
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:119)
        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
        at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
        at org.apache.curator.framework.imps.CreateBuilderImpl$11.call(CreateBuilderImpl.java:676)
        at org.apache.curator.framework.imps.CreateBuilderImpl$11.call(CreateBuilderImpl.java:660)
        at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
        at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:656)
        at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:441)
        at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:431)
        at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:44)
        at org.springframework.xd.dirt.container.store.ZooKeeperContainerAttributesRepository.save(ZooKeeperContainerAttributesRepository.java:69)
        ... 17 more
{noformat}

This can occur if ZK does not remove the ephemeral node before the container creates a new one. This can be fixed in the following ways:

* Remove the existing ephemeral node if it already exists
* Register containers with a new UUID upon every new connection

For now I'll implement the first solution.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225158400,XD-1473,2014-05-21 14:12:23.24,44031,false,tmarshall(tmarshall),,,,"0|i002on:",436,43733,,,Sprint 27,Sprint 28,,2.0,,"21/May/14 2:12 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/fe0b5781d06138b5350f1b195995e2e440b26f3a",,,,,,,,,,,,,,,,,
FileJdbcTest & JdbcHdfsTest failing,XD-1735,57854,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,grenfro,grenfro,19/May/14 7:01 PM,28/May/14 2:44 PM,10/Jul/21 8:37 AM,20/May/14 11:40 AM,M7,,,,,,M7,,Acceptance Testing,,,,,0,,,,,,,"JdbcHdfsTest, FileJdbcTest works for singlenode but not for admin & Container on the same machine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225331200,XD-1605,,44017,true,tmarshall(tmarshall),,,,"0|i07kfr:",44183,43719,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Zookeeper NoNode exception when deploying stream,XD-1730,57816,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,askogman,askogman,19/May/14 1:00 AM,28/May/14 2:07 PM,10/Jul/21 8:37 AM,19/May/14 12:26 PM,,,,,,,M7,,,,,,,0,,,,,,,"Same problem on M6 and using BUILD-SNAPSHOT.

When deploying a stream that has a slow-starting component (that connects to Gemfire), the deployment fails with a ZK NoNode exception.

No log from the component seen, but in all honesty, the component could be waiting on a timeout.

org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/2af8624b-777c-4084-aa1a-9d675b53afe3/test1.sink.reactor-batching-client-1/metadata
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)
	at org.apache.curator.framework.imps.CreateBuilderImpl$11.call(CreateBuilderImpl.java:676)
	at org.apache.curator.framework.imps.CreateBuilderImpl$11.call(CreateBuilderImpl.java:660)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.CreateBuilderImpl.pathInForeground(CreateBuilderImpl.java:656)
	at org.apache.curator.framework.imps.CreateBuilderImpl.protectedPathInForeground(CreateBuilderImpl.java:441)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:431)
	at org.apache.curator.framework.imps.CreateBuilderImpl.forPath(CreateBuilderImpl.java:44)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:370)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$800(ContainerRegistrar.java:93)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:706)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)",,,,,,,,,,,,,,,,,,,,,,,,"19/May/14 1:00 AM;askogman;sxd-deploy-log.txt;https://jira.spring.io/secure/attachment/22021/sxd-deploy-log.txt",,,,,,,,,,,,,225331200,XD-1473,2014-05-19 12:26:16.412,43979,true,tmarshall(tmarshall),,,,"0|i07k7j:",44146,43681,,,Sprint 27,,,2.0,,"19/May/14 12:26 PM;iperumal;Merged: 

https://github.com/spring-projects/spring-xd/commit/8a572f798a67cf8a0ec7b293533423721d900e8d",,,,,,,,,,,,,,,,,
ZooKeeper Job deployments path state is not updated after successful deployment,XD-1719,57769,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,15/May/14 5:47 PM,28/May/14 2:41 PM,10/Jul/21 8:37 AM,16/May/14 12:01 PM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"After successful job deployment, the Job deployments path in ZK doesn't get updated with the data {""state"": ""deployed""}

Though this data is not used for deployed instance repository (org.springframework.xd.dirt.stream.zookeeper.ZooKeeperJobRepository) to check for the deployment status, it may be better to have this state updated like stream deployment path.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225590400,XD-1473,,43932,true,tmarshall(tmarshall),,,,"0|i07jyn:",44106,43634,,,Sprint 27,,,1.0,,"15/May/14 7:02 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/852","16/May/14 12:01 PM;iperumal;Merged https://github.com/spring-projects/spring-xd/commit/ad08dad51481809f2c74acd83a9e882ff81a8ccd",,,,,,,,,,,,,,,,
Handling JobExecution stop action if the JobExecution is COMPLETED,XD-1709,57738,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,14/May/14 12:22 PM,28/May/14 2:18 PM,10/Jul/21 8:37 AM,14/May/14 9:57 PM,,,,,,,M7,,Batch,,,,,0,,,,,,,"Currently, the flag ""stoppable"" on JobExecutionInfoResource is used to find if the jobExecution can be stopped.

Since this flag is set to true even if the JobExecution status is COMPLETED, the jobExecution can still say it can be stopped.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225763200,,2014-05-14 21:57:10.761,43903,true,tmarshall(tmarshall),,,,"0|i07jsn:",44079,43605,,,,,,1.0,,"14/May/14 12:47 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/847","14/May/14 9:57 PM;hillert;PR merged.",,,,,,,,,,,,,,,,
Re-deployment of stream/job modules upon container departure doesn't choose appropriate container candidates,XD-1708,57736,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,14/May/14 10:50 AM,28/May/14 2:43 PM,10/Jul/21 8:37 AM,19/May/14 11:08 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"Upon container departure, the ContainerListener's onChildLeft() event triggers redeployment of stream/job modules that were deployed into the leaving container. During the redeployment, it happens that the container candidates from the DefaultContainerMatcher *sometimes* (based on the subset from distributeForRequestedCount(List<Container> candidates, int count))  includes the container which already have the module of the *same* stream/job definition deployed. This causes the re-deployment silently swallowing the NodeExistsException and the module being re-deployed doesn't actually get deployed.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225331200,XD-1473,,43901,true,tmarshall(tmarshall),,,,"0|i07js7:",44077,43603,,,Sprint 27,,,4.0,,"14/May/14 11:17 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/845","19/May/14 11:31 PM;iperumal;Also, merged https://github.com/spring-projects/spring-xd/commit/af0e3bb8b2bc1cd051b2c97e12135601cdb80d95",,,,,,,,,,,,,,,,
The Dynamic Router example in the docs throws an exception with Rabbit Transport,XD-1707,57732,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,grussell,dbeauregard,dbeauregard,14/May/14 7:55 AM,16/May/14 8:20 AM,10/Jul/21 8:37 AM,16/May/14 8:20 AM,M6,,,,,,M7,,Runtime,,,,,0,PullRequest,,,,,,"The example in the M6 documentation for the Dynamic Router (here: http://docs.spring.io/spring-xd/docs/1.0.0.M6/reference/html/#dynamic-router) for the SpEL-Based Routing throws an exception when processing the message (from the HTTP post) saying ""No bean named 'queue:foo' is defined"", when using RabbitMQ as the transport.  I do not know a workaround.

Steps to reproduce:
1) Run RabbitMQ locally
2) Run xd-singlenode --transport rabbit
3) xd:>stream create f --definition ""queue:foo > transform --expression=payload+'-foo' | log"" --deploy

xd:>stream create b --definition ""queue:bar > transform --expression=payload+'-bar' | log"" --deploy

xd:>stream create r --definition ""http | router --expression=payload.contains('a')?'queue:foo':'queue:bar'"" --deploy

4) xd:>http post --data ""a""

5) This should give a stacktrace:
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'queue:foo' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:641)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1159)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:99)
	... 83 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225676800,,2014-05-14 09:49:41.321,43897,false,tmarshall(tmarshall),,,,"0|i07jrb:",44073,43599,,,Sprint 27,,,1.0,,"14/May/14 9:49 AM;grussell;Confirmed; the LocalMessageBus registers the named channel in the beanFactory.

There is no such logic in the Rabbit/Redis message buses.

We will also need to fix up the docs to reflect the new logger name; e.g. {{11:54:19,868  WARN ThreadPoolTaskScheduler-1 sink.f:145 - a-foo}} (sink instead of logger).
","14/May/14 12:26 PM;dturanski;LocalSingleNodeStreamDeploymentIntegrationTests.verifyChannelsRegisteredOnDemand()  should be moved to the base class to run the test against all transports. ","14/May/14 12:36 PM;grussell;Yep; fails with the rabbit bus; thanks for pointing me to that test case.","14/May/14 7:48 PM;grussell;Still needs work on pub-sub {{topic:}} named channels (which looks to me like it's broken even with the {{LocalMessageBus}} ), but it fixes the reported problem and I would appreciate any reviews before picking this up again tomorrow...

Please don't waste any (more) time reviewing that; I found some flaws and am reworking it.","15/May/14 8:16 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/853",,,,,,,,,,,,,
hdfs sink loads Codecs class during 'module info --name sink:hdfs' command,XD-1701,57724,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,liujiong,thomas.risberg,thomas.risberg,14/May/14 4:49 AM,27/Jun/14 1:05 PM,10/Jul/21 8:37 AM,27/Jun/14 1:05 PM,,,,,,,1.0 RC1,,Stream Module,,,,,0,,,,,,,"The hdfs sink metadata causes loading of  org.springframework.data.hadoop.store.codec.Codecs class during 'module info --name sink:hdfs' command since the type is a specific Spring Hadoop class

options.codec.description = compression codec alias name
options.codec.type = org.springframework.data.hadoop.store.codec.Codecs
options.codec.default =

Don't think we want to tie the sink module to specific Spring Hadoop classes during runtime of the admin, we can't be sure that admin has hadoop classes on classpath in all environments and there is no way of specifying the hadoop distro for admin.

Wouldn't it be better to have this option as a String to be passed in to the module's context that could then load the class",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223603200,XD-234,2014-06-06 08:30:40.276,43889,true,tmarshall(tmarshall),,,,"0|i00au7:",1783,43591,,,Sprint 30,,,3.0,,"06/Jun/14 8:30 AM;eric.bottard;Codecs is a Spring Hadoop class, not a specific hadoop distro class, right?
So I'm not sure I understand what the problem is (we are ok with having Spring Hadoop on the admin classpath)","06/Jun/14 9:00 AM;thomas.risberg;The Codecs class loads some Hadoop classes, so if you don't have the correct Hadoop jars on the admin classpath this module info request will fail.","06/Jun/14 9:09 AM;eric.bottard;Are you sure about that? All I see is some classNAME (String).","06/Jun/14 10:52 AM;thomas.risberg;There is a static initializer in Codecs the loops over the values which I think in turn causes the Hadoop classes to be loaded since some enum values are defined like this:

  GZIP(new DefaultCodecInfo(GzipCodec.class.getName(), false, ""gzip""), ""GZIP""),

GzipCodec is an Hadoop class.","09/Jun/14 2:03 AM;eric.bottard;Indeed. For some reason I had the idea this was an enum and so was confident that only blank final String constants were at play here.

The solution here would be to use the classname as a plain String then, even for classes to which we have compile time access. There are already a handful of those. What do you think?",,,,,,,,,,,,,
syslog-tcp throws exception when receiving syslog data,XD-1683,57675,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,grenfro,grenfro,09/May/14 2:51 PM,28/May/14 2:16 PM,10/Jul/21 8:37 AM,13/May/14 12:02 PM,M7,,,,,,M7,,Stream Module,,,,,0,,,,,,,"XD Deployment 
Description	XD Cluster (1 Container)
Environment	EC2
Type Of Test	Manual test via shell
Test Failed On	syslog-tcp (only test that was run)
Build Used	Built May 7, 10:29 UTC

[Setting up the Environment]
* Used the wiki instructions to setup the syslog on the ec2 instance. 
* Deploy the stream below:
stream create mystream --definition ""syslog-tcp | file --binary=true --mode=REPLACE"" --deploy 
* On the EC2 Instance execute the line below:
logger -p local3.info -t TESTING ""Test Syslog Message""

[What occurred]
Stream fails to process inbound syslog information and throws the exception below: 

Exception in thread ""inbound.mystream.0-redis:queue-inbound-channel-adapter17"" org.springframework.messaging.core.DestinationResolutionException: failed to look up MessageChannel with name 'errorChannel' in the BeanFactory (and there is no HeaderChannelRegistry present).
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:108)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:44)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.resolveErrorChannel(MessagePublishingErrorHandler.java:111)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.handleError(MessagePublishingErrorHandler.java:78)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:55)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'errorChannel' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:641)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1159)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:99)
	... 5 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225849600,,2014-05-13 09:44:59.314,43840,true,tmarshall(tmarshall),,,,"0|i07jhz:",44031,43542,,,Sprint 27,,,5.0,,"12/May/14 6:21 AM;grenfro;Also seeing this on the Rabbit Sink:
Exception in thread ""inbound.rabbitsend.0-redis:queue-inbound-channel-adapter18"" org.springframework.messaging.core.DestinationResolutionException: failed to look up MessageChannel with name 'errorChannel' in the BeanFactory (and there is no HeaderChannelRegistry present).
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:108)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:44)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.resolveErrorChannel(MessagePublishingErrorHandler.java:111)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.handleError(MessagePublishingErrorHandler.java:78)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:55)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'errorChannel' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:641)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1159)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:99)
","12/May/14 6:22 AM;grenfro;Also XD-1675 may be rolled into this ticket.","13/May/14 9:44 AM;mark.pollack;retry with xd-singlenode and if that works, retry with 1 node admin/1 node container on local box to remove any EC2 issues from the issues.","13/May/14 12:02 PM;grenfro;In this case, after running on localhost (singlenode) that there was a conversion exception when the --binary flag was set to true.  Not sure why these exception did not show up in the stacktrace on EC2.  That may be a different defect.  Anyhow also saw that with the --mode=REPLACE that exceptions were being fired because it failed to move the output.out.write to the output.out.   So for this test I removed both settings and the test worked.   ",,,,,,,,,,,,,,
FilePollHdfs is not writing results to hdfs,XD-1675,57635,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,grenfro,grenfro,07/May/14 2:40 PM,28/May/14 2:17 PM,10/Jul/21 8:37 AM,14/May/14 9:30 AM,,,,,,,M7,,Batch,,,,,0,,,,,,,"XD Deployment 
Description:		XD Cluster (1 Container)
Environment:		EC2
Type Of Test:		Manual Test
Test Failed On		filepollhdfs (only test that was run)
Build Used		Built May 7, 10:29 UTC

From the shell, attempted to create filepollhdfs however no results were written to hdfs (hadoop22).  

The commands executed were the following:
job create myjob --definition ""filepollhdfs  --names=forename,surname,address"" --deploy
stream create mystream --definition ""file --dir=67fc27a6-224d-4c67-a02a-40730bcf8906 --pattern='*.out' > queue:job:myjob"" --deploy

No warnings nor exceptions were displayed till I changed the log4j.logger.org.springframework to INFO and restarted the container. 
Then when I copied the sample file to the monitored directory the log reported:
21:30:07,605  INFO DeploymentsPathChildrenCache-0 module.ModuleDeployer:118 - deployed SimpleModule [name=file, type=source, group=mystream, index=0 @61612c7c]
Exception in thread ""inbound.job:myjob-redis:queue-inbound-channel-adapter1"" org.springframework.messaging.core.DestinationResolutionException: failed to look up MessageChannel with name 'errorChannel' in the BeanFactory (and there is no HeaderChannelRegistry present).
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:108)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:44)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.resolveErrorChannel(MessagePublishingErrorHandler.java:111)
	at org.springframework.integration.channel.MessagePublishingErrorHandler.handleError(MessagePublishingErrorHandler.java:78)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:55)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'errorChannel' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:641)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1159)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:282)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.integration.support.channel.BeanFactoryChannelResolver.resolveDestination(BeanFactoryChannelResolver.java:99)

When using the attached sample file, you need to rename the file to try2.out.",,,,,,,,,,,,,,,,,,,,,,,,"07/May/14 2:40 PM;grenfro;try2.csv;https://jira.spring.io/secure/attachment/21996/try2.csv",,,,,,,,,,,,,225763200,,,43800,true,tmarshall(tmarshall),,,,"0|i07ja7:",43996,43502,,,Sprint 27,,,5.0,,"08/May/14 6:22 AM;grenfro;May have found the issue.  The admin and container lost connectivity to the mysql instance.  This caused a cascading problem.  I will retry the test.
","08/May/14 6:37 AM;grenfro;Retried against a ready XD instance and it still failed.","14/May/14 9:30 AM;grenfro;I can now see the errors that caused the initial problem.  In this case it was a missing --ref=true on the file source.  ",,,,,,,,,,,,,,,
Accessing non-existing module causes NullPointerException,XD-1674,57633,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,eric.bottard,hillert,hillert,07/May/14 1:06 PM,04/Jun/14 9:08 AM,10/Jul/21 8:37 AM,04/Jun/14 9:08 AM,M6,,,,,,1.0 RC1,,,,,,,0,,,,,,,"This source exists:
{code}
http://localhost:9393/modules/source/time
{code}
But trying to access a non-existing source such as:
{code}
http://localhost:9393/modules/source/time2
{code}
Triggers in the UI: 
{code}
[{""links"":[],""logref"":""NullPointerException"",""message"":""NullPointerException""}]
{code}
On the server-side:
{code}
6:03:45,387 ERROR http-nio-9393-exec-3 rest.RestControllerAdvice:199 - Caught exception while handling a request
java.lang.NullPointerException
	at org.springframework.xd.dirt.rest.DetailedModuleDefinitionResourceAssembler.toResource(DetailedModuleDefinitionResourceAssembler.java:49)
	at org.springframework.xd.dirt.rest.ModulesController.info(ModulesController.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter(WebRequestTraceFilter.java:115)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextFilterConfiguration$1.doFilterInternal(EndpointWebMvcAutoConfiguration.java:137)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:85)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:680)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1680)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)
{code}

Accessing a non existing resource should probably result in a 404 status code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223948800,XD-387,2014-06-03 04:52:42.499,43798,true,tmarshall(tmarshall),,,,"0|i002n3:",429,43500,,,Sprint 29,,,3.0,,"03/Jun/14 4:52 AM;eric.bottard;Could not reproduce:

{noformat}
ebottard@ebottard-mbp  ~/Documents/projects/spring-xd   XD-1674-Module404 ●  curl -i http://localhost:9393/modules/source/time2
HTTP/1.1 404 Not Found
Server: Apache-Coyote/1.1
X-Application-Context: application:default,admin,singlenode,hsqldbServer:9393
Access-Control-Allow-Origin: http://localhost:9889
Access-Control-Expose-Headers: Location
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Date: Tue, 03 Jun 2014 11:52:08 GMT

[{""links"":[],""logref"":""NoSuchModuleException"",""message"":""Could not find module with name 'time2' and type 'source'""}]%
{noformat}","04/Jun/14 9:07 AM;hillert;Agreed - Must have been fixed. Works now. Closing.",,,,,,,,,,,,,,,,
NPE when a container departs,XD-1670,57603,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Complete,pperalta,pperalta,pperalta,05/May/14 12:15 PM,13/May/14 8:36 AM,10/Jul/21 8:37 AM,13/May/14 8:36 AM,M6,,,,,,M7,,Runtime,,,,,0,,,,,,,"When a container departs the cluster the admin will try to redeploy any modules that container was running. If the stream was *destroyed* and the container exited before it had the chance to clean up its deployments under {{/xd/deployments/modules}} (for example, with {{kill -9}}) the following NPE occurs:

{noformat}
java.lang.NullPointerException
	at org.springframework.xd.dirt.server.ContainerListener.loadStream(ContainerListener.java:347)
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:403)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:158)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
{noformat}

If the stream was *undeployed* the following stack appears:
{noformat}
15:13:06,002 ERROR ContainersPathChildrenCache-0 cache.PathChildrenCache:550 - 
java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/t0
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:468)
	at org.springframework.xd.dirt.server.ContainerListener.childEvent(ContainerListener.java:159)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/streams/t0
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.server.ContainerListener.loadStream(ContainerListener.java:358)
	at org.springframework.xd.dirt.server.ContainerListener.onChildLeft(ContainerListener.java:417)
	... 16 more
{noformat}

In short, this logic makes the assumption that the stream is still present and deployed. It needs to take into account the fact that neither assumption can be made.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226540800,XD-1473,,43768,true,tmarshall(tmarshall),,,,"0|i07ixj:",43939,43470,,,Sprint 27,,,2.0,,"06/May/14 7:17 AM;pperalta;6d5e3e",,,,,,,,,,,,,,,,,
The type StubDatasetOperations must implement the inherited abstract method DatasetOperations.getDatasetDescriptor(Class<T>),XD-1656,57447,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,rmeneses,rmeneses,30/Apr/14 11:54 AM,30/Apr/14 2:09 PM,10/Jul/21 8:37 AM,30/Apr/14 1:07 PM,,,,,,,,,Testing,,,,,0,error-reporting,,,,,,StubDatasetOperations class needs to be either declared asbtract or implemente inherited methods from DatasetOperations,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226972800,,2014-04-30 13:07:08.393,43701,true,tmarshall(tmarshall),,,,"0|i07ip3:",43901,43403,,,,,,1.0,,"30/Apr/14 1:07 PM;mark.pollack;This seems to be entered into the wrong project. I could not figure out which spring project you might be referring to, so am closing the ticket. ","30/Apr/14 2:09 PM;rmeneses;spring-xd-hadoop project 
It's a test class in org.springframework.xd.hadoop.fs package
the class is StubDatasetOperations",,,,,,,,,,,,,,,,
Spring XD using Redis as data transport is failing to start in CI Acceptance Test.,XD-1649,57423,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,grenfro,grenfro,grenfro,29/Apr/14 11:47 AM,01/May/14 9:13 AM,10/Jul/21 8:37 AM,01/May/14 9:13 AM,,,,,,,M7,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226972800,XD-1647,,43677,true,tmarshall(tmarshall),,,,"0|i003g7:",560,43379,,,Sprint 27,,,5.0,,"29/Apr/14 11:48 AM;grenfro;Retried 2 times and it is consistent.
I can start it from command line.  but not sure why it is failing to start from CI.  ","01/May/14 7:15 AM;grenfro;Instances failed with a Context Exception and unfortunately I did not keep the logs.  In this case EC2 was having performance problems and other deployments were experiencing problems during this time.  This one was different in that I could see that the Admin Server did try to start, but failed.  But after a 4 hour period and I could not reproduce the problem.  I have attempted 5 redeployments and all were successful.  ",,,,,,,,,,,,,,,,
Rest: Improve the determination whether a Job Execution is Restartable,XD-1644,57387,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,hillert,hillert,28/Apr/14 7:26 PM,15/May/14 1:22 PM,10/Jul/21 8:37 AM,15/May/14 1:22 PM,M6,,,,,,M7,,REST,,,,,0,,,,,,,"In *BatchJobExecutionsController$restartJobExecution()* we need to do a better check whether a Batch Job Execution is restartable. 

This is also true when executing *BatchJobExecutionsController$list()*. The check performed under *new JobExecutionInfo(jobExecution, timeZone)* is not sufficient.

*Reason*:

Currently in the UI when I have failed Job Executions, I can restart those (good). However, if the next execution succeeds, the previously restartable jobs should NOT be marked as restartable anymore. 

Right now you can restart those jobs, resulting in a:

{code}
Caused by: org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException: A job instance already exists and is complete for parameters={random=0.5735953106895085, throwError=true}.  If you want to run this job again, change the parameters.
	at org.springframework.batch.core.repository.support.SimpleJobRepository.createJobExecution(SimpleJobRepository.java:126)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:98)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:262)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean$1.invoke(AbstractJobRepositoryFactoryBean.java:172)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy40.createJobExecution(Unknown Source)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:125)
	at sun.reflect.GeneratedMethodAccessor209.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:117)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy42.run(Unknown Source)
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:95)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:44)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:84)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:268)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	... 98 more
{code}



",,,,,,,,,,,,,,,,,XD-1507,XD-1717,,,,,,,,,,,,,,,,,,,225676800,XD-1608,2014-05-07 17:34:53.309,43641,true,tmarshall(tmarshall),,,,"0|i00347:",506,43343,,,Sprint 27,,,4.0,,"07/May/14 5:34 PM;iperumal;If any one of the JobExecutions of the given JobInstance is ""COMPLETED"" then we can actually disable ""restart"" option on the failed jobs.

This is tricky because, from the BatchJobExecutionsController's list() the result set is paged and, we could not be sure if the actual JobInstance is ""COMPLETED"" based on the job executions result set we get.
One option could be enable ""restart"" option for the latest available failed job execution and if any of the associated job execution (for the same job instance) is complete, then we can disable the ""restart"" option.

But, again we may get a result set where there are only failed job executions but the actual job instance is completed (by some other job execution that is not part of the result set).","14/May/14 7:01 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/849","15/May/14 1:22 PM;hillert;Merged PR.",,,,,,,,,,,,,,,
"Upon a container departure, redeployment of batch job fails on an existing container",XD-1641,57371,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,iperumal,iperumal,iperumal,25/Apr/14 5:16 PM,28/May/14 2:27 PM,10/Jul/21 8:37 AM,12/May/14 7:14 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"When there are multiple containers (A, B and C) and a batch job is deployed into one of the containers A. When the container A goes down, the admin server tries re-deploy the job module that was deployed in container A into other matching container. But, when the re-deployment happens, it tries to update the distributed job locator as if a new job is being deployed and following exception is thrown:

17:13:38,811 ERROR DeploymentsPathChildrenCache-0 cache.PathChildrenCache:550 - 
java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'job': Post-processing of the FactoryBean's object failed; nested exception is org.springframework.xd.dirt.job.BatchJobAlreadyExistsException: Batch Job with the name myjob3 already exists
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployJob(ContainerRegistrar.java:411)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:355)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$8(ContainerRegistrar.java:349)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:695)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:253)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
	at java.util.concurrent.FutureTask.run(FutureTask.java:166)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'job': Post-processing of the FactoryBean's object failed; nested exception is org.springframework.xd.dirt.job.BatchJobAlreadyExistsException: Batch Job with the name myjob3 already exists
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:167)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:252)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:699)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:648)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:241)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:186)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:176)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:166)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployModule(ContainerRegistrar.java:230)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployJob(ContainerRegistrar.java:399)
	... 20 more
Caused by: org.springframework.xd.dirt.job.BatchJobAlreadyExistsException: Batch Job with the name myjob3 already exists
	at org.springframework.xd.dirt.plugins.job.DistributedJobLocator.addJob(DistributedJobLocator.java:114)
	at org.springframework.xd.dirt.plugins.job.BatchJobRegistryBeanPostProcessor.postProcessAfterInitialization(BatchJobRegistryBeanPostProcessor.java:106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1698)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:164)
	... 36 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226022400,XD-1473,2014-05-12 07:14:14.094,43625,false,tmarshall(tmarshall),,,,"0|i002tr:",459,43327,,,Sprint 27,,,2.0,,"07/May/14 2:16 PM;iperumal;XD admin server will prevent any action to deploy a job with the name that already exists. Only case where the container encounters the existing batch job deployment during the deployment of job module is when the container that had the job module deployed crashes(without graceful shutdown), thereby leaving the batch job in {@link DistributedJobLocator} and the available matching container tries to deploy. Had the container been shutdown gracefully, then the destroy life-cycle method on batch job
will take care deleting the job name entry from {@link DistributedJobLocator}","07/May/14 2:29 PM;iperumal;Submitted PR:
https://github.com/spring-projects/spring-xd/pull/826","12/May/14 7:14 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/e494e96bea61fb24ce922986436fc738b8de147d",,,,,,,,,,,,,,,
Documentation: Hovering over some of the examples corrupts the text,XD-1635,57359,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,dbeauregard,dbeauregard,25/Apr/14 10:59 AM,14/May/14 8:39 AM,10/Jul/21 8:37 AM,14/May/14 8:39 AM,M6,,,,,,M7,,Documentation,,,,,0,,,,,,,"If you mouse over any of the examples in the documentation, the grey boxes, containing code, shell commands, etc., typically in the upper right hand corner a label for the type of code/example will appear.  E.g., 'Ruby', 'Javascript' ,etc.  

1) The labels that appear seem to be random and incorrect.  Shell scripts show as 'Ruby' and 'Javascript'.

2) More importantly, on some of the examples the label appears in front of and part of the example, corrupting the example.  To see this hover your mouse over the two examples, grey boxes, here: http://docs.spring.io/spring-xd/docs/1.0.0.M6/reference/html/#_xd_shell_in_distributed_mode

There may be more but this is the ones I noticed.  

-Derek",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225763200,,2014-05-14 06:54:18.8,43613,true,tmarshall(tmarshall),,,,"0|i003fr:",558,43315,,,Sprint 27,,,2.0,,"14/May/14 6:54 AM;hillert;Task:

* replace *[source,sh]* with *[source,bash]*
* convert Markdown formatted source blocks to Asciidoc","14/May/14 8:39 AM;hillert;Also polished the assignment for source styles in quite a few locations, e.g. instead of *----* add

{code}
[source,xml]
----
...
{code}",,,,,,,,,,,,,,,,
Job display command handling null date value for execution endtime,XD-1614,57302,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,23/Apr/14 10:55 AM,25/Apr/14 10:25 AM,10/Jul/21 8:37 AM,25/Apr/14 10:25 AM,,,,,,,M7,,,,,,,0,,,,,,,"If the job display command is executed for JobExecution and StepExecution list, it may be possible that the Job/Step execution's endTime still null (because the status is still unknown and not completed). In this case, the display command throws assertion failure here:

Caused by: java.lang.IllegalArgumentException: The provided date must not be null.
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.xd.shell.util.CommonUtils.getUtcTime(CommonUtils.java:144)
	at org.springframework.xd.shell.command.JobCommands.display(JobCommands.java:249)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227577600,,,43556,true,tmarshall(tmarshall),,,,"0|i00393:",528,43258,,,Sprint 26,,,1.0,,"23/Apr/14 12:00 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/774",,,,,,,,,,,,,,,,,
Parser fails on + after literal within an expression,XD-1613,57299,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,aclement,mark.fisher,mark.fisher,23/Apr/14 9:47 AM,12/May/14 7:42 AM,10/Jul/21 8:37 AM,08/May/14 8:13 AM,M6,,,,,,M7,,DSL,,,,,0,,,,,,,"This fails:
{code}
xd:>stream create s --definition ""http | transform --expression='hi'+payload | log""

Command failed org.springframework.xd.rest.client.impl.SpringXDException: XD115E:(pos 34): unexpected data in stream definition '+'
http | transform --expression='hi'+payload | log
{code}

But this works:
{code}
xd:>stream create s --definition ""http | transform --expression=payload+'hi' | log""

Created new stream 's'
{code}
",,,,,,,,,,,,,,,,,XD-1564,,,,,,,,,,,,,,,,,,,,226022400,,2014-04-23 12:44:07.906,43553,false,tmarshall(tmarshall),,,,"0|i002vz:",469,43255,,,Sprint 27,,,2.0,,"23/Apr/14 12:44 PM;iperumal;In case of the expression payload+'hi', the Stream DSL tokenizer considers the entire expression as the TokenKind.Identifier.
But in case of  'hi'+payload,  'hi' is considered the quoted string literal (TokenKind.LITERAL_STRING) and + is not included inside the literal and hence the parser exception. 

","23/Apr/14 12:53 PM;mark.fisher;This does work:

{code}
xd:>stream create s --definition ""http | transform --expression='''hi''+payload' | log""

Created new stream 's'
{code}
","25/Apr/14 1:36 PM;aclement;This comes back to us trying to support laziness and avoid quoting parameters where possible (which is nice). If you always required quoting, then it would work but it looks like Mark F shows (yuck).  In the case of 'hi'\+payload we think you are quoting the whole thing when we hit the first quote but really you aren't, you are just quoting an element of it. What we could do is if we do encounter more data after the closing quote, we could automatically assume that is what you have done and assume the 'rest of it' up to the next whitespace is part of the same literal. This would make 'hi'\+payload work the same as payload+'hi' but it *might* allow in error scenarios where extraneous data after the closing quote really is an error.  For example ""transform \-param1='hi'\-param2='bar'"" - see how the space is missing before \-param2. This would be an error on the '-' today but if we change to be 'smart' it would assume param1 is to be 'hi'-param2='bar' (I think).

Let me have a play around with the options.","02/May/14 1:30 PM;aclement;PR: https://github.com/spring-projects/spring-xd/pull/816

This PR fixes the problem described here by adding complexity to the code processing argument values. It continues with the aim that you can avoid quoting argument values in many circumstances but tries to do the right thing if you do. The test code in the PR shows many of the cases now handled.

It does mean this:
{code}
transform -param1='hi'-param2='bar'
{code}
will no longer produce an error (because you've missed the space before the '-param2'). I can't really do anything about that if allowing this form of argument value.

","02/May/14 2:15 PM;mark.pollack;that seems to be quite the fair trade off! Thanks a bunch","06/May/14 9:21 AM;aclement;The test runs against the initial PR revealed an interesting situation. If you support --foo='hi'+payload then you have trouble here:

{code}
http | transform --expression='payload.something > 4'> queue:consumer
{code}

Notice no space after the final ' and before the final >.  In this case we consider the argument value to be 'payload.something > 4'>  and then the parse fails because the next thing it hits is 'queue:consumer' with no preceding >.

I've made a change to say that like '|' the '>' character is a special case that can terminate argument value parsing.  This addresses it but you'll get into trouble if you really wanted a trailing > on the argument value and don't want it quoted - but that seems a rare case.","12/May/14 3:41 AM;eric.bottard;Obviously arriving after the battle is over, but do we really want to support constructs such as --expression=payload+'hi' ? Should we not mandate --expression=""payload+'hi'""  (ie surrounding pair of quotes)?","12/May/14 7:42 AM;mark.fisher;Eric: I was unable to find any combination of double-quote/single-quote (with-or-without-escaping) that made it possible to pass that value for an expression before Andy's change. Also, it was inconsistent. See the original description.
",,,,,,,,,,
M6 admin UI displays only an error page,XD-1604,57265,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,prietzler,prietzler,22/Apr/14 7:18 AM,23/Apr/14 12:30 PM,10/Jul/21 8:37 AM,23/Apr/14 12:30 PM,M6,,,,,,,,,,,,,0,,,,,,,"-) start single node application
-) point browser to: http://localhost:9393/admin-ui/

The following error message is displayed in the browser (no additional info is displayed in terminal):

Whitelabel Error Page

This application has no explicit mapping for /error, so you are seeing this as a fallback.

Tue Apr 22 16:15:27 CEST 2014
There was an unexpected error (type=Not Found, status=404).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227664000,,,43519,true,tmarshall(tmarshall),,,,"0|i07hv3:",43766,43221,,,,,,0.0,,"23/Apr/14 3:03 AM;prietzler;Sorry, the problem was that XD_HOME pointed to wrong directory (/usr/local/....M6 instead of /usr/local/....M6/xd).
Works as expected!",,,,,,,,,,,,,,,,,
"""module list"" does not show sinks and jobs",XD-1603,57263,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,,prietzler,prietzler,22/Apr/14 7:02 AM,23/Apr/14 9:25 AM,10/Jul/21 8:37 AM,23/Apr/14 9:25 AM,M6,,,,,,,,,,,,,0,,,,,,,"""module list"" output does not display anything for ""Sink"" and ""Job"". Tested with single node mode.

    Source              Processor           Sink      Job
  ------------------  ------------------  --------  -------
      file                aggregator
      gemfire             http-client
      gemfire-cq          bridge
      http                filter
      jms                 json-to-tuple
      mail                object-to-json
      mqtt                script
      post                splitter
      rabbit              transform
      reactor-ip
      reactor-syslog
      syslog-tcp
      syslog-udp
      tail
      tcp
      tcp-client
      trigger
      twittersearch
      twitterstream
      time
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227664000,,,43517,true,tmarshall(tmarshall),,,,"0|i07b5j:",42679,43219,,,,,,0.0,,"23/Apr/14 3:03 AM;prietzler;Sorry, the problem was that XD_HOME pointed to wrong directory (/usr/local/....M6 instead of /usr/local/....M6/xd).
Works as expected!",,,,,,,,,,,,,,,,,
PropertySource leakage between runtime and modules,XD-1588,57190,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,eric.bottard,eric.bottard,eric.bottard,17/Apr/14 8:09 AM,15/May/14 10:41 AM,10/Jul/21 8:37 AM,15/May/14 10:41 AM,M6,,,,,,M7,,Configuration,,,,,0,,,,,,,"in EnvironmentAwareModuleOptionsMetadataResolver::loadPropertySources, the call to merge(parentEnv) was added to inherit the active profiles of the runtime.

Sadly, it added the parentEnv property sources by side effect.

Note that the jdbc module defaults rely on this bug",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225676800,,2014-05-15 10:37:54.921,43444,false,tmarshall(tmarshall),,,,"0|i003cv:",545,43146,,,Sprint 27,,,5.0,,"15/May/14 10:37 AM;mark.pollack;Discussion on the topic lead to the conclusion that keeping the defaulting of module value to those used by the server had greater benefits in terms of usability vs. strict separation, so the current usage is OK.  Will create an issue to document this functionality.",,,,,,,,,,,,,,,,,
Stream should not be in deployed state following module failure. ,XD-1586,57178,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Duplicate,pperalta,dturanski,dturanski,16/Apr/14 1:01 PM,25/Jun/14 9:11 AM,10/Jul/21 8:37 AM,25/Jun/14 9:11 AM,M6,,,,,,1.0 RC1,,Runtime,,,,,0,,,,,,,"Run singlenode. Ensure twitterstream credentials are not valid. e.g.,  no consumerKey property. This is the default state.

>stream create tweets --definition ""twitterstream | log"" --deploy
Created and deployed stream 'tweets'

Meanwhile, Singlenode throws an exception, the stacktrace below 

xd:>stream list
  Stream Name  Stream Definition    Status
  -----------  -------------------  --------
  tweets       twitterstream | log  deployed

{code}
15:54:07,298 ERROR DeploymentsPathChildrenCache-0 cache.PathChildrenCache:550 -
java.lang.RuntimeException: org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'twitterTemplate' defined in URL [file:/Users/dturanski/spring-xd/spring-xd-1.0.0.M6/xd/modules/source/twitterstream/config/twitterstream.xml]: Could not resolve placeholder 'consumerKey' in string value ""${consumerKey}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'consumerKey' in string value ""${consumerKey}""
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:448)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:347)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$700(ContainerRegistrar.java:93)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:678)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name 'twitterTemplate' defined in URL [file:/Users/dturanski/spring-xd/spring-xd-1.0.0.M6/xd/modules/source/twitterstream/config/twitterstream.xml]: Could not resolve placeholder 'consumerKey' in string value ""${consumerKey}""; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'consumerKey' in string value ""${consumerKey}""
{/code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222134400,XD-1820,2014-06-25 09:11:54.036,43432,true,tmarshall(tmarshall),,,,"0|i00293:",366,43134,,,Sprint 26,Sprint 30,,3.0,,"04/Jun/14 7:07 AM;dturanski;This particular twitter example should be fixed as of M7 via improved validation of the twitter auth keys. However the general issue still needs to be addressed","25/Jun/14 9:11 AM;pperalta;See XD-1270 and XD-1848",,,,,,,,,,,,,,,,
Tab completion does not work for stream definition following > ,XD-1585,57174,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,dturanski,dturanski,16/Apr/14 11:51 AM,12/Jun/14 5:13 AM,10/Jul/21 8:37 AM,12/Jun/14 5:13 AM,M6,,,,,,1.0 RC1,,CLI,,,,,0,,,,,,,">stream create ""tap:stream:foo > 

does not suggest modules",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223344000,XD-1832,2014-06-12 05:13:17.655,43428,false,tmarshall(tmarshall),,,,"0|i07lvr:",44417,43130,,,Sprint 29,,,8.0,,"12/Jun/14 5:13 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/288ad2779ba989d98345d2c96b9a1bf47e2e52bb",,,,,,,,,,,,,,,,,
"Temporary race condition between deployment and ""runtime modules"" command",XD-1582,57161,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,thomas.risberg,thomas.risberg,15/Apr/14 3:00 PM,22/Apr/14 9:58 AM,10/Jul/21 8:37 AM,15/Apr/14 4:14 PM,,,,,,,M6,,,,,,,0,,,,,,,"The ""runtime modules"" command can show a failure between the deployment command and the actual deployment on the container node, especially if there is a network hop. This clears up once the module is fully deployed.

{code}
xd:>stream create --name trois3 --definition ""time | jdbc"" --deploy 
Created and deployed new stream 'trois3'
xd:>runtime modules 
Command failed org.springframework.xd.rest.client.impl.SpringXDException: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/bc95653e-9da5-4738-beb2-f215e4003318/trois3.source.time-0/metadata

xd:>runtime modules 
  Module                Container Id                          Options
  --------------------  ------------------------------------  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  trois3.source.time-0  bc95653e-9da5-4738-beb2-f215e4003318  {format=yyyy-MM-dd HH:mm:ss, fixedDelay=1}
  wintu.sink.jdbc-1     bc95653e-9da5-4738-beb2-f215e4003318  {tableName=${xd.stream.name}, url=jdbc:hsqldb:hsql://carbon:9102/xdjob, columns=payload, driverClassName=org.hsqldb.jdbc.JDBCDriver, initializeDatabase=false, initializerScript=init_db.sql, username=sa}
  trois3.sink.jdbc-1    d0ad8eda-be27-46ac-86be-e43b5d9921af  {tableName=${xd.stream.name}, url=jdbc:hsqldb:hsql://carbon:9102/xdjob, columns=payload, driverClassName=org.hsqldb.jdbc.JDBCDriver, initializeDatabase=false, initializerScript=init_db.sql, username=sa}
  wintu.source.time-0   befa5f27-aac3-4d94-9171-77c07036ec75  {format=yyyy-MM-dd HH:mm:ss, fixedDelay=1}
{code}

 ",,,,,,,,,,,,,,,,,,,,,,XD-1347,XD-1495,,,,,,,,,,,,,,228268800,,2014-04-15 16:02:37.433,43415,false,tmarshall(tmarshall),,,,"0|i07hdb:",43686,43117,,,Sprint 25,,,3.0,,"15/Apr/14 3:02 PM;thomas.risberg;Stack trace:

{code}
Caused by: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/bc95653e-9da5-4738-beb2-f215e4003318/trois3.source.time-0/metadata
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findOne(ZooKeeperModuleMetadataRepository.java:101)
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findOne(ZooKeeperModuleMetadataRepository.java:76)
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findAll(ZooKeeperModuleMetadataRepository.java:136)
	... 54 more
Caused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/bc95653e-9da5-4738-beb2-f215e4003318/trois3.source.time-0/metadata
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.module.store.ZooKeeperModuleMetadataRepository.findOne(ZooKeeperModuleMetadataRepository.java:84)
	... 56 more
{code}","15/Apr/14 4:02 PM;mark.fisher;PR submitted:
https://github.com/spring-projects/spring-xd/pull/756","15/Apr/14 4:14 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/0ee7e2d6fea24884c750a1d102209d7db0314a0c",,,,,,,,,,,,,,,
XD config home should use XD_CONFIG_LOCATION if this is set,XD-1581,57160,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,15/Apr/14 12:44 PM,15/Apr/14 1:13 PM,10/Jul/21 8:37 AM,15/Apr/14 1:13 PM,,,,,,,M6,,Packaging,,,,,0,,,,,,,"If XD_CONFIG_LOCATION is set, then XD runtime's xd.config.home should use that. otherwise, they point to two different paths.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228268800,,2014-04-15 13:13:01.869,43414,false,tmarshall(tmarshall),,,,"0|i07hd3:",43685,43116,,,Sprint 25,,,2.0,,"15/Apr/14 12:48 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/751","15/Apr/14 1:13 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/a8666ba8b7811918930d1e67458b6a790f9e9222",,,,,,,,,,,,,,,,
Undeploy modules when container disconnected from ZK,XD-1580,57157,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,15/Apr/14 9:48 AM,28/May/14 2:36 PM,10/Jul/21 8:37 AM,17/Apr/14 2:11 PM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"Consider a module running in a container when it is disconnected from ZK:

{noformat}
12:30:13,021  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:30:13
12:30:14,025  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:30:14
12:30:15,029  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:30:15
12:30:16,031  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:30:16
12:30:32,590  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:30:32
12:37:42,985  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:42
12:37:43,398  INFO main-SendThread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.ClientCnxn:1096 - Client session timed out, have not heard from server in 430809ms for sessionid 0x145662be03e0002, closing socket connection and attempting reconnect
12:37:43,985  INFO main-SendThread(localhost:2181) zookeeper.ClientCnxn:975 - Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error)
12:37:43,986  INFO main-SendThread(localhost:2181) zookeeper.ClientCnxn:852 - Socket connection established to localhost/0:0:0:0:0:0:0:1:2181, initiating session
12:37:43,988  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:43
12:37:43,989  INFO main-SendThread(localhost:2181) zookeeper.ClientCnxn:1094 - Unable to reconnect to ZooKeeper service, session 0x145662be03e0002 has expired, closing socket connection
{noformat}

Currently the module for the disconnected container continues to execute:

{noformat}
12:37:45,994  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:45
12:37:46,997  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:46
12:37:48,000  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:47
12:37:48,094 ERROR main-EventThread imps.CuratorFrameworkImpl:512 - Watcher exception
org.apache.zookeeper.KeeperException$SessionExpiredException: KeeperErrorCode = Session expired for /xd
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:127)
	at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)
	at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1155)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:302)
	at org.apache.curator.framework.imps.GetDataBuilderImpl$4.call(GetDataBuilderImpl.java:291)
	at org.apache.curator.RetryLoop.callWithRetry(RetryLoop.java:107)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.pathInForeground(GetDataBuilderImpl.java:287)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:279)
	at org.apache.curator.framework.imps.GetDataBuilderImpl.forPath(GetDataBuilderImpl.java:41)
	at org.springframework.xd.dirt.server.ContainerRegistrar$StreamModuleWatcher.process(ContainerRegistrar.java:609)
	at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:56)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
12:37:48,097  INFO main-EventThread state.ConnectionStateManager:194 - State change: SUSPENDED
12:37:48,097  INFO ConnectionStateManager-0 zookeeper.ZooKeeperConnection:262 - >>> Curator disconnected event: SUSPENDED
12:37:48,097  WARN ConnectionStateManager-0 server.ContainerRegistrar:325 - >>> disconnected container: 88ba115b-6190-497a-a67c-df1e295bf158
12:37:49,001  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:49
12:37:50,004  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:50
12:37:51,008  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:51
12:37:52,012  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:52
12:37:53,016  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:53
12:37:54,021  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:54
12:37:55,023  WARN inbound.t.0-redis:queue-inbound-channel-adapter1 logger.t:150 - 2014-04-15 12:37:55
...
{noformat}

This container should not continue executing the module because the leader admin will likely select another container to execute this module. If and when this container reconnects to ZK, it can be (re)assigned modules for deployment.

This can be done via a simple undeployment; or we may even consider closing and reopening the application context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228096000,XD-1473,2014-04-17 14:11:59.288,43411,false,tmarshall(tmarshall),,,,"0|i0032f:",498,43113,,,Sprint 26,,,4.0,,"17/Apr/14 2:11 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/62f36aeb27dcce4b29f02da1461cf1bf7aa6e89f",,,,,,,,,,,,,,,,,
Changing externalized module config properties at runtime,XD-1577,57137,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,15/Apr/14 12:44 AM,15/Apr/14 6:17 AM,10/Jul/21 8:37 AM,15/Apr/14 6:17 AM,,,,,,,M6,,,,,,,0,,,,,,,"Once the container starts up and the module is deployed, the externalized module configuration properties could not be changed for the subsequent modules of same type.

Here is the scenario for a stream ""http | transform | log"", with XD_MODULE_CONFIG_LOCATION and XD_MODULE_CONFIG_NAME using their default values. 
In, ${xd.config.home}/modules/modules.yml, I have:
processor:
  transform:
    expression: ""'Inside modules.yml'""

and, in, ${xd.config.home}/modules/processor/transform/transform.properties, I have:
expression: ""'First module: inside transform.properties'""

Now, I deploy this stream: ""http | transform | log"".

Lets say, I have another stream that uses the transform module, but this time I want to change the expression in ${xd.config.home}/modules/processor/transform/transform.properties to,
expression: ""'Second module'""

Now, when the stream containing this transform module gets deployed, it uses the same transform.properties that is used by the previously deployed transform module.

What I understand from this behavior is that, the EnvironmentAwareModuleOptionsMetadataResolver caches the module environments for a given module type and name. When the same module is deployed from a given stream again, it uses the stored module environment and doesn't refresh/load the property sources from the module config locations mentioned above. Though this is good in one way that same module environment is re-used, changing the externalized module config properties would have no affect after the first module of same type/name is deployed.

Though the EnvironmentAwareModuleOptionsMetadataResolver is used by both admin and container, this JIRA focuses more on the container side.
There is one valid point with the current behavior where the module environment is cached and won't change. But is this by design?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228355200,,2014-04-15 06:17:10.146,43391,true,tmarshall(tmarshall),,,,"0|i07h4n:",43647,43093,,,Sprint 25,,,4.0,,"15/Apr/14 12:45 AM;iperumal;I have this change where module environment is configured not to be cached:

https://github.com/ilayaperumalg/spring-xd/commit/47efb48ac21f5f6b8d823e9a853a0fa28c714734

Let me know if this is the right approach or does it have any impact in the design?","15/Apr/14 1:40 AM;iperumal;Submitted PR:
https://github.com/spring-projects/spring-xd/pull/748","15/Apr/14 6:17 AM;eric.bottard;Merged https://github.com/spring-projects/spring-xd/commit/ad40e613e74fbbd2735b171885a4e5b64398a9b6",,,,,,,,,,,,,,,
JLine 1 is brought up (and shows in IDE) through ZK/curator,XD-1571,57124,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,eric.bottard,eric.bottard,14/Apr/14 9:37 AM,14/Apr/14 7:56 PM,10/Jul/21 8:37 AM,14/Apr/14 7:56 PM,,,,,,,M6,,,,,,,0,,,,,,,"We don't want jline1 anymore.
This shows in IDE only (either run shell integration tests, or run the shell as Gunnar mentioned)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228355200,,2014-04-14 12:45:03.206,43378,false,tmarshall(tmarshall),,,,"0|i07h3r:",43643,43080,,,Sprint 25,,,1.0,,"14/Apr/14 12:45 PM;mark.fisher;submitted PR:
https://github.com/spring-projects/spring-xd/pull/744","14/Apr/14 7:56 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/5598ee8eaada7437023861563180f22e4e401739",,,,,,,,,,,,,,,,
Rabbit Sink with explicit routingKey as 'string' SpEl literal expression fails,XD-1564,57096,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Won't Fix,eric.bottard,iperumal,iperumal,12/Apr/14 7:39 AM,15/May/14 10:36 AM,10/Jul/21 8:37 AM,15/May/14 10:36 AM,,,,,,,M7,,Stream Module,,,,,0,,,,,,,"Following stream fails to work:

tream create s3 --definition ""http | rabbit --routingKey='mytest1'"" --deploy 
Created and deployed new stream 's3'
xd:>http post --data ""testing""
> POST (text/plain;Charset=UTF-8) http://localhost:9000 testing
> 500 INTERNAL_SERVER_ERROR
> 500 INTERNAL_SERVER_ERROR

Error sending data 'testing' to 'http://localhost:9000'

The exception at the container log is:

07:24:57,245 ERROR pool-18-thread-4 http.NettyHttpInboundChannelAdapter:171 - Error sending message
org.springframework.messaging.MessageHandlingException: Expression evaluation failed: mytest1
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:126)
	at org.springframework.integration.handler.ExpressionEvaluatingMessageProcessor.processMessage(ExpressionEvaluatingMessageProcessor.java:76)
	at org.springframework.integration.amqp.outbound.AmqpOutboundEndpoint.handleRequestMessage(AmqpOutboundEndpoint.java:196)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.handleMessage(SimpleMessageHandlerMetrics.java:106)
	at org.springframework.integration.monitor.SimpleMessageHandlerMetrics.invoke(SimpleMessageHandlerMetrics.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy109.handleMessage(Unknown Source)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy54.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:93)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:93)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:116)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at sun.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.integration.monitor.DirectChannelMetrics.monitorSend(DirectChannelMetrics.java:113)
	at org.springframework.integration.monitor.DirectChannelMetrics.doInvoke(DirectChannelMetrics.java:97)
	at org.springframework.integration.monitor.DirectChannelMetrics.invoke(DirectChannelMetrics.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy111.send(Unknown Source)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:93)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.x.http.NettyHttpInboundChannelAdapter.access$300(NettyHttpInboundChannelAdapter.java:69)
	at org.springframework.integration.x.http.NettyHttpInboundChannelAdapter$Handler.messageReceived(NettyHttpInboundChannelAdapter.java:168)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.execution.ChannelUpstreamEventRunnable.doRun(ChannelUpstreamEventRunnable.java:43)
	at org.jboss.netty.handler.execution.ChannelEventRunnable.run(ChannelEventRunnable.java:67)
	at org.jboss.netty.handler.execution.OrderedMemoryAwareThreadPoolExecutor$ChildExecutor.run(OrderedMemoryAwareThreadPoolExecutor.java:314)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E:(pos 0): Property or field 'mytest1' cannot be found on object of type 'org.springframework.messaging.support.GenericMessage' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:215)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:85)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:78)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:159)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:119)
	... 91 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225676800,,2014-04-15 11:20:32.571,43350,false,tmarshall(tmarshall),,,,"0|i003dz:",550,43052,,,Sprint 27,,,2.0,,"12/Apr/14 7:44 AM;iperumal;In RabbitSinkOptionsMetadata, the following doesn't preserver the single quotes on the string SpEL expression literal being passed in:

 @ModuleOption(""the routing key to be passed with the message, as a SpEL expression"")
	public void setRoutingKey(String routingKey) {
		this.routingKey = routingKey;
	}","15/Apr/14 11:20 AM;grussell;I just tested the SI sample and it has no issues with a literal...

{code}
	<int-amqp:outbound-channel-adapter
		channel=""toRabbit"" amqp-template=""amqpTemplate"" exchange-name=""si.test.exchange""
		routing-key-expression=""'si.test.binding'"" />
{code}

...works the same as...

{code}
	<int-amqp:outbound-channel-adapter
		channel=""toRabbit"" amqp-template=""amqpTemplate"" exchange-name=""si.test.exchange""
		routing-key=""si.test.binding"" />
{code}

...as expected.","15/Apr/14 11:23 AM;iperumal;The problem is with the way module option --routingKey gets resolved. The pojo metadata removes the '' in string literal and thereby routingKey becomes string instead of 'string'","15/Apr/14 12:34 PM;iperumal;If the rountingKey is specified as follows, then the rabbit sink works with SpEL string literal.

stream create s2 --definition ""http | rabbit --routingKey='\""myqueue\""'"" --deploy","15/Apr/14 1:17 PM;mark.fisher;That is not ideal, but I guess we'll have to live with it until we figure out a better way to handle these expressions (which may container literals) from the POJO metadata options. cc [~eric.bottard]","15/Apr/14 1:29 PM;iperumal;Also, we believe we need to make the shell handling quotes escapes smoother to make the DSL syntax easier. We should reconsider that. ","14/May/14 6:35 AM;eric.bottard;This is normal as the xd-parser has support for String literals itself, so when you specify --routingKey='foo', what it sees is [foo] (without quotes)

As you said, what you need to do is to inject quotes in that string, and there are various ways to do that (depending on which parser layer you trick with escaping)

I would suggest closing this issue as WONT_FIX","14/May/14 7:03 AM;grussell;We tested this when I was in Cambridge and, IIRC, found that the standard SpEL escape works 

{{--routingKey='''mytest1'''}}

The parser strips off the outermost quotes and SpEL treats {{''}} as {{'}}.","14/May/14 8:01 AM;eric.bottard;I believe what happens is not exactly that, albeit the end result is the same:
The xd parser has support for quotes escaping inside xd string literals (with doubling the quotes), so '''mytest1''' becomes ['mytest1] but at the xd parser level

See https://github.com/spring-projects/spring-xd/blob/master/spring-xd-dirt/src/main/java/org/springframework/xd/dirt/stream/dsl/Tokenizer.java#L222
","15/May/14 10:33 AM;mark.pollack;Yes, indeed 

http://docs.spring.io/spring/docs/4.0.4.RELEASE/spring-framework-reference/htmlsingle/#expressions-ref-literal

states

""Strings are delimited by single quotes. To put a single quote itself in a string use two single quote characters.""

End result is to create a new documentation section on the shell.  It will describe some of these non-obvious features as well as provide a basic of some commands, how to navigate the command line, reference to spring-shell docs and the extensibility model of the shell itself.

",,,,,,,,
Gauge & Rich Gauge fail to write results to redis for singlenode,XD-1562,57094,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,grenfro,grenfro,12/Apr/14 6:52 AM,14/Apr/14 8:14 AM,10/Jul/21 8:37 AM,14/Apr/14 8:14 AM,M6,,,,,,M6,,,,,,,0,,,,,,,"Steps to reproduce:
stream create --name test --definition ""http --port=9090 | log""  
stream create --name simplegauge --definition ""tap:stream:test > gauge"" 
http post --target http://localhost:9090 --data ""10""
redis-cli
get gauges.simplegauge

[the result]
redis 127.0.0.1:6379> get gauges.simplegauge
(nil)

Note:  It worked with admin/container but failed only on xd-singlenode.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228441600,,2014-04-14 01:16:40.561,43348,true,tmarshall(tmarshall),,,,"0|i07h0v:",43630,43050,,,Sprint 25,,,3.0,,"14/Apr/14 1:16 AM;eric.bottard;I could not reproduce.

I assume though that
1) you started with --analytics redis
2) you added --deploy to the stream create commands, now that this is not the default anymore","14/Apr/14 5:49 AM;grenfro;Eric a quick question before I close this ticket.  I'm thinking we need to put a note in the analytics docs stating that these examples use Redis as their analytics store and thus you will need to have redis installed and running and if running single node be sure to add  --analytics redis.

Your thoughts.","14/Apr/14 5:51 AM;eric.bottard;Good point. We could add on opening remark that points to the section that describes command line options indeed","14/Apr/14 8:14 AM;grenfro;Analytics documentation has been updated.",,,,,,,,,,,,,,
Payload Conversion Sample throws exception.,XD-1560,57089,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,grenfro,grenfro,11/Apr/14 4:28 PM,14/Apr/14 11:35 AM,10/Jul/21 8:37 AM,14/Apr/14 11:35 AM,,,,,,,M6,,,,,,,0,documentation,,,,,,"After updating the dependency to use the snapshot (even with M5) the conversion throws an exception.
Stacktrace attached. ",,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/14 4:28 PM;grenfro;Exception.txt;https://jira.spring.io/secure/attachment/21933/Exception.txt",,,,,,,,,,,,,228355200,,2014-04-11 17:54:30.186,43343,true,tmarshall(tmarshall),,,,"0|i07h13:",43631,43045,,,Sprint 25,,,2.0,,"11/Apr/14 5:54 PM;mark.pollack;What project/test is this related to? https://github.com/spring-projects/spring-xd-samples/tree/master/payload-conversion  ?

How to reproduce?  ","11/Apr/14 6:05 PM;mark.pollack;I see 	springIntegrationVersion = '3.0.0.M2'

is explicit in this test, it should be made to be springIntegrationVersion = '4.0.0.M4'  since it matches with XD and also the payload conversion stuff was moved into datatype channels in som later version of Spring Integration after the XD M5 release afaik.","12/Apr/14 8:24 PM;grenfro;[How to reproduce]
I followed the instruction associated with the sample.  
The instructions are located at https://github.com/spring-projects/spring-xd-samples/tree/master/payload-conversion","14/Apr/14 9:00 AM;hillert;Reproduced with same exception. The instructions also need some more review - 

{code}
http post --target http://localhost:9000 --data ""{""symbol"":""FAKE"",""price"":75}""
{code}

The quotes for the JSON data caused some trouble.","14/Apr/14 10:06 AM;hillert;This works:

{code}
http post --target http://localhost:9000 --data {""symbol"":""FAKE"",""price"":75} --contentType ""application/json""
{code}","14/Apr/14 11:15 AM;hillert;Updated documentation: https://github.com/spring-projects/spring-xd-samples/commit/38a43ef86f51eb7d715a62e1ee7534e291b3974d","14/Apr/14 11:35 AM;grenfro;Tested and looks good.",,,,,,,,,,,
Batch wordcount sample returns zero counts,XD-1557,57085,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,11/Apr/14 3:13 PM,11/Apr/14 3:58 PM,10/Jul/21 8:37 AM,11/Apr/14 3:58 PM,M6,,,,,,M6,,,,,,,0,,,,,,,"if user already has /count/in on their hdfs the input file will not copy the sample file to hdfs.  need to make sure that a file is already present

if the hdfs 
Documents have to be updated to mention that hadoopDistro needs to be added both xd-singlenode and xd-shell",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228614400,,,43339,true,tmarshall(tmarshall),,,,"0|i07gxj:",43615,43041,,,,,,3.0,,"11/Apr/14 3:27 PM;grenfro;Found the problem with the zero result.  if count/in is already on hdfs it will not copy the file.  Now getting OOME.","11/Apr/14 3:58 PM;grenfro;Documentation is updated.",,,,,,,,,,,,,,,,
Batch hashtag count throws exception when launched,XD-1556,57083,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,grenfro,grenfro,11/Apr/14 1:14 PM,14/Apr/14 11:25 AM,10/Jul/21 8:37 AM,14/Apr/14 11:25 AM,M6,,,,,,M6,,,,,,,0,,,,,,,"1) Update Instructions to mention --hadoopDistro for both singlenode and shell.  Else demo will not work.
2) Pom needs to be updated to use 1.2.1 at the least.
3) I can see where hdfs is writing the results
4) throws NPE   Stacktrace is attached.",,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/14 6:17 PM;grenfro;Exception.txt;https://jira.spring.io/secure/attachment/21934/Exception.txt",,,,,,,,,,,,,228355200,,2014-04-13 07:52:09.6,43337,true,tmarshall(tmarshall),,,,"0|i07gxz:",43617,43039,,,Sprint 25,,,3.0,,"13/Apr/14 7:52 AM;thomas.risberg;How are you running this what OS and what version of Hadoop?","13/Apr/14 8:23 AM;grenfro;Hello Thomas,
Mac OSX
Hadoop 1.2.1","14/Apr/14 11:25 AM;grenfro;After Thomas fix all looks good.",,,,,,,,,,,,,,,
JMS source can only connect to localhost,XD-1554,57081,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,grenfro,grenfro,11/Apr/14 12:11 PM,11/Apr/14 1:09 PM,10/Jul/21 8:37 AM,11/Apr/14 1:09 PM,M6,,,,,,M6,,,,,,,0,,,,,,,"Can't connect to remote activemq instance.  
Setup a jms-activemq.properties file with amq.url=tcp://:ec2-54-198-157-91.compute-1.amazonaws.com:61616.  
Source always refers to defaults of tcp://localhost:61616.  Localhost works",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228614400,,2014-04-11 12:20:06.525,43335,true,tmarshall(tmarshall),,,,"0|i07gu7:",43600,43037,,,Sprint 25,,,3.0,,"11/Apr/14 12:20 PM;mark.fisher;where did you put the jms-activemq.properties file?","11/Apr/14 12:23 PM;grenfro;$XD_HOME/xd/config","11/Apr/14 12:31 PM;mark.fisher;can you try again and verify that xd.config.home is being resolved properly within common/jms-activemq-infrastructure-context.xml?

one quick thing you can try is flipping the ignore-resource-not-found value to false so it will fail and tell you where it looked
","11/Apr/14 1:09 PM;grenfro;Possibly related to another XD-1533.  Inwhich a failure upstream affected this test.  I was able to run the test and it was successful..",,,,,,,,,,,,,,
syslog source is not capturing log info.,XD-1553,57080,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Works as Designed,grussell,grenfro,grenfro,11/Apr/14 11:56 AM,14/Apr/14 10:06 AM,10/Jul/21 8:37 AM,14/Apr/14 9:36 AM,M6,,,,,,M6,,,,,,,0,,,,,,,"Keep in mind.  This could be pbkac, on my part.  Please review and see if you can get it to work.",,,,,,,,,,,,,,,,,,,,,,,,"12/Apr/14 8:21 PM;grenfro;syslog.conf;https://jira.spring.io/secure/attachment/21938/syslog.conf",,,,,,,,,,,,,228355200,,2014-04-11 12:14:48.783,43334,false,tmarshall(tmarshall),,,,"0|i07gtz:",43599,43036,,,Sprint 25,,,3.0,,"11/Apr/14 12:14 PM;grussell;Glenn, 

TCP or UDP?

Can you attach your syslogd config? (or rsyslogd for linux).

Bear in mind that Mac doesn't support publishing syslog over TCP, just UDP (AFAIK).

Thanks

Gary","12/Apr/14 8:19 PM;grenfro;Hello Gary,
I tried both TCP and UDP.
syslogd is attached","14/Apr/14 9:13 AM;grussell;Glenn, it looks like the default port was changed to 1514 so the wiki should be changed to reflect that.

Did you use {{--port=5140}} ?","14/Apr/14 9:36 AM;grussell;I just tested on Ubuntu with both tcp and udp, using port 5140 and both worked fine.

I have updated the wiki to reflect the default port is 5140.",,,,,,,,,,,,,,
clean up dead entries in ZooKeeper /xd/deployments/modules,XD-1547,57072,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,thomas.risberg,thomas.risberg,11/Apr/14 7:41 AM,11/Apr/14 11:42 AM,10/Jul/21 8:37 AM,11/Apr/14 11:41 AM,,,,,,,M6,,Runtime,,,,,0,,,,,,,"When starting and stopping xd containers there are entries left in the /xd/deployments/modules directory that will cause 'runtime modules' command to fail.

xd:>runtime modules 
Command failed org.springframework.xd.rest.client.impl.SpringXDException: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/5201ac3f-e952-48a2-a807-4f0bb2dab82b/test.sink.hdfs-1/metadata

here the ""/xd/deployments/modules/5201ac3f-e952-48a2-a807-4f0bb2dab82b"" container is no longer running, but there is some data left over.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228700800,XD-1473,,43327,false,tmarshall(tmarshall),,,,"0|i07gtj:",43597,43029,,,Sprint 25,,,3.0,,"11/Apr/14 7:55 AM;thomas.risberg;Steps to reproduce:

1. start xd-admin
2. start xd-container
3. start xd-shell
4. xd:> stream create test --definition ""time | log""
5. kill xd-admin
6. kill xd-container
7. start xd-admin
8. start xd-container
9. xd:> runtime modules

So it seems that it's related to not having an admin available when the container leaves",,,,,,,,,,,,,,,,,
Batch Notification Sample fails to execute,XD-1546,57071,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,mark.fisher,grenfro,grenfro,11/Apr/14 7:31 AM,11/Apr/14 3:01 PM,10/Jul/21 8:37 AM,11/Apr/14 3:01 PM,,,,,,,M6,,,,,,,0,,,,,,,"* payment_with_error.txt is not present in the project
* --makeUnique is not available for this command anymore
* Syntax for http post needs to be updated
* Need to add a job deploy command or --deploy
* Throws Exception when deployed (stacktrace attached).",,,,,,,,,,,,,,,,,,,,,,,,"11/Apr/14 7:31 AM;grenfro;stacktrace.txt;https://jira.spring.io/secure/attachment/21931/stacktrace.txt",,,,,,,,,,,,,228614400,,2014-04-11 15:00:46.533,43326,false,tmarshall(tmarshall),,,,"0|i07gtb:",43596,43028,,,Sprint 25,,,3.0,,"11/Apr/14 3:00 PM;mark.fisher;Those listener beans are not auto-generated anymore. I removed them. I also moved --makeUnique=false into the definition where it belongs now. Finally I removed the outermost quotes from all the HTTP POST examples since those do not work (and not needed since there are no spaces). Appears to work now.",,,,,,,,,,,,,,,,,
Batch Basic Fails to launch job when rabbit is data transport,XD-1541,57057,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Fixed,grenfro,grenfro,grenfro,10/Apr/14 7:29 PM,11/Apr/14 11:47 AM,10/Jul/21 8:37 AM,11/Apr/14 11:47 AM,,,,,,,M6,,,,,,,0,,,,,,,"Deployed the batch basic as instructions prescribe.
Tests work for both singlenode and redis as a data transport.  However, while the job does deploy using rabbit  it does not launch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228614400,,,43312,true,tmarshall(tmarshall),,,,"0|i07gsv:",43594,43014,,,Sprint 25,,,3.0,,"11/Apr/14 11:47 AM;grenfro;The user must export XD_TRANSPORT=rabbit on the xd-admin server for the samples to work with a rabbit transport",,,,,,,,,,,,,,,,,
TwitterSearch does not deploy correctly if previous deploy fails,XD-1535,57051,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,pperalta,grenfro,grenfro,10/Apr/14 1:57 PM,10/Apr/14 2:09 PM,10/Jul/21 8:37 AM,10/Apr/14 2:07 PM,,,,,,,M6,,,,,,,0,,,,,,,"if you mess up you consumerSecret,  then deploy the stream, it will throw a 403, which is correct.
Then you destroy, recreate, and redeploy with the correct key, source will not retrieve  any results.  The only solution was to bounce the single node.

Steps to repeat.
1) create a stream.  stream create twit --definition ""twittersearch --consumerKey=goodkey --consumerSecret=badsecret --query='Letterman'|log""
2) deploy stream and get 403
3) destroy stream
4) create twittersearch stream with good keys
5) deploy stream
6) No twitter data is displayed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228700800,,,43306,true,tmarshall(tmarshall),,,,"0|i07gs7:",43591,43008,,,,,,3.0,,"10/Apr/14 2:07 PM;grenfro;Refer to 1533",,,,,,,,,,,,,,,,,
Twitter Search results are not deserialized,XD-1534,57050,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,grenfro,grenfro,10/Apr/14 1:50 PM,10/Apr/14 2:28 PM,10/Jul/21 8:37 AM,10/Apr/14 2:28 PM,,,,,,,M6,,,,,,,0,,,,,,,"Data is returned, but not human readable i.e. ""org.springframework.social.twitter.api.Tweet@4b20a104"". 
Needs to be readable in log and or file.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228700800,,,43305,true,tmarshall(tmarshall),,,,"0|i07grz:",43590,43007,,,,,,3.0,,"10/Apr/14 2:28 PM;grenfro;Works as designed.  Updated matrix to show how to get the data deserialized.",,,,,,,,,,,,,,,,,
Admin needs to clean up failed deployment attempts,XD-1533,57048,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,10/Apr/14 12:20 PM,11/Apr/14 11:43 AM,10/Jul/21 8:37 AM,11/Apr/14 11:43 AM,,,,,,,M6,,Runtime,,,,,0,,,,,,,"If a container fails to deploy a module, the admin needs to clean up the {{/xd/deployments/modules/CONTAINER-ID/module}} path so that another attempt can be made to deploy that module to that container.",,,,,,,,,,,,,XD-1532,,,,XD-1535,,,,,,,,,,,,,,,,,,,,228614400,,,43303,true,tmarshall(tmarshall),,,,"0|i07gtr:",43598,43005,,,Sprint 25,,,2.0,,"11/Apr/14 11:39 AM;pperalta;13fe5d",,,,,,,,,,,,,,,,,
Clean up MBean registration for failed module deployments,XD-1532,57047,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,pperalta,pperalta,10/Apr/14 12:19 PM,12/Apr/14 1:12 PM,10/Jul/21 8:37 AM,12/Apr/14 1:12 PM,,,,,,,M6,,Runtime,,,,,0,,,,,,,"When a module fails to deploy (for instance an http module configured with a port that is already bound) subsequent attempts to deploy the module fail due to a JMX exception:

{noformat}
java.lang.RuntimeException: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.integration.monitor.IntegrationMBeanExporter#0#beafb1fc-4423-4e4f-a88c-1655ea0fdcc5'; nested exception is org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=output'; nested exception is javax.management.InstanceAlreadyExistsException: xd.foo:module=http.0,component=MessageChannel,name=output
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:447)
	at org.springframework.xd.dirt.server.ContainerRegistrar.onChildAdded(ContainerRegistrar.java:346)
	at org.springframework.xd.dirt.server.ContainerRegistrar.access$700(ContainerRegistrar.java:92)
	at org.springframework.xd.dirt.server.ContainerRegistrar$DeploymentListener.childEvent(ContainerRegistrar.java:655)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:494)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$5.apply(PathChildrenCache.java:488)
	at org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:92)
	at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:293)
	at org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:83)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache.callListeners(PathChildrenCache.java:485)
	at org.apache.curator.framework.recipes.cache.EventOperation.invoke(EventOperation.java:35)
	at org.apache.curator.framework.recipes.cache.PathChildrenCache$11.run(PathChildrenCache.java:755)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.integration.monitor.IntegrationMBeanExporter#0#beafb1fc-4423-4e4f-a88c-1655ea0fdcc5'; nested exception is org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=output'; nested exception is javax.management.InstanceAlreadyExistsException: xd.foo:module=http.0,component=MessageChannel,name=output
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:176)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:51)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:346)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:149)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:112)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:773)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:485)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:648)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:240)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:184)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:174)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:164)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployModule(ContainerRegistrar.java:227)
	at org.springframework.xd.dirt.server.ContainerRegistrar.deployStreamModule(ContainerRegistrar.java:429)
	... 18 more
Caused by: org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [MessageChannelMonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=MessageChannel,name=output'; nested exception is javax.management.InstanceAlreadyExistsException: xd.foo:module=http.0,component=MessageChannel,name=output
	at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:610)
	at org.springframework.integration.monitor.IntegrationMBeanExporter.registerChannels(IntegrationMBeanExporter.java:837)
	at org.springframework.integration.monitor.IntegrationMBeanExporter.doStart(IntegrationMBeanExporter.java:459)
	at org.springframework.integration.monitor.IntegrationMBeanExporter.start(IntegrationMBeanExporter.java:410)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:173)
	... 33 more
Caused by: javax.management.InstanceAlreadyExistsException: xd.foo:module=http.0,component=MessageChannel,name=output
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at org.springframework.jmx.support.MBeanRegistrationSupport.doRegister(MBeanRegistrationSupport.java:195)
	at org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:663)
	at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:606)
	... 37 more
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228700800,,2014-04-10 12:57:11.695,43302,true,tmarshall(tmarshall),,,,"0|i07grj:",43588,43004,,,,,,2.0,,"10/Apr/14 12:57 PM;iperumal;The problem is that, the MBeanExportingPlugin registers the MBeans for the modules before the module's start() lifecycle method is called (Currently it is at preprocessModule()). And, if the module fails during start(), then the MBeans still exist. and, the subsequent deployment of the same module fails (when the MBeanExportingPlugin does the registration for the module's MBeans again).","10/Apr/14 2:05 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/727",,,,,,,,,,,,,,,,
Error when removing HDFS files in shell,XD-1530,57045,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,thomas.risberg,thomas.risberg,thomas.risberg,10/Apr/14 9:53 AM,10/Apr/14 3:42 PM,10/Jul/21 8:37 AM,10/Apr/14 3:42 PM,,,,,,,M6,,CLI,,,,,0,,,,,,,"I get this:

{code}
xd:>hadoop fs rm /xd/test/time-3.log
Error: run HDFS shell failed. Message is: org.apache.hadoop.fs.FileStatus.isDirectory()Z
{code}

so far I have seen this with --hadoopDistro hdp13 and hadoop12

same command works fine using shell from M5 release
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228700800,,,43300,false,tmarshall(tmarshall),,,,"0|i07glr:",43562,43002,,,Sprint 25,,,3.0,,,,,,,,,,,,,,,,,,,
Exception when accessing CDH4 namenode,XD-1526,57021,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,thomas.risberg,thomas.risberg,thomas.risberg,09/Apr/14 2:04 PM,10/Apr/14 7:17 AM,10/Jul/21 8:37 AM,10/Apr/14 7:17 AM,,,,,,,M6,,Hadoop,,,,,0,,,,,,,"Get exception when accessing cdh4 from shell -

java.lang.UnsupportedOperationException: This is supposed to be overridden by subclasses.
	at com.google.protobuf.GeneratedMessage.getUnknownFields

most likely due to protobuf-java-2.5.0.jar being on the main classpath now


Full stack trace:
{code}
trisberg@carbon:~/Test$ ./spring-xd-1.0.0.BUILD-SNAPSHOT/shell/bin/xd-shell --hadoopDistro cdh4
16:55:22,680  WARN main conf.Configuration:824 - fs.default.name is deprecated. Instead, use fs.defaultFS
 _____                           __   _______
/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
 `--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
eXtreme Data
1.0.0.BUILD-SNAPSHOT | Admin Server Target: http://localhost:9393
Welcome to the Spring XD shell. For assistance hit TAB or type ""help"".
xd:>hadoop config fs --namenode hdfs://cdh4:8020
xd:>hadoop fs ls /
Hadoop configuration changed, re-initializing shell...
16:55:28,853  WARN Spring Shell util.NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
-ls: Fatal internal error
java.lang.UnsupportedOperationException: This is supposed to be overridden by subclasses.
	at com.google.protobuf.GeneratedMessage.getUnknownFields(GeneratedMessage.java:180)
	at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$GetFileInfoRequestProto.getSerializedSize(ClientNamenodeProtocolProtos.java:30108)
	at com.google.protobuf.AbstractMessageLite.toByteString(AbstractMessageLite.java:49)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.constructRpcRequest(ProtobufRpcEngine.java:149)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:193)
	at com.sun.proxy.$Proxy43.getFileInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:164)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:83)
	at com.sun.proxy.$Proxy43.getFileInfo(Unknown Source)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getFileInfo(ClientNamenodeProtocolTranslatorPB.java:629)
	at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:1545)
	at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:819)
	at org.apache.hadoop.fs.FileSystem.globStatusInternal(FileSystem.java:1646)
	at org.apache.hadoop.fs.FileSystem.globStatus(FileSystem.java:1592)
	at org.apache.hadoop.fs.FileSystem.globStatus(FileSystem.java:1567)
	at org.apache.hadoop.fs.shell.PathData.expandAsGlob(PathData.java:271)
	at org.apache.hadoop.fs.shell.Command.expandArgument(Command.java:224)
	at org.apache.hadoop.fs.shell.Command.expandArguments(Command.java:207)
	at org.apache.hadoop.fs.shell.Command.processRawArguments(Command.java:190)
	at org.apache.hadoop.fs.shell.Command.run(Command.java:154)
	at org.apache.hadoop.fs.FsShell.run(FsShell.java:254)
	at org.springframework.xd.shell.hadoop.FsShellCommands.run(FsShellCommands.java:412)
	at org.springframework.xd.shell.hadoop.FsShellCommands.runCommand(FsShellCommands.java:407)
	at org.springframework.xd.shell.hadoop.FsShellCommands.ls(FsShellCommands.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:196)
	at org.springframework.shell.core.SimpleExecutionStrategy.invoke(SimpleExecutionStrategy.java:64)
	at org.springframework.shell.core.SimpleExecutionStrategy.execute(SimpleExecutionStrategy.java:48)
	at org.springframework.shell.core.AbstractShell.executeCommand(AbstractShell.java:127)
	at org.springframework.shell.core.JLineShell.promptLoop(JLineShell.java:530)
	at org.springframework.shell.core.JLineShell.run(JLineShell.java:178)
	at java.lang.Thread.run(Thread.java:744)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228787200,,,43276,false,tmarshall(tmarshall),,,,"0|i07glb:",43560,42978,,,Sprint 25,,,3.0,,,,,,,,,,,,,,,,,,,
All jobs end up on the same container node,XD-1508,56979,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,pperalta,thomas.risberg,thomas.risberg,07/Apr/14 3:47 PM,08/Apr/14 3:54 PM,10/Jul/21 8:38 AM,08/Apr/14 3:54 PM,,,,,,,M6,,Runtime,,,,,0,,,,,,,"The jobs aren't spread evenly across available container nodes as they are created/deployed. I had 3 nodes but only one has the job modules.

[zk: localhost:2181(CONNECTED) 56] ls /xd/deployments/modules/621230e0-a089-4fbe-afc8-611ae527fcbc
[myjob9.job.jdbchdfs-0, myjob5.job.jdbchdfs-0, myjob8.job.jdbchdfs-0, myjob4.job.jdbchdfs-0, myjob6.job.jdbchdfs-0, myjob7.job.jdbchdfs-0]
[zk: localhost:2181(CONNECTED) 57] ls /xd/deployments/modules/6969579c-0cf4-4cc1-8e21-e01d73a70965
[]
[zk: localhost:2181(CONNECTED) 58] ls /xd/deployments/modules/d0667cd1-a57a-4279-b7fb-dd63e4dd40d4
[]

",,,,,,,,,,,,,,,,,XD-1516,,,,,,,,,,,,,,,,,,,,228960000,XD-1473,,43234,false,tmarshall(tmarshall),,,,"0|i07gdz:",43527,42936,,,Sprint 25,,,3.0,,,,,,,,,,,,,,,,,,,
Prevent submiting jobs that are not currently deployed using Admin UI,XD-1507,56978,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,thomas.risberg,thomas.risberg,07/Apr/14 3:45 PM,28/May/14 9:36 AM,10/Jul/21 8:38 AM,28/May/14 9:36 AM,,,,,,,M7,,Batch,UI,,,,0,,,,,,,"Job modules ""Launch"" and ""Schedule"" command buttons are active even if the job module isn't deployed or has been destroyed.

Get errors like:
 ""Yikes, something bad happened while launching job myjob4""
""The job named 'myjob4' is not currently deployed""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,224553600,XD-1608,2014-04-30 11:24:12.529,43233,true,tmarshall(tmarshall),,,,"0|i002p3:",438,42935,,,Sprint 26,Sprint 27,Sprint 28,3.0,,"30/Apr/14 11:24 AM;iperumal;https://github.com/spring-projects/spring-xd/commit/e9fe7626b1c9fe0d2ddb6c377c86f5e0eb4494d4","22/May/14 2:40 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/884","28/May/14 9:36 AM;hillert;PR Merged.",,,,,,,,,,,,,,,
Documentation typo in JSON SPEL filter,XD-1505,56976,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.pollack,dbeauregard,dbeauregard,07/Apr/14 2:58 PM,08/Apr/14 8:28 AM,10/Jul/21 8:38 AM,08/Apr/14 8:28 AM,M5,,,,,,M6,,Documentation,,,,,0,,,,,,,"In the JSON SPEL Filter twitter example here:
http://docs.spring.io/spring-xd/docs/1.0.0.M5/reference/html/#filter

""hashTags"" should not have a capital 'T'.  Should be ""hashtags"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228960000,,,43231,true,tmarshall(tmarshall),,,,"0|i07gdj:",43525,42933,,,Sprint 25,,,1.0,,,,,,,,,,,,,,,,,,,
Investigate failing LocalSingleNodeStreamDeploymentIntegrationTests,XD-1502,56970,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,pperalta,pperalta,07/Apr/14 10:51 AM,08/Apr/14 9:09 AM,10/Jul/21 8:38 AM,08/Apr/14 6:02 AM,M6,,,,,,M6,,Runtime,,,,,1,,,,,,,"Investigate the failing test LocalSingleNodeStreamDeploymentIntegrationTests.moduleChannelsRegisteredWithMessageBus:

{noformat}
java.lang.AssertionError: expected:<3> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.springframework.xd.dirt.stream.AbstractSingleNodeStreamDeploymentIntegrationTests.moduleChannelsRegisteredWithMessageBus(AbstractSingleNodeStreamDeploymentIntegrationTests.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
{noformat}

This can be most easily reproduced on Ubuntu.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228960000,XD-1141,2014-04-08 06:02:11.52,43225,true,tmarshall(tmarshall),,,,"0|i07gcn:",43521,42927,,,Sprint 25,,,1.0,,"08/Apr/14 6:02 AM;dturanski;https://github.com/spring-projects/spring-xd/pull/707","08/Apr/14 6:53 AM;pperalta;David tracked this down and fixed it.",,,,,,,,,,,,,,,,
Stream deployment race condition,XD-1500,56968,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,pperalta,pperalta,pperalta,07/Apr/14 10:41 AM,28/May/14 2:07 PM,10/Jul/21 8:38 AM,12/May/14 11:57 AM,M6,,,,,,M7,,Runtime,,,,,0,,,,,,,"When a container is started, the leader admin will scan the deployed streams to determine if any have modules that need to be deployed on the new container. 

When a stream is deployed, the leader admin will select containers to deploy modules to.

If a new container and stream are deployed at the same time, there is the window for a race condition where both attempt to deploy a module to a container. This can be solved by (at least one) of the following:

* Consider using a single thread in the admin leader to handle all ZooKeeper updates. This means that the handling of new containers and stream deployment requests will not happen concurrently.
* Trap the {{NodeExists}} exception when creating the {{/xd/deployments/modules/...}} node in ZooKeeper",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225936000,XD-1473,,43223,true,tmarshall(tmarshall),,,,"0|i002v3:",465,42925,,,Sprint 26,Sprint 27,,5.0,,"12/May/14 11:57 AM;pperalta;a7d35e2c376967700f7d488e42365a2b9a3f636d",,,,,,,,,,,,,,,,,
Exception thrown when accessing Jolokia via the management context path,XD-1496,56963,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,grenfro,grenfro,07/Apr/14 8:38 AM,28/May/14 2:36 PM,10/Jul/21 8:38 AM,29/Apr/14 10:23 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"When trying to access Jolokia via the management/jolokia (http://localhost:9393/management/jolokia) I get the following exception.   

{""error_type"":""java.lang.IllegalArgumentException"",""error"":""java.lang.IllegalArgumentException : No type with name 'management' exists"",""status"":400,""stacktrace"":""java.lang.IllegalArgumentException: No type with name 'management' exists\n\tat org.jolokia.util.RequestType.getTypeByName(RequestType.java:69)\n\tat org.jolokia.request.JmxRequestFactory.createGetRequest(JmxRequestFactory.java:94)\n\tat org.jolokia.http.HttpRequestHandler.handleGetRequest(HttpRequestHandler.java:78)\n\tat org.jolokia.http.AgentServlet$3.handleRequest(AgentServlet.java:298)\n\tat org.jolokia.http.AgentServlet.handle(AgentServlet.java:229)\n\tat org.jolokia.http.AgentServlet.doGet(AgentServlet.java:194)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:621)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)\n\tat org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:154)\n\tat org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(JolokiaMvcEndpoint.java:120)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:938)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:870)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:621)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter(WebRequestTraceFilter.java:115)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextFilterConfiguration$1.doFilterInternal(EndpointWebMvcAutoConfiguration.java:137)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:85)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\n\tat org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:680)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1680)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:724)\n""}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227059200,XD-1610,2014-04-08 09:40:19.541,43218,false,tmarshall(tmarshall),,,,"0|i0039z:",532,42920,,,Sprint 26,,,5.0,,"08/Apr/14 9:40 AM;iperumal;This is fixed in here: 
https://github.com/spring-projects/spring-boot/issues/642","23/Apr/14 12:58 PM;mark.pollack;Wait until we upgrade to Spring Boot 1.0.2","29/Apr/14 10:23 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/468d7a513a55c4411f22d642f3ae21c3600f779c",,,,,,,,,,,,,,,
xd:>runtime modules gives error from CLI,XD-1495,56953,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,dbeauregard,dbeauregard,06/Apr/14 7:02 PM,25/Apr/14 10:43 AM,10/Jul/21 8:38 AM,22/Apr/14 9:58 AM,M6,,,,,,M6,,CLI,,,,,0,,,,,,,"xd:>runtime modules
Command failed org.springframework.xd.rest.client.impl.SpringXDException: java.lang.RuntimeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /xd/deployments/modules/4dc55d87-125b-4e4a-a76e-82bb6980820d/TickTock.sink.log-1/metadata

This is on OSX running in distributed mode with --transport rabbit --hadoopDistro hadoop22, redis 2.8.8, rabbit 3.2.3, hadoop 2.2.0, and zookeeper 3.4.5.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227404800,,2014-04-17 14:39:51.163,43208,true,tmarshall(tmarshall),,,,"0|i0034f:",507,42910,,,Sprint 26,,,1.0,,"17/Apr/14 2:39 PM;mark.fisher;Derek, I believe this was fixed for the M6 release via: https://jira.spring.io/browse/XD-1582

Can you please confirm one way or the other?

Thanks!","25/Apr/14 10:43 AM;dbeauregard;Hi Mark,

I no longer see this error in M6.  Thanks!",,,,,,,,,,,,,,,,
OS commands no longer supports whitespace/arguments in M6,XD-1494,56952,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,dbeauregard,dbeauregard,06/Apr/14 4:51 PM,25/Apr/14 10:30 AM,10/Jul/21 8:38 AM,22/Apr/14 9:42 AM,M6,,,,,,M6,,CLI,,,,,0,,,,,,,"OS commands, i.e., ""!"" doesn't support arguments in M6; it did in M5.  

The following gives an error:
xd:>! ls /
You cannot specify option '' more than once in a single command

No arguments or whitespace works:
xd:>! ls
command is:ls
spring-shell.log
xd-shell
xd-shell.bat",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227404800,,2014-04-17 14:32:00.01,43207,true,tmarshall(tmarshall),,,,"0|i0034n:",508,42909,,,Sprint 26,,,1.0,,"17/Apr/14 2:32 PM;mark.fisher;Derek, I believe this was fixed for the M6 release via: https://jira.spring.io/browse/XD-1558

Can you please confirm one way or the other?

Thanks!","22/Apr/14 10:01 AM;dbeauregard;I will take a look later this week.","25/Apr/14 10:30 AM;dbeauregard;Hi Mark,  This now works for me in M6.",,,,,,,,,,,,,,,
xd-shell tab completion missing for http post/get,XD-1493,56951,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,dbeauregard,dbeauregard,06/Apr/14 4:48 PM,06/Jun/14 1:06 PM,10/Jul/21 8:38 AM,06/Jun/14 1:06 PM,M6,,,,,,1.0 RC1,,CLI,,,,,0,,,,,,,"xd-shell tab completion missing for 'http post' and 'http get' cli commands.  Typing ""xd:>http post"" <tab> <tab> gives no suggestions event though --file or --data are required.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227577600,,2014-04-23 11:59:58.299,43206,false,tmarshall(tmarshall),,,,"0|i00ajb:",1734,42908,,,,,,1.0,,"23/Apr/14 11:59 AM;mark.pollack;for now enter ""--""  and then hit tab.",,,,,,,,,,,,,,,,,
SXD's gemfire-server wrapper script can't handle absolute paths w/o extra slash,XD-1490,56926,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,dbeauregard,dbeauregard,04/Apr/14 8:46 AM,17/Apr/14 2:13 PM,10/Jul/21 8:38 AM,17/Apr/14 2:13 PM,M5,,,,,,M7,,,,,,,0,,,,,,,"Absolute paths fail: gemfire-server /Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml  (This failse, see error below)

You have to add an extra forward slash at the beginning (//Users) to get it to work: gemfire-server //Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml (This works)

---------------- The log and error ----------------------

dbeauregard-mbp:~ dbeauregard$ gemfire-server /Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml
09:39:33,772  INFO main gemfire.CacheServer:50 - Starting Cache Server
09:39:33,884  INFO main support.FileSystemXmlApplicationContext:513 - Refreshing org.springframework.context.support.FileSystemXmlApplicationContext@2ba119b3: startup date [Fri Apr 04 09:39:33 MDT 2014]; root of context hierarchy
09:39:33,949  INFO main xml.XmlBeanDefinitionReader:316 - Loading XML bean definitions from file [/Users/dbeauregard/Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml]
Exception in thread ""main"" org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from file [/Users/dbeauregard/Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml]; nested exception is java.io.FileNotFoundException: Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml (No such file or directory)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:140)
	at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:84)
	at org.springframework.xd.gemfire.CacheServer.main(CacheServer.java:52)
Caused by: java.io.FileNotFoundException: Users/dbeauregard/Software/spring-xd/spring-xd-1.0.0.M5/gemfire/config/my-demo.xml (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:146)
	at org.springframework.core.io.FileSystemResource.getInputStream(FileSystemResource.java:114)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 13 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228096000,,2014-04-17 14:13:17.411,43181,false,tmarshall(tmarshall),,,,"0|i0033b:",502,42883,,,Sprint 26,,,1.0,,"17/Apr/14 2:13 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/82b8a44bec168f667b7673c7ca91843859d61392",,,,,,,,,,,,,,,,,
Container ID is not equal to its application context ID,XD-1408,56422,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,iperumal,iperumal,17/Mar/14 12:34 PM,17/Mar/14 10:31 PM,10/Jul/21 8:38 AM,17/Mar/14 10:31 PM,,,,,,,M6,,,,,,,0,,,,,,,"The ContainerServerApplication has a bean ContainerMetaData whose ID is equal to the ContainerServerApplication context's ID. 

The ContainerMetadata is alway referred (using @Autowired) in ContainerConfiguration class and this injects a new bean whose containerID is different from that of the containerID created at ContainerServerApplication. Also, this is the ID that gets stored as the container ID in znode for /xd/containers by ContainerRegistrar.

We should avoid having duplicate container metadata and the container ID needs to be same as that of the ContainerServerApplication's context ID.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,230774400,,,42765,true,tmarshall(tmarshall),,,,"0|i07e07:",43141,42467,,,,,,3.0,,"17/Mar/14 10:31 PM;iperumal;The commit https://github.com/spring-projects/spring-xd/commit/0fe1eeac3736ffad99cf007b59a49f3c0f6c7864 

addresses this.",,,,,,,,,,,,,,,,,
Sometimes getting NPE when master step runs for ftphdfs job,XD-1389,56315,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,thomas.risberg,thomas.risberg,11/Mar/14 1:35 PM,01/May/14 3:08 PM,10/Jul/21 8:38 AM,01/May/14 3:08 PM,,,,,,,M7,,Batch,,,,,0,PullRequest,,,,,,"Depending in the ftp server used there seems to be an error condition that generates an NullPointerException. 

These are the steps to reproduce this:

{code}
job create --name myftphdfs --definition ""ftphdfs --host=ftp.sunet.se --port=21""
job launch --name myftphdfs --params {""remoteDirectory"":""/pub/music/Abba"",""hdfsDirectory"":""/xd/ftp""}
{code}

Exception:
{code}
16:31:38,385 ERROR redisInboundAdapter-redis:queue-inbound-channel-adapter1 step.AbstractStep:225 - Encountered an error executing the step
java.lang.NullPointerException
	at org.springframework.batch.integration.partition.MessageChannelPartitionHandler.handle(MessageChannelPartitionHandler.java:140)
	at org.springframework.batch.core.partition.support.PartitionStep.doExecute(PartitionStep.java:105)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:198)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:144)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:64)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:163)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:134)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:304)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:135)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.batch.core.configuration.annotation.SimpleBatchConfiguration$PassthruAdvice.invoke(SimpleBatchConfiguration.java:117)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy40.run(Unknown Source)
	at org.springframework.batch.integration.launch.JobLaunchingMessageHandler.launch(JobLaunchingMessageHandler.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:63)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:122)
	at org.springframework.expression.spel.ast.MethodReference.access$100(MethodReference.java:44)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:258)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:85)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:113)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:111)
	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:163)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:268)
	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:142)
	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:75)
	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:71)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:128)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:92)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:260)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:241)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:205)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:199)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:128)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.xd.dirt.plugins.job.JobPlugin.launch(JobPlugin.java:176)
	at org.springframework.xd.dirt.module.ModuleDeployer.launchModule(ModuleDeployer.java:380)
	at org.springframework.xd.dirt.module.ModuleDeployer.processLaunchRequest(ModuleDeployer.java:330)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleLaunch(ModuleDeployer.java:316)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:169)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.config.ServiceActivatorFactoryBean$1.handleRequestMessage(ServiceActivatorFactoryBean.java:83)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:128)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:92)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:211)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:290)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:724)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226886400,,2014-04-23 13:01:29.148,42658,false,tmarshall(tmarshall),,,,"0|i003dr:",549,42360,,,Sprint 27,,,5.0,,"23/Apr/14 1:01 PM;mark.pollack;cc [~mminella]","23/Apr/14 1:34 PM;mminella;Looks like we need a null check on the {{MessageTemplate#receive(destination)}} call in the {{MessageChannelPartitionHandler#handle(StepExecutionSplitter stepExecutionSplitter,StepExecution masterStepExecution)}} method.  Although what conditions would null be returned?","23/Apr/14 2:07 PM;grussell;It ahouldn't happen. I am traveling right now and will take a look later.","01/May/14 7:28 AM;grussell;Michael, just got back to this.

Yes, we do need a null check there; it means the reply timed out; so a null should cause the job to fail.

When I created the {{singlestep-partition-support.xml}} file,it looks like I kept the default from the s-b-i sample (60 seconds) and it's hard coded.

We need to make that configurable in XD, but the partition handler needs some protection too.","01/May/14 7:50 AM;mminella;[~grussell],

I just pushed the null check so that piece should be addressed.  Let me know if you need anything else from the batch side.
","01/May/14 1:05 PM;grussell;PR: https://github.com/spring-projects/spring-xd/pull/809","01/May/14 3:08 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/2580a6f2f0f2b533552f92ab3b2c6b5ec3777084",,,,,,,,,,,
Improve job launch functionality with distributed nodes,XD-1384,56292,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,mark.fisher,thomas.risberg,thomas.risberg,10/Mar/14 3:20 PM,15/Apr/14 10:10 AM,10/Jul/21 8:38 AM,15/Apr/14 10:10 AM,,,,,,,M6,,,,,,,0,,,,,,,"When sending a launch request, the message is not targeted to the container node that hosts the deployed job.  With RabbitMQ, the message is not ack'd so it will get picked up eventually by the container that hosts the deployed job.  This should change to a targeted message.

-----
Original description from Thomas below

Tried deploying some batch jobs and they all seem to fail when running admin and one container using redis as transport

xd:>job create mongojob --definition ""hdfsmongodb --resources=/data/*.log --names=col1,col2,col3 --idField=col1 --collectionName=test""

fails with this:
{quote}
18:19:01,612  WARN redisInboundAdapter-redis:queue-inbound-channel-adapter6 boot.SpringApplication:635 - Error handling failed (Error creating bean with name 'integrationRequestMappingHandlerMapping': Initialization of bean failed; nested exception is java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@25e7506f has not been refreshed yet)
18:19:01,614 ERROR redisInboundAdapter-redis:queue-inbound-channel-adapter6 handler.LoggingHandler:145 - org.springframework.messaging.MessageHandlingException: error occurred in message handler [moduleDeployer]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.integration.config.ServiceActivatorFactoryBean$1.handleRequestMessage(ServiceActivatorFactoryBean.java:83)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:128)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:92)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:211)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:290)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'readResourcesStep': Cannot create inner bean '(inner bean)' of type [org.springframework.batch.core.listener.StepListenerFactoryBean] while setting bean property 'listeners' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: interface org.springframework.batch.core.StepListener is not visible from class loader
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:282)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:126)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:351)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:154)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:681)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:616)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:306)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:225)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:270)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:260)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleDeploy(ModuleDeployer.java:201)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:172)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 18 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#4': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalArgumentException: interface org.springframework.batch.core.StepListener is not visible from class loader
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:151)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:110)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:272)
	... 41 more
Caused by: java.lang.IllegalArgumentException: interface org.springframework.batch.core.StepListener is not visible from class loader
	at java.lang.reflect.Proxy.getProxyClass0(Proxy.java:487)
	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:722)
	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:121)
	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:111)
	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:98)
	at org.springframework.batch.core.listener.AbstractListenerFactoryBean.getObject(AbstractListenerFactoryBean.java:163)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:144)
	... 43 more
{quote}

I'll post more errors as I collect them",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,228268800,,2014-04-15 10:10:02.356,42635,false,tmarshall(tmarshall),,,,"0|i007ov:",1263,42337,,,,,,8.0,,"10/Mar/14 3:26 PM;thomas.risberg;xd:>job create jdbcjob --definition ""hdfsjdbc --resources=/data/*.log --names=col1,col2,col3 --tableName=people --initializeDatabase=true""

failed with 
{quote}
18:25:40,719  WARN redisInboundAdapter-redis:queue-inbound-channel-adapter7 boot.SpringApplication:635 - Error handling failed (Error creating bean with name 'integrationRequestMappingHandlerMapping': Initialization of bean failed; nested exception is java.lang.IllegalStateException: org.springframework.context.annotation.AnnotationConfigApplicationContext@5036c505 has not been refreshed yet)
18:25:40,722 ERROR redisInboundAdapter-redis:queue-inbound-channel-adapter7 handler.LoggingHandler:145 - org.springframework.messaging.MessageHandlingException: error occurred in message handler [moduleDeployer]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:84)
	at org.springframework.integration.config.ServiceActivatorFactoryBean$1.handleRequestMessage(ServiceActivatorFactoryBean.java:83)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:170)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	at org.springframework.integration.dispatcher.AbstractDispatcher.tryOptimizedDispatch(AbstractDispatcher.java:128)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:101)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:97)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:255)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:223)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:92)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:98)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:211)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:50)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:290)
	at org.springframework.integration.util.ErrorHandlingTaskExecutor$1.run(ErrorHandlingTaskExecutor.java:52)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'readResourcesStep': Initialization of bean failed; nested exception is org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'com.sun.proxy.$Proxy80 implementing org.springframework.batch.item.ItemReader,org.springframework.batch.item.ItemStream,java.io.Serializable,org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised' to required type 'org.springframework.batch.item.ItemReader' for property 'itemReader'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [com.sun.proxy.$Proxy80 implementing org.springframework.batch.item.ItemReader,org.springframework.batch.item.ItemStream,java.io.Serializable,org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [org.springframework.batch.item.ItemReader] for property 'itemReader': no matching editors or conversion strategy found
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:681)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:616)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:306)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:225)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:270)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:260)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleDeploy(ModuleDeployer.java:201)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:172)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:78)
	... 18 more
Caused by: org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'com.sun.proxy.$Proxy80 implementing org.springframework.batch.item.ItemReader,org.springframework.batch.item.ItemStream,java.io.Serializable,org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised' to required type 'org.springframework.batch.item.ItemReader' for property 'itemReader'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [com.sun.proxy.$Proxy80 implementing org.springframework.batch.item.ItemReader,org.springframework.batch.item.ItemStream,java.io.Serializable,org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [org.springframework.batch.item.ItemReader] for property 'itemReader': no matching editors or conversion strategy found
	at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:474)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:511)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:505)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1502)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1461)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	... 35 more
Caused by: java.lang.IllegalStateException: Cannot convert value of type [com.sun.proxy.$Proxy80 implementing org.springframework.batch.item.ItemReader,org.springframework.batch.item.ItemStream,java.io.Serializable,org.springframework.aop.scope.ScopedObject,org.springframework.aop.framework.AopInfrastructureBean,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [org.springframework.batch.item.ItemReader] for property 'itemReader': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:267)
	at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:459)
	... 41 more
{quote}","15/Apr/14 10:10 AM;mark.fisher;This is obsolete now that the job launch occurs directly via the queue:job (as opposed to the earlier implementation which relied upon control bus messaging channels that did not necessarily send the job launch message to the correct container)

See this commit for more detail (search for 'launch'):
https://github.com/spring-projects/spring-xd/commit/dfdd1bdb9a6334d4f05a5abe088045844e428d59",,,,,,,,,,,,,,,,
"HSQL always started, even when using other database",XD-1373,56221,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,thomas.risberg,thomas.risberg,06/Mar/14 5:56 AM,15/Apr/14 10:30 AM,10/Jul/21 8:38 AM,15/Apr/14 10:30 AM,,,,,,,M6,,Runtime,,,,,0,,,,,,,"I set the config/xd-config.yml properties to use MySQL including this

 profiles:
    active: default,mysql

When XD ADmin starts I still see HSQL server started and localhost:9393/env shows:

""profiles"": [
    ""adminServer"",
    ""hsqldb"",
    ""default""
],
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,231811200,,,42564,false,tmarshall(tmarshall),,,,"0|i07hcv:",43684,42266,,,Sprint 25,,,5.0,,,,,,,,,,,,,,,,,,,
Serialization over data transport fails for classes that are module specific,XD-1370,56195,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,dmcintyre,dmcintyre,05/Mar/14 5:50 AM,30/Apr/14 6:49 AM,10/Jul/21 8:38 AM,30/Apr/14 6:49 AM,M5,,,,,,M7,,Runtime,,,,,0,,,,,,,"Given:

  the counter example from the guide is run with redis enabled:

xd-singlenode --transport redis --store redis

When:

 a stream is created

stream create --name springtweets --definition ""twittersearch --consumerKey=<your_key> --consumerSecret=<your_secret> --query=spring | file --dir=/tweets/""

Then:

An exception is thrown:

Exception in thread ""inbound.springtweets.0-redis:queue-inbound-channel-adapter35"" org.springframework.integration.MessageHandlingException: error occurred in message handler [springtweets.0.convert.bridge]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:79)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:94)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:42)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:86)
	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:92)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.popMessageAndSend(RedisQueueMessageDrivenEndpoint.java:207)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint.access$300(RedisQueueMessageDrivenEndpoint.java:51)
	at org.springframework.integration.redis.inbound.RedisQueueMessageDrivenEndpoint$ListenerTask.run(RedisQueueMessageDrivenEndpoint.java:286)
	at java.lang.Thread.run(Thread.java:724)
Caused by: org.springframework.integration.x.bus.serializer.SerializationException: unable to deserialize [null]. Class not found.
	at org.springframework.integration.x.bus.MessageBusSupport.deserializeConsumerPayload(MessageBusSupport.java:247)
	at org.springframework.integration.x.bus.MessageBusSupport.transformPayloadForConsumer(MessageBusSupport.java:191)
	at org.springframework.integration.x.bus.MessageBusSupport.transformPayloadForConsumerIfNecessary(MessageBusSupport.java:168)
	at org.springframework.integration.x.redis.RedisMessageBus.access$300(RedisMessageBus.java:57)
	at org.springframework.integration.x.redis.RedisMessageBus$ReceivingHandler.handleRequestMessage(RedisMessageBus.java:176)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	... 13 more
Caused by: java.lang.ClassNotFoundException: org.springframework.social.twitter.api.Tweet
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.springframework.integration.x.bus.MessageBusSupport.deserializeConsumerPayload(MessageBusSupport.java:241)
	... 19 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227059200,,2014-03-05 06:31:10.948,42538,false,tmarshall(tmarshall),,,,"0|i003av:",536,42240,,,,,,3.0,,"05/Mar/14 6:31 AM;eric.bottard;The problem lies in MessageBusSupport.deserializePayloadIfNecessary().
The classloader used for the Class.forName() call should be the receiving module classloader","11/Mar/14 8:07 PM;mark.pollack;I don't think this is the issue - if a POJO is going to cross the boundary of a module, that class needs to be present in a classloader that is common across all modules, e.g. the pojo class and any dependencies would need to be in the xd/lib directory.

If you change the stream definition to have 

twittersearch --outputType=application/json

or 

file --inputtype=application/json

the stream will work since String is being passed around.

We should investigate how to work around this in the case of spring social twitter - probably some of the social jars can go in the module dir but the one that has the tweet object would go into the xd/lib directory.  We should also change the default to emit JSON.  I'd even be in favor of not allowing the option to use the spring social tweet object - it has no resemblance to the json structure of the tweet...","26/Mar/14 5:14 PM;iperumal;Yeah, I agree. 

The content type for the outgoing message (from the producer module) can be:

1) application/octet-stream (if the payload itself byte[] before serialization)
2) text/plain (if the payload is String)
3) application/x-java-object;type=<Class-of-payload-type>

In this case, it is (3). Once the message is out from the producer module (twittersearch), the consumer module (file) doesn't necessarily need to have the classes to deserialize the message. Hence, using module class loader isn't  an option. Even if we want to support, it seems like having the class inside XD_HOME/lib is the only option. Otherwise, we can define --outputType (at the producer module) or --inputType (at the consumer module) to application/json instead of the default (as mentioned above).
","30/Apr/14 6:48 AM;mark.pollack;Closing this issue and raised https://jira.spring.io/browse/XD-1654 to address the basic usage scenario as originally described.

https://jira.spring.io/browse/XD-1654
",,,,,,,,,,,,,,
Unable to destroy stream when using http source,XD-1366,56174,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Fixed,,grenfro,grenfro,04/Mar/14 7:15 AM,08/May/15 10:05 AM,10/Jul/21 8:38 AM,04/Mar/14 1:15 PM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"When destroying a stream that contains an http source, an exception is thrown.  Thus even though the stream is destroyed all resources are not released i.e. port 9000 is still in use.  

NettyHttpInboundChannelAdapter is currently setup with child.tcpNoDelay set to true.  And when running on my system and on EC2 the http needs more time to release the port.  

My recommendation is to set bootstrap.setOption(""child.tcpNoDelay"", false)
instead of true. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,231897600,,,42517,true,sabby(sabby),,,,"0|i004h3:",730,42219,,,,,,3.0,,"04/Mar/14 1:15 PM;grenfro;When mark removed the netty collision.",,,,,,,,,,,,,,,,,
StreamDeployer.deleteAll() does not handle dependency tracking,XD-1365,56168,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,eric.bottard,eric.bottard,04/Mar/14 3:16 AM,24/Apr/14 8:13 AM,10/Jul/21 8:38 AM,24/Apr/14 8:13 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"create a composed module, use it in a stream, delete ALL streams.
Try to delete the composed module => fails thinking that it's still used by the stream

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227577600,,2014-04-23 07:59:47.761,42511,false,tmarshall(tmarshall),,,,"0|i0035z:",514,42213,,,Sprint 26,,,2.0,,"23/Apr/14 7:59 AM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/773","24/Apr/14 8:13 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/e3ebbf9e5791b2155aecfcbefa4762b17afd7ad7",,,,,,,,,,,,,,,,
Classpath issue with homebrew version on MacOSX 10.9.1,XD-1361,56141,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,psoares,psoares,02/Mar/14 7:08 AM,11/Mar/14 7:50 PM,10/Jul/21 8:38 AM,11/Mar/14 7:50 PM,M5,,,,,,,,,,,,,0,,,,,,,"I've installed spring xd for the first time today on my mac, using the homebrew distribution.

I tried to create the following stream :

{{xd> stream create --definition ""http --port=6666 | log"" --name httptest}}

This produced the following error : 

org.springframework.integration.MessageHandlingException: error occurred in message handler [moduleDeployer]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:79)
	at org.springframework.integration.config.ServiceActivatorFactoryBean$1.handleRequestMessage(ServiceActivatorFactoryBean.java:83)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:183)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:153)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:114)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:44)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:92)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:228)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:212)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:171)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:149)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:183)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:153)
	at org.springframework.xd.dirt.stream.DeploymentMessageSender.sendDeploymentRequests(DeploymentMessageSender.java:57)
	at org.springframework.xd.dirt.stream.AbstractDeployer.sendDeploymentRequests(AbstractDeployer.java:163)
	at org.springframework.xd.dirt.stream.AbstractDeployer.basicDeploy(AbstractDeployer.java:204)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.deploy(AbstractInstancePersistingDeployer.java:78)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:214)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:748)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:945)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:876)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:931)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:833)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:807)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter(WebRequestTraceFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$1.doFilterInternal(EndpointWebMvcAutoConfiguration.java:126)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilter(MetricFilterAutoConfiguration.java:97)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilter(MetricFilterAutoConfiguration.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:680)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1680)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.integration.x.http.NettyHttpInboundChannelAdapter] for bean with name 'org.springframework.integration.x.http.NettyHttpInboundChannelAdapter#0' defined in URL [file:/Users/philippe/springsource/spring-xd-1.0.0.M1/xd/modules/source/http.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.integration.x.http.NettyHttpInboundChannelAdapter
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1327)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1396)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:959)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:680)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:609)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.core.SimpleModule.initialize(SimpleModule.java:181)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:264)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployAndStore(ModuleDeployer.java:254)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleDeploy(ModuleDeployer.java:249)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleSingleModuleMessage(ModuleDeployer.java:227)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:154)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	... 79 more
Caused by: java.lang.ClassNotFoundException: org.springframework.integration.x.http.NettyHttpInboundChannelAdapter
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedWebappClassLoader.loadClass(TomcatEmbeddedWebappClassLoader.java:68)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1559)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:238)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:392)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1348)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1319)
	... 95 more

I managed to create the exact same stream successfully after installing the release manually from the zip file and setting up XD_HOME and my path as documented, so I guess it's a problem specific to the homebrew installation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,231292800,,2014-03-11 19:50:39.4,42484,false,tmarshall(tmarshall),,,,"0|i07cgf:",42890,42186,,,,,,1.0,,"02/Mar/14 7:18 AM;psoares;I just realized I had a M1 version on my classpath which I had forgotten about. I deleted it and it solved the issue.
Please ignore.","11/Mar/14 7:50 PM;mark.pollack;thanks for following up!",,,,,,,,,,,,,,,,
Json information returned by curl does not reflect deployed status correctly,XD-1360,56117,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,fbiville,karllopes,karllopes,28/Feb/14 11:06 AM,20/Jun/14 4:46 PM,10/Jul/21 8:38 AM,20/Jun/14 4:46 PM,M1,,,,,,1.0 RC1,,REST,,,,,0,,,,,,,"The Json information returned by curl does not reflect deployed status correctly.
To recreate:
1. Start xd-singlenode
2. start xd-shell
In the xd-shell
    (i). stream create --definition ""time | log"" --name ticktock
   (ii). stream list
Note the status of the ticktock stream is deployed
3. open a new command prompt & type curl http://localhost:9393/streams/ticktock
4. Note the returned json stream:
  {""name"":""ticktock"",""deployed"":null,""definition"":""time | log"",""links"":[{""rel"":""self"",""href"":""http://localhost:9393/streams/ticktock""}]}
5. I would expect the json attribute ""deployed"" to be ""true"", but it is null.",,,,,,,,,,,,,XD-1270,,,,,,,,,,,,,,,,,,,,,,,,222566400,,2014-04-17 09:07:58.491,42460,true,tmarshall(tmarshall),,,,"0|i0026v:",356,42162,,,Sprint 30,,,3.0,,"17/Apr/14 9:07 AM;eric.bottard;You need to add deployments=true in the query to see actual deployment information","23/Apr/14 1:14 PM;mark.pollack;deployments=true is for the full list of all streams, seems this is indeed a bug.
There is a related issue XD-1270, that will address the correct state of the stream.  When that is resolved, we can improve the controller method to access the stream state information.
","12/Jun/14 8:47 AM;fbiville;Ready for review: https://github.com/spring-projects/spring-xd/pull/940.","12/Jun/14 9:11 AM;eric.bottard;Florent Biville submitted a PR for that: https://github.com/spring-projects/spring-xd/pull/940","20/Jun/14 4:46 PM;iperumal;Merged:

https://github.com/spring-projects/spring-xd/commit/3db664b80f273f60b66f92598e70399b675ad0a4",,,,,,,,,,,,,
Hadoop distro option hdp20 is broken,XD-1356,56102,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,27/Feb/14 11:58 AM,04/Mar/14 12:32 PM,10/Jul/21 8:38 AM,04/Mar/14 12:32 PM,,,,,,,M6,,Hadoop,Packaging,,,,0,,,,,,,"Starting the shell with --hadoopDistro hdp20 causes this:

Exception in thread ""main"" org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace [http://www.springframework.org/schema/hadoop]
Offending resource: URL [jar:file:/Users/trisberg/Demo/spring-xd-1.0.0.BUILD-SNAPSHOT/shell/lib/spring-xd-shell-1.0.0.BUILD-SNAPSHOT.jar!/META-INF/spring/spring-shell-plugin.xml]

Creating a stream ""time | hdfs"" in xd-singlenode started with --hadoopDistro hdp20 causes this:

java.lang.IllegalStateException: Can't find class used for type of option 'codec': org.springframework.data.hadoop.store.codec.Codecs
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,232329600,XD-468,,42445,false,tmarshall(tmarshall),,,,"0|i00433:",663,42147,,,Sprint 23,,,3.0,,,,,,,,,,,,,,,,,,,
Job Launch should throw exception if the job is not deployed in the container,XD-1352,55923,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,25/Feb/14 2:00 PM,03/Mar/14 8:44 AM,10/Jul/21 8:38 AM,03/Mar/14 8:44 AM,,,,,,,M6,,,,,,,0,,,,,,,"While processing the ""Job Launch"" request, the ModuleDeployer checks if the job is already deployed, if not it deploys the job before launching it.
This approach causes issue in case of multiple containers environment where the job is deployed in one container(1) but the ""job launch"" request is picked up by other container(2). Because the container(2) that processes ""job launch"" request deploys the job again, it conflicts with an existing job that is deployed in conatiner(1) with the same name in the JobRepository.

Initially, the idea behind 'deploy before launch' was to enable launch shell command to also deploy. Because of the issue mentioned above, it is ok to assume that job launch needs to be performed on an existing deployed job.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,232502400,,,42399,true,tmarshall(tmarshall),,,,"0|i004on:",764,42101,,,Sprint 22,,,1.0,,"25/Feb/14 2:49 PM;iperumal;Submitted PR: 
https://github.com/spring-projects/spring-xd/pull/604",,,,,,,,,,,,,,,,,
"Cannot undeploy stream that was created and deployed with a ""."" in the name",XD-1344,55876,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,aclement,eserrano,eserrano,24/Feb/14 11:53 AM,01/May/14 1:37 PM,10/Jul/21 8:38 AM,01/May/14 1:37 PM,M5,,,,,,M7,,DSL,,,,,0,,,,,,,"eserrano-mbp:spring-xd-1.0.0.M5 eserrano$ ./shell/bin/xd-shell
 _____                           __   _______
/  ___|          (-)             \ \ / /  _  \
\ `--. _ __  _ __ _ _ __   __ _   \ V /| | | |
 `--. \ '_ \| '__| | '_ \ / _` |  / ^ \| | | |
/\__/ / |_) | |  | | | | | (_| | / / \ \ |/ /
\____/| .__/|_|  |_|_| |_|\__, | \/   \/___/
      | |                  __/ |
      |_|                 |___/
eXtreme Data
1.0.0.M5 | Admin Server Target: http://localhost:9393
Welcome to the Spring XD shell. For assistance hit TAB or type ""help"".
xd:>stream list
  Stream Name    Stream Definition                                          Status
  -------------  ---------------------------------------------------------  --------
  eesstream.log  http | transform --expression=payload.toUpperCase() | log  deployed
  httptest       http | file
  tictac         time | log

xd:>stream 

stream all         stream create      stream deploy      stream destroy     stream list        stream undeploy    

xd:>stream undeploy --name 
stream undeploy --name 
required --name: the name of the stream to un-deploy; no default value
xd:>stream undeploy --name eesstream.log 
Command failed org.springframework.xd.rest.client.impl.SpringXDException: The stream named 'eesstream' is not currently deployed

xd:>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,226886400,,2014-04-23 13:17:46.803,42352,false,tmarshall(tmarshall),,,,"0|i002w7:",470,42054,,,Sprint 27,,,1.0,,"23/Apr/14 1:17 PM;mark.pollack;We should restrict the name of the stream to be based on a rule like that for naming Java classes, no dots.  allowing dots would also make the case of tapping a stream more complex, e.g. 

my.stream = ""http | filter | log""

and then 

tap:stream:my.stream.filter

","25/Apr/14 1:26 PM;aclement;A basic regex to force it to be like a classname would be something like:
{code}
[a-zA-Z_$][a-zA-Z\d_$]*
{code}
Basically any string containing alphabetic/numeric or '_' or '$' but the first char cannot be a number. Would this be sufficient? It wouldn't allowed for '-' (for example)","30/Apr/14 11:43 AM;mark.fisher;There's always the Character.isJavaIdentifierStart(char) and Character.isJavaIdentifierPart(char) methods. A bit more verbose than a regex I suppose, but accurate if we're trying to emulate java identifier rules :)","01/May/14 10:44 AM;aclement;Yes, indeed, I could also use the Character methods. But I guess the question really is do you definitely want it as restrictive as a java_identifier/classname or not?","01/May/14 11:47 AM;aclement;After prototyping I notice that some of the tests are generating stream names, like this:

testCreatingTapWithSameNameAsExistingStream_xd299-f9b03b1b-748e-d13a-4097-4421c4c9d6fa

which are using '-', which looks to be partly due to AbstractShellIntegrationTest.generateUniqueName() and partly due to UUID toString().

Simplest is to allow '-' in addition to isJavaIdentifierPart()","01/May/14 11:53 AM;mark.fisher;Ok, I'm sure users will want to use hyphens as well, especially if we take away the dot :)","01/May/14 12:05 PM;aclement;Ok, if you want a quick PR, here it is:

https://github.com/spring-projects/spring-xd/pull/807

This uses isJavaIdentifierStart() for the first and subsequent chars must be either isJavaIdentifierPart() or a hyphen.

I am not able to run all the tests locally, they just don't behave for me, so I can't verify if there is a test using a name that violates this policy.","01/May/14 1:37 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/e889a6715b80502f5413b92f874663dda5f30b70",,,,,,,,,,
Add config file fragment support configuration in XD windows bat scripts,XD-1333,55785,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,iperumal,iperumal,19/Feb/14 11:58 PM,20/Feb/14 9:51 AM,10/Jul/21 8:38 AM,20/Feb/14 9:51 AM,,,,,,,,,Packaging,,,,,0,,,,,,,"The external configuration fragment file support by setting spring.config.location in the XD startup scripts are not updated in xd-admin, xd-container and xd-singlenode .bat scripts. 

Please refer: https://github.com/spring-projects/spring-xd/issues/582
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,232934400,,,42262,true,tmarshall(tmarshall),,,,"0|i07bi7:",42736,41964,,,,,,2.0,,"20/Feb/14 9:51 AM;iperumal;This is already being tracked here: https://jira.springsource.org/browse/XD-1209",,,,,,,,,,,,,,,,,
Rabbit source module with outputType fails to deploy,XD-1327,55694,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,14/Feb/14 6:02 PM,14/Feb/14 7:46 PM,10/Jul/21 8:38 AM,14/Feb/14 7:46 PM,,,,,,,M6,,Stream Module,,,,,0,,,,,,,"To replicate the issue:

Create stream: 
stream create rabbittest --definition ""rabbit --queues=test --outputType=text/plain | log""

Stacktrace thrown:

17:59:56,436 ERROR http-nio-9393-exec-3 rest.RestControllerAdvice:191 - Caught exception while handling a request
java.lang.IllegalArgumentException: Module option named outputType is already present
	at org.springframework.xd.module.options.FlattenedCompositeModuleOptionsMetadata.<init>(FlattenedCompositeModuleOptionsMetadata.java:56)
	at org.springframework.xd.module.options.DelegatingModuleOptionsMetadataResolver.resolve(DelegatingModuleOptionsMetadataResolver.java:49)
	at org.springframework.xd.dirt.stream.XDStreamParser.parse(XDStreamParser.java:117)
	at org.springframework.xd.dirt.stream.AbstractDeployer.save(AbstractDeployer.java:73)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:214)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:749)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:690)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:945)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:876)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:863)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilter(WebRequestTraceFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextFilterConfiguration$1.doFilterInternal(EndpointWebMvcAutoConfiguration.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilter(MetricFilterAutoConfiguration.java:97)
	at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilter(MetricFilterAutoConfiguration.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:680)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1680)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,233452800,,,42171,true,tmarshall(tmarshall),,,,"0|i004k7:",744,41873,,,Sprint 22,,,1.0,,"14/Feb/14 7:46 PM;iperumal;Fixed with the commit:

https://github.com/spring-projects/spring-xd/commit/41865e8c856cb0349250cd2b4c8d96185717823c",,,,,,,,,,,,,,,,,
XD container can not be started before the admin server,XD-1318,55656,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,12/Feb/14 4:03 PM,13/Feb/14 2:08 PM,10/Jul/21 8:38 AM,13/Feb/14 2:08 PM,,,,,,,M6,,,,,,,0,,,,,,,"The job single partitioned step support (from singlestep-partitioner-support.xml) has the batch job DAOs (loaded from batch.xml).

During container startup, when the jobExecutionDao bean is initialized it makes the db connection to the underlying batch database (which admin server initializes). 

Here is the exception:

15:30:03,600  INFO main xml.XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [META-INF/spring-xd/batch/batch.xml]
15:30:06,154  WARN main annotation.ConfigurationClassEnhancer:318 - @Bean method StepScopeConfiguration.stepScope is non-static and returns an object assignable to Spring's BeanFactoryPostProcessor interface. This will result in a failure to process annotations such as @Autowired, @Resource and @PostConstruct within the method's declaring @Configuration class. Add the 'static' modifier to this method to avoid these container lifecycle issues; see @Bean Javadoc for complete details
15:30:06,705  INFO main support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:309 - Bean 'org.springframework.xd.dirt.server.ParentConfiguration$JmxConfiguration' of type [class org.springframework.xd.dirt.server.ParentConfiguration$JmxConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:30:07,266  INFO main annotation.AnnotationMBeanExporter:416 - Registering beans for JMX exposure on startup
15:30:07,291  INFO main annotation.AnnotationMBeanExporter:896 - Bean with name 'XDParentConfigMBeanExporter' has been autodetected for JMX exposure
15:30:07,299  INFO main annotation.AnnotationMBeanExporter:659 - Located managed bean 'XDParentConfigMBeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=XDParentConfigMBeanExporter,type=IntegrationMBeanExporter]
15:30:09,637  INFO main concurrent.ThreadPoolTaskScheduler:165 - Initializing ExecutorService  'scheduler'
15:56:08,788  INFO main concurrent.ThreadPoolTaskScheduler:203 - Shutting down ExecutorService 'scheduler'
15:56:08,806  INFO main annotation.AnnotationMBeanExporter:434 - Unregistering JMX-exposed beans on shutdown
15:56:08,853  INFO main autoconfigure.AutoConfigurationReportLoggingInitializer:118 - 

Error starting ApplicationContext. To display the auto-configuration report enabled debug logging (start with --debug)


15:56:08,854  INFO main listener.ClasspathLoggingApplicationListener:54 - Application failed to start with classpath: [file:/Users/iperumal/workspace/spring-xd/modules/processor/scripts/, file:/Users/iperumal/workspace/spring-xd/spring-xd-dirt/bin/, file:/Users/iperumal/workspace/spring-xd/spring-xd-test/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-test/4.0.0.M3/74e696bad60aab349c74f52839eb43ed0e1ce0e2/spring-integration-test-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-amqp/4.0.0.M3/32dd5001acffd82391d756cf3b5ba73ca4075aed/spring-integration-amqp-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-redis/4.0.0.M3/ed5e47b6844212bb88c112c559556b4cb3d6b087/spring-integration-redis-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-hadoop/2.0.0.M4/9f1acbf66f3a97d42a8f5b00eb0c0cad11562730/spring-data-hadoop-2.0.0.M4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-redis/1.1.1.RELEASE/e2d5e9cfdaaa3fbcc2a8d4bdbe06daf771cb4e39/spring-data-redis-1.1.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/4.0.1.RELEASE/cb996939c8d48ae55ec933041f17e7fba4d9e27d/spring-context-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context-support/4.0.1.RELEASE/94dc23c49a74f3f4b894b29416b08202e5976f49/spring-context-support-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/4.0.1.RELEASE/b93b2c39b09ff858a42db85a0a9a8ce232a6779/spring-tx-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-test/4.0.1.RELEASE/367212c3b84c63a48220efa0fe8e9a3a937fcf68/spring-test-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.lambdaworks/lettuce/2.3.3/1366615be02807a568c5f2d3a4475a3d27a879a6/lettuce-2.3.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hsqldb/hsqldb/2.3.0/93306187b1a782f2b929d12536022185487037d2/hsqldb-2.3.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-jdbc/7.0.42/3827da9ca05ff115f239a2372bd44cfd729c692d/tomcat-jdbc-7.0.42.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.4/b1b6ea3b7e4aa4f492509a4952029cd8e48019ad/commons-io-2.4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.codehaus.groovy/groovy-all/2.1.0/a14306a090eec2fa91017b77ac079361f68e1830/groovy-all-2.1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-library/1.3/4785a3c21320980282f9f33d0d1264a69040538f/hamcrest-library-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/1.0/9b473564e792c2bdf1449da1f0b1b5bff9805704/objenesis-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/1.9.5/c3264abeea62c4d2f367e21484fbb40c7e256393/mockito-core-1.9.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.1/5043bfebc3db072ed80fbd362e7caf00e885d8ae/commons-logging-1.1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/4.0.1.RELEASE/e39774d97c9dadfe49e6dfd16e3868bc1e390554/spring-core-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/4.0.1.RELEASE/605582e95fb62b43fb4a843babdcf739f3497e92/spring-beans-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/aopalliance/aopalliance/1.0/235ba8b489512805ac13a8f9ea77a1ca5ebe3e8/aopalliance-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/4.0.1.RELEASE/ff68e4cfdbb2be3e8d8a7f34e7cbacc1860dfe75/spring-aop-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/4.0.1.RELEASE/452cb22401e868a1e79677dd22b6a3097fc603fa/spring-expression-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/1.0.3.RELEASE/33b967f6abaa0a496318bff2ce96e6da6285a54d/spring-retry-1.0.3.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-messaging/4.0.1.RELEASE/829829afd9135368faa1e3a5261404f602a2e939/spring-messaging-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-core/4.0.0.M3/12b445cfa896b906facd2be289adcdfe839f6104/spring-integration-core-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.amqp/spring-amqp/1.3.0.M2/e668db16a4206e96531b978e5978868ba0ebf4e9/spring-amqp-1.3.0.M2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.rabbitmq/amqp-client/3.2.2/9e4485e734415e84ea3caea25650f8651f388a3a/amqp-client-3.2.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.amqp/spring-rabbit/1.3.0.M2/ceb54c437d2d00c3a22d59982922f24fbf78c8a/spring-rabbit-1.3.0.M2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.6/ce53b0a0e2cfbb27e8a59d38f79a18a5c6a8d2b0/slf4j-api-1.6.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/jcl-over-slf4j/1.6.6/ec497945fdcaf7fd970ae9931b9bbfaf735d385e/jcl-over-slf4j-1.6.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/4.0.1.RELEASE/7d46d07d44f56af7cdcbba53ff671c5487f9547/spring-jdbc-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.2/2bf96b7aa8b611c177d329452af1dc933e14501c/commons-cli-1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/xmlenc/xmlenc/0.52/d82554efbe65906d83b3d97bd7509289e9db561a/xmlenc-0.52.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.4/4216af16d38465bbab0f3dff8efa14204f7a399a/commons-codec-1.4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-httpclient/commons-httpclient/3.0.1/d6364bcc1b2b2aa69d008602d36a700453648560/commons-httpclient-3.0.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-math/2.1/b3c4bdc2778ddccceb8da2acec3e37bfa41303e9/commons-math-2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2.1/761ea405b9b37ced573d2df0d1e3a4e0f9edc668/commons-collections-3.2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-lang/commons-lang/2.4/16313e02a793435009f1e458fa4af5d879f6fb11/commons-lang-2.4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils/1.7.0/5675fd96b29656504b86029551973d60fb41339b/commons-beanutils-1.7.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-digester/commons-digester/1.8/dc6a73fdbd1fa3f0944e8497c6c872fa21dca37e/commons-digester-1.8.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils-core/1.8.0/175dc721f87e4bc5cc0573f990e28c3cf9117508/commons-beanutils-core-1.8.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-configuration/commons-configuration/1.6/32cadde23955d7681b0d94a2715846d20b425235/commons-configuration-1.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/oro/oro/2.0.8/5592374f834645c4ae250f4c9fbb314c9369d698/oro-2.0.8.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-net/commons-net/1.4.1/abb932adb2c10790c1eaa4365d3ac2a1ac7cb700/commons-net-1.4.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-el/commons-el/1.0/1df2c042b3f2de0124750241ac6c886dbfa2cc2c/commons-el-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.eclipse.jdt/core/3.1.1/88c83ce444cf46d02494da37c9fa1eebc9ce9cea/core-3.1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-core/1.2.1/3e5874122a26a735162a380627210779b41bfd59/hadoop-core-1.2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-streaming/1.2.1/4baac190cf4cd4a6d085780cbcab1a89493f932b/hadoop-streaming-1.2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-tools/1.2.1/b08c16bd0448fbcadab67c4f8df837c094fdc91e/hadoop-tools-1.2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-hadoop-core/2.0.0.M4/ff4cefb0870d61fdc9efe26d118310c02b5eafbb/spring-data-hadoop-core-2.0.0.M4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-hadoop-batch/2.0.0.M4/47de250d5d9b48ed1319a747e3b06fdc46d939ef/spring-data-hadoop-batch-2.0.0.M4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.6.6.Final/e4e40738ce9bee0a92389cb739c94d7839778647/netty-3.6.6.Final.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-juli/7.0.42/f0049ac94514d69231c41ed96238efb94ffdd9cf/tomcat-juli-7.0.42.jar, file:/Users/iperumal/workspace/spring-xd/spring-xd-analytics/bin/, file:/Users/iperumal/workspace/spring-xd/spring-xd-tuple/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.2.2/3c8f6018eaa72d43b261181e801e6f8676c16ef6/jackson-databind-2.2.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.batch/spring-batch-infrastructure/3.0.0.BUILD-SNAPSHOT/cfaea737589c43c54ff338ae27e1bee477620176/spring-batch-infrastructure-3.0.0.BUILD-SNAPSHOT.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.eaio.uuid/uuid/3.2/77ba5105d949cd589aff75400d9f7d3676691a46/uuid-3.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.2.2/285cb9c666f0f0f3dd8a1be04e1f457eb7b15113/jackson-annotations-2.2.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.2.2/d20be6a5ddd6f8cfd36ebf6dea329873a1c41f1b/jackson-core-2.2.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/1.6.2.RELEASE/e96a0458cdc3179ca70c880f42315bb75df4faf5/spring-data-commons-1.6.2.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.1/8f79e353ef77da6710e1f10d34fc3698eaaacbca/joda-time-2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/jcl-over-slf4j/1.7.5/cd5970bd13fa85f7bed41ca606d6daf7cbf1365/jcl-over-slf4j-1.7.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-log4j12/1.7.5/6edffc576ce104ec769d954618764f39f0f0f10d/slf4j-log4j12-1.7.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/nl.jqno.equalsverifier/equalsverifier/1.1.3/60cd685f314a9cebfd0595d88fea45fba2f47918/equalsverifier-1.1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.5/6b262da268f8ad9eff941b25503a9198f0a0ac93/slf4j-api-1.7.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/1.1/63db1176f16448172611266154e4f6d39a0e1e68/objenesis-1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/cglib/cglib-nodep/2.2/59afed7ab65e7ec6585d5bc60556c3cbd203532b/cglib-nodep-2.2.jar, file:/Users/iperumal/workspace/spring-xd/spring-xd-rest-domain/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.hateoas/spring-hateoas/0.8.0.RELEASE/819c25e1ff12b7fca483d76b4e7d20221f621fcd/spring-hateoas-0.8.0.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.batch/spring-batch-admin-manager/1.3.0.M1/5afc7442417af8c46ae51480ed2b83943283d449/spring-batch-admin-manager-1.3.0.M1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.batch/spring-batch-core/3.0.0.BUILD-SNAPSHOT/8168f58716cd305040eaa87c82dc61822b03415c/spring-batch-core-3.0.0.BUILD-SNAPSHOT.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-core-asl/1.9.13/3c304d70f42f832e0a86d45bd437f692129299a4/jackson-core-asl-1.9.13.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/4.0.1.RELEASE/2ace92025f042e1d3ddfdbba093172e3572ac130/spring-web-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/4.0.1.RELEASE/2dbc91a6413115f7ffbe94f0fa9bc9fda3281d90/spring-webmvc-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.objenesis/objenesis/1.3/dc13ae4faca6df981fc7aeb5a522d9db446d5d50/objenesis-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.2/81d61b7f33ebeab314e07de0cc596f8e858d97/slf4j-api-1.7.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjrt/1.6.6/ff58f520e1a304b8a02b8cea8b96b1b8e5b25b0/aspectjrt-1.6.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.6.6/c0383be877cfa4ec6b62202c942a89a6264a2be6/aspectjweaver-1.6.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-pool/commons-pool/1.3/3231230c1d7631b66a74d1c4653cfd65a6f9ea0/commons-pool-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-dbcp/commons-dbcp/1.2.2/4fd4c6110e9bca3a655b717eb2e5920febb8403d/commons-dbcp-1.2.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/1.4/a8762d07e76cfde2395257a5da47ba7c1dbd3dce/commons-io-1.4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-lang/commons-lang/2.1/4763ecc9d78781c915c07eb03e90572c7ff04205/commons-lang-2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-fileupload/commons-fileupload/1.2.1/384faa82e193d4e4b0546059ca09572654bc3970/commons-fileupload-1.2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache-core/2.3.0/e59473c71a31e8e19da4fbc7028585c8ed51d69f/ehcache-core-2.3.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2/f951934aa5ae5a88d7e6dfaa6d32307d834a88be/commons-collections-3.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.freemarker/freemarker/2.3.15/c8cfe522476fcec8da5c980d58bf62d6ab0cf27c/freemarker-2.3.15.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.batch/spring-batch-admin-resources/1.3.0.M1/bdf7d5afc02397385fce8731409f606e54d4d033/spring-batch-admin-resources-1.3.0.M1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/1.0.2.RELEASE/d673c90a9fd8f0de5f20d53d61047849f707f42b/spring-retry-1.0.2.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/javax.batch/javax.batch-api/1.0/65392d027a6eb369fd9fcd1b75cae150e25ac03c/javax.batch-api-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.ibm.jbatch/com.ibm.jbatch-tck-spi/1.0/8ac869b0a60bff1a15eba0fb6398942410396938/com.ibm.jbatch-tck-spi-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/xpp3/xpp3_min/1.1.4c/19d4e90b43059058f6e056f794f0ea4030d60b86/xpp3_min-1.1.4c.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.thoughtworks.xstream/xstream/1.3/3f755b1a46744302712b1b962c4ab64de392f477/xstream-1.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.codehaus.jettison/jettison/1.1/1a01a2a1218fcf9faa2cc2a6ced025bdea687262/jettison-1.1.jar, file:/Users/iperumal/workspace/spring-xd/spring-xd-module/bin/, file:/Users/iperumal/workspace/spring-xd/spring-xd-module-spi/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/1.0.0.RC1/7830d0dd26f75841d8b5c2c72c42b864b1192ddb/spring-boot-autoconfigure-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/javax.validation/validation-api/1.0.0.GA/b6bd7f9d78f6fdaa3c37dae18a4bd298915f328e/validation-api-1.0.0.GA.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hibernate/hibernate-validator/4.3.1.Final/49b31d8ea51fa21cc78a89e9d4ddb11d6bfb4669/hibernate-validator-4.3.1.Final.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/1.0.0.RC1/7e53b72a368c495a482d3a213ad6338f8f7afcfa/spring-boot-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.1.0.CR2/28725380c07f917ace4e511db21cc45e9ae5a72b/jboss-logging-3.1.0.CR2.jar, file:/Users/iperumal/workspace/spring-xd/spring-xd-hadoop/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-hadoop-store/2.0.0.M4/1d3d691c0e6952ba26724339668e17040c368683/spring-data-hadoop-store-2.0.0.M4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.0/71c46e2313e92887de4247f2aabce4d09d65d82/snappy-java-1.1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.1/fd51f906669f49a4ffd06650666c3b8147a6106e/commons-io-2.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.7/9cd61d269c88f9fb0eb36cea1efcd596ab74772f/commons-codec-1.7.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/1.3.9/40719ea6961c0cb6afaeb6a921eaa1f6afd4cfdf/jsr305-1.3.9.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/11.0.2/35a3c69e19d72743cac83778aecbee68680f63eb/guava-11.0.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.codehaus.jackson/jackson-mapper-asl/1.9.13/1ee2f2bed0e5dd29d1cb155a166e6f8d50bbddb7/jackson-mapper-asl-1.9.13.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.thoughtworks.paranamer/paranamer/2.3/4a85963a752c0a2f715c3924bfc686865e7e1bc6/paranamer-2.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.tukaani/xz/1.0/ecff5cb8b1189514c9d1d8d68eb77ac372e000c9/xz-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-compress/1.4.1/b02e84a993d88568417536240e970c4b809126fd/commons-compress-1.4.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.4/2396d74b12b905f780ed7966738bb78438e8371a/slf4j-api-1.6.4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.avro/avro/1.7.5/8343a5b33f56fa16306ed27fa7b1a79278c26c2d/avro-1.7.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-common/1.2.5/fd1e6d42b3cb63f05ea5a1d22ded5ab63837b70f/parquet-common-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-generator/1.2.5/f16fd52b93d6677be340e7ac61609d6b91ba5ab0/parquet-generator-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-encoding/1.2.5/e96b9cd40f0eebc4ae483b0187401aa444ba36c0/parquet-encoding-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-column/1.2.5/1b1c618df93b16eb684c120662d56cde1b2caa99/parquet-column-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-format/1.0.0/ffaa2809ce56db3d7288ae118d876be30e9d1eb0/parquet-format-1.0.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-hadoop/1.2.5/6c87620226b4e156dac44af45171055b9ea78c8/parquet-hadoop-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.twitter/parquet-avro/1.2.5/8e7ad3c7f06b40e6d09417f82b0e4c703d8918ad/parquet-avro-1.2.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-jexl/2.1.1/6ecc181debade00230aa1e17666c4ea0371beaaa/commons-jexl-2.1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/net.sf.opencsv/opencsv/2.3/c23708cdb9e80a144db433e23344a788a1fd6599/opencsv-2.3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.kitesdk/kite-data-core/0.10.0/916792f62bb1177ec4e9f3dedc53f19d9ae869a/kite-data-core-0.10.0.jar, file:/Users/iperumal/workspace/spring-xd/extensions/spring-xd-extension-reactor/bin/, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.projectreactor/reactor-spring/1.0.0.RC1/1652e63c473f1824ca7185d12be70981f97913e0/reactor-spring-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.projectreactor/reactor-tcp/1.0.0.RC1/d275a1bdb5a449a1e9638dcd99f9a97a97c26b45/reactor-tcp-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.jayway.jsonpath/json-path/0.8.1/fbcad75a02160def33c4359b24015cca2d91ccce/json-path-0.8.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.lmax/disruptor/3.2.0/ac62995678dd4b906e85b26354aa2ebfda130c32/disruptor-3.2.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.projectreactor/reactor-core/1.0.0.RC1/202718fd7bbe443de0004e305edb075355b0b340/reactor-core-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/io.netty/netty-all/4.0.6.Final/1ce815d4d1ab73b17e20a5f9c206f422014deb4a/netty-all-4.0.6.Final.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/net.minidev/json-smart/1.1.1/24a2f903d25e004de30ac602c5b47f2d4e420a59/json-smart-1.1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-lang/commons-lang/2.6/ce1edb914c94ebc388f086c6827e8bdeec71ac2/commons-lang-2.6.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.cloud/spring-service-connector/0.9.2/75e716e825fe66db6047cf1e026ca7581a5c933a/spring-service-connector-0.9.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.cloud/cloudfoundry-connector/0.9.2/d0f4df0a67f13704db02e688fc9d85d1c9ed5498/cloudfoundry-connector-0.9.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator/1.0.0.RC1/88bf421071c1a38a9fda606c5f3cab609c74bf71/spring-boot-actuator-1.0.0.RC1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-event/4.0.0.M3/d0abb5b6a6d8050a71cbb6e95c69d484bb26c005/spring-integration-event-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-file/4.0.0.M3/ba6b17b85f2847326bf5ea0444872c62de0f5e8f/spring-integration-file-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-ftp/4.0.0.M3/6ddfabd427c6edb5114595903eead0cd042a6ec7/spring-integration-ftp-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-groovy/4.0.0.M3/53203058a9f6d703ae0e1d86ebb59c6ee2515c14/spring-integration-groovy-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-http/4.0.0.M3/b78a8227736b84aa857dbec75a6ef4c47a0563be/spring-integration-http-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-jmx/4.0.0.M3/d2b332cc945281327fc91b8641fa71b7340dfdcf/spring-integration-jmx-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jolokia/jolokia-spring/1.1.5/e9a8d8710c19381327afe4a7e5af9cc4aa5e7ef4/jolokia-spring-1.1.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jolokia/jolokia-client-java/1.1.5/e0f24b062d3f359737a24a0130986e20f0a77e5c/jolokia-client-java-1.1.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.esotericsoftware.kryo/kryo/2.22/1b624c2db8eb3a40d84362f22c2078ebde3e8c81/kryo-2.22.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/args4j/args4j/2.0.16/9f00fb12820743b9e05c686eba543d64dd43f2b1/args4j-2.0.16.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.batch/spring-batch-integration/3.0.0.BUILD-SNAPSHOT/e11f30ff7b6da07e7f630752c5d92c41eorg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jobExecutionDao' defined in class path resource [META-INF/spring-xd/batch/batch.xml]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Could not inspect meta data for database type.  You have to supply it explicitly.
84de90a/spring-batch-integration-3.0.0.BUILD-SNAPSHOT.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.plugin/spring-plugin-core/0.8.0.RELEASE/4390edad56632d97fec6abe8dba96531234b9603/spring-plugin-core-0.8.0.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/7.0.35/3efe5c4c44215a514fa804c5ef829569f6652b8b/tomcat-embed-core-7.0.35.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-logging-juli/7.0.35/5e92715a81731f6615053a399e1d3e9a2c05d4b9/tomcat-embed-logging-juli-7.0.35.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-jsp-api/7.0.35/30a8560fad20cf681da4b26a5100d474559fda8a/tomcat-jsp-api-7.0.35.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.sun.mail/javax.mail/1.5.0/ec2410fdf7e0a3022e7c2a2e6241039d1abc1e98/javax.mail-1.5.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.12/ebe66a6b88caab31d7a19571ad23656377523545/snakeyaml-1.12.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.postgresql/postgresql/9.2-1002-jdbc4/a535facdcc0b4c488798e0c19499c08b1bc3a2e/postgresql-9.2-1002-jdbc4.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/mysql/mysql-connector-java/5.1.23/c264e2114579474d13dd808a510fc74e762dda8c/mysql-connector-java-5.1.23.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.activemq/activemq-core/5.6.0/9996dd23872b8588d63cf8a6cc8522b6ad8caa85/activemq-core-5.6.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jms/4.0.1.RELEASE/7d74a1414cd45349ed61ee3f3e1fca019090358c/spring-jms-4.0.1.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/1.0.0.RC1/15b007421d5419e435cf508057d458a065126d00/spring-boot-1.0.0.RC1-tests.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.social/spring-social-twitter/1.0.5.RELEASE/6c4b7e69b060862d98c87588d827d4feabbcd68/spring-social-twitter-1.0.5.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.3.1/c4096a8323bbbcbeda072e3def123a9b66783361/jackson-databind-2.3.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.hsqldb/hsqldb/2.3.1/bd7153caa30958e1c64a3dd38b93e5a7442d9a0e/hsqldb-2.3.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.cloud/core/0.9.2/32631d9bd70d432e77df0ca64db21b49d28f9589/core-0.9.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.3.0/f5e853a20b60758922453d56f9ae1e64af5cb3da/jackson-annotations-2.3.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.3.1/f9f7185c92ca5fefe2fb3efdeb477a67c96ea2d0/jackson-core-2.3.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/commons-net/commons-net/3.0.1/643cc426b9f75aa111fac0fac0e52ff5d991a337/commons-net-3.0.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.integration/spring-integration-scripting/4.0.0.M3/6b0260ca4709da0bdd230d7bca41f3764a91ed4c/spring-integration-scripting-4.0.0.M3.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/com.googlecode.json-simple/json-simple/1.1/5e303a03d04e6788dddfa3655272580ae0fc13bb/json-simple-1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jolokia/jolokia-core/1.1.5/56bdd8956fb2bb3a9241267a7cb22d43f27d0a71/jolokia-core-1.1.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jolokia/jolokia-jvm/1.1.5/c59f18d004d64bea982d5128fbf08b4a177c1720/jolokia-jvm-1.1.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jolokia/jolokia-jmx/1.1.5/c7026c2cf9111a138538cc6705ca4c41f70be8fa/jolokia-jmx-1.1.5.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.1.2/39e30fb2ddfcf32b9dd663039ca6e847b698aa6f/httpcore-4.1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.1.2/9003011c1b6d28a7331f04251a25e7ccf63c98f8/httpclient-4.1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpmime/4.1.2/c78eaaea68d0f36f73b646f08cdb34f1a784239b/httpmime-4.1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient-cache/4.1.2/6906f34467097e240ca451652f5738245a2face0/httpclient-cache-4.1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient-osgi/4.1.2/c7577b4f8877a0a29ae5cc65331dcbe9960f8cce/httpclient-osgi-4.1.2.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-el-api/7.0.35/5e117f3f62c49d52cb72d028e76c5d16a8d148ca/tomcat-el-api-7.0.35.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.tomcat/tomcat-servlet-api/7.0.35/87bd606eef7d42ff3ec324d198549ccd8ccb56fc/tomcat-servlet-api-7.0.35.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/javax.activation/activation/1.1/e6cb541461c2834bdea3eb920f1884d1eb508b50/activation-1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1/c872b46c601d8dc03633288b81269f9e42762cea/geronimo-jms_1.1_spec-1.1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.activemq/kahadb/5.6.0/ab90275013deb4a1652a49dc6b01a894b8138a48/kahadb-5.6.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.activemq.protobuf/activemq-protobuf/1.1/26682eb801f70563511f7c424dc10e8b3e66340e/activemq-protobuf-1.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.fusesource.hawtdispatch/hawtdispatch/1.9/cbfeed0be226850799a7ef819b0dfa3346198af6/hawtdispatch-1.9.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.fusesource.hawtdispatch/hawtdispatch-transport/1.9/5e29bb84478f8f2526e0cae2cb74b9978f3c01d0/hawtdispatch-transport-1.9.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.fusesource.hawtbuf/hawtbuf/1.9/4a42b835d1df77db8c9a144a11ebb4600a372f5f/hawtbuf-1.9.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.fusesource.mqtt-client/mqtt-client/1.0/4af519e42c765b78aedd63c872706f5fa1621a9c/mqtt-client-1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.osgi/org.osgi.core/4.1.0/b88cd082b5b6774e9db939e28c0e3dc526c92d89/org.osgi.core-4.1.0.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1/5372615b0c04c1913c95c34a0414cef720ca2855/geronimo-j2ee-management_1.1_spec-1.0.1.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.jasypt/jasypt/1.8/b14e87ad376dee74bb2d088279fe2df179cfc9e0/jasypt-1.8.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.social/spring-social-core/1.0.3.RELEASE/44e648f23b45162c698e255a16759832dfcfc004/spring-social-core-1.0.3.RELEASE.jar, file:/Users/iperumal/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-crypto/3.1.3.RELEASE/a0db20c52e8281bffc200429b7fcd7c2cbeeb0e0/spring-security-crypto-3.1.3.RELEASE.jar, file:/Users/iperumal/workspace/spring-xd-samples/batch-notifications/target/batch-notifications-1.0.0.BUILD-SNAPSHOT.jar]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:700)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:658)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:355)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:129)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:116)
	at org.springframework.xd.dirt.server.LauncherApplication.run(LauncherApplication.java:76)
	at org.springframework.xd.dirt.server.LauncherApplication.main(LauncherApplication.java:56)
Caused by: java.lang.IllegalArgumentException: Could not inspect meta data for database type.  You have to supply it explicitly.
	at org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean.getObject(SqlPagingQueryProviderFactoryBean.java:159)
	at org.springframework.batch.admin.service.JdbcSearchableJobExecutionDao.getPagingQueryProvider(JdbcSearchableJobExecutionDao.java:134)
	at org.springframework.batch.admin.service.JdbcSearchableJobExecutionDao.getPagingQueryProvider(JdbcSearchableJobExecutionDao.java:113)
	at org.springframework.batch.admin.service.JdbcSearchableJobExecutionDao.getPagingQueryProvider(JdbcSearchableJobExecutionDao.java:104)
	at org.springframework.batch.admin.service.JdbcSearchableJobExecutionDao.afterPropertiesSet(JdbcSearchableJobExecutionDao.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 15 more
Caused by: org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:293)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.batch.support.DatabaseType.fromMetaData(DatabaseType.java:95)
	at org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean.getObject(SqlPagingQueryProviderFactoryBean.java:155)
	... 21 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:280)
	... 24 more
Caused by: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.getConnection(Unknown Source)
	at org.hsqldb.jdbc.JDBCDriver.connect(Unknown Source)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:278)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:182)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:702)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:634)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:488)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:144)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:116)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:103)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:127)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 25 more
Caused by: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused
	at org.hsqldb.ClientConnection.openConnection(Unknown Source)
	at org.hsqldb.ClientConnection.initConnection(Unknown Source)
	at org.hsqldb.ClientConnection.<init>(Unknown Source)
	... 39 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:391)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at java.net.Socket.<init>(Socket.java:425)
	at java.net.Socket.<init>(Socket.java:208)
	at org.hsqldb.server.HsqlSocketFactory.createSocket(Unknown Source)
	... 42 more


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,233625600,,,42132,true,tmarshall(tmarshall),,,,"0|i004jz:",743,41834,,,Sprint 22,,,3.0,,"12/Feb/14 6:58 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/578",,,,,,,,,,,,,,,,,
UI:Fix E2E test warning,XD-1316,55650,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,12/Feb/14 11:51 AM,12/Feb/14 12:55 PM,10/Jul/21 8:38 AM,12/Feb/14 12:55 PM,,,,,,,M6,,UI,,,,,0,,,,,,,"When running E2E tests the following warning may be observed:

{code}
Running ""karma:e2e"" (karma) task
INFO [karma]: Karma v0.10.9 server started at http://localhost:7070/_karma_/
INFO [launcher]: Starting browser PhantomJS
TypeError: Cannot read property 'verbose' of undefined
    at enableWebsocket (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-connect-proxy/lib/utils.js:101:18)
    at Object.utils.proxyRequest [as handle] (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-connect-proxy/lib/utils.js:109:5)
    at next (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-contrib-connect/node_modules/connect/lib/proto.js:193:15)
    at Object.livereload [as handle] (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-contrib-connect/node_modules/connect-livereload/index.js:147:5)
    at next (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-contrib-connect/node_modules/connect/lib/proto.js:193:15)
    at Function.app.handle (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-contrib-connect/node_modules/connect/lib/proto.js:201:3)
    at Server.app (/Users/hillert/dev/git/spring-xd/spring-xd-ui/node_modules/grunt-contrib-connect/node_modules/connect/lib/connect.js:65:37)
    at Server.EventEmitter.emit (events.js:98:17)
    at HTTPParser.parser.onIncoming (http.js:2108:12)
    at HTTPParser.parserOnHeadersComplete [as onHeadersComplete] (http.js:121:23)
    at Socket.socket.ondata (http.js:1966:22)
    at TCP.onread (net.js:525:27)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,233625600,,,42126,true,tmarshall(tmarshall),,,,"0|i004lz:",752,41828,,,Sprint 22,,,2.0,,"12/Feb/14 12:01 PM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/576",,,,,,,,,,,,,,,,,
MBeans are not destroyed if stream is created and destroyed with no delay,XD-1301,55609,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Fixed,grenfro,grenfro,grenfro,11/Feb/14 8:54 AM,28/May/14 2:32 PM,10/Jul/21 8:38 AM,24/Apr/14 5:29 AM,,,,,,,M7,,Runtime,,,,,0,,,,,,,"Problem: The container that the stream was deployed to, will not allow new streams to be deployed.  Once the error occurs, the only solution is to terminate the XD Container and restart it.

To reproduce create a stream foo and destroy the stream, then create the stream  foo again.  This best done programmatically, taking the same steps using the ""shell"" may not reproduce the problem.  i.e. if you put a Sleep of 1-2 seconds between the destroy and the next create, it works fine

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,227577600,,2014-04-23 13:24:08.678,42085,true,tmarshall(tmarshall),,,,"0|i006iv:",1069,41787,,,,,,5.0,,"23/Apr/14 1:24 PM;mark.pollack;Need to reproduce since the issue since it has been a while, also was the stream deployed successfully before calling destroy?  This maybe related to the fix that is part of XD-1532","24/Apr/14 5:29 AM;grenfro;Reran the tests that would produce the problem.  As of the M6 release I can no longer reproduce the problem.  ",,,,,,,,,,,,,,,,
Commands that prompt the user are now broken,XD-1298,55571,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,eric.bottard,eric.bottard,eric.bottard,10/Feb/14 8:08 AM,08/May/15 10:05 AM,10/Jul/21 8:38 AM,11/Feb/14 3:06 AM,,,,,,,1.0 GA,,,,,,,0,,,,,,,"Most likely due to https://github.com/spring-projects/spring-shell/commit/296e4d2ff0e6e91d91209ab8717335357c587de0

When the user submits with ENTER, the shell appears to hang",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,233884800,,,42047,true,sabby(sabby),,,,"0|i004jb:",740,41749,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Use descriptive texts for some module options defaults,XD-1289,55424,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Won't Fix,,eric.bottard,eric.bottard,31/Jan/14 1:05 AM,16/May/14 1:37 AM,10/Jul/21 8:38 AM,16/May/14 1:37 AM,,,,,,,M7,,Configuration,,,,,0,,,,,,,"Need a way to tell the user that this option will be determined at runtime,late bindings.
In the module info command, references to ${xd.stream.name} could read ""<use stream name>"" for example)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,225676800,,2014-05-15 10:00:17.742,41901,false,tmarshall(tmarshall),,,,"0|i003db:",547,41603,,,Sprint 27,,,4.0,,"15/May/14 4:05 AM;eric.bottard;This issue was first created when I thought we'd annotate the field value with something that read ${xd.stream.name}, but the field would not read ${xd.stream.name} itself.

Now it does, so not sure there is value to this issue anymore. What it would entail is changing this
{noformat}
xd:>module info --name sink:log
module info --name sink:log

Information about sink module 'log':

  Option Name  Description                                                                              Default            Type
  -----------  ---------------------------------------------------------------------------------------  -----------------  --------
  expression   the expression to be evaluated for the log content; use '#root' to log the full message  payload            String
  level        the log level                                                                            INFO               String
  name         the name of the log category to log to (will be prefixed by 'xd.sink.')                  ${xd.stream.name}  String
  inputType    how this module should interpret messages it consumes                                    <none>             MimeType
{noformat}
to this:
{noformat}
xd:>module info --name sink:log
module info --name sink:log

Information about sink module 'log':

  Option Name  Description                                                                              Default            Type
  -----------  ---------------------------------------------------------------------------------------  -----------------  --------
  expression   the expression to be evaluated for the log content; use '#root' to log the full message  payload            String
  level        the log level                                                                            INFO               String
  name         the name of the log category to log to (will be prefixed by 'xd.sink.')                  <stream name>  String
  inputType    how this module should interpret messages it consumes                                    <none>             MimeType

{noformat}
Thoughts?","15/May/14 10:00 AM;mark.pollack;Go with ${xd.stream.name} since end users will potentially need to reference this property placeholder value when creating a stream and also in other cases, e.g. ${xd.container.id} inside a path expression.

--dir=""/tmp/foo/ + '${xd.container.id}' +'data'""

--name=${xd.stream.name}+""-joe"" ",,,,,,,,,,,,,,,,
JMX endpoints not functioning ,XD-1280,55386,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Works as Designed,,grenfro,grenfro,29/Jan/14 2:10 PM,03/Feb/14 7:41 AM,10/Jul/21 8:38 AM,03/Feb/14 7:41 AM,,,,,,,M6,,,,,,,0,,,,,,,I cannot access the JMX/Jolokia endpoints using the Spring Boot RC1 and Snapshot.  Works with XD-M5 and Boot-M7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,234489600,,2014-01-30 10:33:39.725,41863,true,tmarshall(tmarshall),,,,"0|i079if:",42413,41565,,,,,,3.0,,"30/Jan/14 10:33 AM;mark.pollack;To reproduce, build current XD on master (this points to boot rc1).

Then start ./xd-container and in xd-config.yml add
{noformat}
endpoints:
  jolokia:
    enabled: true
  jmx:
    enabled: true

XD_JMX_ENABLED: true

server:
  port: 40000
{noformat}

>>>>>>

endpoints.jmx.uniqueNames = true is already set in xd's application.yml that is inside the .jar file.","03/Feb/14 7:41 AM;grenfro;Had to find the correct settings in the environment to enable the JMX Settings.",,,,,,,,,,,,,,,,
Twitterstream is broken,XD-1266,55326,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,luke,luke,luke,24/Jan/14 8:24 AM,27/Jan/14 2:16 PM,10/Jul/21 8:38 AM,27/Jan/14 2:16 PM,,,,,,,M6,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,235008000,,2014-01-27 14:16:02.582,41805,false,tmarshall(tmarshall),,,,"0|i0059b:",861,41507,,,Sprint 21,,,3.0,,"24/Jan/14 8:27 AM;luke;Running twitterstream causes the following error:

Error creating bean with name 'org.springframework.integration.x.twitter.TwitterStreamChannelAdapter#0' defined in URL [file:/Users/luke/Work/spring-xd/build/dist/spring-xd/xd/modules/source/twitterstream/config/twitterstream.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (2) are:
PropertyAccessException 1: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'org.springframework.beans.factory.config.TypedStringValue' to required type 'int' for property 'readTimeout'; nested exception is java.lang.ClassCastException: org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1 cannot be cast to org.springframework.http.client.SimpleClientHttpRequestFactory
PropertyAccessException 2: org.springframework.beans.TypeMismatchException: Failed to convert property value of type 'org.springframework.beans.factory.config.TypedStringValue' to required type 'int' for property 'connectTimeout'; nested exception is java.lang.ClassCastException: org.springframework.social.support.ClientHttpRequestFactorySelector$HttpComponentsClientRequestFactoryCreator$1 cannot be cast to org.springframework.http.client.SimpleClientHttpRequestFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1493)

Apparently because Spring Social changes the type of the underlying connection factory based on whether it finds Apache HttpClient on the classpath or not. To workaround previous issues, we were assuming it was of type SimpleClientHttpRequestFactory, but it looks as if the classpath must have changed and HttpClient is not there, so this assumption no longer holds.","27/Jan/14 2:16 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/1e7d443bfac709007a6ecf6311efe3efad6a65f2",,,,,,,,,,,,,,,,
Update SI to latest 4.0 M3 and Spring AMQP to 1.3.0.M2,XD-1264,55298,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,eric.bottard,eric.bottard,23/Jan/14 5:14 AM,31/Jan/14 8:48 AM,10/Jul/21 8:38 AM,31/Jan/14 8:48 AM,,,,,,,M6,,,,,,,0,,,,,,,"The Rabbit endpoint suffers from a problem similar to XD-1067.
Seems like spring-[rabbit/amqp] needs to be bumped to 1.3.0.M1 to fix it.
Sadly, we get this error:
noformat
java.lang.NoSuchMethodError: org.springframework.amqp.core.MessageProperties.getContentLength()J
at org.springframework.integration.amqp.support.DefaultAmqpHeaderMapper.extractStandardHeaders(DefaultAmqpHeaderMapper.java:102)
at org.springframework.integration.amqp.support.DefaultAmqpHeaderMapper.extractStandardHeaders(DefaultAmqpHeaderMapper.java:53)
at org.springframework.integration.mapping.AbstractHeaderMapper.toHeaders(AbstractHeaderMapper.java:205)
at org.springframework.integration.mapping.AbstractHeaderMapper.toHeadersFromRequest(AbstractHeaderMapper.java:148)
at org.springframework.integration.amqp.inbound.AmqpInboundChannelAdapter$1.onMessage(AmqpInboundChannelAdapter.java:75)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:584)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:482)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$001(SimpleMessageListenerContainer.java:69)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$1.invokeListener(SimpleMessageListenerContainer.java:144)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeListener(SimpleMessageListenerContainer.java:920)
at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:454)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:728)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:712)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$400(SimpleMessageListenerContainer.java:69)
at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:812)
at java.lang.Thread.run(Thread.java:724)
noformat
Updating to latest SI snapshot does not help (as of Jan 23rd)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,234662400,,2014-01-31 08:48:00.876,41776,false,tmarshall(tmarshall),,,,"0|i005bz:",873,41478,,,Sprint 21,,,4.0,,"31/Jan/14 8:48 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/80cb4a26d4ecd3579f3950c6afaca3a68b4b2192",,,,,,,,,,,,,,,,,
Serialization of ChunkContext fails using Kryo,XD-1216,52633,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,09/Jan/14 1:51 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,09/Jan/14 4:24 PM,,,,,,,M5,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236563200,,2014-01-09 16:24:55.225,39113,true,tmarshall(tmarshall),,,,"0|i06sof:",39684,38815,,,Sprint 20,,,2.0,,"09/Jan/14 4:24 PM;grenfro;Merged",,,,,,,,,,,,,,,,,
Shell - 'makeUnique' Job Parameter is true by default ,XD-1210,52615,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,08/Jan/14 12:59 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,09/Jan/14 8:33 AM,,,,,,,M5,,,,,,,0,,,,,,,Currently the shell assumes that the 'makeUnique'job parameter is by default *false*. That is not true. As a consequence the parameter has currently no impact/does not work.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236649600,,2014-01-09 08:33:54.684,39095,true,tmarshall(tmarshall),,,,"0|i06so7:",39683,38797,,,Sprint 20,,,2.0,,"09/Jan/14 8:09 AM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/514","09/Jan/14 8:33 AM;grenfro;Closed",,,,,,,,,,,,,,,,
Job Plugin - Notification Channel not correctly bound to MessageBus,XD-1207,52610,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,08/Jan/14 7:27 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,08/Jan/14 3:09 PM,,,,,,,M5,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236736000,,,39090,true,tmarshall(tmarshall),,,,"0|i06snz:",39682,38792,,,Sprint 20,,,4.0,,,,,,,,,,,,,,,,,,,
JobPlugin - Use containsKey when checking for Parameters,XD-1203,52587,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,06/Jan/14 4:02 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,07/Jan/14 8:12 AM,M4,,,,,,M5,,,,,,,0,,,,,,,"Use containsKey when checking for Parameters
Add tests",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236822400,,2014-01-07 08:12:35.954,39067,true,tmarshall(tmarshall),,,,"0|i06t07:",39737,38769,,,,,,2.0,,"06/Jan/14 8:00 PM;hillert;PR: https://github.com/spring-projects/spring-xd/pull/501","07/Jan/14 8:12 AM;grenfro;Merged",,,,,,,,,,,,,,,,
Shell: Job Parameters are whitespace sensitive,XD-1198,52576,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,grenfro,hillert,hillert,06/Jan/14 9:00 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,10/Jan/14 6:15 AM,,,,,,,M5,,,,,,,0,,,,,,,"This works:

{code}
job launch helloSpringXD --params ""{""myStringParameter"":""foobar"",""secondParam"":""hello""}""
{code}

This fails:

{code}
job launch helloSpringXD --params ""{""myStringParameter"":""foobar"", ""secondParam"":""hello""}""
{code}

Notice the space between the parameters. This fails with:

{code}
spring> job launch helloSpringXD --params ""{""myStringParameter"":""foobar"", ""secondParam"":""hello""}""
14/01/06 12:00:07 WARN client.RestTemplate: PUT request for ""http://localhost:9393/jobs/helloSpringXD/launch"" resulted in 500 (Internal Server Error); invoking error handler

Command failed org.springframework.xd.rest.client.impl.SpringXDException: org.springframework.integration.MessageHandlingException: java.lang.IllegalArgumentException: Unable to convert provided JSON to Map<String, Object>

{code}

Internally the parameters are parsed to:

{code}
{""myStringParameter"":""foobar"",secondParam"":""hello""}
{code}

The curly brace is missing.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236563200,,2014-01-09 09:01:11.443,39056,true,tmarshall(tmarshall),,,,"0|i06syn:",39730,38758,,,,,,4.0,,"09/Jan/14 9:01 AM;eric.bottard;This will be fixed as a side effect of https://github.com/spring-projects/spring-shell/pull/21 ","10/Jan/14 6:15 AM;grenfro;Will be fixed by shell PR-21 ",,,,,,,,,,,,,,,,
job launch doesn't do tab completion of --name,XD-1197,52574,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Won't Fix,,thomas.risberg,thomas.risberg,06/Jan/14 8:01 AM,24/Nov/15 3:48 PM,10/Jul/21 8:38 AM,24/Nov/15 3:48 PM,,,,,,,,,,,,,,0,,,,,,,"In the shell:

job launch doesn't do completion of --name, this is different behavior compared to job destroy

typing 'job destroy' and hitting tab completes with '--name'

typing 'job launch' and hitting tab does nothing",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,177465600,XD-233,2014-01-16 04:56:50.99,39054,true,sabby(sabby),,,,"0|i00b6v:",1840,38756,,,,,,5.0,,"16/Jan/14 4:56 AM;eric.bottard;This is because job launch accepts two options, while job destroy only accepts one.

One thing we could do though, is make Spring Shell favor mandatory options when we tab complete.","24/Nov/15 3:48 PM;sabby;Moved to GH. ",,,,,,,,,,,,,,,,
JDBC sink destroys existing table,XD-1191,52520,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,thomas.risberg,thomas.risberg,thomas.risberg,30/Dec/13 8:18 AM,11/Feb/14 11:39 AM,10/Jul/21 8:38 AM,03/Jan/14 10:51 AM,,,,,,,M5,,Analytics,,,,,0,,,,,,,The jdbc sink deletes existing table and creates a single column payload one even if properties file has 'initializeDatabase=false',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,237513600,,,39001,false,tmarshall(tmarshall),,,,"0|i06smn:",39676,38703,,,Sprint 20,,,3.0,,,,,,,,,,,,,,,,,,,
Could not override rabbit sink module's rabbit connection factory properties,XD-1189,52497,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,26/Dec/13 11:07 AM,10/Jan/14 12:11 PM,10/Jul/21 8:38 AM,26/Dec/13 11:27 AM,,,,,,,M5,,,,,,,0,,,,,,,"Currently RabbitMQ sink module's connection properties could not be overridden by ""${xd.config.home}/${configProperties:rabbit}.properties"" even if ""local-override"" is set to true.

It looks like the AmqpTemplate used by the AMQP outbound channel adapter doesn't use the connection factory defined in the sink module.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,237772800,,,38977,true,tmarshall(tmarshall),,,,"0|i00667:",1011,38679,,,Sprint 20,,,2.0,,,,,,,,,,,,,,,,,,,
Add ModuleOptions support for Rabbit sink,XD-1188,52494,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,iperumal,iperumal,23/Dec/13 2:44 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,03/Jan/14 2:07 PM,,,,,,,M5,,,,,,,0,,,,,,,We need to add ModuleOptions support for Rabbit sink.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,238032000,,,38974,true,tmarshall(tmarshall),,,,"0|i0065z:",1010,38676,,,Sprint 20,,,2.0,,,,,,,,,,,,,,,,,,,
Support use of application.yml fragments,XD-1186,52491,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,luke,iperumal,iperumal,23/Dec/13 11:14 AM,19/Feb/14 10:48 PM,10/Jul/21 8:38 AM,19/Feb/14 10:48 PM,,,,,,,M5,,,,,,,0,,,,,,,"Since spring boot (by default) looks for property sources from file:./config/application.yml and file:./application.yml

In XD bundles, the CLASSPATH of our XD startup scripts'(admin, container, singlenode startup scripts) set to use APP_HOME and APP_HOME/config.

But, if we have an application.yml fragment on $APP_HOME/config, then it is considered as classpath resource and the actual ""application.yml"" (from dirt lib/ classpath) is not loaded. 

Also, we need to separate out the properties files we have inside $APP_HOME/config as by default, boot uses ""config"" directory as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,236908800,,2013-12-23 12:43:45.067,38971,true,tmarshall(tmarshall),,,,"0|i0064f:",1003,38673,,,Sprint 20,,,3.0,,"23/Dec/13 12:43 PM;mark.pollack;APP_HOME is a guess to pick XD_HOME if XD_HOME isn't explicitly set.  It should be quite natural to use XD_HOME/config and to include that on the classpath.  Should boot instead search for application.yml using classpath* ?

Also, I think there maybe an issue in xd-singlenode as it is more akin to two stand alone application that get run together...","24/Dec/13 1:45 AM;david_syer;I'm not sure {{classpath*:}} is a good solution since we would lose control of the order. It might be better for you guys, if you are adding stuff to the classpath, to also set {{-Dspring.config.location}} so you control it yourself (e.g. ""classpath:application.yml,classpath:custom.yml""). I don't think it's possible currently to put a comma-separated value in there, but it looks like a useful feature for boot.","24/Dec/13 4:35 AM;david_syer;Actually, I realized you can already do this. Just set {{spring.config.location=classpath:/custom.yml}} (or whatever) - it overrides the properties in the default location but it doesn't replace the default property source. You can even set that in {{application.yml}} I think.

N.B. use the /env endpoint (or JMX equivalent) to check the property sources that are live in a running app.","02/Jan/14 8:51 AM;mark.pollack;To try and summarize, since APP_HOME/config (which is most likely XD_HOME/config) is on the classpath, if we set spring.config.location=classpath:/application.yml we should expect that boot still still load the application.yml located in the jar and also the application.yml located in the filesystem under $XD_HOME/config/application.yml.  

If so, we should then create a application.yml file that has just one or two config options (say for rabbit) commented out, so that the file is present but doesn't override anything.  The current application.template should be renamed to application.yml and cleaned up.

BTW, in debugging this i think having an endpoint that exposes the values contained in various property sources, or one that tries to resolve a key against the hierarchy would be a useful addition to boot.","06/Jan/14 7:44 AM;luke;Setting spring.config.location to override the main application.yml seems to work fine. For example, if I create a YML snippet file containing:

{noformat}
spring:
  datasource:
    url: jdbc:hsqldb:hsql://localhost:9101/xdjob
    #driverClassName: org.sqlite.JDBC
  main:
    show_banner: true
server:
  port: 9394
{noformat}

Then set the property to point to my YAML snippet file:

{noformat}
JAVA_OPTS=""-Dspring.config.location=file:///Users/luke/Work/spring-xd/build/dist/spring-xd/xd/blah.yml""
{noformat}

Then start xd and:

{noformat}
curl localhost:9394/env | python -m json.tool
{noformat}

You can see the two property sources being used (note that I changed the port to 9394 here)

{noformat}
{
    ""URL [file:/Users/luke/Work/spring-xd/build/dist/spring-xd/xd/crap.yml]"": {
        ""server.port"": 9394, 
        ""spring.datasource.url"": ""jdbc:hsqldb:hsql://localhost:9101/xdjob"", 
        ""spring.main.show_banner"": true
    }, 
    ""class path resource [application.yml]"": {
        ...
        ""endpoints.jmx.enabled"": false, 
        ""endpoints.jolokia.enabled"": ""${XD_JMX_ENABLED:false}"", 
        ""server.port"": ""${PORT:9393}"", 
        ...
{noformat}

If we want to provide a default snippet file for users to edit, we can set a variable in the startup script to point to it (e.g. XD_CONFIG), with

{noformat}
XD_CONFIG=XD_HOME/config/xd-config.yml
{noformat}

and set spring.config.location from this.

Users could then set this variable if they wanted to use a pre-existing location on the filesystem when deploying XD.",,,,,,,,,,,,,
topic in mqtt source was marked as topics,XD-1183,52470,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,19/Dec/13 5:31 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,31/Dec/13 5:21 AM,,,,,,,M5,,,,,,,0,,,,,,,Changed field back to topic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,237427200,,,38950,true,tmarshall(tmarshall),,,,"0|i06smv:",39677,38652,,,Sprint 20,,,1.0,,"31/Dec/13 5:16 AM;grenfro;Submitted my own PR, but Eric added it to one of his own.",,,,,,,,,,,,,,,,,
Nodes can not connect with Admin using Redis as transport,XD-1179,52458,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,19/Dec/13 6:43 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,19/Dec/13 7:22 AM,,,,,,,M5,,,,,,,0,,,,,,,"This has happened more than once, where a node fails for whatever reason, and when it is restarted, it does not receive requests from the admin server.

This could be file handle count based.  Since this is not Rabbit as a transport I'm not chasing this down yet.  But felt it needed to be recorded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,238464000,,,38938,true,tmarshall(tmarshall),,,,"0|i06sc7:",39629,38640,,,,,,5.0,,"19/Dec/13 7:22 AM;grenfro;pbkac While the file handle is the reason the original node shutdown.  The reason that the client didnt' reconnect once restarted is that the admin was on rabbit :-P.  ",,,,,,,,,,,,,,,,,
Duplicate messages on tap,XD-1173,52430,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,mark.pollack,mark.pollack,17/Dec/13 6:19 AM,29/Jan/14 12:16 PM,10/Jul/21 8:38 AM,29/Jan/14 12:16 PM,,,,,,,M6,,,,,,,0,,,,,,,"If I fiddle with the testTappingWithLabels method I can reproduce the same issue:

HttpSource source = newHttpSource();

FileSink sink = newFileSink().binary(true); FileSink tapsink1 = newFileSink().binary(true); stream().create(""myhttp"", ""%s | flibble: transform
--expression=payload.toUpperCase() | flibble2: transform
--expression=payload.toUpperCase() | %s"", source, sink); stream().create(""mytap4"", ""tap:stream:myhttp.flibble > transform
--expression=payload.replaceAll('A','.') | %s"", tapsink1); source.ensureReady().postData(""Dracarys!"");

assertThat(sink, eventually(hasContentsThat(equalTo(""DRACARYS!""))));

assertThat(tapsink1, eventually(hasContentsThat(equalTo(""DR.C.RYS!""))));


java.lang.AssertionError:
Expected: ""DR.C.RYS!"", trying at most 10 times
      but: failed after 10*100=1000ms:
""DR.C.RYS!DR.C.RYS!"",
",,,,,,,,,,,,,,,,XD-1168,,,,,,,,,,,,,,,,,,,,,234835200,,2013-12-17 07:26:06.432,38910,false,tmarshall(tmarshall),,,,"0|i005a7:",865,38612,,,Sprint 20,Sprint 21,,3.0,,"17/Dec/13 7:26 AM;luke;From the original issue, there's also this test:

https://github.com/spring-projects/spring-xd/blob/master/src/test/scripts/basic_stream_tests#L49

We would expect one message in the counter, but get 3.
","28/Jan/14 5:50 AM;mark.fisher;Wasn't that fixed at some point? And why did we not catch in when the basic_stream_tests started to fail? Are those not running?","28/Jan/14 8:44 AM;mark.pollack;I thought testTappingWithLabels was asserting the correct behavior.  it looks like the assert in the basic_stream_tests was commented out - https://github.com/spring-projects/spring-xd/blob/master/src/test/scripts/basic_stream_tests#L59

So it looks like we need to investigate this one again","28/Jan/14 8:54 AM;dturanski;The test was commented out in StreamCommandTests as well","29/Jan/14 12:16 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/379866138f8a86fed63750ec9e433e04edc816b1",,,,,,,,,,,,,
Splunk module is broken,XD-1170,52419,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grenfro,daigo,daigo,16/Dec/13 4:23 PM,27/Mar/14 10:21 AM,10/Jul/21 8:38 AM,27/Mar/14 10:21 AM,,,,,,,M6,,Stream Module,,,,,0,,,,,,,"Splunk sink module doesn't work at all. It throws java.lang.VerifyError exception like following.

nested exception is java.lang.VerifyError: class org.springframework.integration.splunk.outbound.SplunkOutboundChannelAdapter overrides final method onInit.()V

This is because SplunkOutputChannelAdapter refers old spring integration jar, but recent AbstractReplyProducingMessageHandler (which SplunkOutputChannelAdapter extends) set final to onInit method. Hence it doesn't work.

SplunkOutboundChannelAdapter should be fixed to not override onInit method and replace the jar file spring-integration-splunk-1.0.0.M1.jar.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,229996800,,2014-03-25 03:33:49.444,38899,true,tmarshall(tmarshall),,,,"0|i003nz:",595,38601,,,,,,2.0,,"25/Mar/14 3:33 AM;mark.pollack;There need to be updates of dependencies of Spring, Spring Integration and likely the Splunk SDK
in 

https://github.com/spring-projects/spring-integration-extensions/tree/master/spring-integration-splunk

Spring to 4.0.x, SI for 4.0.x.

","26/Mar/14 9:43 AM;grenfro;PR has been issued for the Splunk adapter in Extensions.  ",,,,,,,,,,,,,,,,
"Column name of JDBC sink module should not hard code to ""payload"".",XD-1169,52414,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,daigo,daigo,16/Dec/13 11:39 AM,05/Mar/14 10:09 AM,10/Jul/21 8:38 AM,05/Mar/14 10:08 AM,,,,,,,M6,,,,,,,0,,,,,,,"Current implementation of JDBC sink module insert data into ""payload"" column. But I can't just change the default column ""payload"" to something else using --columns option. Because JdbcMessagePayloadTransformer compare the columnName to ""payload"" and it hard coded.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,231811200,,2014-03-05 10:08:59.806,38894,false,tmarshall(tmarshall),,,,"0|i006dr:",1046,38596,,,,,,1.0,,"05/Mar/14 10:08 AM;thomas.risberg;Fixed as part of this PR: https://github.com/spring-projects/spring-xd/pull/621",,,,,,,,,,,,,,,,,
Tapping a stream with multiple labelled filters causes duplicate messages,XD-1168,52413,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,luke,luke,16/Dec/13 11:32 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,17/Dec/13 7:26 AM,,,,,,,M5,,,,,,,0,,,,,,,"Test case is here:

https://github.com/spring-projects/spring-xd/blob/master/src/test/scripts/basic_stream_tests#L49

We would expect one message in the counter, but get 3.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,238636800,,,38893,true,tmarshall(tmarshall),,,,"0|i06s4n:",39595,38595,,,,,,5.0,,,,,,,,,,,,,,,,,,,
Column option of JDBC sink should not convert underscore to property name.,XD-1162,52382,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,daigo,daigo,13/Dec/13 5:07 PM,05/Mar/14 10:08 AM,10/Jul/21 8:38 AM,04/Mar/14 10:40 AM,,,,,,,M6,,Stream Module,,,,,0,,,,,,,"Current implementation of column option of JDBC sink convert underscore to java property name. If database column contains underscore, there is no way to store data.

So JdbcMessagePayloadTransformer should not use JdbcUtils.convertUnderscoreNameToPropertyName even if column contains ""_"".",,,,,,,,,,,,,,,,,XD-1169,,,,,,,,,,,,,,,,,,,,231897600,,2014-03-04 07:19:46.304,38862,false,tmarshall(tmarshall),,,,"0|i006dz:",1047,38564,,,,,,1.0,,"04/Mar/14 7:19 AM;thomas.risberg;I guess we should only convert underscore if there is no corresponding column value for the underscored column","04/Mar/14 10:40 AM;thomas.risberg;Fixed as part of PR #621",,,,,,,,,,,,,,,,
Re-deployment of hdfs sink reuses filename of first deployment,XD-1161,52379,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,thomas.risberg,thomas.risberg,thomas.risberg,13/Dec/13 1:33 PM,11/Feb/14 11:39 AM,10/Jul/21 8:38 AM,18/Dec/13 12:10 PM,,,,,,,M5,,Analytics,,,,,0,,,,,,,Need to check for existing files with the same file counter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,238723200,XD-234,,38859,false,tmarshall(tmarshall),,,,"0|i0060v:",987,38561,,,Sprint 20,,,3.0,,"16/Dec/13 6:29 AM;thomas.risberg;First deployment I end up with a file named:

stream0

Then I undeploy and deploy again and now I get these files

stream0
stream0.tmp

where 'stream0' is from the previous deployment and 'stream0.tmp' is from the second deployment. There is a log message saying the rename failed.
",,,,,,,,,,,,,,,,,
The lib directory for hadoop12 contains mix of hadoop versions,XD-1155,52301,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,11/Dec/13 12:21 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,12/Dec/13 8:59 AM,,,,,,,M5,,Packaging,,,,,0,,,,,,,"This causes issues depending on which version of the core/common jar gets loaded first - like:

xd:>hadoop fs ls
-ls: Fatal internal error
java.lang.UnsupportedOperationException: Not implemented by the DistributedFileSystem FileSystem implementation
  at org.apache.hadoop.fs.FileSystem.getScheme(FileSystem.java:213)
  at org.apache.hadoop.fs.FileSystem.loadFileSystems(FileSystem.java:2401)
  at org.apache.hadoop.fs.FileSystem.getFileSystemClass(FileSystem.java:2411)
  at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2428)
  at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:88)
  at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2467)
  at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2449)
  at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:367)
  at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:166)
  at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:351)
  at org.apache.hadoop.fs.Path.getFileSystem(Path.java:287)
  at org.apache.hadoop.fs.shell.PathData.expandAsGlob(PathData.java:325)
  at org.apache.hadoop.fs.shell.Command.expandArgument(Command.java:224)
  at org.apache.hadoop.fs.shell.Command.expandArguments(Command.java:207)
  at org.apache.hadoop.fs.shell.Command.processRawArguments(Command.java:190)
  at org.apache.hadoop.fs.shell.Command.run(Command.java:154)
  at org.apache.hadoop.fs.FsShell.run(FsShell.java:255)
  at org.springframework.xd.shell.hadoop.FsShellCommands.run(FsShellCommands.java:412)
  at org.springframework.xd.shell.hadoop.FsShellCommands.runCommand(FsShellCommands.java:407)
  at org.springframework.xd.shell.hadoop.FsShellCommands.ls(FsShellCommands.java:110)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:606)
  at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
  at org.springframework.shell.core.SimpleExecutionStrategy.invoke(SimpleExecutionStrategy.java:64)
  at org.springframework.shell.core.SimpleExecutionStrategy.execute(SimpleExecutionStrategy.java:48)
  at org.springframework.shell.core.AbstractShell.executeCommand(AbstractShell.java:127)
  at org.springframework.shell.core.JLineShell.promptLoop(JLineShell.java:483)
  at org.springframework.shell.core.JLineShell.run(JLineShell.java:157)
  at java.lang.Thread.run(Thread.java:724)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239068800,XD-468,,38780,false,tmarshall(tmarshall),,,,"0|i006of:",1094,38482,,,Sprint 19,,,3.0,,,,,,,,,,,,,,,,,,,
Update doc about trigger changes,XD-1154,52299,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,eric.bottard,eric.bottard,11/Dec/13 9:28 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,18/Dec/13 9:37 AM,,,,,,,M5,,,,,,,0,,,,,,,"Trigger has been changed to be one single modules, taking params (as opposed to 3 before)

Update doc at https://github.com/spring-projects/spring-xd/wiki/Batch-Jobs

Also, arguably, the module could be advertised as a source itself (it is only mentioned in the context of batch)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239068800,,,38778,true,tmarshall(tmarshall),,,,"0|i0063z:",1001,38480,,,Sprint 20,,,3.0,,,,,,,,,,,,,,,,,,,
source jms --- connect to another jms provider,XD-1149,52251,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Invalid,grussell,dmarley,dmarley,08/Dec/13 3:08 PM,10/Jun/14 3:42 AM,10/Jul/21 8:38 AM,10/Jun/14 3:42 AM,M4,,,,,,1.0 RC1,,Stream Module,,,,,0,,,,,,,"As a system administrator I need to connect to SonicMQ as jms provider

When setting up the correct spring xml file and added the correct jar files to the lib directory I received the following exception---  

Question: is there a spot I should be defining the conversion strategy?

{code}
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::             (v0.5.0.M6)

15:04:36,092 ERROR http-bio-9393-exec-1 rest.RestControllerAdvice:157 - Caught exception while handling a request
org.springframework.integration.MessageHandlingException: error occurred in message handler [moduleDeployer]
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:79)
	at org.springframework.integration.config.ServiceActivatorFactoryBean$1.handleRequestMessage(ServiceActivatorFactoryBean.java:83)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:142)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:94)
	at org.springframework.messaging.core.GenericMessagingTemplate.doSend(GenericMessagingTemplate.java:42)
	at org.springframework.messaging.core.AbstractMessageSendingTemplate.send(AbstractMessageSendingTemplate.java:86)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:228)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:212)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:177)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:171)
	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:149)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
	at org.springframework.xd.dirt.stream.DeploymentMessageSender.sendDeploymentRequests(DeploymentMessageSender.java:57)
	at org.springframework.xd.dirt.stream.AbstractDeployer.sendDeploymentRequests(AbstractDeployer.java:137)
	at org.springframework.xd.dirt.stream.AbstractDeployer.basicDeploy(AbstractDeployer.java:157)
	at org.springframework.xd.dirt.stream.AbstractInstancePersistingDeployer.deploy(AbstractInstancePersistingDeployer.java:78)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:242)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:214)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:748)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:689)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:83)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:947)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:878)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:946)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:848)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:822)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:108)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'connectionFactory' defined in file [/Users/dmarley/sandbox/spring-xd/build/dist/spring-xd/xd/modules/source/jms/config/../../../common/jms-sonic-infrastructure-context.xml]: Initialization of bean failed; nested exception is org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'progress.message.jclient.ConnectionFactory' to required type 'javax.jms.ConnectionFactory' for property 'targetConnectionFactory'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [progress.message.jclient.ConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'targetConnectionFactory': no matching editors or conversion strategy found
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:660)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:552)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:293)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:130)
	at org.springframework.xd.module.SimpleModule.initialize(SimpleModule.java:135)
	at org.springframework.xd.dirt.module.ModuleDeployer.deploy(ModuleDeployer.java:239)
	at org.springframework.xd.dirt.module.ModuleDeployer.deployModule(ModuleDeployer.java:229)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleDeploy(ModuleDeployer.java:214)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleDeploymentRequest(ModuleDeployer.java:196)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:137)
	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
	... 63 more
Caused by: org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'progress.message.jclient.ConnectionFactory' to required type 'javax.jms.ConnectionFactory' for property 'targetConnectionFactory'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [progress.message.jclient.ConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'targetConnectionFactory': no matching editors or conversion strategy found
	at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:474)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:505)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:499)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1497)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	... 81 more
Caused by: java.lang.IllegalStateException: Cannot convert value of type [progress.message.jclient.ConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'targetConnectionFactory': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:267)
	at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:459)
	... 87 more

{code}",,,,,,,,,,,,,,,,,XD-1684,,,,,,,,,,,,,,,,,,,,223516800,,2014-01-16 22:53:24.252,38730,false,tmarshall(tmarshall),,,,"0|i002kv:",419,38432,,,Sprint 27,Sprint 29,,4.0,,"16/Jan/14 10:53 PM;mark.pollack;Unusual indeed as http://documentation.progress.com/output/Sonic/8.5.1/Docs8.5/api/sonicmq_api/progress/message/jclient/ConnectionFactory.html implements javax.jms.ConnectionFactory.  Will investigate, thanks for reporting it.","16/Jan/14 10:53 PM;mark.pollack;Can you provide the config/xml files you used?","16/Jan/14 11:37 PM;mark.pollack;https://jira.springsource.org/browse/XD-432 maybe related","17/Jan/14 5:33 AM;grussell;The most common reason for issues like this is a classloader problem where, for example, the {{javax.jms.ConnectionFactory}} used by XD is a different instance to that used by XD (preventing the cast).

Try running the JVM with {{-verbose}} to see where {{javax.jms.ConnectionFactory}} is being loaded from.","15/May/14 10:06 AM;mark.fisher;progress.message.jclient.ConnectionFactory is an abstract class in older versions of Sonic
","09/Jun/14 2:42 PM;grussell;Perhaps we should close this as invalid - I just tested with SonicMQ 8.0 with no issues:

{code:title=config/jms-sonicmq.properties}
sonic.url=tcp://10.0.0.15:2506
{code}


{code:title=modules/common/jms-sonicmq.infrastructure-context.xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:context=""http://www.springframework.org/schema/context""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"">

	<context:property-placeholder location=""${xd.config.home}/jms-sonicmq.properties"" ignore-resource-not-found=""true""/>

	<bean id=""connectionFactory"" class=""progress.message.jclient.ConnectionFactory"">
		<property name=""brokerURL"" value=""${sonic.url}""/>
	</bean>

</beans>
{code}

(put sonic client jars in the module lib)

{{xd:>stream create foo --definition ""jms --provider=sonicmq --destination=foo | log}}

Results of sending {{testToXD}} to queue {{foo}}:

{{17:30:56,313  INFO SimpleAsyncTaskExecutor-1 sink.foo - testToXD}}

Should we add the sonic infrastructure to config?",,,,,,,,,,,,
Failure in writing to HDFS when undeploying and redeploying a stream with numbers in directory and/or file name,XD-1136,52147,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,thomas.risberg,thomas.risberg,03/Dec/13 4:36 PM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,03/Dec/13 7:48 PM,,,,,,,M5,,Hadoop,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239760000,XD-234,2013-12-03 19:48:00.714,38627,false,tmarshall(tmarshall),,,,"0|i006nb:",1089,38329,,,Sprint 19,,,3.0,,"03/Dec/13 7:48 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/c3a14b6f22425da2214a75dcdeaade8c1e545674",,,,,,,,,,,,,,,,,
JDBC sink is broken - looks like some config options got booted,XD-1103,51980,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,luke,thomas.risberg,thomas.risberg,20/Nov/13 2:03 PM,11/Feb/14 11:39 AM,10/Jul/21 8:38 AM,16/Dec/13 4:50 AM,,,,,,,M5,,Analytics,,,,,0,,,,,,,"The JDBC sink is broken. Simple ""time | jdbc"" results in:

org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [insert into test (payload) values(?)]; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: TEST

Looks like some config options got clobbered during bootification. ",,,,,,,,,,,,,,,,,XD-1191,,,,,,,,,,,,,,,,,,,,238723200,,2013-12-09 05:15:58.449,38462,true,tmarshall(tmarshall),,,,"0|i0060n:",986,38164,,,Sprint 19,Sprint 20,,5.0,,"09/Dec/13 5:15 AM;luke;This just looks to be because the database initializer is configured with:

property name=""enabled"" value=""$\{initializeDatabase:false\}""

So unless you use ""time | jdbc --initializeDatabase=true"", it wont create the table for you.","09/Dec/13 5:32 AM;luke;Looks like this is already being discussed in 

https://github.com/spring-projects/spring-xd/pull/421","10/Dec/13 1:02 PM;luke;Merged the JDBC sink changes which reintroduce the local database source. Similarly for rabbit source and sinks.","11/Dec/13 9:04 AM;thomas.risberg;Still not working right. Seems to ignore any --url parameter and continue to write to the HSQL batch repo database. Tried this:

 stream create --name test --definition ""time | jdbc --url='jdbc:orcl://host'""

That should fail since the url wouldn't work but it seems the --url parameter is ignored. Haven't looked closer, but it needs some attention.
","16/Dec/13 4:50 AM;luke;The sink now uses an explicit tomcat Pool datasource bean.",,,,,,,,,,,,,
Controllers - Disallow negative pageSize values,XD-1099,51951,Bug,To Do,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,,,hillert,hillert,19/Nov/13 8:16 AM,29/Sep/15 8:59 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,"Currently you can specify negative pageSize values - The controllers should validatate that. Right now an internal exception is being return, leaking internal details to the caller - 

E.g.: 

**http://localhost:9393/batch/executions?pageSize=-1** results in:

{code}
<errors>
<error logref=""BadSqlGrammarException"">
<message>
StatementCallback; bad SQL grammar [SELECT TOP -1 E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, I.JOB_INSTANCE_ID, I.JOB_NAME FROM BATCH_JOB_EXECUTION E, BATCH_JOB_INSTANCE I WHERE E.JOB_INSTANCE_ID=I.JOB_INSTANCE_ID ORDER BY E.JOB_EXECUTION_ID DESC]; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: TOP
</message>
</error>
</errors>
{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,223776000,,2014-01-13 02:12:12.255,38432,false,sabby(sabby),,,,"0|i07ltj:",44407,38134,,,,,,2.0,,"13/Jan/14 2:12 AM;eric.bottard;When this is handled by Spring HATEOAS, I think this should be checked by it (ie in PageableHandlerMethodArgumentResolver)","06/Jun/14 12:40 PM;mark.pollack;The user will be using the admin api in most cases to view this information.  validation should occur but isn't critical to XD 1.0",,,,,,,,,,,,,,,,
"Add ""spring-xd-exec"" directory to Git repo",XD-1078,51904,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,18/Nov/13 11:20 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,19/Nov/13 2:53 PM,,,,,,,M5,,,,,,,0,,,,,,,"Without the directory, Spring XD cannot be imported into STS using its own Gradle support.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,240969600,,2013-11-19 14:53:18.006,38385,false,tmarshall(tmarshall),,,,"0|i006f3:",1052,38087,,,Sprint 19,,,1.0,,"19/Nov/13 2:53 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/2cb8296b847360be6044530ab8c5d448cb797b96",,,,,,,,,,,,,,,,,
Close HDFS file when Batch job ends,XD-1071,51870,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,luke,mark.pollack,mark.pollack,15/Nov/13 8:57 AM,10/Jan/14 12:08 PM,10/Jul/21 8:38 AM,02/Dec/13 11:02 AM,,,,,,,M5,,,,,,,0,,,,,,,"The File to HDFS batch job will not close the file being written to in HDFS when the job completes.  The ItemWriter for HDFS needs to incorporate functionality that is present in the standard FlatFileWriter, perhaps inheriting from AbstractItemStreamItemWriter",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239846400,XD-982,2013-12-02 11:02:06.699,38351,false,tmarshall(tmarshall),,,,"0|i0067b:",1017,38053,,,Sprint 19,,,6.0,,"02/Dec/13 11:02 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/d5f9db2151404044e360ab0d2075c04a9a0955bf",,,,,,,,,,,,,,,,,
"File to HDFS batch job fails due to ""/data"" directory not available in HDFS",XD-1070,51869,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,luke,mark.pollack,mark.pollack,15/Nov/13 8:55 AM,10/Jan/14 12:09 PM,10/Jul/21 8:38 AM,02/Dec/13 11:01 AM,,,,,,,M5,,Ingest,,,,,0,,,,,,,"The batch job for File to HDFS will try to check for the default '/data/' directory even if the target directory in HDFS is something else.  If the /data directory isn't there, the job will fail.

This should be fixed so there isn't a check on the directory that isn't the final HDFS target directory and the target directory should be created if it doesn't exist.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239846400,XD-982,2013-11-20 09:34:31.37,38350,false,tmarshall(tmarshall),,,,"0|i0067j:",1018,38052,,,Sprint 19,,,4.0,,"20/Nov/13 9:34 AM;luke;PR: https://github.com/spring-projects/spring-xd/pull/415","02/Dec/13 11:01 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/d5f9db2151404044e360ab0d2075c04a9a0955bf",,,,,,,,,,,,,,,,
Topic channels are not broadcasting,XD-1066,51846,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,mark.fisher,mark.fisher,14/Nov/13 3:37 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,21/Nov/13 3:33 PM,,,,,,,M5,,,,,,,0,,,,,,,"This needs to work for all transports (local, rabbit, and redis), and we need to ensure that we have test coverage for each of those to avoid any regressions.

The incorrect behavior was observed with all three transports:

{code}
xd:>stream create a --definition ""topic:foo > transform --expression=payload+'-a' | log""
Created new stream 'a'

xd:>stream create b --definition ""topic:foo > transform --expression=payload+'-b' | log""
Created new stream 'b'

xd:>stream create s --definition ""http > topic:foo""
Created new stream 's'

xd:>http post --data hi
> POST (text/plain;Charset=UTF-8) http://localhost:9000 hi
> 200 OK

// only one line in log!
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,240796800,XD-963,,38328,false,tmarshall(tmarshall),,,,"0|i00673:",1016,38030,,,Sprint 19,,,5.0,,"21/Nov/13 3:33 PM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/6adb51f90de3bdd0e4c81afc4d041705434b21b3",,,,,,,,,,,,,,,,,
"Extra ""job"" queues being created for all streams",XD-1065,51845,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,mark.fisher,mark.fisher,14/Nov/13 3:00 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,13/Dec/13 11:14 AM,,,,,,,M5,,,,,,,0,,,,,,,"This is most likely an issue for any transport, since it's probably happening within the JobPlugin, but I noticed when using Rabbit that every stream I created also triggered creation of ""job:[streamname]"" Queues.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,238896000,,2013-12-11 17:22:05.234,38327,false,tmarshall(tmarshall),,,,"0|i00613:",988,38029,,,Sprint 20,,,2.0,,"11/Dec/13 5:22 PM;iperumal;Yeah, this happens with all the transports. 
The issue is that, while creating the ""job:[groupname]"" queue, the job plugin checks for the input channel named ""input"" as this is the name given for the input channel to JobLaunchRequestTransformer in job-module-beans.xml.
","12/Dec/13 3:40 PM;iperumal;Submitted PR: https://github.com/spring-projects/spring-xd/pull/466","13/Dec/13 11:14 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/00b81d6504d6bf07ecefb4028f55581437f39b39

https://github.com/spring-projects/spring-xd/commit/16ebfae1e296bae2f454bffdb49fae51ea767bb9
",,,,,,,,,,,,,,,
Batch Job's step execution count is always '0',XD-1059,51803,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,12/Nov/13 6:33 AM,10/Jan/14 12:08 PM,10/Jul/21 8:38 AM,19/Nov/13 8:23 AM,,,,,,,M5,,,,,,,0,,,,,,,"The batch job's step execution count is retrieved from org.springframework.batch.admin.web.JobExecutionInfo in batch job repository.

But, the JobExecutionInfo always have the stepExecutionCount set to '0'.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,241142400,XD-996,,38286,true,tmarshall(tmarshall),,,,"0|i0068f:",1022,37988,,,Sprint 19,,,2.0,,"18/Nov/13 1:19 AM;iperumal;Submitted PR: https://github.com/spring-projects/spring-xd/pull/405",,,,,,,,,,,,,,,,,
JobDeployer hides root exceptions on failure,XD-1018,51566,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Won't Fix,luke,luke,luke,28/Oct/13 11:06 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,04/Nov/13 11:29 AM,,,,,,,M4,,,,,,,0,,,,,,,"When deploying jobs, the following code (line 103), hides the root cause of deployment failure:

  if (exceptionClassName.equals(BEAN_CREATION_EXCEPTION) || exceptionClassName.equals(BEAN_DEFINITION_EXEPTION)) {
    throw new MissingRequiredDefinitionException(definition.getName(), cause.getMessage());
  }

For example:

org.springframework.xd.dirt.stream.MissingRequiredDefinitionException: Error creating bean with name 'dataSourceInitializer' defined in file [/Users/luke/Work/spring-xd/build/dist/spring-xd/xd/modules/job/hdfsjdbc/config/hdfsjdbc.xml]: Cannot resolve reference to bean 'databasePopulator' while setting bean property 'databasePopulator'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databasePopulator' defined in file [/Users/luke/Work/spring-xd/build/dist/spring-xd/xd/modules/job/hdfsjdbc/config/hdfsjdbc.xml]: Initialization of bean failed; nested exception is java.lang.NullPointerException
	at org.springframework.xd.dirt.stream.JobDeployer.deploy(JobDeployer.java:103)
	at org.springframework.xd.dirt.stream.JobDeployer.deploy(JobDeployer.java:67)
	at org.springframework.xd.dirt.rest.XDController.save(XDController.java:242)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,242265600,,,38052,true,tmarshall(tmarshall),,,,"0|i00707:",1149,37754,,,Sprint 18,,,1.0,,"04/Nov/13 11:29 AM;luke;Superseded by XD-1008/XD-1023",,,,,,,,,,,,,,,,,
Spring Batch Admin UI looks to localhost when getting status updates,XD-1017,51547,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,grenfro,grenfro,25/Oct/13 1:59 PM,05/Feb/14 1:15 PM,10/Jul/21 8:38 AM,05/Feb/14 1:15 PM,,,,,,,M6,,,,,,,0,,,,,,,"Currently when you bring up a admin-ui on a browser that is not on the XD admin server, the page reports an error.

This is because the javascript is looking to localhost to get its updates.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,234230400,XD-996,2014-02-05 13:14:21.548,38033,true,tmarshall(tmarshall),,,,"0|i005cv:",877,37735,,,Sprint 21,,,5.0,,"05/Feb/14 1:14 PM;hillert;This issue was addressed with the switch over to the AngularJS UI. The admin-server address by default is now:

{code}
$rootScope.xdAdminServerUrl = window.location.protocol + '//' + window.location.host;
{code}

This is defined in file **app.js**.",,,,,,,,,,,,,,,,,
Spring Shell --host option does not work,XD-1011,51535,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,grenfro,grenfro,grenfro,25/Oct/13 7:37 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,18/Nov/13 4:46 PM,,,,,,,M5,,,,,,,0,,,,,,,"When trying to use the --host command line parameter, spring shell reports the following error for this command, ""xd-shell --host localhost"" :
Oct 25, 2013 10:35:25 AM org.springframework.shell.core.SimpleParser commandNotFound
WARNING: Command '--host localhost' not found (for assistance press TAB)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,241056000,,,38021,true,tmarshall(tmarshall),,,,"0|i00693:",1025,37723,,,,,,2.0,,"18/Nov/13 4:46 PM;grenfro;Updating instructions to discuss the appropriate way to set the host. ",,,,,,,,,,,,,,,,,
Don't perform error-level logging for normal application behavior in batch admin functionality,XD-1009,51515,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,hillert,hillert,24/Oct/13 8:09 AM,06/Jun/14 12:58 PM,10/Jul/21 8:38 AM,06/Jun/14 12:58 PM,M3,,,,,,1.0 RC1,,,,,,,0,,,,,,,"Assumption: The batch job *wordCountJob* does not exist. Executing the REST endpoint:

http://localhost:9393/batch/jobs/wordCountJob/executions

yields the correct response:

{code}
<errors xmlns:atom=""http://www.w3.org/2005/Atom"">
<error logref=""NoSuchBatchJobException"">
<message>
Batch Job with the name wordCountJob.job doesn't exist
</message>
</error>
</errors>
{code}

One could argue, though, that this is technically not an error but a status/application message, no??

However, the console/log logs at error level with a full stacktrace. I think the full stacktrace should only be available when debugging is allowed. In normal mode, I think we should log only at info or warn level without the full stacktrace.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,241056000,,2013-11-18 21:34:15.287,38001,false,tmarshall(tmarshall),,,,"0|i007sf:",1279,37703,,,,,,2.0,,"18/Nov/13 9:34 PM;mark.pollack;Agreed, no need for a stack trace here.",,,,,,,,,,,,,,,,,
Running gradle idea creates project configured with source 1.6,XD-959,51363,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,luke,thomas.risberg,thomas.risberg,16/Oct/13 8:02 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,14/Nov/13 3:22 AM,,,,,,,M5,,,,,,,0,,,,,,,"The gradle idea task creates a project configured with source 1.6

This results in compile failures on Java 7 specific code",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,241488000,XD-965,2013-11-14 03:22:26.735,37852,true,tmarshall(tmarshall),,,,"0|i06n4v:",38786,37554,,,,,,3.0,,"14/Nov/13 3:22 AM;luke;I've added 1.7 source level to gradle IDEA configuration.",,,,,,,,,,,,,,,,,
Build failure on Ubuntu,XD-958,51362,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Blocker,Complete,,thomas.risberg,thomas.risberg,16/Oct/13 7:45 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,21/Oct/13 4:07 PM,,,,,,,M4,,,,,,,0,,,,,,,"Build fails:

gradle clean build

...

:spring-xd-dirt:test

org.springframework.xd.dirt.stream.FileSourceModuleTests > classMethod FAILED
    java.io.IOException at FileSourceModuleTests.java:53

org.springframework.xd.dirt.stream.FileSourceModuleTests > classMethod FAILED
    java.lang.IllegalArgumentException at FileSourceModuleTests.java:130

328 tests completed, 2 failed, 11 skipped
:spring-xd-dirt:test FAILED

FAILURE: Build failed with an exception.


Looks like it is trying to create a directory under the local filesystem /

java.io.IOException: Unable to create directory /tmpfilesourcetests
	at org.apache.commons.io.FileUtils.forceMkdir(FileUtils.java:2024)
	at org.springframework.xd.dirt.stream.FileSourceModuleTests.createTempDir(FileSourceModuleTests.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:80)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:47)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:49)
	at sun.reflect.GeneratedMethodAccessor23.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:103)
	at sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:66)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,243475200,,2013-10-21 16:07:24.629,37851,false,tmarshall(tmarshall),,,,"0|i06n4n:",38785,37553,,,,,,3.0,,"16/Oct/13 12:37 PM;thomas.risberg;Looks like the recent fix of adding a / at the end of the tmp dir broke build on my OS X system - worked on Ubuntu. Looks like we'll have to test for tmp directory names that end with a / versus ones that don't.","21/Oct/13 4:07 PM;mark.pollack;fixed by https://github.com/spring-projects/spring-xd/pull/353",,,,,,,,,,,,,,,,
MQTT source module does not cleanly undeploy,XD-920,51175,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,grussell,eric.bottard,eric.bottard,02/Oct/13 8:20 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,03/Oct/13 5:49 AM,,,,,,,M4,,,,,,,0,,,,,,,"Was attempting to test mqtt, turns out I don't have the proper rabbitmq thing installed. So far so good, I get these kinds of exceptions:
{noformat}
Unable to connect to server (32103) - java.net.ConnectException: Connection refused
	at org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule.start(TCPNetworkModule.java:75)
	at org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:521)
	at java.lang.Thread.run(Thread.java:724)
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule.start(TCPNetworkModule.java:66)
	... 2 more
{noformat}

Problem is, I still get them after undeploying my ""mqtt | log"" stream",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245203200,,,37665,true,tmarshall(tmarshall),,,,"0|i007yf:",1306,37367,,,Sprint 16,,,2.0,,,,,,,,,,,,,,,,,,,
Fix hardcoded redis port from tests,XD-904,51101,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,kparikh,kparikh,kparikh,27/Sep/13 12:36 AM,28/Jan/14 9:46 PM,10/Jul/21 8:38 AM,28/Jan/14 9:46 PM,M3,,,,,,,,Analytics,,,,,0,,,,,,,"kparikh-mbpro:spring-xd kparikh$ grep -r 6379 * | grep java
spring-xd-analytics/src/test/java/org/springframework/xd/analytics/metrics/common/RedisRepositoriesConfig.java:			cf.setPort(6379);
spring-xd-analytics/src/test/java/org/springframework/xd/analytics/metrics/integration/GaugeHandlerTests.java:			cf.setPort(6379);
spring-xd-analytics/src/test/java/org/springframework/xd/analytics/metrics/integration/RichGaugeHandlerTests.java:			cf.setPort(6379);
spring-xd-dirt/src/test/java/org/springframework/xd/dirt/listener/RedisContainerEventListenerTest.java:			cf.setPort(6379);
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245635200,,,37592,true,tmarshall(tmarshall),,,,"0|i06m0f:",38604,37294,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Spring Batch Behavior change from M2 to M3,XD-892,51025,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,williamsj,williamsj,23/Sep/13 11:16 AM,28/Jan/14 9:39 PM,10/Jul/21 8:38 AM,16/Jan/14 9:55 PM,M3,,,,,,M5,,Hadoop,,,,,0,,,,,,,"In M3, the batch job behavior has changed. In M2, it was much easier to create an invoke a batch job. In M3, a trigger is required. Figuring that change out isn't a big deal but the behavior of this batch job in M3 throws a stack trace, yet it executes. 

In M2, this same batch job runs fine with no stack trace. 

Logs are attached. I can't see a difference in the container log property files from M2 to M3. Turning the log settings down will suppress the traces, but I was not expecting the traces since they did not show up in M2.

Stream Definitions:

job create --name pdfLoadBatchJob --definition ""batch-pdfload --inputPath='LOCAL_PDF_PATH' --hdfsPath='REMOTE_HDFS_PATH'""


stream create --name pdfloadtrigger --definition ""trigger > job:pdfLoadBatchJob""",,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/13 11:16 AM;williamsj;batch-pdfload.xml;https://jira.spring.io/secure/attachment/21397/batch-pdfload.xml","23/Sep/13 11:16 AM;williamsj;logs.zip;https://jira.spring.io/secure/attachment/21398/logs.zip",,,,,,,,,,,,245808000,,2013-09-24 06:36:53.345,37517,true,tmarshall(tmarshall),,,,"0|i006ov:",1097,37219,,,,,,1.0,,"24/Sep/13 6:36 AM;hillert;Please see XD-894 for a work-around to start adhoc batch jobs more easily.  ","24/Sep/13 9:32 AM;hillert;James, I don't seem to be able to reproduce your issue using the latest code.

{code}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:hadoop=""http://www.springframework.org/schema/hadoop"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:batch=""http://www.springframework.org/schema/batch""
	xmlns:context=""http://www.springframework.org/schema/context""
	xmlns:util=""http://www.springframework.org/schema/util""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"">

	<hadoop:configuration register-url-handler=""false""
		properties-location=""file:/my/local/path/spring-xd/config/hadoop.properties"" />

	<!-- required since Hadoop Job is a class not an interface and we need to
		use a Job with step scope to access #{jobParameters['...']} -->
	<bean class=""org.springframework.batch.core.scope.StepScope"">
		<property name=""proxyTargetClass"" value=""true"" />
	</bean>

	<batch:job id=""job"">
		<batch:step id=""load"">
			<batch:tasklet ref=""loadTasklet"" />
		</batch:step>
	</batch:job>

	<hadoop:script-tasklet id=""loadTasklet""
		script-ref=""loadScript"" scope=""step"" />

	<hadoop:script id=""loadScript"" language=""groovy"">
		try
		{
			def inputPath = ""${inputPath}""
    		def outputPath = ""${hdfsPath}""
    		println ""Started load script""

    		fsh.put(inputPath, outputPath)
    		//fsh.moveFromLocal(inputPath, outputPath)
    	}
    	catch(Exception e)
    	{
			println 'loadScript--------' + e
		}
		println ""Completed load script""
	</hadoop:script>

</beans>
{code}

{code}
[~/dev/tools/hadoop-1.2.1] ➔ bin/hadoop dfs -ls /pdfxd
Found 4 items
-rw-r--r--   3 hillert supergroup      71264 2013-09-24 12:29 /pdfxd/3rd-party-licenses.txt
-rw-r--r--   3 hillert supergroup      56309 2013-09-24 12:29 /pdfxd/Changelog.txt
...
{code}","24/Sep/13 9:33 AM;hillert;I am not getting the warning-level logging output you're observing:

{code}
12:29:14,128  INFO http-bio-8080-exec-5 module.SimpleModule:154 - started module: SimpleModule [name=trigger, type=source, group=pdfloadtrigger, index=0]
12:29:14,129  INFO http-bio-8080-exec-5 module.ModuleDeployer:157 - launched source module: pdfloadtrigger:trigger:0
Started load script
Completed load script
{code}","24/Sep/13 10:54 AM;williamsj;I am using webhdfs and the Pivotal HD VM. My hadoop.properties entry is: fs.default.name=webhdfs://192.168.8.203:50070.

Do you think this is something unique to webhdfs or Pivotal HD?

James",,,,,,,,,,,,,,
Provide a way to access currently deployed modules,XD-891,51024,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,dturanski,dturanski,23/Sep/13 9:43 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,09/Oct/13 5:53 PM,,,,,,,M4,,,,,,,0,,,,,,,"For testing, it would be useful to access the deployed Module instances to connect sources and or sinks to a module's input and output channels, etc. This could be a simple as exposing the deployedModuleMap on ModuleDeployer or possibly something more elaborate if this level of granularity is generally useful for runtime administration.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,244684800,XD-697,2013-10-07 13:09:26.732,37516,true,tmarshall(tmarshall),,,,"0|i007x3:",1300,37218,,,Sprint 16,,,3.0,,"07/Oct/13 1:09 PM;iperumal;Submitted PR:

https://github.com/spring-projects/spring-xd/pull/340",,,,,,,,,,,,,,,,,
Taps do not work when JMX is enabled,XD-877,50995,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,jencompgeek,jencompgeek,jencompgeek,20/Sep/13 7:29 AM,12/Nov/13 3:03 PM,10/Jul/21 8:38 AM,27/Sep/13 9:14 AM,,,,,,,M4,,,,,,,0,,,,,,,"When JMX is enabled, the Module's output channel processed by StreamPlugin is a Proxy. Thus it fails the ""instanceof"" test used to apply the WireTap to the output channel. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246240000,,,37487,true,tmarshall(tmarshall),,,,"0|i007vj:",1293,37189,,,Sprint 16,,,3.0,,,,,,,,,,,,,,,,,,,
No errors in Shell when creating stream with HTTP Source + already used port ,XD-871,50966,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,hillert,hillert,18/Sep/13 1:10 PM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,05/Nov/13 7:32 AM,,,,,,,M4,,CLI,Runtime,,,,0,,,,,,,"2 issues exist:

1) 

Current this does not create an error in the shell

{code}
stream create --name s1 --definition ""http | log""
stream create --name s2 --definition ""http | log""
{code}

On the server-side I see:

{code}
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:344)
	at sun.nio.ch.Net.bind(Net.java:336)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:199)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerBoss$RegisterTask.run(NioServerBoss.java:193)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.processTaskQueue(AbstractNioSelector.java:366)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:290)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.run(NioServerBoss.java:42)
	... 3 more
{code}

2)
The Stream should not be saved to the StreamDefinitionRepo in case of an error.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,242265600,,2013-11-05 07:00:52.0,37458,false,tmarshall(tmarshall),,,,"0|i0071j:",1155,37160,,,Sprint 18,,,4.0,,"05/Nov/13 7:00 AM;dturanski;1) Is resolved.  2) Is still open","05/Nov/13 7:32 AM;dturanski;The first issue is fixed. I'm going to close this out and create a new story for handling errors with respect to saving stream definitions",,,,,,,,,,,,,,,,
ICLA website is missing Spring XD project option,XD-848,50903,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Fixed,,willmcqueen,willmcqueen,14/Sep/13 1:25 PM,12/Nov/13 3:03 PM,10/Jul/21 8:38 AM,19/Sep/13 11:19 PM,,,,,,,M4,,,,,,,0,,,,,,,"The README.md at:

  https://github.com/spring-projects/spring-xd/blob/master/README.md

...says:

""Before we accept a non-trivial patch or pull request we will need you to sign the contributor's agreement""

Navigating to the <contributor's agreement> link takes the user to the ICLA web page at:

https://support.springsource.com/spring_committer_signup

//exp: The Project field's dropdown should have an option for ""Spring XD""
//act: There's no ""Spring XD"" option",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,246240000,,2013-09-19 23:19:55.546,37397,true,tmarshall(tmarshall),,,,"0|i06l3r:",38457,37099,,,,,,1.0,,"19/Sep/13 11:12 PM;willmcqueen;The ""Spring XD"" option now appears on the ICLA website. Since I don't have perms to close this ticket, if someone else could please do so then that would be great. Thanks.","19/Sep/13 11:19 PM;iperumal;This seems to be fixed as mentioned by the reporter.",,,,,,,,,,,,,,,,
REST - Listing of FieldValueCounter not working,XD-835,50819,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,,hillert,hillert,09/Sep/13 11:39 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,11/Oct/13 2:40 AM,,,,,,,M4,,,,,,,0,,,,,,,"http://localhost:8080/metrics/field-value-counters

{code}
<errors xmlns:atom=""http://www.w3.org/2005/Atom"">
<error logref=""HttpMessageNotWritableException"">
<message>
Could not marshal [PagedResource { content: [links: [<http://localhost:8080/metrics/field-value-counters/hashtags>;rel=""self""]], metadata: Metadata { number: 0, total pages: 1, total elements: 1, size: 0 }, links: [] }]: null; nested exception is javax.xml.bind.MarshalException - with linked exception: [com.sun.istack.SAXException2: unable to marshal type ""org.springframework.xd.rest.client.domain.metrics.MetricResource"" as an element because it is not known to this context.]
</message>
</error>
</errors>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,244425600,,2013-10-11 02:40:26.06,37313,true,tmarshall(tmarshall),,,,"0|i06knz:",38386,37015,,,,,,4.0,,"11/Oct/13 2:40 AM;eric.bottard;Tested with browser and curl (default returns xml and json respectively)

Adding Accept headers of text/xml and application/json does return the correct thing.",,,,,,,,,,,,,,,,,
${xd.home}/data shows up after gradlew build,XD-778,50634,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,28/Aug/13 3:17 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,29/Aug/13 10:09 AM,,,,,,,M3,,,,,,,0,,,,,,,When the XD starts up and does not see its job repo it will create one in the${xd.home}/data directory.  When xd.home is not set in system properties the job repo creates a literal ${xd.home}/data directory.  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,248054400,,2013-08-29 10:09:34.722,37128,false,tmarshall(tmarshall),,,,"0|i008hz:",1396,36830,,,Sprint 14,,,2.0,,"29/Aug/13 10:09 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/d5d7dd90d84a8c9687561645fbd242f7087443ad",,,,,,,,,,,,,,,,,
Add validation on tap definitions that checks for module names that are part of the stream definition,XD-777,50633,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,eric.bottard,luke,hillert,28/Aug/13 2:59 PM,15/Jul/14 8:02 AM,10/Jul/21 8:38 AM,19/Jun/14 9:50 AM,,,,,,,1.0 RC1,,,,,,,0,REST,,,,,,"Try:
{code}
stream create --name aa --definition ""time | log""
tap create --name t1 --definition ""tap aa.log | log""
{code}

Results in:

{code}
Command failed org.springframework.xd.rest.client.impl.SpringXDException: java.lang.NullPointerException
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,222652800,,2014-03-31 23:46:27.549,37127,false,tmarshall(tmarshall),,,,"0|i0028n:",364,36829,,,Sprint 30,,,2.0,,"02/Oct/13 3:35 AM;luke;This doesn't give a NPE anymore, but nothing happens on creating the tap (the tap is created, but there is no additional log output). Does it make sense in any situation to try to tap the output of a sink? I would've thought a sink was kind of final and we should probably return an error.","07/Feb/14 5:49 AM;luke;Since it's currently possible to tap a stream which doesn't exist yet, this is related to XD-1287. Unless the tapped stream already exists it could be difficult to determine whether the tap is being applied to a sink.","31/Mar/14 11:46 PM;mark.pollack;i think you mentioned that we don't have a way to know ATM that the tap is on a sink?  Is that correct?  If that is the case, we can't give any warning, so only choice ATM is to document the behavior on the wiki.  ","08/Apr/14 9:33 AM;mark.pollack;Investigate enhancements to the parser to see if we can catch this error, either by detecting the sink type or based on index.","10/Apr/14 9:23 AM;luke;The relevant place is probably in ChannelNode.resolve(). It may be possible to check there if the sink node in the stream is being tapped, but I'm not sure if there are any corner cases where comparing the index to the number of modules is not sufficient.","19/Jun/14 9:50 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/621e84913641e3ac5dcdbb7fca4b8b26eced5697",,,,,,,,,,,,
"Shell: Remove ""taps list"" command",XD-776,50632,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Complete,,hillert,hillert,28/Aug/13 2:46 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,02/Sep/13 6:10 AM,,,,,,,M3,,CLI,,,,,0,,,,,,,"We should only allow ""tap list"" - currently ""tap list"" AND ""taps list"" are allowed but ""tap list"" does not show up under help.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247795200,,2013-09-02 06:09:09.647,37126,true,tmarshall(tmarshall),,,,"0|i008br:",1368,36828,,,,,,1.0,,"02/Sep/13 6:09 AM;eric.bottard;Actually it seems any non ambiguous substring of a command is allowed. This is why ""tap list"" works.

This is just a matter of renaming taps list to tap list then.",,,,,,,,,,,,,,,,,
Tab support inconsistent for http post,XD-773,50628,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Deferred,liujiong,hillert,hillert,28/Aug/13 8:26 AM,24/Nov/15 4:18 PM,10/Jul/21 8:38 AM,24/Nov/15 4:18 PM,M2,,,,,,,,CLI,,,,,0,,,,,,,"When doing *xd:> http post* and press the *tab* key. One should get a list of available options. Right now nothing happens. I have to press *--* and then tab to get the options.

Interestingly, this works for *stream create* + *tab* key",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,177465600,,2015-11-24 16:18:13.62,37122,true,sabby(sabby),,,,"0|i06j3z:",38134,36824,,,,,,2.0,,"24/Nov/15 4:18 PM;sabby;Moved to GH.",,,,,,,,,,,,,,,,,
TapCommandTests hangs when using a lazily instantiated Lettuce connection,XD-716,50412,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,jencompgeek,jencompgeek,jencompgeek,19/Aug/13 6:54 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,21/Aug/13 10:11 AM,,,,,,,M3,,,,,,,0,,,,,,,"A change was made in spring-data-redis to instantiate the shared Lettuce connection lazily instead of when the context is initialized. This caused TapCommandTests to hang due to a Netty worker thread trying to initialize the Lettuce connection (Lettuce uses Netty). The change was temporarily backed out of SDR, but we need to consider using a NettyExecutionHandler in NettyHttpInboundChannelAdapter or making the HTTP module's ""input"" channel an ExecutorChannel to avoid potentially long operations like from happening in an I/O thread.

Also, we need to address why this failure simply hangs the shell. Shell was hung waiting on IO here:
	at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:47)
	at org.springframework.http.client.AbstractClientHttpResponse.getStatusCode(AbstractClientHttpResponse.java:32)
	at org.springframework.xd.shell.command.HttpCommands$1.hasError(HttpCommands.java:93)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:484)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:460)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:335)
	at org.springframework.xd.shell.command.HttpCommands.postHttp(HttpCommands.java:103)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:191)
	at org.springframework.shell.core.SimpleExecutionStrategy.invoke(SimpleExecutionStrategy.java:64)
	atringframework.shell.core.SimpleExecutionStrategy.execute(SimpleExecutionStrategy.java:57)
	- locked <7fd3c7d40> (a java.lang.Class for org.springframework.shell.core.SimpleExecutionStrategy)
	at org.springframework.shell.core.AbstractShell.executeCommand(AbstractShell.java:127)
	at org.springframework.xd.shell.AbstractShellIntegrationTest.executeCommand(AbstractShellIntegrationTest.java:99)
	at org.springframework.xd.shell.AbstractShellIntegrationTest.httpPostData(AbstractShellIntegrationTest.java:112)
	at org.springframework.xd.shell.command.TapCommandTests.testCreateAndDeployTap(TapCommandTests.java:56)

Full stack trace of server exception:

 Aug 19, 2013 9:59:00 AM org.jboss.netty.channel.SimpleChannelUpstreamHandler
    WARNING: EXCEPTION, please implement org.springframework.integration.x.http.NettyHttpInboundChannelAdapter$Handler.exceptionCaught() for proper handling.
    org.springframework.integration.MessageHandlingException: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis on localhost:6379; nested exception is com.lambdaworks.redis.RedisException: Unable to connect
    	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:76)
    	at org.springframework.integration.handler.ServiceActivatingHandler.handleRequestMessage(ServiceActivatingHandler.java:67)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:137)
    	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
    	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
    	at org.springframework.integration.core.MessagingTemplate.doSend(MessagingTemplate.java:304)
    	at org.springframework.integration.core.MessagingTemplate.send(MessagingTemplate.java:165)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:223)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:207)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:172)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:166)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:144)
    	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
    	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
    	at org.springframework.integration.core.MessagingTemplate.doSend(MessagingTemplate.java:304)
    	at org.springframework.integration.core.MessagingTemplate.send(MessagingTemplate.java:165)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:223)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:207)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:172)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:166)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:144)
    	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
    	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
    	at org.springframework.integration.core.MessagingTemplate.doSend(MessagingTemplate.java:304)
    	at org.springframework.integration.core.MessagingTemplate.send(MessagingTemplate.java:165)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:223)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:207)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:172)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:166)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:144)
    	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
    	at org.springframework.integration.dispatcher.BroadcastingDispatcher.invokeHandler(BroadcastingDispatcher.java:121)
    	at org.springframework.integration.dispatcher.BroadcastingDispatcher.dispatch(BroadcastingDispatcher.java:112)
    	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
    	at org.springframework.integration.channel.interceptor.WireTap.preSend(WireTap.java:121)
    	at org.springframework.integration.channel.AbstractMessageChannel$ChannelInterceptorList.preSend(AbstractMessageChannel.java:248)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:173)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
    	at org.springframework.integration.core.MessagingTemplate.doSend(MessagingTemplate.java:304)
    	at org.springframework.integration.core.MessagingTemplate.send(MessagingTemplate.java:165)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendMessage(AbstractReplyProducingMessageHandler.java:223)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.sendReplyMessage(AbstractReplyProducingMessageHandler.java:207)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.produceReply(AbstractReplyProducingMessageHandler.java:172)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleResult(AbstractReplyProducingMessageHandler.java:166)
    	at org.springframework.integration.handler.AbstractReplyProducingMessageHandler.handleMessageInternal(AbstractReplyProducingMessageHandler.java:144)
    	at org.springframework.integration.handler.AbstractMessageHandler.handleMessage(AbstractMessageHandler.java:73)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.doDispatch(UnicastingDispatcher.java:115)
    	at org.springframework.integration.dispatcher.UnicastingDispatcher.dispatch(UnicastingDispatcher.java:102)
    	at org.springframework.integration.channel.AbstractSubscribableChannel.doSend(AbstractSubscribableChannel.java:77)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:178)
    	at org.springframework.integration.channel.AbstractMessageChannel.send(AbstractMessageChannel.java:149)
    	at org.springframework.integration.core.MessagingTemplate.doSend(MessagingTemplate.java:304)
    	at org.springframework.integration.core.MessagingTemplate.send(MessagingTemplate.java:165)
    	at org.springframework.integration.endpoint.MessageProducerSupport.sendMessage(MessageProducerSupport.java:92)
    	at org.springframework.integration.x.http.NettyHttpInboundChannelAdapter.access$200(NettyHttpInboundChannelAdapter.java:59)
    	at org.springframework.integration.x.http.NettyHttpInboundChannelAdapter$Handler.messageReceived(NettyHttpInboundChannelAdapter.java:122)
    	at org.jboss.netty.handler.codec.http.HttpContentEncoder.messageReceived(HttpContentEncoder.java:81)
    	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:148)
    	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
    	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
    	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
    	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:485)
    	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
    	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
    	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
    	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107)
    	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312)
    	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88)
    	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
    	at java.lang.Thread.run(Thread.java:680)
    Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis on localhost:6379; nested exception is com.lambdaworks.redis.RedisException: Unable to connect
    	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.createLettuceConnector(LettuceConnectionFactory.java:345)
    	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.initConnection(LettuceConnectionFactory.java:116)
    	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:325)
    	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:106)
    	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:81)
    	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:53)
    	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:173)
    	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:153)
    	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:86)
    	at org.springframework.data.redis.core.DefaultZSetOperations.add(DefaultZSetOperations.java:41)
    	at org.springframework.data.redis.core.DefaultBoundZSetOperations.add(DefaultBoundZSetOperations.java:47)
    	at org.springframework.xd.store.AbstractRedisRepository.trackMembership(AbstractRedisRepository.java:202)
    	at org.springframework.xd.analytics.metrics.redis.RedisCounterRepository.increment(RedisCounterRepository.java:88)
    	at org.springframework.xd.analytics.metrics.redis.RedisCounterRepository.increment(RedisCounterRepository.java:82)
    	at org.springframework.xd.analytics.metrics.integration.MessageCounterHandler.process(MessageCounterHandler.java:28)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    	at java.lang.reflect.Method.invoke(Method.java:597)
    	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:69)
    	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:97)
    	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:82)
    	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:102)
    	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:103)
    	at org.springframework.integration.util.AbstractExpressionEvaluator.evaluateExpression(AbstractExpressionEvaluator.java:126)
    	at org.springframework.integration.util.MessagingMethodInvokerHelper.processInternal(MessagingMethodInvokerHelper.java:230)
    	at org.springframework.integration.util.MessagingMethodInvokerHelper.process(MessagingMethodInvokerHelper.java:129)
    	at org.springframework.integration.handler.MethodInvokingMessageProcessor.processMessage(MethodInvokingMessageProcessor.java:73)
    	... 84 more
    Caused by: com.lambdaworks.redis.RedisException: Unable to connect
    	at com.lambdaworks.redis.RedisClient.connect(RedisClient.java:176)
    	at com.lambdaworks.redis.RedisClient.connectAsync(RedisClient.java:139)
    	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.createLettuceConnector(LettuceConnectionFactory.java:339)
    	... 111 more
    Caused by: java.lang.IllegalStateException: await*() in I/O thread causes a dead lock or sudden performance drop. Use addListener() instead or call await*() from a different thread.
    	at org.jboss.netty.channel.DefaultChannelFuture.checkDeadLock(DefaultChannelFuture.java:342)
    	at org.jboss.netty.channel.DefaultChannelFuture.await(DefaultChannelFuture.java:231)
    	at com.lambdaworks.redis.RedisClient.connect(RedisClient.java:166)
    	... 113 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,248745600,,2013-08-21 10:11:47.872,36905,false,tmarshall(tmarshall),,,,"0|i008av:",1364,36607,,,Sprint 14,,,5.0,,"21/Aug/13 10:11 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/21702a902f162fb19cf8b785c4fe2c6dd9452027",,,,,,,,,,,,,,,,,
Cannot destroy tap if tapped stream is already destroyed,XD-677,50305,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,dturanski,jencompgeek,jencompgeek,12/Aug/13 9:20 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,09/Dec/13 9:53 AM,,,,,,,M5,,,,,,,0,,,,,,,"xd:>tap destroy mytap
16:44:41,850  WARN Spring Shell client.RestTemplate:524 - DELETE request for ""http://localhost:8080/taps/mytap"" resulted in 400 (Bad Request); invoking error handler
Command failed org.springframework.xd.rest.client.impl.SpringXDException: XD116E:(pos 4): unrecognized stream reference 'foo'
tap foo.http | log

Tap is then still listed when I do a ""tap list""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,239241600,,2013-12-05 07:28:25.203,36800,false,tmarshall(tmarshall),,,,"0|i006nz:",1092,36502,,,Sprint 19,,,2.0,,"05/Dec/13 7:28 AM;dturanski;XD-1044 refactored some of the ""module dependency"" tracking… and there a few comments in there regarding cases other than composed modules where dependencies are important. This would be another one. So, we should consider how that bug might be addressed by generalizing what is now in ModuleDependencyRepository.","09/Dec/13 9:53 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/e1a7ac3e3eaeab41544a63c769847936257c304d",,,,,,,,,,,,,,,,
No indication of failure in shell when deploying job referencing nonexistent trigger,XD-662,50270,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,jencompgeek,jencompgeek,09/Aug/13 2:11 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,15/Aug/13 4:20 PM,,,,,,,M3,,,,,,,0,,,,,,,"I see the following output on the shell if I create a job and reference a non-existent trigger. There's a big stack trace in the server log, but nothing on the shell side indicating failure. A subsequent ""jobs list"" also shows the job. The same thing happens if I deploy an undeployed Job after deleting its associated Trigger.

$ job create --name helloWorldJob --definition ""myjob --trigger=nonexistenttrigger""
Successfully created and deployed job 'helloWorldJob'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249264000,XD-233,2013-08-15 14:49:44.11,36765,true,tmarshall(tmarshall),,,,"0|i008qv:",1438,36467,,,Sprint 13,,,2.0,,"15/Aug/13 2:49 PM;iperumal;Submitted PR:
https://github.com/SpringSource/spring-xd/pull/228",,,,,,,,,,,,,,,,,
File Source Name and Duplicates options not working as documented,XD-652,50257,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,jencompgeek,jencompgeek,09/Aug/13 9:12 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,09/Aug/13 1:02 PM,,,,,,,M2,,,,,,,0,,,,,,,"The doc says the name option is ""the absolute path to the directory to monitor for files"" but it actually seems to be the name of a dir in /tmp/xd/input. Not sure which is the correct behavior. Also, ""name"" as an option name seems a little vague. Maybe something like ""--directory""?

Also, if I set --duplicates=true, it actually prevents duplicates (setting prevents-duplicates to true)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249782400,,,36753,true,tmarshall(tmarshall),,,,"0|i00a07:",1646,36455,,,Sprint 12,,,2.0,,"09/Aug/13 1:02 PM;jencompgeek;Fixed by Eric in XD-648 PR",,,,,,,,,,,,,,,,,
Connection props in rabbit.properties ignored by xd-admin and xd-container,XD-644,50236,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,jencompgeek,jencompgeek,jencompgeek,08/Aug/13 6:50 PM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,08/Aug/13 7:56 PM,,,,,,,M2,,,,,,,0,,,,,,,I modified rabbit.hostname in rabbit.properties and xd-container still attempted to find Rabbit at localhost with --transport rabbit. Looks like the PPC for xd-container and xd-admin is not pointing to rabbit.properties,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249868800,,,36732,true,tmarshall(tmarshall),,,,"0|i009z3:",1641,36434,,,Sprint 12,,,2.0,,"08/Aug/13 7:49 PM;jencompgeek;Tried to change xd-common to use file ${xd.transport}.properties, but it fails due to lack of local.properties file for xd-singlenode. Didn't want to create an empty local.properties. Could set ignoreResourceNotFound to true, but that prints a nasty warn message to log.

Also tried rearranging the definitions a bit but the rabbit container does have a dependency on redis.properties when the analytics store is redis.

This probably needs a more thorough re-working. For the time being, just added rabbit.properties to xd-common.",,,,,,,,,,,,,,,,,
Problem with tapping and > (source channels),XD-641,50232,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Won't Fix,aclement,aclement,aclement,08/Aug/13 3:19 PM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,15/Oct/13 11:26 AM,,,,,,,M4,,,,,,,0,,,,,,,"This is a follow on from XD-592. In that bug we fixed up the ability to use tap with pipe.  Tap when used as a source channel should also work (and should deploy in a more optimized fashion since source channels can be directly connected to the subsequent module, creation of a pass-through tap instance isn't necessary).  This test shows the syntax that should work and the current information about how it fails:

{code}
public void testTapSourceChannel() throws IOException {
  FileSink sink1 = newFileSink();
  FileSink sink2 = newFileSink();

  stream().create(""myhttp"",
    ""http --port=9314 | transform --expression=payload.toUpperCase() | filter --expression=true > :foo"");

  // fails with: java.lang.IllegalArgumentException: bean 'myhttp.1' is already
  // registered but does not match the required type
  tap().create(""wiretap1"", ""tap myhttp.transform > transform --expression=payload.replaceAll('a','.') | %s"", sink1);

  // fails in TapDefinition ctor with: java.lang.IllegalArgumentException:
  // streamName cannot be empty or null
  tap().create(""wiretap2"", ""tap :foo > transform --expression=payload.replaceAll('a','.') | %s"", sink2);

  httpPostData(""http://localhost:9314"", ""Dracarys!"");
}
{code}

I suspect part of the problem initially lies with the code around EnhancedStreamParser that builds the module deployment requests from the Ast parsed from the input DSL string.  Whether a source channel was originally specified with 'tap' is captured in that Ast but that knowledge doesn't appear to be getting used.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,243993600,XD-4,,36728,true,tmarshall(tmarshall),,,,"0|i06i4n:",37975,36430,,,,,,4.0,,"15/Oct/13 11:26 AM;aclement;Old style tap syntax no longer supported.",,,,,,,,,,,,,,,,,
Cannot start xd-container with the --hadoopDistro option,XD-640,50230,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,jencompgeek,jencompgeek,08/Aug/13 2:12 PM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,08/Aug/13 5:02 PM,,,,,,,M2,,Runtime,,,,,0,,,,,,,"Trying to use xd-container with PHD, and therefore need to start with --hadoopDistro. I get the following error:

$ bin/xd-container --hadoopDistro phd1
17:11:20,305 ERROR main server.ContainerMain:59 - ""--hadoopDistro"" is not a valid option
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249868800,XD-468,,36726,true,tmarshall(tmarshall),,,,"0|i009y7:",1637,36428,,,Sprint 12,,,3.0,,,,,,,,,,,,,,,,,,,
StreamCommandTests - asserting sink contents sometimes failing,XD-630,50203,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,aclement,aclement,07/Aug/13 4:17 PM,28/Jan/14 7:47 AM,10/Jul/21 8:38 AM,28/Jan/14 7:47 AM,,,,,,,M6,,,,,,,0,,,,,,,"There are some asserts in StreamCommandTests that are commented out (see the TODOs in there). These asserts are verifying the contents of the various sinks employed in the tests. I am finding that if the tests are run all together with the asserts enabled (run all StreamCommandTests), some of the assertions fail, with something like:

{code}
org.junit.ComparisonFailure: expected:<[DRACARYS!
]> but was:<[]>
	at org.junit.Assert.assertEquals(Assert.java:115)
	at org.junit.Assert.assertEquals(Assert.java:144)

{code}

When run individually the tests succeed. Not sure if it is timing (checking sinks before they've been written to) or something else...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,235008000,XD-235,2014-01-28 07:47:39.562,36699,false,tmarshall(tmarshall),,,,"0|i005af:",866,36401,,,Sprint 21,,,2.0,,"28/Jan/14 7:47 AM;mark.fisher;https://github.com/spring-projects/spring-xd/commit/26fceedeac0dc0cf9ddc7d66b5bc79d958431ad9",,,,,,,,,,,,,,,,,
Problem with tapping on a module using a named sink channel,XD-629,50202,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,aclement,aclement,07/Aug/13 4:13 PM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,21/Oct/13 6:54 AM,,,,,,,M4,,,,,,,0,,,,,,,"{code}
mystream = http | transform --payload=expression.toUpperCase() > :foo
tap mystream.transform | log
{code}
This appears to fail because we can't tap into whatever was created to represent the named channel 'foo'. There is an @Ignore test in StreamCommandTests called testTappingModulesVariationsWithSinkChannel() which checks this.

(The parser is currently resolving 'tap mystream.transform' to 'tap --channel=foo'.)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,248313600,XD-4,,36698,true,tmarshall(tmarshall),,,,"0|i06hy7:",37946,36400,,,,,,2.0,,"26/Aug/13 3:50 PM;aclement;https://github.com/SpringSource/spring-xd/pull/248",,,,,,,,,,,,,,,,,
"Streams created without a '|' (substreams) are being typed by the parser as a Job",XD-628,50201,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,grenfro,grenfro,07/Aug/13 2:40 PM,12/Nov/13 3:03 PM,10/Jul/21 8:38 AM,21/Oct/13 6:54 AM,,,,,,,M4,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249955200,XD-4,,36697,true,tmarshall(tmarshall),,,,"0|i06hxj:",37943,36399,,,,,,3.0,,,,,,,,,,,,,,,,,,,
"shell command ""stream list"" fails",XD-627,50200,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Cannot Reproduce,,aeisenberg,aeisenberg,07/Aug/13 1:30 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,12/Aug/13 2:06 AM,,,,,,,M3,,,,,,,0,,,,,,,"Run the shell command {{stream list}} and you get the following error:

{code}
xd:>stream list
Command failed org.springframework.http.converter.HttpMessageNotReadableException: Could not read JSON: Unrecognized field ""metadata"" (class org.springframework.xd.rest.client.domain.StreamDefinitionResource$Page), not marked as ignorable (3 known properties: , ""links"", ""content"", ""page""])
 at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@30721965; line: 1, column: 148] (through reference chain: org.springframework.xd.rest.client.domain.Page[""metadata""]); nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field ""metadata"" (class org.springframework.xd.rest.client.domain.StreamDefinitionResource$Page), not marked as ignorable (3 known properties: , ""links"", ""content"", ""page""])
 at [Source: sun.net.www.protocol.http.HttpURLConnection$HttpInputStream@30721965; line: 1, column: 148] (through reference chain: org.springframework.xd.rest.client.domain.Page[""metadata""])
{code}

You get a similar error when running any of the following:

{code}
tap list
trigger list
job list
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249955200,,,36696,true,tmarshall(tmarshall),,,,"0|i06hxb:",37942,36398,,,,,,1.0,,"07/Aug/13 2:29 PM;aeisenberg;Urrrgh...looks like I can't resolve this myself.  This was my problem.  I was using an xd-shell instance from a distribution that didn't match the xd-admin-server.  When I used the most recent from master of each, everything works.

This is not a problem.",,,,,,,,,,,,,,,,,
Shell: RestTemplate not posting using UTF-8 ,XD-626,50198,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,07/Aug/13 12:54 PM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,08/Aug/13 5:20 AM,M1,,,,,,M2,,,,,,,0,,,,,,,"The *http post* command uses the default MediaType by the RestTemplate, which in return triggers the default *StringHttpMessageConverter* which itself uses the default charset *ISO-8859-1*.

This creates issues when posting special characters.",,,,,,,,,,,,,,,,,XD-631,,,,,,,,,,,,,,,,,,,,249955200,,2013-08-08 05:20:33.533,36694,false,tmarshall(tmarshall),,,,"0|i009xb:",1633,36396,,,Sprint 12,,,1.0,,"07/Aug/13 12:58 PM;hillert;PR https://github.com/SpringSource/spring-xd/pull/194","08/Aug/13 5:20 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/815d9d52e91b10af3632329c350bbc367ae6d0f9",,,,,,,,,,,,,,,,
Revert XD-624 When SI 3.0.M3 is Available,XD-625,50195,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,grussell,grussell,07/Aug/13 10:58 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,11/Oct/13 2:24 AM,,,,,,,M4,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249955200,,,36691,false,tmarshall(tmarshall),,,,"0|i0080v:",1318,36393,,,,,,1.0,,,,,,,,,,,,,,,,,,,
Use External Connection Factory in TCP Syslog Source,XD-624,50194,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,07/Aug/13 10:58 AM,11/Feb/14 11:39 AM,10/Jul/21 8:38 AM,07/Aug/13 11:14 AM,M1,,,,,,M2,,Analytics,,,,,0,,,,,,,"WARN log emitted because the embedded connection factory does not get an application event publisher.

Will be fixed in SI M3 (INT-3107).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249955200,,,36690,false,tmarshall(tmarshall),,,,"0|i009wv:",1631,36392,,,Sprint 12,,,1.0,,,,,,,,,,,,,,,,,,,
catch erroneous hadoop config fs --namenode url early,XD-623,50193,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Won't Fix,,wkoh,wkoh,07/Aug/13 10:18 AM,27/Jan/14 8:33 PM,10/Jul/21 8:38 AM,27/Jan/14 8:33 PM,,,,,,,,,,,,,,0,,,,,,,"currently, we can specify any bogus url using 'hadoop config fs --namenode' without any warning.

e.g.
hadoop config fs --namenode hdfs://localhost:8888

doing a 'hadoop fs ls /' will catch the error and throw exception. Ideally, we should catch the bogus url error early in the 'hadoop config fs' command. similar to 'admin config server --uri'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,235008000,,2014-01-27 20:33:14.132,36689,false,tmarshall(tmarshall),,,,"0|i06hwf:",37938,36391,,,,,,2.0,,"27/Jan/14 8:33 PM;mark.pollack;wait for user feedback",,,,,,,,,,,,,,,,,
Fix text-table rendering,XD-608,50167,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,hillert,hillert,hillert,06/Aug/13 8:23 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,12/Aug/13 2:01 AM,,,,,,,M2,,CLI,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250128000,,,36663,true,tmarshall(tmarshall),,,,"0|i06huf:",37929,36365,,,,,,1.0,,"06/Aug/13 8:28 AM;hillert;PR https://github.com/SpringSource/spring-xd/pull/189",,,,,,,,,,,,,,,,,
NPE on stream destroy,XD-603,50142,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,dturanski,dturanski,05/Aug/13 3:48 PM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,06/Aug/13 9:08 AM,,,,,,,M2,,,,,,,0,,,,,,,"xd:>stream create ticktock --definition ""time | log"" --deploy true
18:45:13,310  WARN Spring Shell client.RestTemplate:524 - POST request for ""http://localhost:8080/streams"" resulted in 400 (Bad Request); invoking error handler
Command failed org.springframework.xd.rest.client.impl.SpringXDException: There is already a stream named 'ticktock'

xd:>stream destroy ticktock
18:45:16,505  WARN Spring Shell client.RestTemplate:524 - DELETE request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.xd.rest.client.impl.SpringXDException: java.lang.NullPointerException


Caused by: java.lang.NullPointerException
	at org.springframework.xd.dirt.module.ModuleDeployer.undeploy(ModuleDeployer.java:143)
	at org.springframework.xd.dirt.module.ModuleDeployer.handleMessageInternal(ModuleDeployer.java:97)


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250041600,XD-5,2013-08-06 08:09:05.787,36640,false,tmarshall(tmarshall),,,,"0|i009tb:",1615,36342,,,Sprint 12,,,2.0,,"06/Aug/13 8:09 AM;mark.fisher;david: were you running xd-singlenode or distributed? if distributed, what transport?","06/Aug/13 9:08 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/5cf0dad0f07bb4e0baa8da4dcabb1fddd088a52e",,,,,,,,,,,,,,,,
Fix ChannelRegistry Cleanup During Module Undeploy,XD-602,50140,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,grussell,grussell,grussell,05/Aug/13 12:55 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,05/Aug/13 1:36 PM,,,,,,,M3,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250128000,,,36638,false,tmarshall(tmarshall),,,,"0|i06hrj:",37916,36340,,,,,,2.0,,"05/Aug/13 1:36 PM;grussell;XD-583",,,,,,,,,,,,,,,,,
./xd-container  --transport local throws NumberFormatException,XD-601,50139,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Cannot Reproduce,,wkoh,wkoh,05/Aug/13 12:23 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,04/Sep/13 7:27 AM,,,,,,,M3,,,,,,,0,,,,,,,"./xd-container [OK]
./xd-container --transport redis [OK]
./xd-container --transport rabbit [OK]
./xd-container --transport local [FAIL]

wkoh-mbp:bin administrator$ ./xd-container --transport local
Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.jolokia.jvmagent.spring.SpringJolokiaAgent#0': Invocation of init method failed; nested exception is java.lang.NumberFormatException: For input string: ""${xd.jmx.port}""
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1488)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:626)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.xd.dirt.server.ContainerMain.launch(ContainerMain.java:89)
	at org.springframework.xd.dirt.server.ContainerMain.main(ContainerMain.java:72)
Caused by: java.lang.NumberFormatException: For input string: ""${xd.jmx.port}""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:449)
	at java.lang.Integer.parseInt(Integer.java:499)
	at org.jolokia.jvmagent.JolokiaServerConfig.initConfigAndValidate(JolokiaServerConfig.java:211)
	at org.jolokia.jvmagent.JolokiaServerConfig.init(JolokiaServerConfig.java:84)
	at org.jolokia.jvmagent.JolokiaServerConfig.<init>(JolokiaServerConfig.java:68)
	at org.jolokia.jvmagent.spring.SpringJolokiaAgent.afterPropertiesSet(SpringJolokiaAgent.java:78)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1547)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1485)
	... 11 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247622400,,2013-09-04 07:27:25.572,36637,false,tmarshall(tmarshall),,,,"0|i06hrb:",37915,36339,,,,,,2.0,,"04/Sep/13 7:27 AM;dturanski;This is working now",,,,,,,,,,,,,,,,,
"Add deploy/undeploy/destroy 'all' commands for all applicable resources (streams, tap, job & trigger,)",XD-600,50138,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,dturanski,dturanski,05/Aug/13 9:27 AM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,15/Aug/13 4:19 PM,,,,,,,M3,,CLI,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,XD-690,,,,,,,,,,,,,,,,,,,,249350400,XD-233,2013-08-15 01:10:59.498,36636,true,tmarshall(tmarshall),,,,"0|i008pj:",1432,36338,,,Sprint 13,,,5.0,,"15/Aug/13 1:10 AM;iperumal;Submitted PR:
https://github.com/SpringSource/spring-xd/pull/226",,,,,,,,,,,,,,,,,
Gradle Import Broken by Hadoop Pseudo Projects,XD-599,50133,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,thomas.risberg,grussell,grussell,05/Aug/13 7:46 AM,20/Feb/14 7:24 AM,10/Jul/21 8:38 AM,08/Aug/13 11:48 AM,,,,,,,M2,,,,,,,0,,,,,,,"When importing Spring-XD as a gradle project, in STS, while building the model, we get

Root exception:
java.lang.IllegalArgumentException: Project location doesn't exist: 
.../spring-xd/spring-xd-hadoop/hadoop11

./gradlew eclipse creates these directories, but the plugin needs them before running that task

The problem seems to be that these ""projects"" are not really projects.

Perhaps a quick fix would be to commit these directories (with a dummy file) ??",,,,,,,,,,,,,,,,,XD-1335,,,,,,,,,,,,,,,,,,,,250214400,,,36631,false,tmarshall(tmarshall),,,,"0|i009qn:",1603,36333,,,Sprint 12,,,1.0,,,,,,,,,,,,,,,,,,,
Problems with advanced tapping,XD-592,50098,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,aclement,aclement,01/Aug/13 11:44 AM,11/Feb/14 11:39 AM,10/Jul/21 8:38 AM,08/Aug/13 2:15 PM,,,,,,,M2,,Analytics,,,,,0,,,,,,,"Start of a test program that can be placed in StreamCommandTests:

{code}
@Test
public void testTappingAndChannels() {
  executeStreamCreate(""myhttp"",""http --port=9314 | transform --expression=payload.toUpperCase() | log"",true);
  executeStreamCreate(""tap"",""tap @myhttp.1 | log"",true);		
  executeStreamCreate(""tap_new"",""tap myhttp.1 > log"",true);				
  executeCommand(""http post --data Dracarys! --target http://localhost:9314"");
  // TODO verify both logs output DRACARYS!
}

{code}

In the test program see two taps. One using the older style and one using the newer style and '>' so that there is no real tap module source, the log module just gets its input channel wired directly to myhttp.1 (the output of transform).  They should be doing the same thing.  However when run the output for tap_new is missing, all I see is:

{code}
11:39:36,055  WARN New I/O worker #28 logger.tap:141 - DRACARYS!
11:39:36,059  WARN New I/O worker #28 logger.myhttp:141 - DRACARYS!
{code}

No errors are reported, there is just no output for tap_new.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249868800,XD-4,2013-08-05 07:59:36.891,36596,false,tmarshall(tmarshall),,,,"0|i009rb:",1606,36298,,,Sprint 12,,,8.0,,"05/Aug/13 7:59 AM;mark.pollack;Shouldn't tap myhttp.1 > log not be allowed as log doesn't reference a named channel, only syntax such as

tap myhttp1.1 > :logger

would be valid?

Does 
xd:> stream create --name foo1 --definition ""http --port=9314 | transform --expression=payload.toUpperCase() | log""
xd:> stream tap --name tap1 --definition ""tap @ foo1 | log""
xd:> stream tap --name tap2 --definition ""tap @ foo2 | log""

or

xd:> stream tap --name tap1 --definition ""tap foo1.http | log""
xd:> stream tap --name tap2 --definition ""tap foo1.http | log""



tap myhttp.1 > log
","05/Aug/13 8:32 AM;aclement;Things do seem to have changed with the recent commits, a little better I think. But here is todays failing test:

{code}
@Test
public void testUsingLabels() {
  executeStreamCreate(""myhttp"",""http --port=9314 | flibble: transform --expression=payload.toUpperCase() > :foo"",true);

  // This works:
  executeStreamCreate(""tap1"","":foo > log"",true);
  // This works:
  executeStreamCreate(""tap2"",""tap :foo > transform --expression=payload.replaceAll('A','.') | log"",true);
  // This does not work:
  executeStreamCreate(""tap3"",""tap myhttp.transform > transform --expression=payload.replaceAll('A','.') | log"",true);

  executeCommand(""http post --data Dracarys! --target http://localhost:9314"");
}
{code}

The third one seems the most critical as that is the point of tap, to gain access to data from a module that hasn't exposed a named channel.  Currently it is implemented by the parser layer converting 'myhttp.transform' into a channel reference 'myhttp.1' (effectively knowing the internal channel naming scheme used) - perhaps the <streamId>.<moduleId> need passing to the backend for it to resolve rather than trying to do it up front.

To answer Marks question:

> Shouldn't tap myhttp.1 > log not be allowed as log doesn't reference a named channel, only syntax such as

I'm ok with banning that and not allowing the user knowledge of the internal channel names used.

> tap myhttp1.1 > :logger

In the syntax we talked about tap does have the two options. Named channels with ':' prefix or <stream>.<module> references not qualified by a colon. This syntax you propose could potentially work but we need to discuss. In some ways this is confusing as is the 'tap X >' a source channel or is '> :logger' a sink channel, if it is a source channel *and* sink channel, where is the module? There isn't one. If tap is the 'module' (a source one) and '> :logger' is the sink, I will need to modify the parser to cope with this.

The 'tap @' syntax I'd like to get rid of.

> stream tap --name tap1 --definition ""tap foo1.http | log""

The devil in the detail here seems to be what is tap. Is it a source module or is it just a source channel. In your syntax there 'tap foo1.http | log' it is a real source module and so will be created and deployed as a module.  I remember Mark F talking about this being a little unnecessary (i.e. deploying a real tap instance) because it is just connecting a channel to the subsequent module and acting as an unnecessary go between. Hence we moved onto 'tap' being for source channels, implying this syntax:

'tap foo1.http > log'

('>' implies what precedes it is just a channel reference or resolves to a channel reference so there is no deployed entity for it).  I'm not sure I like that tap can be used in two ways (followed by a > or followed by a |) depending on what you are referencing, but if that is how you think it should be, we could do that.  Seems like we need to discuss...

","05/Aug/13 8:42 AM;mark.pollack;I did forget the discussion about the fact that > implies that what precedes it is a channel reference.  We should probably just allow using only a '>' and not confuse matters with using '|'.  I think this is what the original decision was so sorry if I forgot. let's chat more to be sure.","07/Aug/13 4:08 PM;aclement;PR created (Erics changes then a few tweaks of mine):

https://github.com/SpringSource/spring-xd/pull/195

There are some notes on that PR.  After applying it the basic stuff is working. So ignoring tap with '>' for M2, tap with '|' should work with these changes.","08/Aug/13 1:55 PM;aclement;The final pull request for all this is Erics (based on mine):

https://github.com/SpringSource/spring-xd/pull/200

Although the jira was initially raised to cover tapping with '>', we decided that '>' related tapping would be shuffled after M2 and the focus for M2 would be to get tap with pipe behaving reliably and that is what the pull request addresses. Perhaps the critical outstanding issue is tapping into the last module of a stream when that stream ends with a named channel - this is covered by https://jira.springsource.org/browse/XD-629. Also raised was this jira related to a problem asserting sink contents in the tests: https://jira.springsource.org/browse/XD-630

I will raise a further jira to cover the tap with '>' issue we are going to tackle post M2.","08/Aug/13 2:15 PM;mark.fisher;I merged PR #200:
https://github.com/SpringSource/spring-xd/commit/e380bc02d4fe2de7af5469832c270898ddd3726f

",,,,,,,,,,,,
Deploying with twittersearch source throws Jackson ClassDefNotFound exception,XD-585,50062,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,dturanski,dturanski,dturanski,30/Jul/13 9:28 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,30/Jul/13 10:23 AM,,,,,,,M2,,Packaging,,,,,0,,,,,,,"The upgrade to Jackson 2.2 included the following change to the build script
{code}
project('spring-xd-dirt') {
	description = 'Spring XD DIRT'
	configurations {
	  [runtime,testRuntime]*.exclude group: 'org.codehaus.jackson'
	}
{code}

Spring social twitter template depends on these classes
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250646400,XD-5,,36561,false,tmarshall(tmarshall),,,,"0|i009pb:",1597,36263,,,Sprint 12,,,1.0,,"30/Jul/13 10:23 AM;dturanski;Upgraded to Spring Social 1.1.0.M3",,,,,,,,,,,,,,,,,
Parsing stream definition with parameter containing single quotes not working,XD-584,50060,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,,dturanski,dturanski,30/Jul/13 8:49 AM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,01/Aug/13 9:08 AM,,,,,,,M3,,CLI,,,,,0,,,,,,,"The documented gemfire-cq example (https://github.com/springsource/spring-xd/wiki/Sources#wiki-gemfire-cq) fails:

xd:>stream create --name cqtest --definition ""gemfire-cq --query=""Select * from /Stocks where symbol=
'VMW'"" | file""
You cannot specify option 'name' when you have also specified '' in the same command
xd:>stream create --name cqtest --definition ""gemfire-cq --query=Select * from /Stocks where symbol='
VMW' | file""
10:01:46,249  WARN Spring Shell client.RestTemplate:524 - POST request for ""http://localhost:8080/str
eams"" resulted in 400 (Bad Request); invoking error handler
Command failed org.springframework.xd.rest.client.impl.SpringXDException: XD115E:(pos 26): unexpected
 data in stream definition '*'
gemfire-cq --query=Select * from /Stocks where symbol='VMW' | file
                          ^
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250473600,XD-233,,36559,false,tmarshall(tmarshall),,,,"0|i008xz:",1472,36261,,,,,,0.0,,"01/Aug/13 9:08 AM;dturanski;This works:

stream create --name cqtest --definition ""gemfire-cq --query='Select * from /Stocks where symbol=''VMW''' | file""",,,,,,,,,,,,,,,,,
Dispatcher Has No Subscriber Error when posting a message to a stream,XD-583,50058,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,dturanski,dturanski,30/Jul/13 8:38 AM,14/Aug/13 1:19 PM,10/Jul/21 8:38 AM,06/Aug/13 7:37 AM,,,,,,,M2,,Runtime,,,,,0,,,,,,,"This has been observed intermittently with Redis transport by myself and others when sending a message to a valid stream. Not sure how to recreate it yet.

11:27:10,082 ERROR ThreadPoolTaskScheduler-1 redis.RedisQueueInboundChannelAdapter:126 - Error sending message
org.springframework.integration.MessageDeliveryException: Dispatcher has no subscribers for channel 'org.springframework.context.support.GenericApplicationContext@3f73865d.input'.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250128000,,2013-08-05 16:31:45.945,36557,false,tmarshall(tmarshall),,,,"0|i009sf:",1611,36259,,,Sprint 12,,,5.0,,"05/Aug/13 4:31 PM;grussell;Two issues: 

- adapters are auto-startup by default so they start when the module is refreshed and before the channel registry has subscribed.
- channel registry cleanAll() is broken

PR: https://github.com/SpringSource/spring-xd/pull/188","06/Aug/13 7:37 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/e497e6f1b675c88515785e130e3ff92d1f2dd087",,,,,,,,,,,,,,,,
Ad-hoc Jobs do not start,XD-560,50020,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,29/Jul/13 9:43 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,31/Jul/13 7:39 AM,,,,,,,M2,,,,,,,0,,,,,,,"After XD-554 the ModuleJobExecutor.start does not get called.  Thus jobs that are ""run one time"" do not fire.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250646400,,2013-07-31 07:39:09.04,36520,false,tmarshall(tmarshall),,,,"0|i009n3:",1587,36222,,,Sprint 12,,,3.0,,"31/Jul/13 7:39 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/95ab968caf8f62c8176bbf10f54bd5c79fe5c12b

https://github.com/SpringSource/spring-xd/commit/d5ca956e6969d4f54d646afe6077f2525461adf4",,,,,,,,,,,,,,,,,
CORS support,XD-556,49998,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,,aeisenberg,aeisenberg,26/Jul/13 9:52 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,30/Jul/13 1:26 AM,,,,,,,M2,,,,,,,0,,,,,,,"XD instances will not accept xhr requests from browsers whose page origin does not match the XD instance.  

As an example, the Kodiak UI is served from a different process (and url) than the XD instance.  When users open the Kodiak UI in a browser, requests from the browser to the XD instance, but these requests will fail due to cross-site scripting limitations.

CORS (Cross-Origin Resource Sharing) is a way to get around this.  We can configure the server to accept requests from browsers whose origins are not the XD instance.

I have this working in a local branch and will submit a pull request.


More information:
CORS Spec: http://www.w3.org/TR/cors/
SPR-9278 CORS support for SpringFramework
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,250992000,,,36498,true,tmarshall(tmarshall),,,,"0|i009lb:",1579,36200,,,Sprint 12,,,5.0,,,,,,,,,,,,,,,,,,,
Parser blows on modules names with '-',XD-523,49866,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,aclement,eric.bottard,eric.bottard,22/Jul/13 2:41 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,25/Jul/13 11:50 AM,,,,,,,M2,,,,,,,0,,,,,,,"Tried to create a module named ""tcp-poll"" and got this:
XD108E:(pos 3): missing expected character '-'
tcp-poll --host=54.208.22.193 --port=8081 | log


I believe this should be supported, and indeed we have several module names of this form already",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251251200,,2013-07-22 09:18:07.608,36367,true,tmarshall(tmarshall),,,,"0|i008zr:",1480,36069,,,Sprint 12,,,5.0,,"22/Jul/13 9:18 AM;mark.pollack;To discuss camel casing of module names and also module option names.","22/Jul/13 11:33 AM;aclement;My recent pull request changed the behaviour I think, removing support for the hyphenated module names.  If we can agree on the naming rules (modules and option names) it is straightforward to make the parser follow them.","22/Jul/13 2:19 PM;eric.bottard;If it is easy to still support dashes in module names, I would strongly vote in favor of it. camelCase for module names feels really weird (not to mention the potential for error from users, etc)","22/Jul/13 3:39 PM;aclement;One reason I didn't like it is that it feels like it is nice if the module name format matches the java identifier format (or is at least a subset), which isn't the case if hyphens are allowed. Camel casing will work, or underscores.","23/Jul/13 1:07 AM;eric.bottard;Well, I think we have to choose sides here. It's either java-like, or unix-like, but not both. CamelCase with the pipe symbol and dash-dash doesn't feel right IMO. What do you think?","23/Jul/13 1:15 PM;aclement;I haven't yet implemented a module myself but maybe I expected to name my module implementation class the same as the name I'd use in the DSL. If I hyphenate the name in the DSL I can't use that name for my class.

Anyway, pull request created to allow it for now whilst we discuss:

https://github.com/SpringSource/spring-xd/pull/138

this will allow hyphens in module names. ",,,,,,,,,,,,
Cannot create tap if you have already tried to create an invalid one of same name,XD-522,49847,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Duplicate,,aeisenberg,aeisenberg,19/Jul/13 8:31 PM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,14/Aug/13 12:01 PM,,,,,,,M3,,CLI,,,,,0,,,,,,,"From the shell:

{code}
> stream create --name aaa --definition ""time|log""
Created new stream 'aaa'

> tap create --name aa --definition ""tap aaa | log""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: XD111E:(pos 8): Unexpected token.  Expected 'dot(.)' but was 'pipe(|)'
tap aaa | log

>tap create --name aa --definition ""tap aaa . log""
Command failed org.springframework.xd.rest.client.impl.SpringXDException: There is already a tap named 'aa'
{code}

Looks like the first tap was created even though there was a parse error.  And so the second attempt to create the tap failed due to an existing tap.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,249350400,,2013-08-14 12:01:35.424,36349,false,tmarshall(tmarshall),,,,"0|i06gdz:",37693,36051,,,,,,1.0,,"14/Aug/13 12:01 PM;dturanski;see XD-561",,,,,,,,,,,,,,,,,
The parser should be able to handle a parameter name with a '-' hyphen embedded.,XD-521,49843,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,19/Jul/13 9:43 AM,10/Jan/14 11:36 AM,10/Jul/21 8:38 AM,25/Nov/13 7:39 AM,,,,,,,M5,,,,,,,0,,,,,,,Right now it treats it as a new parameter start and fails.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,240537600,XD-4,2013-08-14 12:24:33.921,36345,true,tmarshall(tmarshall),,,,"0|i006cn:",1041,36047,,,Sprint 19,,,1.0,,"14/Aug/13 12:24 PM;dturanski;Seems to conflict with https://jira.springsource.org/browse/XD-520
and https://jira.springsource.org/browse/XD-505","14/Aug/13 12:25 PM;grenfro;Duplicate of 505","14/Aug/13 4:38 PM;aclement;Is this still a problem? It might be when the changes were put in to allow hyphens in module names that this was also addressed.","18/Nov/13 1:25 PM;mark.pollack;Try to reproduce and ping Andy as needed.","25/Nov/13 7:39 AM;grenfro;No longer an issue.",,,,,,,,,,,,,
Address already in use for tomcat/hsqldb should fail completly,XD-515,49827,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,eric.bottard,eric.bottard,19/Jul/13 2:22 AM,24/Jan/14 11:51 AM,10/Jul/21 8:38 AM,17/Jan/14 2:08 PM,,,,,,,M7,,,,,,,0,,,,,,,"Currently, process is left running and if logs / sysout are not monitored, you have no clue",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,235872000,,2014-01-17 00:10:47.983,36329,false,tmarshall(tmarshall),,,,"0|i005fj:",889,36031,,,,,,3.0,,"17/Jan/14 12:10 AM;mark.pollack;Is this for starting two xd-admin nodes?

Now the behavior when starting two identical xd-admin nodes, there is a failure (good) but related to hsqldb

Exception in thread ""main"" org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hsqldb' defined in class path resource [META-INF/spring-xd/batch/batch.xml]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: HSQLDB could not be started. Maybe another instance is already running on 0.0.0.0:9101 ?

I tried to change the hsqldb config for the 2nd instance, but it looks like it isn't getting picked up from xd-config.yml



","17/Jan/14 1:18 AM;jvalkeal;spring-xd-dirt/src/main/resources/META-INF/spring-xd/batch/batch.xml:

{code}
<prop key=""server.port"">\${hsql.server.port:9101}</prop>
{code}

application.yml:
{code}
url: jdbc:hsqldb:hsql://${hsql.server.host:localhost}:${hsql.server.port:9101}/${hsql.server.dbname:xdjob}
{code}
so hsql property values needs to be set to change db host/port.","17/Jan/14 1:59 PM;mark.pollack;yea, now i see.  i didn't expect that linkage.  i've updated xd-config.yml and the docs to make this clearer.","17/Jan/14 2:08 PM;mark.pollack;now get address already in use for both cases, for tomcat.

SEVERE: Failed to start end point associated with ProtocolHandler [""http-nio-9393""]
java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:344)
	at sun.nio.ch.Net.bind(Net.java:336)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:199)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:470)


and the server just hangs there, but doesn't exit.",,,,,,,,,,,,,,
Investigate intermittent failure of RedisStreamDefinitionRepositoryTests,XD-509,49807,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,eric.bottard,eric.bottard,18/Jul/13 3:26 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,18/Jul/13 5:05 AM,,,,,,,M2,,,,,,,0,,,,,,,"the test for findAll often fails for me when running inside gradle. (Could not reproduce inside eclipse)

I already tried fixing it by using a different redis key space, but to no avail.
One explanation would be if gradle runs tests concurrently, but my understanding is that it does not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251769600,,,36309,true,tmarshall(tmarshall),,,,"0|i00993:",1522,36011,,,Sprint 11,,,3.0,,,,,,,,,,,,,,,,,,,
Jobs are created even though they have an invalid definition,XD-503,49796,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,17/Jul/13 10:33 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,30/Jul/13 2:24 AM,,,,,,,M2,,,,,,,0,,,,,,,"Also, if you deploy the Job it will fail, but then you can't delete the job.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251769600,,,36298,true,tmarshall(tmarshall),,,,"0|i009nr:",1590,36000,,,Sprint 12,,,2.0,,,,,,,,,,,,,,,,,,,
If a job is created that uses a trigger that has not been created and deployed it throws a 500 error instead of a 400,XD-500,49769,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,16/Jul/13 9:55 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,24/Jul/13 10:17 AM,,,,,,,M2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251337600,,2013-07-18 02:34:56.555,36271,true,tmarshall(tmarshall),,,,"0|i008zz:",1481,35973,,,Sprint 12,,,2.0,,"18/Jul/13 2:34 AM;eric.bottard;Not sure it should raise a 404, as it's not the resource that is targeted (the job) that is missing, but something else.
Should definitely be in the 4xx family though","18/Jul/13 7:01 AM;eric.bottard;Kinda taking back what I wrote earlier, as the current behavior for a tap that references a non-existent stream is to raise a 404...","18/Jul/13 7:56 AM;grenfro;Should we change this behavior?  To another 4xx?  I can research to see if their is a closer error code we should use.","18/Jul/13 8:03 AM;eric.bottard;400 would be the one I guess","18/Jul/13 8:09 AM;grenfro;I think 400 is our only sensible option on this.  I wish we could hand back the 418 :-D.    ","23/Jul/13 1:16 AM;eric.bottard;edited title to read 400, in case someone doesn't bother reading the comments (in which case she won't see this..)",,,,,,,,,,,,
Cron Jobs stop firing when a named trigger is created and deployed,XD-499,49768,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,16/Jul/13 9:54 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,24/Jul/13 2:08 PM,,,,,,,M2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251164800,,2013-07-24 14:08:41.332,36270,false,tmarshall(tmarshall),,,,"0|i008zb:",1478,35972,,,Sprint 12,,,3.0,,"16/Jul/13 5:14 PM;grenfro;When the trigger refreshes the context it, replaces the scheduler and thus all previously created timers and crons are removed.","24/Jul/13 2:08 PM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/9c8bbb52e10111202fc03bb8de516fea0b706ece

https://github.com/SpringSource/spring-xd/commit/2ba1571bc2737447f7c0d0ea04003190e2e23cf5",,,,,,,,,,,,,,,,
When creating a job with the fixed-delay parameter in the shell command fails,XD-482,49711,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,15/Jul/13 6:39 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,18/Jul/13 7:23 AM,,,,,,,M2,,,,,,,0,,,,,,,Need to change the name from fixed-delay to fixed_delay or fixedDelay.  System rejects the '-'.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,252028800,,,36213,true,tmarshall(tmarshall),,,,"0|i0097r:",1516,35915,,,Sprint 11,,,1.0,,,,,,,,,,,,,,,,,,,
Running Job with time delay (non cron) launches 2 instances before job is supposed to fire,XD-481,49709,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,15/Jul/13 6:33 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,18/Jul/13 7:23 AM,,,,,,,M2,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,252028800,,,36211,true,tmarshall(tmarshall),,,,"0|i0097j:",1515,35913,,,Sprint 11,,,2.0,,,,,,,,,,,,,,,,,,,
In certain scenarios a job can be redeployed more than once,XD-480,49708,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grenfro,grenfro,grenfro,15/Jul/13 6:10 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,18/Jul/13 7:23 AM,,,,,,,M2,,Stream Module,,,,,0,,,,,,,"In a scenario where we are using the same job definition i.e. Job.xml and we create Job Instance Foo.  If I create and deploy Foo2 using Job.xml  I will see only 2 job definitions(correct), but I will see the job run 3 times.  If I create Foo3 & deploy, I will see 3 job definitions(correct), but the jobs will run 5 times.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,252028800,,,36210,true,tmarshall(tmarshall),,,,"0|i0097b:",1514,35912,,,Sprint 11,,,2.0,,,,,,,,,,,,,,,,,,,
The stream definition is not deleted in redis container when the stream is destroyed,XD-476,49699,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,,dsz0111@gmail.com,dsz0111@gmail.com,13/Jul/13 8:14 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,16/Jul/13 2:05 AM,,,,,,,M2,,,,,,,0,,,,,,,"This only happened with distributed mode that uses redis as store. The single mode which uses in memory store works fine.

Step to reproduce:

Create stream:
curl -X POST -d ""name=httptest"" -d ""definition=http|log"" http://localhost:8080/streams

redis 127.0.0.1:6379> keys *httptest*
1) ""modules:httptest""
2) ""streams.httptest""
3) ""stream.definitions.httptest""

Delete Stream:
curl -X DELETE http://localhost:8080/streams/httptest

redis 127.0.0.1:6379> keys *httptest*
1) ""streams.httptest""
2) ""stream.definitions.httptest""

stream still there not deleted

Recreate the stream
curl -X POST -d ""name=httptest"" -d ""definition=http|log"" http://localhost:8080/streams

Got:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?><errors xmlns:ns2=""http://www.w3.org/2005/Atom""><error logref=""StreamAlreadyExistsException""><message>There is already a stream with name 'httptest'</message></error>",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,251942400,,2013-07-16 02:05:24.587,36201,true,tmarshall(tmarshall),,,,"0|i00a33:",1659,35903,,,,,,2.0,,"13/Jul/13 8:15 AM;dsz0111@gmail.com;I found in the master. Not sure if it affected other versions","13/Jul/13 12:33 PM;dsz0111@gmail.com;The problem happens because when a stream created, it has the prefix for the member of a sorted order(E.g. streams.httptest). But when delete happens the prefix is not attached (only httptest passed in), which resulted the corresponding deletion silently failure.

I created a pull request to fix this problem: https://github.com/SpringSource/spring-xd/pull/113","16/Jul/13 2:05 AM;eric.bottard;Merged PR https://github.com/SpringSource/spring-xd/commit/0d7f79f32ccf6ffd1bd6b3ad056cb5be06abd0ca",,,,,,,,,,,,,,,
Investigate stream lifecycle issues with redis store,XD-446,49641,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Cannot Reproduce,,luke,luke,11/Jul/13 5:39 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,02/Oct/13 6:05 AM,,,,,,,M4,,,,,,,0,,,,,,,"When running with ""./gradlew launch"" I get a 500 error when I try to re-deploy an undeployed stream. A subsequent create or destroy also fail

http://localhost:8080:>stream create --definition ""time | log"" --name ticktock
Created new stream 'ticktock'
http://localhost:8080:>stream undeploy --name ticktock
Un-deployed stream 'ticktock'
http://localhost:8080:>stream deploy --name ticktock
13:02:09,936  WARN Spring Shell client.RestTemplate:524 - PUT request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
http://localhost:8080:>stream deploy --name ticktock
13:03:11,453  WARN Spring Shell client.RestTemplate:524 - PUT request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
http://localhost:8080:>stream undeploy --name ticktock
13:03:54,576  WARN Spring Shell client.RestTemplate:524 - PUT request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
http://localhost:8080:>stream undeploy --name ticktock
13:04:48,872  WARN Spring Shell client.RestTemplate:524 - PUT request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
http://localhost:8080:>stream create --definition ""time | log"" --name ticktock
13:04:52,066  WARN Spring Shell client.RestTemplate:524 - POST request for ""http://localhost:8080/streams"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error
http://localhost:8080:>stream destroy --name ticktock
13:05:14,207  WARN Spring Shell client.RestTemplate:524 - DELETE request for ""http://localhost:8080/streams/ticktock"" resulted in 500 (Internal Server Error); invoking error handler
Command failed org.springframework.web.client.HttpServerErrorException: 500 Internal Server Error

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,245203200,XD-387,2013-07-19 12:08:34.161,36143,true,tmarshall(tmarshall),,,,"0|i06fin:",37552,35845,,,,,,1.0,,"19/Jul/13 12:08 PM;dsz0111@gmail.com;Should this fixed along with XD-476?","02/Oct/13 6:05 AM;luke;Out of date and probably fixed as part of other issues.",,,,,,,,,,,,,,,,
Document time source,XD-429,49594,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,eric.bottard,mark.pollack,mark.pollack,08/Jul/13 11:06 PM,14/Aug/13 1:19 PM,10/Jul/21 8:38 AM,18/Jul/13 1:48 AM,,,,,,,M2,,Documentation,,,,,0,,,,,,,"time source is used in some examples, but it isn't documented explicitly, eg. --interval option in seconds.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,252547200,,,36097,false,tmarshall(tmarshall),,,,"0|i0096f:",1510,35799,,,Sprint 11,,,1.0,,,,,,,,,,,,,,,,,,,
Creating a tap with same name as existing streams results in infinite loop,XD-299,49287,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,aclement,eric.bottard,eric.bottard,21/Jun/13 9:44 AM,12/Nov/13 3:04 PM,10/Jul/21 8:38 AM,10/Nov/13 2:08 PM,,,,,,,M4,,,,,,,0,,,,,,,"See http://stackoverflow.com/questions/17157068/counter-analytics-in-springxd

The underlying issue is stream creation with a name already taken though",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,242265600,XD-4,2013-10-21 14:27:05.28,35794,false,tmarshall(tmarshall),,,,"0|i006wn:",1133,35496,,,Sprint 18,,,5.0,,"21/Oct/13 2:27 PM;mark.pollack;xd:>stream create foo --definition ""tap:foo > counter""
produced StackOverflowError","01/Nov/13 4:20 PM;aclement;I added a test for this in https://github.com/spring-projects/spring-xd/pull/381 (parser refactoring). It didn't fail so the refactoring PR may address it. (I had to use the new format for the test ""tap:stream:foo > counter"")","04/Nov/13 9:00 AM;dturanski;I verified it:

xd:>stream create test --definition ""time | log""
Created new stream 'test'
xd:>stream create test --definition ""tap:test > file""
11:54:02,608  WARN Spring Shell client.RestTemplate:566 - POST request for ""http://localhost:9393/streams"" resulted in 400 (Bad Request); invoking error handler
Command failed org.springframework.xd.rest.client.impl.SpringXDException: There is already a stream named 'test'
",,,,,,,,,,,,,,,
redis.properties values ignored,XD-295,49281,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Invalid,iperumal,deejay,deejay,21/Jun/13 4:51 AM,11/Sep/13 10:35 AM,10/Jul/21 8:38 AM,25/Jun/13 1:36 PM,M1,,,,,,M3,,Runtime,,,,,0,,,,,,,"The container application loads {{redis.properties}}, but for some reason the values are ignored, and defaults are used instead.

Repro steps:
# Unpack Spring XD 1.0.0.M1 to a machine with no running Redis instance
# Change /xd/config/redis.properties to specify a different hostname
# Run /xd/bin/xd-container
# Observe error about inability to connect to Redis on localhost

Workaround
* Pass -Dredis.hostname={desired IP} as a JVM parameter",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,253670400,,2013-06-21 10:07:00.677,35788,true,tmarshall(tmarshall),,,,"0|i06e73:",37338,35490,,,,,,1.0,,"21/Jun/13 10:07 AM;iperumal;Just to clarify, do you have redis.properties under conf/ or config/?

If you have redis.properties under XD_HOME/config, then the redis.properties file should be loaded when the container starts.

When the container starts with an incorrect redis config then, you should see the 

ERROR main launcher.RedisContainerLauncher:78 - Unable to connect to Redis on myotherhost:6378; nested exception is com.lambdaworks.redis.RedisException: Unable to connect
Redis does not seem to be running. Did you install and start Redis? Please see the Getting Started section of the guide for instructions.","23/Jun/13 12:53 AM;deejay;Hi,

I've edited the description to correct my typo. I was talking about {{config/redis.properties}}; any mention of {{conf}} was an error.

The {{redis.properties}} file is loaded, I can see this being logged. For reasons I haven't looked into, the values from it are ignored and default values are used instead. The error message you describe is shown if you specify a remote Redis instance in the properties file, but have no local Redis instance.","23/Jun/13 9:36 AM;iperumal;ok, to give you some idea on how the redis.properties gets loaded:

The redis-common.xml file loads the redis.properties into the application context:

<context:property-placeholder location=""file:${xd.home}/config/redis.properties""/>

as long as your application context has the ""xd.home"" system property set correctly, it should load the redis.properties file correctly.

If you are launching xd-container script, then this 'xd.home' system property is set in there.

","24/Jun/13 1:23 AM;deejay;My apologies - user error. I'd forgotten to set the environment variable on the machines I was testing on.

I was confused after seeing this in the logs when running the xd-container script:
{noformat}
13/06/24 09:20:35 INFO support.PropertySourcesPlaceholderConfigurer: Loading properties file from URL [file:../config/redis.properties]
{noformat}

I'd thought this meant that it had loaded the properties file correctly. Perhaps it may be worth adding some explicit assertion that XD_HOME has been set?","24/Jun/13 7:11 AM;iperumal;So, you see the above message because, XD_HOME will fallback to "".."" to enable developers who might launch the container's main class from IDE. This will make the config/*.properties from the project root directory/config to get picked. 

Again, you don't need to explicitly define XD_HOME if you are launching the xd-container script as it is done inside the script. If you are making any changes to the script/or making your own script, then please make sure you have the XD_HOME and other logger system properties set correctly. 

","25/Jun/13 1:36 PM;iperumal;This issues came up as the XD_HOME was not set right when starting the xd-container.

Please note that we will always make sure the XD_HOME is set (either from the script or "".."" inside the IDE) before starting the xd-container.",,,,,,,,,,,,
Redis 'install-redis' script fails on Ubuntu64,XD-292,49271,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,verrol,verrol,20/Jun/13 6:25 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,25/Jun/13 2:56 PM,M1,,,,,,M2,,,,,,,0,,,,,,,"The installation script for redis fails on Ubuntu64 when trying to untar the redis distribution.  The script uses REDIS_ZIPNAME instead of REDIS_ZIP_PATH.  

This bug will be seen on any Linux 64 bits platform and looking at the code, even Linux 32 bits platform.",,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/13 6:25 AM;verrol;Screen Shot 2013-06-20 at 6.24.38 AM.png;https://jira.spring.io/secure/attachment/21252/Screen+Shot+2013-06-20+at+6.24.38+AM.png",,,,,,,,,,,,,253756800,,2013-06-24 11:37:14.227,35778,true,tmarshall(tmarshall),,,,"0|i00brb:",1933,35480,,,Sprint 8,,,1.0,,"24/Jun/13 11:37 AM;iperumal;Thanks for pointing this out. 

The install-redis script is fixed/tested with (ubuntu64bit and centos 32bit) and the changes are merged into spring-xd master.

Please feel free to re-open this if you see any other issues.",,,,,,,,,,,,,,,,,
HTTP Source still listens on port 9000 after removal.,XD-291,49258,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.fisher,franktylerva,franktylerva,19/Jun/13 11:45 AM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,10/Jul/13 12:34 PM,M1,,,,,,M2,,Ingest,,,,,0,,,,,,,"Steps to reproduce:

1.  curl -d ""http | log"" http://localhost:8080/streams/testHttp

2.  curl -X DELETE http://localhost:8080/streams/testHttp

3.  curl -d ""http | log"" http://localhost:8080/streams/testHttp

org.jboss.netty.channel.ChannelException: Failed to bind to: 0.0.0.0/0.0.0.0:9000",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,252374400,,2013-07-10 12:34:31.217,35765,false,tmarshall(tmarshall),,,,"0|i00ah3:",1724,35467,,,Sprint 10,,,1.0,,"10/Jul/13 12:34 PM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/588b60d6f8ab9ccc4a380bc3ccfb1d65e4efcb9c",,,,,,,,,,,,,,,,,
Missing '=' in example of http stream,XD-228,49134,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Trivial,Complete,eric.bottard,pikus,pikus,14/Jun/13 3:26 PM,14/Aug/13 1:20 PM,10/Jul/21 8:38 AM,18/Jun/13 3:02 AM,,,,,,,M2,,Documentation,,,,,0,,,,,,,"In documentation attached to M1, in Streams/Introduction section, there's
{noformat}
http --port 8091 | file --dir=/tmp/httpdata/
{noformat}
while it should be:
{noformat}
http --port=8091 | file --dir=/tmp/httpdata/
{noformat}
missing ""{{=}}"" in {{http}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,254620800,,,35648,true,tmarshall(tmarshall),,,,"0|i00btj:",1944,35350,,,,,,1.0,,,,,,,,,,,,,,,,,,,
XD AdminMain & ContainerMain should check xd.home property from scripts,XD-206,48996,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,06/Jun/13 3:36 PM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,07/Jun/13 2:44 PM,,,,,,,M1,,Packaging,,,,,0,,,,,,,"Currently, the system property xd.home is set as JVM_OPTS (via SPRING_XD_ADMIN_OPTS) into xd-admin & xd-container scripts.

Inside the ContainerMain & AdminMain, we need to check if this system property is set and use it. It seems like, this check is missing now.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,255225600,,2013-06-07 14:44:15.533,35509,false,tmarshall(tmarshall),,,,"0|i00c6n:",2005,35211,,,Sprint 6,,,1.0,,"07/Jun/13 8:33 AM;iperumal;Currently the implementation at https://github.com/SpringSource/spring-xd/pull/53 looks like this:

1) From xd-* scripts, specify ""--xdHomeDir"" command line option.
This will override any existing system property ""xd.home"".
2) If ""--xdHomeDir"" is not specified, then the ""xd.home"" system property will
have the preference
3) If both ""--xdHomeDir"" and ""xd.home"" system property are not provided,
then the relative path "".."" is set to be XD home","07/Jun/13 2:44 PM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/bbd1c82619687a4ea2cef2f4093d6d7c0e8c2a01",,,,,,,,,,,,,,,,
Fix XD scripts on windows,XD-201,48988,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,iperumal,iperumal,iperumal,06/Jun/13 9:40 AM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,06/Jun/13 4:52 PM,,,,,,,M1,,Packaging,,,,,0,,,,,,,Currently the XD scripts are broken in windows. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,255312000,,,35501,true,tmarshall(tmarshall),,,,"0|i00c5r:",2001,35203,,,Sprint 6,,,2.0,,"06/Jun/13 4:27 PM;iperumal;The xd-singlenode.bat script is still broken as the parser could not get the command line option ""--transport local""
",,,,,,,,,,,,,,,,,
Creating a tap throws an exception,XD-200,48987,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Critical,Complete,dturanski,dturanski,dturanski,06/Jun/13 9:40 AM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,07/Jun/13 7:40 AM,,,,,,,M1,,Runtime,,,,,0,,,,,,,"Creating a tap throws an exception. In local mode: Cannot resolve reference to bean 'redisConnectionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'redisConnectionFactory' is defined  But also fails when using redis.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,255312000,,2013-06-07 07:40:39.797,35500,false,tmarshall(tmarshall),,,,"0|i00c5b:",1999,35202,,,Sprint 6,,,4.0,,"07/Jun/13 7:40 AM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/59e1a825a2ac255095980235bf28a9947dab451e",,,,,,,,,,,,,,,,,
Ensure the DELETE Operation can Delete a Tap,XD-199,48986,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,06/Jun/13 8:23 AM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,08/Jun/13 3:30 PM,,,,,,,M1,,,,,,,0,,,,,,,"While deleting a stream doesn't remove any taps right now, we should be able to explicitly delete a tap.

Determine whether the current DELETE works and, if not, make it so.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,255139200,,2013-06-08 15:30:20.532,35499,false,tmarshall(tmarshall),,,,"0|i00c4v:",1997,35201,,,Sprint 6,,,3.0,,"08/Jun/13 3:30 PM;mark.fisher;https://github.com/SpringSource/spring-xd/commit/adbfe22cbb9654c641540cc4f4c2e35c1e5fb5ea",,,,,,,,,,,,,,,,,
XD scripts lib path needs to be dynamic,XD-123,48721,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,wkoh,iperumal,iperumal,24/May/13 4:41 PM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,28/May/13 4:36 PM,,,,,,,M1,,Packaging,,,,,0,,,,,,,"We currently have the manually created XD scripts. This makes it difficult to maintain as the lib path is error prone with the changes. We need to make sure that the properties such as lib path etc., are dynamically updated.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,256176000,,2013-05-28 06:48:51.65,35236,false,tmarshall(tmarshall),,,,"0|i00cdz:",2040,34938,,,Sprint 5,,,3.0,,"28/May/13 6:48 AM;mark.pollack;Instead of updating a list of jar names, we should add lib/*.jar to the classpath.  This way there is also a means to extend XD for the M1 release, just drop a jar into lib and a module xml file into the modules dir.  

I believe there are a few variations of this approach floating around - tomcat has a setclasspath.sh/bat script",,,,,,,,,,,,,,,,,
XD scripts need to have spring-integration milestone versions updated,XD-122,48720,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Major,Complete,iperumal,iperumal,iperumal,24/May/13 4:19 PM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,24/May/13 4:33 PM,,,,,,,M1,,Packaging,,,,,0,,,,,,,"Spring-integration version is changed to 3.0.0.M2 and since we manually create the XD scripts, they still point to the 3.0.0.BUILD-SNAPSHOT version.

As discussed, we also need to have a better strategy on updating the lib directory inside the XD scripts.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,256435200,,,35235,true,tmarshall(tmarshall),,,,"0|i06bu7:",36956,34937,,,,,,2.0,,"24/May/13 4:33 PM;iperumal;Fixed and pull request sent for review:

https://github.com/SpringSource/spring-xd/pull/18",,,,,,,,,,,,,,,,,
Gauge and Counter hash and equals should not depend on values,XD-66,48547,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,luke,luke,luke,13/May/13 11:25 AM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,13/May/13 12:45 PM,,,,,,,M1,,,,,,,0,,,,,,,"The value is mutable so this causes problems if storing metrics in a HashSet, for example.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,257385600,,,35065,true,tmarshall(tmarshall),,,,"0|i00cq7:",2097,34767,,,,,,1.0,,"13/May/13 12:45 PM;luke;Modified the implementations to use the name only.",,,,,,,,,,,,,,,,,
build.gradle doesn't handle a small handful of libraries,XD-58,48509,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,mark.pollack,gregturn,gregturn,09/May/13 1:02 PM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,28/May/13 10:35 AM,,,,,,,M1,,Packaging,,,,,0,,,,,,,Trying to build spring-xd for the first resulted in lots of errors inside STS (I had an empty .m2 repo).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,256089600,,2013-05-28 10:35:11.953,35027,false,tmarshall(tmarshall),,,,"0|i00cfj:",2047,34729,,,Sprint 5,,,1.0,,"28/May/13 10:35 AM;mark.pollack;This was actually completed in Sprint 3 I believe.",,,,,,,,,,,,,,,,,
Add JUnit @Rule so Tests Fail Fast with Clear Messaging if Redis Not Available,XD-41,48409,Bug,Done,XD,Spring XD,software,mark.pollack,"This JIRA project is closed.

Spring XD is a unified, distributed, and extensible system for data ingestion, real time analytics, batch processing, and data export. The project's goal is to simplify the development of big data applications.",https://github.com/spring-projects/spring-xd,Minor,Complete,grussell,grussell,grussell,02/May/13 10:18 AM,11/Jun/13 10:46 PM,10/Jul/21 8:38 AM,02/May/13 12:39 PM,,,,,,,M1,,Runtime,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,258336000,,2013-05-02 10:47:11.546,34929,false,tmarshall(tmarshall),,,,"0|i00cwn:",2130,34631,,,Sprint 1,,,1.0,,"02/May/13 10:47 AM;mark.pollack;fisher commented, that perhaps skipping isn't a good idea?  We may not notice the skip tests and then break something only to notice much later down the road.  What is wrong with failing fast if Redis isn't found, but with a clear build failure message.  ","02/May/13 11:39 AM;grussell;Good point; changed title","02/May/13 12:23 PM;grussell;PR: https://github.com/SpringSource/spring-xd/pull/2",,,,,,,,,,,,,,,
Unable to decrypt SOAP request wihout soapaction header,SWS-1092,87693,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,miha-,miha-,18/Sep/20 9:31 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.9,,,,,,,,Security,,,,,0,,,,,,,"In the spring tutorial, the endpoint method is annotated with @PayloadRoot: {{@PayloadRoot(localPart = ""orderInput"", namespace = ""http://samples"")}}

This works fine when the soap message is not encrypted. PayloadRootAnnotationMethodEndpointMapping is able to map to soap message to the corresponding method.

 

When the soap message is encrypted, the PayloadRootAnnotationMethodEndpointMapping is unable to map the soap message because The security interceptor did not have yet the time to decipher it. But here I should be using @SopAction but I can not as client which sending us request is unable to add it (guverment thing).

 

Is there any way to trigger Wss4jSecurityInterceptor before PayloadRootAnnotation is searched?
 In tutorial is just to use this: 

wss4jSecurityInterceptor.setValidationActions(""Timestamp Signature Encrypt"");

but this is not working for above decribed reason.

Thank you
 miha",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:35.98,9223372036854775807,true,gregturn(gregturn),,,,"0|i0cb3j:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1158|https://github.com/spring-projects/spring-ws/issues/1158]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Spring Integration Issue With Latest XXE Patch and WebSphere 9.0,SWS-1090,87614,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,willweyant,willweyant,11/Sep/20 2:07 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,15/Sep/20 6:10 PM,3.0.6,3.0.7,3.0.8,3.0.9,,,3.0.10,,XML,,,,,0,,,,,,," When we deployed our application with Spring Integration 5.3.2.RELEASE we discovered that our application failed to deploy to WebSphere 9.0 via script or the console. Deploying via Eclipse worked fine. In the WebSphere SystemOut.log, we found the following error message: ""org.springframework.xml.validation.XmlValidationException: Could not create Schema: Failed to load external schema document ""wsjar:[file:|file:///]..."", because ""wsjar"" access is not allowed"". This occurred when loading XSD files contained in another jar from our interfaces war. The affected versions are the patched versions and later found here: .[[https://github.com/advisories/GHSA-wr5r-m8pc-85j9].|https://github.com/advisories/GHSA-wr5r-m8pc-85j9]

We traced the issue to the org.springframework.xml.validation.SchemaFactoryUtils. class called via Jaxp15ValidatorFactory.createValidator(...) and SchemaLoaderUtils.loadSchema(...). The SchemaFactoryUtils.newInstance(...) method has a hard coded list of protocols (see attached image of code). This list does not include WebSphere's proprietary wsjar protocol.

 

 

[!https://user-images.githubusercontent.com/33791605/92931312-45bf2e80-f411-11ea-9d0e-bfe2a7f0a51a.jpg!|https://user-images.githubusercontent.com/33791605/92931312-45bf2e80-f411-11ea-9d0e-bfe2a7f0a51a.jpg]
  
 To resolve our issue, we created a custom XML validator, which adds wsjar to the accepted protocols and applied to our int-xml:validating-filter in our integration flow configuration.|","Spring Integration 5.3.2.RELEASE
WebSphere 9.0",,,,,,,,,,,,,,,,,,,,,,,"11/Sep/20 1:54 PM;willweyant;SchemaFactoryUtils_MissingWSJARProtocol.jpg;https://jira.spring.io/secure/attachment/28291/SchemaFactoryUtils_MissingWSJARProtocol.jpg",,,,,,,,,,,,,24969600,,2020-09-14 17:47:47.172,9223372036854775807,true,gregturn(gregturn),,,,"0|i0calz:",9223372036854775807,9223372036854775807,,,,,,,,"14/Sep/20 5:47 PM;gregturn;Can you take 3.0.10.BUILD-SNAPSHOT for a spin?","14/Sep/20 8:53 PM;willweyant;I hope to test it out by the end of the week. We are in the middle of a major upgrade (a lot of fun so far :)).","15/Sep/20 8:46 PM;gregturn;To go along with release plans on our end, this has been released. If you have more issues, open another issue.","17/Sep/20 2:53 PM;willweyant;I was able to test the 3.0.10.RELEASE of spring-xml and it works fine in WebSphere. Thanks for the quick fix!","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1156|https://github.com/spring-projects/spring-ws/issues/1156]. ",,,,,,,,,,,,,
Spring WS Documentation Reference has outdated Wss4jInterceptor info,SWS-1089,87485,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,lashakv,lashakv,21/Aug/20 3:39 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.9,,,,,,,,Documentation,,,,,0,documentation,,,,,,"Spring WS Reference documentation has mentions of usage of `securementCallbackHandler` which was removed with Wss4j upgrade to 2.1.

Reference URL: [https://docs.spring.io/spring-ws/docs/3.0.9.RELEASE/reference/#_encryption_and_decryption_2]

Documentation should be updated. Example how `WSHandlerConstants.PW_CALLBACK_CLASS` can be provided for `wss4j-ws-security-dom` `org.apache.wss4j.dom.handler.WSHandler` with new `Wss4jSecurityInterceptor` should be added.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:35.302,9223372036854775807,true,gregturn(gregturn),,,,"0|i0ca6f:",9223372036854775807,9223372036854775807,https://docs.spring.io/spring-ws/docs/3.0.9.RELEASE/reference/#_encryption_and_decryption_2,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1155|https://github.com/spring-projects/spring-ws/issues/1155]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Adding header element is not reflected in Document,SWS-1087,86374,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,,,kgonia,kgonia,09/Apr/20 1:16 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.8,,,,,,,,Core,Test,,,,0,,,,,,,"After calling addHeaderElement method on SoapHeader element changes in header are not reflected document structure. 

Code samples:

Let's add element to Header


{code:java}
SoapHeader soapHeader = soapMessage.getSoapHeader();
QName qName = new QName(""http://www.w3.org/2005/08/addressing"", ""Action"", ""a"");
SoapHeaderElement soapHeaderElement = soapHeader.addHeaderElement(qName);
soapHeaderElement.setMustUnderstand(true);
soapHeaderElement.setText(""some text"");
{code}

soapMessage is instance of SaajSoapMessage

Now, after calling soapMessage.getDocument() method this change is not reflected in document structure.

Message that is sent has this element but It cause tests failures when MockWebServiceServer is used. SoapEnvelopeDiffMatcher compares Documents which are different that expected because adding header action is not reflected in document structure.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:34.865,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c4r3:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1153|https://github.com/spring-projects/spring-ws/issues/1153]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Wss4jSecurityInterceptor not propagating time to live values when validating ws-security soap header timestamp,SWS-1084,86022,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,mightybeaker,mightybeaker,19/Feb/20 3:17 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.8,,,,,,,,Security,,,,,1,,,,,,,"h2. Background

I have spring web services deployed to remote hosts offshore that may not be using NTP services to keep their clocks synchronised resulting in potential skewing of those server system clocks. This is out of my control and causes an issue with the web service ws-security handling specifically relating to the ws-security header timestamp validation of the received message.

I attempted to increase the time to live attributes on the definition of the Wss4jSecurityInterceptor bean for example by setting these 3:
{code:xml}
<property name=""timestampStrict"" value=""${server.wss.timestampStrict}"" />
<property name=""validationTimeToLive"" value=""${server.wss.validation.ttl}"" />
<property name=""futureTimeToLive"" value=""${server.wss.future.ttl}"" />{code}
The full bean definition:
{code:xml}
<bean id= ""wss4jInterceptor"" class=""org.springframework.ws.soap.security.wss4j2.Wss4jSecurityInterceptor"">
 <!-- Securing the outgoing message -->
 <property name=""securementActions"" value=""${server.wss.actions}"" />
 <property name=""timestampPrecisionInMilliseconds"" value=""true"" />
 <property name=""securementTimeToLive"" value=""${server.wss.securement.ttl}"" />
 <property name=""securementSignatureKeyIdentifier"" value=""DirectReference"" />
 <property name=""securementUsername"" value=""${ws.server.ks.sig.reply.privatekey.alias}"" />
 <property name=""securementPassword"" value=""${ws.server.ks.sig.reply.privatekey.password}"" />
 <property name=""securementSignatureParts"" value=""{}
{http://schemas.xmlsoap.org/soap/envelope/}
Body"" />
 <property name=""securementSignatureCrypto"">
 <bean class=""org.springframework.ws.soap.security.wss4j2.support.CryptoFactoryBean"">
 <property name=""keyStorePassword"" value=""${ws.server.ks.sig.reply.password}"" />
 <property name=""keyStoreLocation"" value=""${ws.server.ks.sig.reply.url}"" />
 </bean>
 </property>
 <!-- Validating the incoming message -->
 <property name=""validationActions"" value=""${server.wss.actions}"" />
 <property name=""timestampStrict"" value=""${server.wss.timestampStrict}"" />
 <property name=""validationTimeToLive"" value=""${server.wss.validation.ttl}"" />
 <property name=""futureTimeToLive"" value=""${server.wss.future.ttl}"" />
 <property name=""validationSignatureCrypto"">
 <bean class=""org.springframework.ws.soap.security.wss4j2.support.CryptoFactoryBean"">
 <property name=""keyStorePassword"" value=""${server.ks.sig.rqst.password}"" />
 <property name=""keyStoreLocation"" value=""${server.ks.sig.rqst.url}"" />
 </bean>
 </property>
 <property name=""exceptionResolver"" ref=""myExceptionResolver""/>
 </bean>
{code}
h2. Problem

Strangely, the problem did not improve. The timestamp validation was still failing. I had increased the ttl values to 420 seconds (7 minutes) but it appeared the update had no effect.
 I've done some analysis debugging the {{Wss4jSecurityInterceptor}} locally and came up with the following observations:
 Default values from {{Wss4jSecurityInterceptor}}:
{code:java}
private boolean timestampStrict = true;
private int validationTimeToLive = 300;
private int futureTimeToLive = 60;
{code}
The {{TimestampValidator.validate()}} method is actually called twice within the {{Wss4jSecurityInterceptor.validateMessage()}} processing. 
 *Firstly* in the {{securityEngine.processSecurityHeader()}} and *subsequently* in the {{verifyTimestamp()}} method.
 It appears that the {{TimestampValidator.validate()}} method requires an initialised {{RequestData}} object passed in with the various time to live attributes propagated from the attributes of the {{Wss4jSecurityInterceptor}}.

Within the code of the {{Wss4jSecurityInterceptor.validateMessage()}} method there is an attempt to do just that via {{initializeValidationRequestData()}}:
{code:java}
@Override
protected void validateMessage(SoapMessage soapMessage, MessageContext messageContext)
 throws WsSecurityValidationException {
...
RequestData validationData = initializeValidationRequestData(messageContext);
WSHandlerResult result = securityEngine
 .processSecurityHeader(elem, validationData);
 ...
verifyTimestamp(result);
{code}
However, the {{initializeValidationRequestData()}} method doesn't propagate the attributes. Therefore the {{processSecurityHeader()}} processing ends up using the default values contained in the {{RequestData}} object being:
{code:java}
/**
 * The time in seconds between creation and expiry for a Timestamp. The default
 * is 300 seconds (5 minutes).
 */
private int timeStampTTL = 300;

/**
 * The time in seconds in the future within which the Created time of an incoming
 * Timestamp is valid. The default is 60 seconds.
 */
private int timeStampFutureTTL = 60;
{code}
This is why the overall ws-security header validation still fails because it's using these default values instead of those I had explicitly set on the {{Wss4jSecurityInterceptor}} bean.
h2. Workaround

To address this, I extended {{Wss4jSecurityInterceptor}} and overrode the {{initializeValidationRequestData()}} method as follows:
{code:java}
/**
 * Fix: The parent calls a processSecurityHeader method on the <code>WSSecurityEngine</code>
 * prior to calling the verifyTimestamp as part of the validateMessage method.
 * The problem is that the necessary time to live attributes are not propagated
 * during the initializeValidationRequestData method in the parent so we need
 * to do it explicitly here unfortunately.
 */
@Override
protected RequestData initializeValidationRequestData(MessageContext messageContext) 
{
  RequestData requestData = new RequestData();
  requestData = super.initializeValidationRequestData(messageContext);
  requestData.setTimeStampFutureTTL(futureTimeToLive);
  requestData.setTimeStampTTL(validationTimeToLive);
  requestData.setTimeStampStrict(timestampStrict);
  return requestData;
}
{code}
This ensures that the {{RequestData}} object is correctly configured before either of the two calls to verify the timestamps. Without this, the {{processSecurityHeader()}} would fail the timestamp validation as it wasn't picking up the specified ttl values from the bean.
h2. Potential Fix

I think the {{initializeValidationRequestData()}} method in {{Wss4jSecurityInterceptor}} class could propagate the values to the {{RequestData}} object as per my overridden method above and that would solve this bug.

Perhaps then the correctly initialised {{RequestData}} object could be passed to the {{verifyTimestamp()}} method too precluding the need for a new object to be created again inside that method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:34.185,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c2xj:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1150|https://github.com/spring-projects/spring-ws/issues/1150]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Spring-WS documentation,SWS-1083,85933,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,dbelokursky,dbelokursky,04/Feb/20 8:20 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.8,,,,,,,,Documentation,,,,,0,,,,,,,"mvn goal archetype:*create* should be changed  to mvn archetype:*generate*

*[https://issues.apache.org/jira/browse/ARCHETYPE-437]*

*[http://maven.apache.org/archetype/maven-archetype-plugin/]*

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:33.954,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c2en:",9223372036854775807,9223372036854775807,https://docs.spring.io/spring-ws/docs/current/reference/#tutorial-creating-project,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1149|https://github.com/spring-projects/spring-ws/issues/1149]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Source code for 3.0.8.RELEASE missing from GitHub,SWS-1082,85799,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,gregturn,tazle,tazle,14/Jan/20 12:35 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,03/Feb/20 6:22 PM,3.0.8,,,,,,,,Core,,,,,0,,,,,,,"It appears that spring-ws 3.0.8 has been released to Maven Central in November 2019 (https://repo1.maven.org/maven2/org/springframework/ws/spring-xml/3.0.8.RELEASE/).

However, the source repository at [https://github.com/spring-projects/spring-ws] does not have a corresponding tag, and the spring-ws website at [https://spring.io/projects/spring-ws#overview] also lists 3.0.7 as the latest release.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-02-03 18:22:53.621,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c1kv:",9223372036854775807,9223372036854775807,,,,,,,,"03/Feb/20 6:22 PM;gregturn;Forgot to push those extra commits.

Done.

And website updated as well.","03/Feb/20 6:23 PM;gregturn;Closing this ticket as a WONT FIX because there is literally nothing to fix (in the code base).","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1148|https://github.com/spring-projects/spring-ws/issues/1148]. ",,,,,,,,,,,,,,,
XwsSecurityInterceptor not accepting the SAML token in proper xml format,SWS-1081,85687,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,muralidev81,muralidev81,17/Dec/19 11:38 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.0.RELEASE,,,,,,,,XML,,,,,0,,,,,,,"[https://mvnrepository.com/artifact/com.sun.xml.xws/xws-security/3.0]

We encountered below mentioned ClassCastException while processing SAML token from SOAP WSSE header. Its happening when given SAML token is in proper XML format (means with new lines, spaces and indentation). The same works fine when token given in same line (without spaces).

Exception:
{code:java}
org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor.handleValidationException Could not validate request: java.lang.ClassCastException: com.sun.xml.messaging.saaj.soap.impl.SOAPTextImpl cannot be cast to org.w3c.dom.Element; nested exception is com.sun.xml.wss.XWSSecurityException: java.lang.ClassCastException: com.sun.xml.messaging.saaj.soap.impl.SOAPTextImpl cannot be cast to org.w3c.dom.Element
 
{code}
We've verified the code and found where is it happening.

 jar:        xws-security-3.0.jar

Package: com.sun.xml.wss.impl.filter;

Class:  ImportSamlAssertionFilter

Method:  process(FilterProcessingContext context)
{code:java}
Element elem = null;

for(Iterator iter = wsseSecurity.getChildElements(); iter.hasNext();){
    elem = (Element)iter.next();
{code}
Fix would be something similar to this [https://github.com/mulderbaba/webservices-osgi/blob/master/com/sun/xml/wss/impl/filter/ImportSamlAssertionFilter.java]
{code:java}
 Element elem = null;Element elem = null;    
 for (Iterator iter = wsseSecurity.getChildElements(); iter.hasNext();) {
    Object obj = iter.next(); 
 
    if(obj instanceof Text) { continue; } 
    if (obj instanceof Element) { elem = (Element) obj;
{code}",https://mvnrepository.com/artifact/com.sun.xml.xws/xws-security/3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:33.494,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c107:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1147|https://github.com/spring-projects/spring-ws/issues/1147]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Eating the exception incase of error while processSAMLToken,SWS-1080,85686,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,muralidev81,muralidev81,17/Dec/19 11:20 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.0.RELEASE,,,,,,,,Security,,,,,0,,,,,,,"[https://mvnrepository.com/artifact/com.sun.xml.xws/xws-security/3.0]

 

We observed exceptions around processSAMLToken is eaten inside and not throwing to the caller. Due to this Authentication failed is also treating as successful authentication and getting access to the underlying service resource.

 

Expected: Let the exception be thrown to the caller and let it handle accordingly.

Don't wrap with try-catch. Its just similar to how other tokens are being processing.

 

More details are as follow:

jar: xws-security-3.0.jar

Package: com.sun.xml.wss.impl.

Class: HarnessUtil

Method: processWSSPolicy(final FilterProcessingContext fpContext).

 
{code:java}
try{
 if (samlPolicy.getAssertionType() == 
 AuthenticationTokenPolicy.SAMLAssertionBinding.SV_ASSERTION) {
 AuthenticationTokenFilter.processSamlToken(fpContext);
 }
}catch(Exception ex){
 //ignore it
}
{code}
 
{code:java}
 {code}
 ",https://mvnrepository.com/artifact/com.sun.xml.xws/xws-security/3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:33.264,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c0zz:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1146|https://github.com/spring-projects/spring-ws/issues/1146]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
spring-ws 3.0.8 not tagged on github,SWS-1079,85499,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Duplicate,gregturn,deejay1,deejay1,22/Nov/19 8:33 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,03/Feb/20 6:27 PM,,,,,,,,,,,,,,0,,,,,,,"The release isn't tagged on github and pom.xml still says it's a 3.0.8 snapshot version, also the latest GA version on [https://spring.io/projects/spring-ws/#learn] is still 3.0.7",,,,,,,,,,,,,,,,,SWS-1082,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:33.036,9223372036854775807,true,gregturn(gregturn),,,,"0|i0c06v:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1145|https://github.com/spring-projects/spring-ws/issues/1145]. ",,,,,,,,,,,,,,,,,
Wrong error message on request validation.,SWS-1078,85433,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,mbutov,mbutov,14/Nov/19 12:07 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.7,,,,,,,,Core,,,,,0,,,,,,,"When using StrictPayloadValidatingInterceptor with validateRequest = true and request has errors, we get an incorrect error message:
{quote}org.springframework.ws.client.support.interceptor.WebServiceValidationException: XML validation error on {color:#ff0000}*response*{color}: cvc-complex-type.2.4.a: Invalid content was found starting with element 'channel'. One of '\{username, customerCategory}' is expected.
 at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.{color:#ff0000}*handleRequestValidationErrors*{color}(AbstractValidatingInterceptor.java:203)
 at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.{color:#ff0000}*handleRequest*{color}(AbstractValidatingInterceptor.java:179)
 at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:597)
{quote}
which refers to response, while the error is in the request.

The ""response"" is hardcoded in AbstractValidatingInterceptor#handleRequest as well as WebServiceValidationException#createMessage.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:32.738,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bzs7:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1144|https://github.com/spring-projects/spring-ws/issues/1144]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Spring WS message tracing and invalid soap message issues: Response contains JSON payload instead of soap fault message,SWS-1074,84499,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,pravin_prabhulkar,pravin_prabhulkar,07/Jun/19 7:05 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.5,3.0.7,,,,,,,,,,,,0,,,,,,,"When we change Message received level to trace in logger configuration file and parsing invalid soap request, Spring WS error handler is not working and generating JSON response.

Issues is tested against spring WS version : 3.0.7 and 2.4.5

For example :

Sample Code : https://github.com/spring-guides/gs-producing-web-service.git

If we enable message print level to 'TRACE' and parse invalid soap message

Logger configuration :

 
{code:java}
<Logger name=""org.springframework.ws.server.MessageTracing.sent"" level=""trace""></Logger>
<Logger name=""org.springframework.ws.server.MessageTracing.received"" level=""trace""></Logger>
{code}
 

Invalid Soap request :

 
{code:java}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""
				  xmlns:gs=""http://spring.io/guides/gs-producing-web-service"">
   <soapenv:Header/>
   <soapenv:Body>
      <gs:getCountryRequest>
         <gs:name>Spain</gs:name1>
      </gs:getCountryRequest>
   </soapenv:Body>
</soapenv:Envelope>{code}
 


Error in response:
{code:java}
{
 ""timestamp"": ""2019-06-07T06:33:00.377+0000"",
 ""status"": 500,
 ""error"": ""Internal Server Error"",
 ""message"": ""Could not write message to OutputStream: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </gs:name1>; expected </gs:name>.\r\n at [row,col {unknown-source}]: [6,33]; nested exception is org.apache.axiom.om.DeferredParsingException: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </gs:name1>; expected </gs:name>.\r\n at [row,col {unknown-source}]: [6,33]"",
 ""path"": ""/ws""
}{code}

Stack-trace :

 
{code:java}
12:03:00.350 [http-nio-8080-exec-2] [ERROR] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[messageDispatcherServlet]][175] - Servlet.service() for servlet [messageDispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </gs:name1>; expected </gs:name>.
 at [row,col {unknown-source}]: [6,33]; nested exception is org.apache.axiom.om.DeferredParsingException: com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </gs:name1>; expected </gs:name>.
 at [row,col {unknown-source}]: [6,33]] with root cause
com.ctc.wstx.exc.WstxParsingException: Unexpected close tag </gs:name1>; expected </gs:name>.
 at [row,col {unknown-source}]: [6,33]
 at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:606) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:479) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:464) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.BasicStreamReader.reportWrongEndElem(BasicStreamReader.java:3283) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.BasicStreamReader.readEndElem(BasicStreamReader.java:3228) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2829) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1072) ~[woodstox-core-asl-4.2.0.jar:4.2.0]
 at org.apache.axiom.om.impl.builder.StAXOMBuilder.parserNext(StAXOMBuilder.java:666) ~[axiom-api-1.2.22.jar:1.2.22]
 at org.apache.axiom.om.impl.builder.StAXOMBuilder.next(StAXOMBuilder.java:184) ~[axiom-api-1.2.22.jar:1.2.22]
 at org.apache.axiom.core.CoreParentNodeSupport.ajc$interMethod$org_apache_axiom_core_CoreParentNodeSupport$org_apache_axiom_core_CoreParentNode$buildNext(CoreParentNodeSupport.aj:96) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.buildNext(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.core.CoreParentNodeSupport.ajc$interMethodDispatch1$org_apache_axiom_core_CoreParentNodeSupport$org_apache_axiom_core_CoreParentNode$buildNext(CoreParentNodeSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.core.CoreChildNodeSupport.ajc$interMethod$org_apache_axiom_core_CoreChildNodeSupport$org_apache_axiom_core_CoreChildNode$coreGetNextSibling(CoreChildNodeSupport.aj:115) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMNodeImpl.coreGetNextSibling(OMNodeImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomChildNodeSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomChildNodeSupport$org_apache_axiom_om_impl_intf_AxiomChildNode$getNextOMSibling(AxiomChildNodeSupport.aj:35) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMNodeImpl.getNextOMSibling(OMNodeImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomChildNodeSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomChildNodeSupport$org_apache_axiom_om_impl_intf_AxiomChildNode$getNextOMSibling(AxiomChildNodeSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj:356) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.ajc$interMethodDispatch2$org_apache_axiom_om_impl_common$serializeChildren(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj:519) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.defaultInternalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalSerialize(AxiomElementSupport.aj:513) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj:355) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.ajc$interMethodDispatch2$org_apache_axiom_om_impl_common$serializeChildren(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj:519) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.defaultInternalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalSerialize(AxiomElementSupport.aj:513) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj:355) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.ajc$interMethodDispatch2$org_apache_axiom_om_impl_common$serializeChildren(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj:519) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.defaultInternalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalSerialize(AxiomElementSupport.aj:513) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.internalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj:355) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.ajc$interMethodDispatch2$org_apache_axiom_om_impl_common$serializeChildren(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serializeChildren(AxiomContainerSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj:519) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMElementImpl.defaultInternalSerialize(OMElementImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$defaultInternalSerialize(AxiomElementSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalSerialize(AxiomElementSupport.aj:513) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.soap.impl.llom.SOAPEnvelopeImpl.internalSerialize(SOAPEnvelopeImpl.java:159) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalSerialize(AxiomElementSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.soap.impl.common.AxiomSOAPMessageSupport.ajc$interMethod$org_apache_axiom_soap_impl_common_AxiomSOAPMessageSupport$org_apache_axiom_soap_impl_intf_AxiomSOAPMessage$internalSerialize(AxiomSOAPMessageSupport.aj:57) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.internalSerialize(SOAPMessageImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomDocumentSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomDocumentSupport$org_apache_axiom_om_impl_intf_AxiomDocument$internalSerialize(AxiomDocumentSupport.aj) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomDocumentSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomDocumentSupport$org_apache_axiom_om_impl_intf_AxiomDocument$internalSerialize(AxiomDocumentSupport.aj:48) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMDocumentImpl.internalSerialize(OMDocumentImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.common.AxiomContainerSupport.ajc$interMethod$org_apache_axiom_om_impl_common_AxiomContainerSupport$org_apache_axiom_om_impl_intf_AxiomContainer$serialize(AxiomContainerSupport.aj:290) ~[axiom-impl-1.2.22.jar:?]
 at org.apache.axiom.om.impl.llom.OMDocumentImpl.serialize(OMDocumentImpl.java:1) ~[axiom-impl-1.2.22.jar:?]
 at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:295) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.ws.server.MessageDispatcher.getMessageContent(MessageDispatcher.java:198) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:168) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:89) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:61) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:293) ~[spring-ws-core-3.0.7.RELEASE.jar:?]
 at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.7.RELEASE.jar:5.1.7.RELEASE]
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [?:1.8.0_212]
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [?:1.8.0_212]
 at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.19.jar:9.0.19]
 at java.lang.Thread.run(Unknown Source) [?:1.8.0_212]
{code}
 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:31.8,9223372036854775807,true,gregturn(gregturn),,,,"0|i0buc7:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1140|https://github.com/spring-projects/spring-ws/issues/1140]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Update WSS4J to 2.2.3 or higher,SWS-1072,84430,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,spanishkangaroo,spanishkangaroo,04/Jun/19 9:51 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,22/Aug/19 11:27 PM,3.0.7,,,,,,3.0.8,,Core,,,,,1,Wss4jSecurityInterceptor,,,,,,"Current version 3.0.7 of spring-ws-security references and old 2.2.0 version of WSS4J with a well-known error (see referenced WSS4J issue):

 

{{org.w3c.dom.DOMException: WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.}}
{{at java.xml/com.sun.org.apache.xerces.internal.dom.ParentNode.internalInsertBefore(ParentNode.java:356)}}
{{at java.xml/com.sun.org.apache.xerces.internal.dom.ParentNode.insertBefore(ParentNode.java:287)}}

 

Bug is solved in WSS4J 2.2.3 and 2.3.0, so a potential update would solve it without too many modifications.

 

 ",,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:31.354,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bu8n:",9223372036854775807,9223372036854775807,https://issues.apache.org/jira/browse/WSS-634,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1137|https://github.com/spring-projects/spring-ws/issues/1137]. ",,,,,,,,,,,,,,,,,
Spring GetMapping is allowing RequestBody,SWS-1071,84370,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,aps.saha5@gmail.com,aps.saha5@gmail.com,22/May/19 10:05 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,Core,,,,,0,,,,,,,Could you please explain why spring GetMapping in rest services is allowed to pass Request body,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:31.133,9223372036854775807,true,gregturn(gregturn),,,,"0|i0btvj:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1139|https://github.com/spring-projects/spring-ws/issues/1139]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Reference to response payload is kept in each thread,SWS-1070,84235,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,smaxi,smaxi,07/May/19 1:00 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.1,2.4.5,3.0.7,,,,,,Core,,,,,0,,,,,,,"Each thread of the application keeps reference to response payload. This reference is getting cleaned/reused when thread gets used again.
 This behavior is abnormal, because keeping reference to payload causes OoM when number of threads is high and payloads are big. It is not question of sizing of jvm as permanent heap requirements are n*m where n is the max size of the pool and m is the biggest size of response of the application.

How to reproduce:

Consider a method that returns {{StreamSource}}.
{color:#d73a49}@PayloadRoot{color}({color:#005cc5}namespace{color} {color:#d73a49}={color} {color:#005cc5}PULLACK_NAMESPACE_URI{color}, {color:#005cc5}localPart{color} {color:#d73a49}={color} {color:#032f62}{color:#032f62}""{color}PullRequest{color:#032f62}""{color}{color}) {color:#d73a49}@ResponsePayload{color} {color:#d73a49}public{color} {color:#24292e}StreamSource{color} requestDataGetEvents({color:#d73a49}@RequestPayload{color} {color:#24292e}XMLStreamReader{color} reader) throws {color:#24292e}DurableStorageException{color}{……
and ensure that reply is big enough, then memory footprint would look similar to:
 [!https://user-images.githubusercontent.com/50314851/57211152-88802380-6fdf-11e9-87d3-32419659a846.png!|https://user-images.githubusercontent.com/50314851/57211152-88802380-6fdf-11e9-87d3-32419659a846.png]

The reference to memory is kept and thread goes back to pool after processing the reply to the client. This reference is replaced by new reference once thread gets reused.

Ideas about resolution: either output stream is not closed, either reference to payload is not cleaned correctly.

Workaround: manipulate streams directly in the application which is not the objective here.

Cleanup thread locals by putting interceptor when output is sent to client<= a dirty way to achieve the needed behavior.

This is a copy-paste of the closed issue reported in: [https://github.com/spring-projects/spring-framework/issues/22895]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:30.914,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bt1j:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1136|https://github.com/spring-projects/spring-ws/issues/1136]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Spring-ws-core 2.4.5.RELEASE  not working with  Java 1.6,SWS-1069,84208,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,JoJo Oan,JoJo Oan,26/Apr/19 1:51 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.5,,,,,,,,,,,,,0,,,,,,,"Having various issues with integrating Spring-ws-core 2.4.5.RELEASE  with Java 1.6.

Currently running into a EnvironmentCapable not found issue.
{quote}cannot access org.springframework.core.env.EnvironmentCapable
class file for org.springframework.core.env.EnvironmentCapable not found
{quote}
Does Java 1.6 just not work with this version 2.4.5?  It works fine with 2.0.0.
Anyone know what the issue may be?

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2019-04-26 16:29:44.787,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bsvj:",9223372036854775807,9223372036854775807,,,,,,,,"26/Apr/19 4:29 PM;gregturn;Per https://github.com/spring-projects/spring-ws/commit/aa7b250a7136c6f172cafa90b1630f0fbc150317 (SWS-1048), it is built targeting Java 1.6 and uses the animal-sniffer-plugin to ensure no Java 7+ library calls are invoked. It was delivered with 2.4.4, so should be the norm for 2.4.5.

If you could post a stacktrace of your error condition, we could get to the bottom of this.","26/Apr/19 4:48 PM;JoJo Oan;I apologize, but I am not allowed to put up stack trace and there really isn't much more information on there anyways.

However, I can detail how we relate to EnvironmentCapable .
-The EnvironmentCapable is a superclass for a class called ApplicationContext which we are using.

 

Any ideas of what else I should look for?","26/Apr/19 7:00 PM;gregturn;Can you at least post the exception's message that you get? I need something.

You also mentioned that 2.0.0 built fine. That's a very old version that was clearly built with an older JDK. If the JDK isn't properly building things, I need to verify this.","26/Apr/19 7:15 PM;gregturn;For more details, I downloaded spring-ws-core-2.4.5.RELEASE.jar from https://repo.spring.io/webapp/#/artifacts/browse/simple/General/libs-release/org/springframework/ws/spring-ws-core/2.4.5.RELEASE/spring-ws-core-2.4.5.RELEASE.jar.

Unpacking it, I did this:

{code}
$ cd org/springframework/ws
$ javap -verbose FaultAwareWebServiceMessage.class 
Classfile /private/tmp/spring-ws-core/org/springframework/ws/FaultAwareWebServiceMessage.class
  Last modified Feb 22, 2019; size 334 bytes
  MD5 checksum 577cc8179a5c40de3175b6f683dd6644
  Compiled from ""FaultAwareWebServiceMessage.java""
public interface org.springframework.ws.FaultAwareWebServiceMessage extends org.springframework.ws.WebServiceMessage
  minor version: 0
  major version: 50
  flags: ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
...
{code}

*Major version 50* is JDK 1.6, meaning this class file was built in JDK 1.6 format.","26/Apr/19 7:39 PM;JoJo Oan;Okay let me give you this maven.BuildFailureException and Error that doesn't say too much!


[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

Bunch of: unmappable character for encoding UTF8

Bunch of: personal class has been deprecations

cannot access org.springframework.core.env.EnvironmentCapable class file for org.springframework.core.env.EnvironmentCapable not found

[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.BuildFailureException: Compilation failure
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:579)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:499)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:478)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
 at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
 at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
 at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
 at java.lang.reflect.Method.invoke(Method.java:597)
 at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
 at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
 at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
 at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.CompilationFailureException: Compilation failure
 at org.apache.maven.plugin.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:516)
 at org.apache.maven.plugin.CompilerMojo.execute(CompilerMojo.java:114)
 at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
 at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)


Thanks again!","26/Apr/19 7:41 PM;JoJo Oan;Thanks Greg!  I didn't know that major version: 50 meant JDK 6. I'll keep note of that!","30/Apr/19 1:53 AM;JoJo Oan;Found the issue. It wanted a specific version of spring-core and for some reason, other projects also wanted a direct dependency of spring-core... ","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1135|https://github.com/spring-projects/spring-ws/issues/1135]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,
"UsernameToken does not work, upgrade spring-ws-security dependencies",SWS-1066,84109,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,jpoikela,jpoikela,10/Apr/19 11:43 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.7,,,,,,,,Security,XML,,,,0,,,,,,,"I have SOAP client in a service built with spring-boot and spring-ws..

Client works without Wss4j but does not send anything with UsernameToken Wss4jSecurityInterceptor.

Seems to start sending message with soap-security with newer dependencies:
{code:java}
  <groupId>org.springframework.ws</groupId>
  <artifactId>spring-ws-security</artifactId>
  <version>${spring-ws.version}</version>
  <exclusions>
    <exclusion>
      <groupId>org.apache.wss4j</groupId>
      <artifactId>wss4j-ws-security-dom</artifactId>
    </exclusion>
    <exclusion>
      <groupId>org.apache.santuario</groupId>
      <artifactId>xmlsec</artifactId>
    </exclusion>
  </exclusions>
</dependency>

<dependency>
  <groupId>org.apache.wss4j</groupId>
  <artifactId>wss4j-ws-security-dom</artifactId>
  <version>2.2.3</version>
</dependency>

<dependency>
  <groupId>org.apache.santuario</groupId>
  <artifactId>xmlsec</artifactId>
  <version>2.1.3</version>
</dependency>
{code}","Ubuntu 18.04.2 LTS
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:30.027,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bs9r:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1132|https://github.com/spring-projects/spring-ws/issues/1132]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Endpoint specific Interceptors  Not Working properly,SWS-1064,84071,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,allenjoseph,allenjoseph,03/Apr/19 11:06 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,1,,,,,,,"Hello there,

We need to intercept two different Soap Requests and apply different XSLTs using PayloadTransformingInterceptor. We have tried registering the interceptor for 1 soap request like this 

 

@EnableWs
 @Configuration

public class ServiceConfig extends WsConfigurerAdapter

{

@Override

public void addInterceptors(List<EndpointInterceptor> interceptors)

{  

PayloadTransformingInterceptor transformInterceptor1 = new PayloadTransformingInterceptor();  

transformInterceptor1.setRequestXslt(new ClassPathResource(""Request.xslt""));

transformInterceptor1.setResponseXslt(new ClassPathResource(""Response.xslt"")); 

interceptors.add(new PayloadRootSmartSoapEndpointInterceptor(transformInterceptor1,ApplicationConstants.NAMESPACE_URI,ApplicationConstants.localPart));         }

...

}

 

However we see that , it is intercepting both the SOAP requests, although we have specified only for one namespace & localPart, while registering the interceptor.

 

We have tried this with SoapActionSmartEndpointInterceptor as well, but still see the same result.

Our namespace and locapart for the two SolveRequests are

Namespace Uri 1

[http://testwebservice.com/schemas/webservice/test/messages/authorisation|http://rbsinsurance.com/schemas/webservice/solve/messages/authorisation]

LocalPart 1

MSG_AUTHORISATION

Namespace Uri 2

[http://testwebservice.com/schemas/webservice/test/messages/complete]

LocalPart 2

MSG_COMPLETE

 

Would you please check & advise, why is this discrepancy? Is it a known issue?

 

 

 

 

 

 

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:29.499,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bs1b:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1130|https://github.com/spring-projects/spring-ws/issues/1130]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
String response is not returned with a valid JSON format,SWS-1062,83968,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,matiascanessa,matiascanessa,20/Mar/19 7:20 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.1.3,,,,,,,,,,,,,2,,,,,,,"Hello,

I upgraded to the last Spring version and found a problem. We have some request mappings that return a String or a ResponseEntity<String> and I found out that when returning this kind of response as a Content-type:'application/json' it doesn't return a valid Json format since it returns a literal without being wrapped in quotes.

In order to replicate this error, the request must come with the header accept:'application/json'

This results in a response with the header saying 'application/json' without it being a valid Json, causing problems with integrations with other services that expect a valid Json.

 

Debugging the code we found that  the class AbstractMessageConverterMethodProcessor iterates over a list of converters which has this order:


[org.springframework.http.converter.ByteArrayHttpMessageConverter, 
org.springframework.http.converter.StringHttpMessageConverter, 
org.springframework.http.converter.StringHttpMessageConverter, 
org.springframework.http.converter.ResourceHttpMessageConverter
, org.springframework.http.converter.ResourceRegionHttpMessageConverter, 
org.springframework.http.converter.xml.SourceHttpMessageConverter, 
org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,
 org.springframework.http.converter.json.MappingJackson2HttpMessageConverter, 
 org.springframework.http.converter.json.MappingJackson2HttpMessageConverter, 
 org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter]

And the StringHttpMessageConverter has between its supported media types, the MediaType.ALL. Meaning that if the class is a String and the content-type is 'application/json' the StringHttpMessageConverter will execute before it can reach the MappingJackson2HttpMessageConverter, resulting in an invalid Json format.

I tried this from scratch with the spring initializer with the spring-boot-starter-web dependency with 2.1.3.RELEASE version.

Example:
{code:java}
@RestController
public class DemoController {
    
    @GetMapping(value=""try"")
    public ResponseEntity<String> demo(){
        return ResponseEntity.ok(""This is a string"");
    }
}
{code}
 

curl -X GET http://localhost:8080/try -H 'accept: application/json'

Response:

Body:This is a string

Content-Type →application/json;charset=UTF-8

 

When it should be:

Body:""This is a string""

Content-Type →application/json;charset=UTF-8

 

thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:29.044,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bref:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1128|https://github.com/spring-projects/spring-ws/issues/1128]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
in memory user authorities() overrides roles(),SWS-1061,83934,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,vladpaln,vladpaln,15/Mar/19 1:42 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,Security,,,,,0,authorities(),roles(),,,,," 

SecurityConfiguration extends WebSecurityConfigurerAdapter

configure(AuthenticationManagerBuilder builder)

inMemoryAuthentication()

.roles(SOME_ROLE)

.authorities(ADDITIONAL_AUTHORITIES)

 

calling authorities() after adding roles using roles() will override the previously added roles

in org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer

each call to authorities() or roles() will override previously added authorities

 

BUG FIX:

each additional call should ADD to the previously added authorities",Spring Security,,,,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:28.812,9223372036854775807,true,gregturn(gregturn),,,,"0|i0br6v:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1127|https://github.com/spring-projects/spring-ws/issues/1127]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Error in sample project,SWS-1060,83901,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,,,afattahi,afattahi,12/Mar/19 6:16 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.7,,,,,,,,Samples,,,,,0,,,,,,,"The sample at [https://spring.io/guides/gs/producing-web-service/] is not working and I get this error:

 
{code:java}
 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'countries' defined in class path resource [hello/WebServiceConfig.class]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: javax/wsdl/factory/WSDLFactory
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:780) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at org.springframework.boot.SpringApplication.run(SpringApplication.java:333) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at org.springframework.boot.SpringApplication.run(SpringApplication.java:1277) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at org.springframework.boot.SpringApplication.run(SpringApplication.java:1265) [spring-boot-2.0.5.RELEASE.jar:2.0.5.RELEASE]
 at hello.Application.main(Application.java:10) [classes/:na]
Caused by: java.lang.NoClassDefFoundError: javax/wsdl/factory/WSDLFactory
 at org.springframework.ws.wsdl.wsdl11.ProviderBasedWsdl4jDefinition.afterPropertiesSet(ProviderBasedWsdl4jDefinition.java:226) ~[spring-ws-core-3.0.3.RELEASE.jar:na]
 at org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition.afterPropertiesSet(DefaultWsdl11Definition.java:183) ~[spring-ws-core-3.0.3.RELEASE.jar:na]
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695) ~[spring-beans-5.0.9.RELEASE.jar:5.0.9.RELEASE]
 ... 16 common frames omitted
Caused by: java.lang.ClassNotFoundException: javax.wsdl.factory.WSDLFactory
 at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_131]
 at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_131]
 at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335) ~[na:1.8.0_131]
 at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_131]
 ... 20 common frames omitted
{code}
 

 

It seems that the wsdl4j should be set to 1.6.2
{code:java}
<dependency>
 <groupId>wsdl4j</groupId>
 <artifactId>wsdl4j</artifactId>
 <version>1.6.2</version>
 </dependency>{code}","STS 3.9.3
JDK 1.8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:28.581,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bqzj:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1126|https://github.com/spring-projects/spring-ws/issues/1126]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
TransformerFactoryUtils @ Spring-ws-2.4.4  caused IllegalArgumentException during WebLogic startup with JDK 1.6,SWS-1059,83898,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,vetriselvanp@yahoo.com,vetriselvanp@yahoo.com,11/Mar/19 4:52 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.4,,,,,,,,,,,,,0,,,,,,,"We did recently upgrade our spring-ws version due to a security issue [cve-2019-3773|https://pivotal.io/security/cve-2019-3773]  to 2.4.4 afterwards have started seeing the below startup error for Weblogic 12.1.1/JDK 1.6 . 

And it looks like the patch introduced does not work with JDK 1.6 (i.e new properties is part of JAXP 1.5 and it is available only in JDK 1.7)  and no handling of IllegalArgumentException  which caused the startup error but as per the documentation Spring-ws 2.4.x is compatible with JDK 1.6.
{code:java}
Caused By: java.lang.IllegalArgumentException: TransformerFactory does not recognise attribute 'http://javax.xml.XMLConstants/property/accessExternalDTD'.
at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.setAttribute(TransformerFactoryImpl.java:370)
at weblogic.xml.jaxp.WebLogicTransformerFactory.setAttribute(WebLogicTransformerFactory.java:249)
{code}",,,,,,,,,,,,,SWS-1050,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2019-03-15 01:32:39.12,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bqyv:",9223372036854775807,9223372036854775807,https://github.com/spring-projects/spring-ws/commit/1f05307d61d525ed74a7d6d70a2a3b132948cdfc,,,,,,,"15/Mar/19 1:32 AM;gregturn;Have you tried 2.4.5.RELEASE?","15/Mar/19 1:35 AM;gregturn;Scratch that. https://jira.spring.io/browse/SWS-1050 was never backported to 2.x. It needs to happen.","15/Mar/19 1:47 PM;gregturn;Can you try out 2.4.6.BUILD-SNAPSHOT and see if it works for you? If so, we can work towards a release.","18/Mar/19 10:35 PM;vetriselvanp@yahoo.com;[~gregturn] Sure will try it out and update here. So that means the actual fix for  [cve-2019-3773|https://pivotal.io/security/cve-2019-3773]  will never work with JDK 1.6 ? .","18/Mar/19 11:21 PM;vetriselvanp@yahoo.com;[~gregturn] Yes it works. Thanks.","03/Jul/19 4:35 PM;chexpir;[~gregturn] is there a releae date for 2.4.6. I guess we are quite a few people with a blocked update while it does  not happen","22/Aug/19 6:07 PM;gregturn;2.4.6.RELEASE is out. Check it out.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1125|https://github.com/spring-projects/spring-ws/issues/1125]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,
TransformerFactoryUtils introduced in release 3.0.6 sets default properties that conflict with other TransformerFactory implementations,SWS-1054,83810,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,,,ggraat,ggraat,21/Feb/19 9:39 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.6,,,,,,,,,,,,,0,,,,,,,"We recently upgraded to Spring WS 3.0.6. In this release, a new class is introduced, {{TransformerFactoryUtils}} ([https://github.com/spring-projects/spring-ws/commit/1f05307d61d525ed74a7d6d70a2a3b132948cdfc]), which before instantiating a \{{TransformerFactory}} sets some defaults. 

The problem we have with this is that we do not use the default {{TransformerFactory}} implementation, but instead rely on the [Saxon-HE|http://saxon.sourceforge.net/#F9.9HE] library. When this {{TransformerFactory}} is instantiated, setting the defaults lead to an exception:

 
{code:java}
Caused by: java.lang.IllegalArgumentException: Unrecognized configuration feature: http://javax.xml.XMLConstants/property/accessExternalDTDCaused by: java.lang.IllegalArgumentException: Unrecognized configuration feature: http://javax.xml.XMLConstants/property/accessExternalDTD at deployment.runtime.war//net.sf.saxon.Configuration.setConfigurationProperty(Configuration.java:4408) at deployment.runtime.war//net.sf.saxon.jaxp.SaxonTransformerFactory.setAttribute(SaxonTransformerFactory.java:311) at deployment.runtime.war//org.springframework.xml.transform.TransformerFactoryUtils.defaultSettings(TransformerFactoryUtils.java:53) at deployment.runtime.war//org.springframework.xml.transform.TransformerFactoryUtils.newInstance(TransformerFactoryUtils.java:32)
{code}
This prevents our application from starting up.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:27.251,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bqfb:",9223372036854775807,9223372036854775807,,,,,,,,"21/Feb/19 9:46 AM;ggraat;Ok, I see this has already been reported and fixed in https://github.com/spring-projects/spring-ws/pull/129. When can we expect a 3.0.7 release?","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1120|https://github.com/spring-projects/spring-ws/issues/1120]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
TransformerFactoryUtils fails when property doesn't exist,SWS-1053,83770,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,shivharemanish,shivharemanish,13/Feb/19 11:56 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.4,,,,,,,,XML,,,,,0,,,,,,,"TransformerFactoryUtils fails when property doesn't exist.

This SWS-1050 issue is fixed([https://github.com/spring-projects/spring-ws/pull/129/files]) in 3.0.7 but not merged back to 2.4.4 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:27.009,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bq6f:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1119|https://github.com/spring-projects/spring-ws/issues/1119]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
CommonsXsdSchemaCollection not able to resolve relative paths on tomcat 8,SWS-1052,83709,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,,,codecracker2014,codecracker2014,30/Jan/19 5:46 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.3,,,,,,,,,,,,,0,,,,,,,"CommonsXsdSchemaCollection uses ClasspathUriResolver to resolve paths and this also supports relative paths. For example we have a relative path ../../common/CommonSchema.xsd 

As per below code relative path will be resolved:
{code:java}
Resource resource = resourceLoader.getResource(schemaLocation);
				if (resource.exists()) {
					return createInputSource(resource);
				}
				else if (StringUtils.hasLength(baseUri)) {
					// let's try and find it relative to the baseUri, see SWS-413
					try {
						Resource baseUriResource = new UrlResource(baseUri);
						resource = baseUriResource.createRelative(schemaLocation);
						if (resource.exists()) {
							return createInputSource(resource);
						}
					}
					catch (IOException e) {
						// fall through
					}
				}
{code}
Code seems to be fine but on tomcat 8 resource.exists() will throw IllegalArgumentException exception and relative path won't be resolved causing server start up fail as well. 

tomcat ../../common/CommonSchema.xsd considers this as access outside of container which should be forbidden and throws IllegalArgumentException. 

Refer below issue raised to tomcat where it is discussed why tomcat is throwing IllegalArgumentException instead of MalformedURLException: [https://bz.apache.org/bugzilla/show_bug.cgi?id=63104]

So ideally ClasspathUriResolver should the exception and try to resolve relative path.",,,,,,,,,,,,,,,,,,,,,,,,"30/Jan/19 5:47 AM;codecracker2014;spring-ws-tomcat-log.txt;https://jira.spring.io/secure/attachment/26178/spring-ws-tomcat-log.txt",,,,,,,,,,,,,24969600,,2020-09-23 16:48:26.757,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bpsv:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1118|https://github.com/spring-projects/spring-ws/issues/1118]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
TransformerFactoryUtils fails when property doesn't exist,SWS-1050,83637,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,11/Jan/19 6:12 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,15/Mar/19 6:58 PM,2.4.4,2.4.5,3.0.6,,,,2.4.6,3.0.7,XML,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/129,"0|i0bpcv:",9223372036854775807,9223372036854775807,https://github.com/spring-projects/spring-ws/pull/128,,,,,,,"15/Mar/19 1:36 AM;gregturn;Needs to be backported to 2.x","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1116|https://github.com/spring-projects/spring-ws/issues/1116]. ",,,,,,,,,,,,,,,,
"<![CDATA[test]]> be converted to &lt;![CDATA[test]]&gt in endpoint response",SWS-1046,83278,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,haha,haha,06/Dec/18 9:03 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,1,,,,,,,"{code:java}
// code placeholder
@Endpoint
public class TestEndPoint{
@PayloadRoot(namespace = ""namespace"", localPart = ""localPart"")
@ResponsePayload
public TestResponse test(@RequestPayload TestRequest) {
  TestResponse testResponse = new TestResponse(""<![CDATA[test]]>"");
  return testResponse;
}

why output &lt;![CDATA[test]]&gt, or how can I specify some field as CDATA in TestResponse {code}
 

thanks! ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:25.344,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bn5b:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1112|https://github.com/spring-projects/spring-ws/issues/1112]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
JAXB doesnt create the XsdSchemaCollection bean using DefaultWsdl11Definition correctly,SWS-1041,82657,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,Nichar,Nichar,06/Oct/18 8:04 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.0.5,,,,,,,,OXM,XML,,,,0,java8,jaxb2,soap,spring,spring-boot,,"Hi,

I have two schemas in {{src/main/resources}} with the same namespace {{www.mycompany.com}}. *schemaA.xsd* and *schemaB.xsd* have the same header:
{code:java}
<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema""
   xmlns:tns=""http://www.mycompany.com"" 
   targetNamespace=""http://www.mycompany.com"" 
   elementFormDefault=""qualified"">{code}
{{My WebServiceConfiguration}}{{ extending }}{{WsConfigurerAdapter}}{{ defines aside the }}{{ServletRegistrationBean}}{{ also the following }}{{XsdSchema(Collection)}}{{ beans:}}
{code:java}
// Just a bean with one schema
@Bean
public XsdSchema schema() {
    return new SimpleXsdSchema(new ClassPathResource(""xsd/schemaA.xsd""));
}

// A bean with both schemas
@Bean
public XsdSchemaCollection schemaCollection() {
    return new XsdSchemaCollection() {

        @Override
        public XsdSchema[] getXsdSchemas() {
            return new XsdSchema[] {
                new SimpleXsdSchema(new ClassPathResource(""xsd/schemaA.xsd"")),
                new SimpleXsdSchema(new ClassPathResource(""xsd/schemaB.xsd""))
            };
        }

        @Override
        public XmlValidator createValidator() {
            throw new UnsupportedOperationException();
        }
    };
}
{code}
And the WSDL bean:
{code:java}
@Bean(name = ""soapWsdl"")
public DefaultWsdl11Definition defaultWsdl11Definition(XsdSchema schema, XsdSchemaCollection schemaCollection) {
    DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition(); 
    wsdl11Definition.setPortTypeName(""SoapPort""); 
    wsdl11Definition.setLocationUri(""/service/soap""); 
    wsdl11Definition.setTargetNamespace(""https://www.mycompany.com"");
    // At this point I use just one of the folliwing:
    wsdl11Definition.setSchema(schema);
    wsdl11Definition.setSchemaCollection(schemaCollection);
    return wsdl11Definitionl;
}
{code}
Using one of these in the bean above:
 * {{wsdl11Definition.setSchema(schema);}}

If I use only {{XsdSchema}} defining one schema (regardless whether schemaA or schemaB), everything works, the SOAP Web service is running and WSDL is generated
 * {{wsdl11Definition.setSchemaCollection(schemaCollection);}}

Now the NPE is thrown although the [{{InliningXsdSchemaTypesProvider}}|https://github.com/spring-projects/spring-ws/blob/master/spring-ws-core/src/main/java/org/springframework/ws/wsdl/wsdl11/provider/InliningXsdSchemaTypesProvider.java] sets the one schema as the collection with one schema. The error thrown is:
{quote}2018-10-05 21:29:28.636 WARN 164968 — [ main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'soapWsdl' defined in class path resource [cz/vse/soap/WebServiceConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition]: Factory method 'defaultWsdl11Definition' threw exception; nested exception is java.lang.NullPointerException

{color:#333333}...{color}
{quote}
{quote}Caused by: java.lang.NullPointerException: null at org.springframework.xml.xsd.SimpleXsdSchema.getTargetNamespace(SimpleXsdSchema.java:94) ~[spring-xml-3.0.3.RELEASE.jar!/:na] at com.mycompany.WebServiceConfig.defaultWsdl11Definition(WebServiceConfig.java:66) ~[classes!/:0.0.1]
{quote}
I make the things work with calling the {{SimpleXsdSchema::afterPropertiesSet}} which is not somehow called upon the bean instantiation. Hard to say what happens. However, editing the method like this makes the schemas work together:
{code:java}
@Override
public XsdSchema[] getXsdSchemas() {
    SimpleXsdSchema[] schemaArray = new SimpleXsdSchema[] {
        new SimpleXsdSchema(new ClassPathResource(""xsd/schemaA.xsd"")),
        new SimpleXsdSchema(new ClassPathResource(""xsd/schemaB.xsd""))
    };
    for (SimpleXsdSchema schema : schemaArray) {
        try { 
            schema.afterPropertiesSet();
        } catch (ParserConfigurationException | IOException | SAXException e) { 
            /* ...*/
        }
    }

    return schemaArray;
}
{code}
Why passing the {{XsdSchema}} and {{XsdSchemaCollection}} doesn't behave equally even they are supposed to do according to [{{DefaultWsdl11Definition}}|https://docs.spring.io/spring-ws/site/apidocs/org/springframework/ws/wsdl/wsdl11/DefaultWsdl11Definition.html]? I expect it should work even without calling the {{schema.afterPropertiesSet().}}","Windows 10, Java 1.8.0_172",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:24.424,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bjbj:",9223372036854775807,9223372036854775807,https://stackoverflow.com/questions/52672270/jaxb-difference-between-xsdschema-and-xsdschemacollection-while-creating-the-def,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1108|https://github.com/spring-projects/spring-ws/issues/1108]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
SimpleXsdSchema not initialized property produces NullPointerException,SWS-1036,82447,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,esfomeado,esfomeado,11/Sep/18 3:24 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,11/Sep/18 10:22 PM,3.0.3,,,,,,2.4.3,3.0.4,XML,,,,,0,,,,,,,"When creating a SimpleXsdSchema i got an NullPointerException.

 
@Bean
public DefaultWsdl11Definition defaultWsdl11Definition() throws Exception {
    SimpleXsdSchema userschema = new SimpleXsdSchema();

   ...
}

{{Method threw 'java.lang.NullPointerException' exception. Cannot evaluate org.springframework.xml.xsd.SimpleXsdSchema.toString()}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-09-11 22:13:42.58,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/116,"0|i0bi0v:",9223372036854775807,9223372036854775807,https://github.com/spring-projects/spring-boot/issues/14410,,,,,,,"11/Sep/18 10:13 PM;gregturn;Added a more meaningful error message.

Backported to 2.x branch.","12/Sep/18 8:42 AM;esfomeado;This really doesn't solve the problem since I have registered as a Spring bean and the problem still occurs.","12/Sep/18 2:24 PM;gregturn;Last fragment of code I showed you simply executing toString against a newly minted instance of SimpleXsdSchema. If you have made changes, please show me so we can deduce where the problem arises from.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1105|https://github.com/spring-projects/spring-ws/issues/1105]. ",,,,,,,,,,,,,,
wsa:to element is not optional,SWS-1031,82030,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,leaqui,leaqui,09/Aug/18 7:23 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.2,3.0.3,,,,,,,Core,,,,,0,,,,,,,"The [WS-Addressing 1.0 W3C Recomendation|https://www.w3.org/TR/ws-addr-core/#msgaddrpropsinfoset] says the `wsa:to` property is optional:

{panel:title=/wsa:To}
This OPTIONAL element (whose content is of type xs:anyURI) provides the value for the [destination] property. If this element is NOT present then the value of the [destination] property is ""http://www.w3.org/2005/08/addressing/anonymous"".
{panel}

But [org.springframework.ws.soap.addressing.client.ActionCallback.getTo()|https://github.com/spring-projects/spring-ws/blob/master/spring-ws-core/src/main/java/org/springframework/ws/soap/addressing/client/ActionCallback.java#L218] initializes the wsa:to property.

And even then, at [AbstractAddressingVersion.addAddressingHeaders()|https://github.com/spring-projects/spring-ws/blob/3b82d4e01246fa7976866a6462e2d1f684fdd613/spring-ws-core/src/main/java/org/springframework/ws/soap/addressing/version/AbstractAddressingVersion.java#L196], sets mustUnderstand = true to element.

So resulting message is:

{code:xml}
<SOAP-ENV:Header xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
    <wsa:To SOAP-ENV:mustUnderstand=""1"">https://example.com/ws/bla</wsa:To>
    ...
</SOAP-ENV:Header>
{code}

The wsa:to property must be optional and if set, it would be nice to have the chance to configure the mustUderestand attribute value.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-09-12 16:27:48.295,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/115,"0|i0bg1z:",9223372036854775807,9223372036854775807,https://stackoverflow.com/questions/51538667/spring-ws-wsato-element-is-not-optional,,,,,,,"12/Sep/18 4:27 PM;gregturn;Digging through https://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/, that document states wsa:To is a REQUIRED attribute.","13/Sep/18 4:42 PM;gregturn;So a little more digging on my end, it appears there are TWO specs governing WS Addressing. And they conflict with each other.

* https://www.w3.org/TR/ws-addr-core/#msgaddrpropsinfoset - wsa:To is OPTIONAL
* https://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/ - wsa:To is REQUIRED

Both of these specs have a DIFFERENT wsa namespaces, correspondingly:

* xmlns:wsa=""http://www.w3.org/2005/08/addressing""
* xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing

This is why Spring Web Services has:

* org.springframework.ws.soap.addressing.version.Addressing10
* org.springframework.ws.soap.addressing.version.Addressing200408

These two different concrete instances of AbstractAddressingVersion target each of these specs, allowing users to pick which spec they wish to follow.

If there is a gap in what's provided and what's needed, by all means let's dive in and solve it. But the provided pull requests is inadequate to tackle it. We would need test cases for both specs, showing with and without the ""to"" attribute supplied, ensuring the framework acts correctly.","24/Sep/18 10:09 PM;leaqui;You are right Greg.
I have just committed some changes and tests.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1100|https://github.com/spring-projects/spring-ws/issues/1100]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,
Tune Java 10 dependencies,SWS-1029,81869,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,gregturn,gregturn,26/Jul/18 1:29 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,26/Jul/18 4:24 PM,3.0.2,,,,,,3.0.3,,,,,,,0,,,,,,,"According to Stephane Nicoll, the new Java 10 profile is breaking Spring Boot's build.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bf27:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1098|https://github.com/spring-projects/spring-ws/issues/1098]. ",,,,,,,,,,,,,,,,,
Java10 profile is leaking on external projects,SWS-1028,81867,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,,snicoll,snicoll,26/Jul/18 12:42 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,03/Aug/18 3:05 AM,3.0.2,,,,,,,,Core,,,,,0,,,,,,,"3.0.2 has added a {{java10}} profile that's enabled automatically when Java10 is available and adds the JaxWS RI to the classpath.

This is leaking when Spring WS is added as a dependency and adds those dependencies to the project as well. This broke the Spring Boot build as we're checking dependency convergence.

Perhaps the surefire plugin should be configured to add the required module instead? It would be nice to get a 3.0.3 release without that profile.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-08-03 01:02:05.182,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bf1r:",9223372036854775807,9223372036854775807,,,,,,,,"03/Aug/18 1:02 AM;izeye;This looks duplicated by https://jira.spring.io/browse/SWS-1029 which has been resolved already.","03/Aug/18 3:05 AM;snicoll;Indeed, thanks Johnny","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1048|https://github.com/spring-projects/spring-ws/issues/1048]. ",,,,,,,,,,,,,,,
Fix log-based issues,SWS-1027,81840,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,25/Jul/18 7:57 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,25/Jul/18 8:04 PM,3.0.1,,,,,,3.0.2,,,,,,,0,,,,,,,Spring has migrated off of Log4j and Commons Logging. It's time Spring WS did as well.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i0bevr:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1097|https://github.com/spring-projects/spring-ws/issues/1097]. ",,,,,,,,,,,,,,,,,
RequestCreators withSoapEnvelope can not found endpoint,SWS-1019,81086,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Duplicate,,hudi,hudi,10/May/18 2:39 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,13/Sep/18 5:27 PM,3.0.0.RELEASE,,,,,,,,Test,,,,,5,Spring,,,,,,"I continue with my project with testing aop and make some basic tests. I find that with version 3.0.0+ RequestCreators.withSoapEnvelope can not find endpoint because of different implementation of SaajSoapMessage. In version 3.0.0+ envelop is already set up because of method getVersion in constructor. And RequestCreators is trying to change document after envelop in SaajSoapMessage si already initialized. I made my custom withEnhancedSoapEnvelope and add just one line to reinitialized envelop after document from test is set and test is now OK:

soapMessage.setDocument((Document) result.getNode());
 // TODO magic line here 
 soapMessage.setSaajMessage(soapMessage.getSaajMessage());

 

All online in my github:

[https://github.com/hudi1/aop-test/blob/master/src/test/java/org/example/CountryEndpointTest.java]",,,,,3600,3600,,0%,3600,3600,,,,,,SWS-1018,,,,,,,,,,,,,,,,,,,,,24969600,,2018-06-05 21:20:57.243,9223372036854775807,true,gregturn(gregturn),,,,"0|i0ba9b:",9223372036854775807,9223372036854775807,https://github.com/hudi1/aop-test,,,,,,,"05/Jun/18 9:20 PM;pnkaj.agrwal@gmail.com;Yes, I face same issue. It works when using withPayload instead of soapEnvelope","11/Jun/18 12:38 PM;fletchgqc;I face a parallel issue (envelop is already set up because of method getVersion in constructor) when trying to mock backend responses using:

{{webServiceServer = MockWebServiceServer.createServer(webServiceTemplate);}}

{{webServiceServer.expect(matcher).andRespond(ResponseCreators.withSoapEnvelope(...));}}

This causes the mocking to fail as inside MarshallingUtils.unmarshal, the call message.getPayloadSource() returns null.

If anyone knows a workaround for this case please let me know, for now I'll have to revert to 2.4.","21/Jun/18 12:01 PM;jaminh;I included a proposal for a long-term fix to this issue on SWS-1018 if anyone wants to try that. Code is at https://github.com/jaminh/spring-ws/tree/SWS-1018.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1089|https://github.com/spring-projects/spring-ws/issues/1089]. ",,,,,,,,,,,,,,
SaajSoapMessage created with default (empty) SoapEnvelope,SWS-1018,81079,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,slad,slad,09/May/18 11:26 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,13/Sep/18 5:26 PM,3.0.1,,,,,,2.4.3,3.0.4,Core,,,,,1,,,,,,,"It seems like with the fix for SWS-981 check for SOAP 1.1 was added. This results in setting default/empty SoapEnvelope for SaajSoapMessage.

 
{code:java}
public SaajSoapMessage(SOAPMessage soapMessage, boolean langAttributeOnSoap11FaultString, MessageFactory messageFactory) {
   Assert.notNull(soapMessage, ""soapMessage must not be null"");
   saajMessage = soapMessage;
   this.langAttributeOnSoap11FaultString = langAttributeOnSoap11FaultString;
   this.messageFactory = messageFactory;
   if (SoapVersion.SOAP_11.equals(getVersion())) {
      MimeHeaders headers = soapMessage.getMimeHeaders();
      if (ObjectUtils.isEmpty(headers.getHeader(TransportConstants.HEADER_SOAP_ACTION))) {
         headers.addHeader(TransportConstants.HEADER_SOAP_ACTION, ""\""\"""");
      }
   }
}
{code}
 Invoking getVersion() results in introspection for SoapEnvelope. This constructor is invoked as part of createMessage() method which sets the soapMessage in doWithMessage() method after the SaajSoapMessage is initialized.

 
{code:java}
@Override
public final WebServiceMessage createMessage(WebServiceMessageFactory messageFactory) throws IOException {
   WebServiceMessage message = messageFactory.createWebServiceMessage();
   doWithMessage(message);
   return message;
}
{code}
We started to see our integration tests failing with this upgrade.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-05-14 07:21:06.179,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/119,"0|i0ba7r:",9223372036854775807,9223372036854775807,,,,,,,,"14/May/18 7:21 AM;hudi;lol. I create very similar bug right after yours. Check how you can temporary fix it: https://jira.spring.io/browse/SWS-1019","21/Jun/18 11:58 AM;jaminh;I tried addressing this issue by moving the addition of the empty SoapAction for SOAP 1.1 messages to the postProcess method of the SaajSoapMessageFactory. This eliminates the need to look at the envelope to figure out the version since we can just look at the messageFactoryProtocol of the factory. If you want you can try running against [https://github.com/jaminh/spring-ws/tree/SWS-1018] to see if that fixes the issue for you.","13/Sep/18 5:30 PM;gregturn;Empty envelope initialization moved to SaajSoapMessageFactory based on [~jaminh]'s work and backported to 2.x.

Thanks!","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1088|https://github.com/spring-projects/spring-ws/issues/1088]. ",,,,,,,,,,,,,,
MockWebServiceClient using withSoapEnvelope does not find SoapOperation when migrating from 2.4.2 to 3.0.1,SWS-1017,80991,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,markush81,markush81,03/May/18 12:04 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.1,,,,,,,,Core,,,,,1,,,,,,,"spring-ws-soap-header/src/test/java/com/codenotfound/ws/endpoint/TicketAgentEndpointTest.java

[https://github.com/code-not-found/spring-ws/tree/master/spring-ws-soap-header] does not work anymore when switching from SpringBoot 1.5.9 to 2.0.1 ... i tracked it down to spring-ws-core issue 2.4.2 -> 3.0.1. (issue starts with 3.0.0 already).
{code:java}
org.springframework.ws.NoEndpointFoundException: No endpoint can be found for request [SaajSoapMessage {http://example.org/TicketAgent.xsd}listFlightsRequest] {code}
 

I was not able to find any hints about needed changes, so i assume it to be a bug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-05-04 06:37:20.179,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b9o7:",9223372036854775807,9223372036854775807,https://github.com/code-not-found/spring-ws/tree/master/spring-ws-soap-header,,,,,,,"04/May/18 6:37 AM;jakub.nieznalski;same here","14/May/18 7:24 AM;hudi;lol same here. I create very similar bug right after yours. Check how you can temporary fix it: https://jira.spring.io/browse/SWS-1019","05/Jun/18 9:54 PM;pnkaj.agrwal@gmail.com;Its a duplicate of https://jira.spring.io/browse/SWS-1019. See a workaround in the issue","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1087|https://github.com/spring-projects/spring-ws/issues/1087]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,
@Endpoint with primitive data types - No adapter for endpoint,SWS-1016,80721,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,PhoenixNeo,PhoenixNeo,17/Apr/18 11:58 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,3.0.0.RELEASE,,,,,,,,Core,,,,,1,cxf,gradle,spring-ws,wsdl2java,,,"Hi, i am trying to provide a SOAP endpoint over a spring boot application with the @Endpoint-annotation. My Response which I want consists of just a simple boolean:

*Request:*
{code:xml}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Header/>
   <soap:Body>
      <ns:isActiveRequest xmlns:ns=\""http://problem.com\""><id>1234</id></ns:isActiveRequest>
   </soap:Body>
</soap:Envelope>
{code}

*desired Response:*
{code:xml}
<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soap:Header/>
   <soap:Body>
      <ns:isActiveResponse xmlns:ns=""http://problem.com"">true</ns3:isActiveResponse>
   </soap:Body>
</soap:Envelope>
{code}

The java classes i use in my spring boot application are generated by CXF WSDL2Java. From there i get an interface which gives me the return value boolean.

The problem is that @Endpoint is not able to detect my SOAP endpoint for my ""isActiveRequest"".
[https://github.com/PhoenixNeoCode/problem-app/blob/master/src/main/java/com/problem/endpoint/SoapEndpoint.java]
I dont know how to define it in my WSDL that @Endpoint is able to detect my simple soap operation.
[https://github.com/PhoenixNeoCode/problem-app/blob/master/src/main/resources/wsdl/Problem.wsdl]

Usually i have no problems with CXF and Endpoint with complex response types, because it generates an @XmlRootElement. But it wont do that with a primitive type in the response and is not able to recognize my method under the @Endpoint-Annotation.

I have provided two unittests in my github project to show the problem in detail. One is Ignored so you can ""gradle build"" it. The other one ""readSomethingSoap"" which  works is for comparison with a complex return value which gives a @XmlRootElement.
[https://github.com/PhoenixNeoCode/problem-app/blob/master/src/test/java/com/problem/endpoint/SoapEndpointTests.java]

The spring-ws version i used in the sample project is a bit older but i also tried  it with the newest and it still was not working.

My related stackoverflow issue: 
[https://stackoverflow.com/questions/49796784/endpoint-with-primitive-data-types-no-adapter-for-endpoint]

My sample GitHub Project:
[https://github.com/PhoenixNeoCode/problem-app]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:18.66,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b8mf:",9223372036854775807,9223372036854775807,https://github.com/PhoenixNeoCode/problem-app,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1086|https://github.com/spring-projects/spring-ws/issues/1086]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Documentation links are either broken or link to outdated versions,SWS-1015,79930,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,,kewne,kewne,21/Feb/18 3:27 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,13/Sep/18 5:46 PM,,,,,,,,,Documentation,,,,,0,,,,,,,"The link to the reference documentation from github (https://github.com/spring-projects/spring-ws/blob/db4d7cb6b018f4971f524ed2e57586ae8d10568b/README.adoc is master at the time of writing) 404's.

The reference manual link on the project page (https://projects.spring.io/spring-ws/), which oddly links to the tutorial part, points to the 2.2.0.RELEASE version.",,,,,,,,,,,,,,,,SWS-1038,,,,,,,,,,,,,,,,,,,,,24969600,,2018-09-13 17:46:25.227,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b4bb:",9223372036854775807,9223372036854775807,,,,,,,,"13/Sep/18 5:46 PM;gregturn;Check out the upgraded README.adoc.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1085|https://github.com/spring-projects/spring-ws/issues/1085]. ",,,,,,,,,,,,,,,,
"Get ""Header Folding"" error when setting a long soap action (SOAP 1.2)",SWS-1013,79878,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,hoogenbj,hoogenbj,16/Feb/18 11:22 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,,,,,,0,,,,,,,"Hi, we frequently call SAP's SOAP web services and having SOAP actions in wsdls that are longer than 76 characters is not unusual. Example: http://sap.com/xi/FS-SPIM/Global/StandingPaymentInstructionProcessingManageStandingPaymentInstructionIn/CreateStandingPaymentInstructionRequest is a valid SOAP action for SAP Banking Services - for creating a Standing Order. When I use the SoapActionCallback to set the SOAP action, I get org.springframework.ws.client.WebServiceTransportException: Header Folding [400], at org.springframework.ws.client.core.WebServiceTemplate.handleError(WebServiceTemplate.java:699).
I'm guessing it is because Spring WS doesn't like it when the toString() method com.sun.xml.internal.messaging.saaj.packaging.mime.internet.ParameterList decides to insert \r\n\t every 76 characters. Steps to reproduce: use WebServiceTemplate to call a SOAP 1.2 service and try to set a long SOAP action - longer than 76 characters.","Java 1.8_152, Spring Boot 1.5.8, Linux Mint 17.2, SOAP 1.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-09-13 17:55:08.551,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b3zr:",9223372036854775807,9223372036854775807,,,,,,,,"13/Sep/18 5:55 PM;gregturn;I did read the code for com.sun.xml.internal.messaging.saaj.packaging.mime.internet.ParameterList, and can clearly see that ""if len > 76"" clause.

I visited the link and it no longer works. Are you able to supply some XML that could be used in a unit test instead of trying to remotely invoke a service that may/may not be there?","12/Feb/19 10:45 AM;vingoe;Hey [~gregturn]

We are facing the similar problem when a header lenght is more than the certain length.
h5. Our use case
 * Using java11, org.springframework.ws:spring-ws-security:3.0.4.RELEASE, com.sun.xml.messaging.saaj:saaj-impl:1.5.0
 * We are using WebServiceTemplate as a client to request the soap service.
 * The soap service version is 1.2 which means soap action is the part of header content-type
 * When the soap action has value is _http://www.myowndomainiscustom.se/FTB/getlistitem_[,|http://www.myowndomainiscustom.se/FTB/getlistitem] the content-type header has value (observer value has no line break)
 ** Content-Type: application/soap+xml; charset=utf-8;action=http://www.myowndomainiscustom.se/FTB/getlistitem
 * When the soap action has value is _http://www.myowndomainiscustom.se/FTBKPSU/12/getlistitem_[,|http://www.myowndomainiscustom.se/FTB/getlistitem,] the content-type header has value (observer value has a line break)
 ** Content-Type: application/soap+xml; charset=utf-8;
action=[http://www.myowndomainiscustom.se/FTBKPSU/12/getlistitem]

 
h5. {color:#333333}Investigation results{color}
 * {color:#333333}The problem lies with content-type header value contains whitespace{color}
 * {color:#333333}According to rfc7230, header value shouldn't contain any whitespace. Please refer to [https://tools.ietf.org/html/rfc7230#section-3.2.4]{color}
{quote}{color:#333333}Historically, HTTP header field values could be extended over
 multiple lines by preceding each extra line with at least one space
 or horizontal tab (obs-fold). This specification deprecates such
 line folding except within the message/http media type
 (Section 8.3.1). A sender MUST NOT generate a message that includes
 line folding (i.e., that has any field-value that contains a match to
 the obs-fold rule) unless the message is intended for packaging
 within the message/http media type.{color}{quote}
 * {color:#333333}Jetty server has implementation that it rejects requests which has header value containing whitespace. Please refer to [https://bugs.eclipse.org/bugs/show_bug.cgi?id=483795]{color}

 

{color:#333333}I don't have an open webservice that you can make a call to but you can sure use wiremock without a need to implement of soap service.{color}

Please use com.github.tomakehurst:wiremock-jre8-standalone:2.21.0 which uses the jetty server.

 

 ","12/Feb/19 11:13 AM;vingoe;Here is this another link onjetty portal where a user raised the same issue

[https://bugs.eclipse.org/bugs/show_bug.cgi?id=444222]

 ","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1083|https://github.com/spring-projects/spring-ws/issues/1083]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,
Date validation through XSD,SWS-1011,79655,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,,,raja032,raja032,26/Jan/18 7:02 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,XML,,,,,0,Spring,,,,,,"we are developing REST web services,as part of this we are validating each XSD field.

We have Date field in the XSD and Date format is ""yyyy-mm-dd hh:mm:ss"" and using DateAdapter and XMLFormatDateTimeAdapter to convert the XSD to domain object(i.e DTO obkects).

But the problem here is when we are passing the date format other than above mentioned the dateadapet is consider it as null.finally null value is storing in date field.

but the expected scenario is if we pass other format of date the adapter class needs to throgh the error.

please suggest me what would be solution to resolve this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:17.381,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b2mf:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1081|https://github.com/spring-projects/spring-ws/issues/1081]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
" config.enableSimpleBroker(""/topic"", ""/queue""); Should be  config.enableSimpleBroker(""/topic"", ""queue"");",SWS-1009,79262,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,,Aray,Aray,07/Dec/17 7:55 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,07/Dec/17 4:02 PM,3.0.0.RELEASE,,,,,,,,Documentation,,,,,0,,,,,,,"*Sorry, I submit to the wrong project, I resubmit this issue to : https://jira.spring.io/browse/SPR-16275  please close this, thanks.*

Hello, there is a error in WebSocket document,  https://docs.spring.io/spring/docs/4.3.x/spring-framework-reference/html/websocket.html
the Doc says: I shoud config Borker as :
*config.enableSimpleBroker(""/topic"", ""/queue"");*

but if I conifg as above, the following code won't work:
*template.convertAndSendToUser(""Aray"",""/queue/trade"",new Greeting(""hhhh""));*

The working config should be : 
*config.enableSimpleBroker(""/topic"", ""queue"");* (it is ""queue"" NOT ""/queue"")

I debuged and found this:  the message send by template.convertAndSendToUser, its destination will finnally be changed into a string like this: ""queue/trade-users4pkn4bg"", it doesn't start with ""/queue"". 
and the method org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler#checkDestinationPrefix will return *false *if we config ""/queue"" as the Doc says.

I am not sure, we should change the Doc or change the Java Codes.

thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:16.9,9223372036854775807,true,gregturn(gregturn),,,,"0|i0b073:",9223372036854775807,9223372036854775807,https://docs.spring.io/spring/docs/4.3.x/spring-framework-reference/html/websocket.html,,,,,,,"07/Dec/17 8:05 AM;Aray;I didn't find the project of WebSocket, I am not sure it is correct or not to choose ""Spring Web Services"" as project.  and I use  org.springframework.boot:spring-boot-starter-websocket:1.5.9.RELEASE to start my test codes","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1079|https://github.com/spring-projects/spring-ws/issues/1079]. ",,,,,,,,,,,,,,,,
Use correct default content type for SOAP 1.2 with Axiom,SWS-1005,78803,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,25/Oct/17 1:35 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,25/Oct/17 1:36 AM,3.0.0.RC1,,,,,,3.0.0.RELEASE,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i0axfr:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1075|https://github.com/spring-projects/spring-ws/issues/1075]. ",,,,,,,,,,,,,,,,,
2.4.1 uses a new minor version of WSS4J,SWS-1001,78791,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,awilkinson,awilkinson,24/Oct/17 10:18 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,24/Oct/17 3:03 PM,2.4.1,,,,,,2.4.2,,Security,,,,,0,,,,,,,"2.4.0.RELEASE used WSS4J 2.1.4, but 2.4.1 has jumped to 2.2. Generally speaking, a minor upgrade to a dependency in a maintenance release should be avoided. IMO, 2.4.2 should revert to 2.1.x.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-10-24 15:04:17.766,9223372036854775807,true,gregturn(gregturn),,,,"0|i0axd3:",9223372036854775807,9223372036854775807,,,,,,,,"24/Oct/17 3:04 PM;gregturn;Rolled back 2.x branch's wss4j2 to 2.1.11, the latest version of the 2.1 branch.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1071|https://github.com/spring-projects/spring-ws/issues/1071]. ",,,,,,,,,,,,,,,,
java.util.Hashtable limits the throughput of org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive,SWS-1000,78776,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Works as Designed,,sasidharsmit,sasidharsmit,23/Oct/17 9:17 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,07/Nov/17 4:01 PM,,,,,,,,,Core,,,,,0,marshalling,,,,,,"org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive uses java.util.Hashtable.get(Object) implementation to the get url stream handler for marshaling. 

This HashTable implementation is known to be quite poor in terms of performance in a highly concurrent environment. Latency/throughput of the implementing application can be found below. 

[^E2ELatency.png]

I'm attaching the JFR stack trace of the related calls, showing contention. This increases as the concurrency increases.

[^Contention.png]


{code:java}
""Stack Trace"";""Count"";""Duration""
""java.util.Hashtable.get(Object)"";""1,903"";""11,916,392,176""
""   java.net.URL.getURLStreamHandler(String)"";""1,903"";""11,916,392,176""
""      java.net.URL.<init>(URL, String, URLStreamHandler)"";""1,903"";""11,916,392,176""
""         java.net.URL.<init>(URL, String)"";""1,903"";""11,916,392,176""
""            java.net.URL.<init>(String)"";""1,903"";""11,916,392,176""
""               java.net.JarURLConnection.parseSpecs(URL)"";""1,903"";""11,916,392,176""
""                  java.net.JarURLConnection.<init>(URL)"";""1,903"";""11,916,392,176""
""                     org.springframework.boot.loader.jar.JarURLConnection.<init>(URL, JarFile, JarURLConnection$JarEntryName)"";""1,903"";""11,916,392,176""
""                        org.springframework.boot.loader.jar.JarURLConnection.get(URL, JarFile)"";""1,903"";""11,916,392,176""
""                           org.springframework.boot.loader.jar.Handler.openConnection(URL)"";""1,903"";""11,916,392,176""
""                              java.net.URL.openConnection()"";""1,903"";""11,916,392,176""
""                                 sun.misc.URLClassPath$Loader.findResource(String, boolean)"";""1,903"";""11,916,392,176""
""                                    sun.misc.URLClassPath$1.next()"";""1,903"";""11,916,392,176""
""                                       sun.misc.URLClassPath$1.hasMoreElements()"";""1,903"";""11,916,392,176""
""                                          java.net.URLClassLoader$3$1.run()"";""1,903"";""11,916,392,176""
""                                             java.net.URLClassLoader$3$1.run()"";""1,903"";""11,916,392,176""
""                                                java.security.AccessController.doPrivileged(PrivilegedAction, AccessControlContext)"";""1,903"";""11,916,392,176""
""                                                   java.net.URLClassLoader$3.next()"";""1,903"";""11,916,392,176""
""                                                      java.net.URLClassLoader$3.hasMoreElements()"";""1,903"";""11,916,392,176""
""                                                         sun.misc.CompoundEnumeration.next()"";""1,903"";""11,916,392,176""
""                                                            sun.misc.CompoundEnumeration.hasMoreElements()"";""1,903"";""11,916,392,176""
""                                                               sun.misc.CompoundEnumeration.next()"";""1,903"";""11,916,392,176""
""                                                                  sun.misc.CompoundEnumeration.hasMoreElements()"";""1,903"";""11,916,392,176""
""                                                                     java.util.ServiceLoader$LazyIterator.hasNextService()"";""1,903"";""11,916,392,176""
""                                                                        java.util.ServiceLoader$LazyIterator.hasNext()"";""1,903"";""11,916,392,176""
""                                                                           java.util.ServiceLoader$1.hasNext()"";""1,903"";""11,916,392,176""
""                                                                              javax.xml.transform.FactoryFinder$1.run()"";""1,795"";""11,303,335,460""
""                                                                                 java.security.AccessController.doPrivileged(PrivilegedAction)"";""1,795"";""11,303,335,460""
""                                                                                    javax.xml.transform.FactoryFinder.findServiceProvider(Class)"";""1,795"";""11,303,335,460""
""                                                                                       javax.xml.transform.FactoryFinder.find(Class, String)"";""1,795"";""11,303,335,460""
""                                                                                          javax.xml.transform.TransformerFactory.newInstance()"";""1,795"";""11,303,335,460""
""                                                                                             com.sun.xml.internal.messaging.saaj.util.transform.EfficientStreamingTransformer.<init>()"";""1,795"";""11,303,335,460""
""                                                                                                com.sun.xml.internal.messaging.saaj.util.transform.EfficientStreamingTransformer.newTransformer()"";""1,795"";""11,303,335,460""
""                                                                                                   com.sun.xml.internal.messaging.saaj.soap.impl.EnvelopeImpl.output(OutputStream)"";""1,701"";""10,734,490,000""
""                                                                                                      com.sun.xml.internal.messaging.saaj.soap.impl.EnvelopeImpl.output(OutputStream, boolean)"";""1,701"";""10,734,490,000""
""                                                                                                         com.sun.xml.internal.messaging.saaj.soap.SOAPPartImpl.getContentAsStream()"";""1,701"";""10,734,490,000""
""                                                                                                            com.sun.xml.internal.messaging.saaj.soap.MessageImpl.getHeaderBytes()"";""1,701"";""10,734,490,000""
""                                                                                                               com.sun.xml.internal.messaging.saaj.soap.MessageImpl.saveChanges()"";""1,701"";""10,734,490,000""
""                                                                                                                  org.springframework.ws.soap.saaj.SaajSoapMessage.writeTo(OutputStream)"";""1,701"";""10,734,490,000""
""                                                                                                                     org.springframework.ws.transport.AbstractWebServiceConnection.send(WebServiceMessage)"";""1,701"";""10,734,490,000""
""                                                                                                                        org.springframework.ws.client.core.WebServiceTemplate.sendRequest(WebServiceConnection, WebServiceMessage)"";""1,701"";""10,734,490,000""
""                                                                                                                           org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(MessageContext, WebServiceConnection, WebServiceMessageCallback, WebServiceMessageExtractor)"";""1,701"";""10,734,490,000""
""                                                                                                                              org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(String, WebServiceMessageCallback, WebServiceMessageExtractor)"";""1,701"";""10,734,490,000""
""                                                                                                                                 org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(String, Object, WebServiceMessageCallback)"";""1,701"";""10,734,490,000""
""                                                                                                                                    org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(String, Object)"";""1,701"";""10,734,490,000""
""                                                                                                                                       com.hotels.booking.discos.loyalty.client.LoyaltyWebServiceGateway.sendAndReceive(AbstractLoyaltyRequest)"";""1,701"";""10,734,490,000""
""                                                                                                                                          com.hotels.booking.discos.loyalty.client.LoyaltyWebServiceGateway.retrieveApplicableRewards(LoyaltyApplicableRewardRetrievalRequest)"";""1,660"";""10,525,361,114""
""                                                                                                                                             sun.reflect.GeneratedMethodAccessor216.invoke(Object, Object[])"";""1,660"";""10,525,361,114""
""                                                                                                                                                sun.reflect.DelegatingMethodAccessorImpl.invoke(Object, Object[])"";""1,660"";""10,525,361,114""
""                                                                                                                                                   java.lang.reflect.Method.invoke(Object, Object[])"";""1,660"";""10,525,361,114""
""                                                                                                                                                      com.hotels.thermos.proxy.GenericProxyCircuitBreaker.execute()"";""1,660"";""10,525,361,114""
""                                                                                                                                                         com.hotels.thermos.AbstractCircuitBreaker.run()"";""1,660"";""10,525,361,114""
""                                                                                                                                                            com.hotels.thermos.HystrixCommandWrapper.run()"";""1,660"";""10,525,361,114""
""                                                                                                                                                               com.netflix.hystrix.HystrixCommand$1.call(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                  com.netflix.hystrix.HystrixCommand$1.call(Object)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                     rx.Observable$2.call(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                        rx.Observable$2.call(Object)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                           rx.Observable$2.call(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                              rx.Observable$2.call(Object)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                                 rx.Observable$2.call(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                                    rx.Observable$2.call(Object)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                                       rx.Observable.unsafeSubscribe(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                                          com.netflix.hystrix.AbstractCommand$5.call(Subscriber)"";""1,660"";""10,525,361,114""
""                                                                                                                                                                                             com.netflix.hystrix.AbstractCommand$5.call(Object)"";""1,660"";""10,525,361,114""
{code}

Can an alternative implementation, like the one mentioned at https://issues.apache.org/jira/browse/SPARK-16826, be used to circumvent this issue?",,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 3:50 PM;sasidharsmit;Contention.png;https://jira.spring.io/secure/attachment/25208/Contention.png","23/Oct/17 9:13 AM;sasidharsmit;Contention.png;https://jira.spring.io/secure/attachment/25195/Contention.png","07/Nov/17 3:50 PM;sasidharsmit;Contention_removed.png;https://jira.spring.io/secure/attachment/25207/Contention_removed.png","23/Oct/17 9:16 AM;sasidharsmit;E2ELatency.png;https://jira.spring.io/secure/attachment/25196/E2ELatency.png",,,,,,,,,,24969600,,2017-10-24 17:45:23.835,9223372036854775807,true,gregturn(gregturn),,,,"0|i0ax9r:",9223372036854775807,9223372036854775807,,,,,,,,"24/Oct/17 5:45 PM;gregturn;For starters, the gap between WebServiceTemplate, where our library code is, and the actual usage of a Hashtable is over 30 layers deep. So to say that Spring WS is using a Hashtable is a faulty statement. Spring Web Services is leveraging SAAJ or the SOAP with Attachments API for Java, hence the code using a Hashtable would be standard Java.

In essence, Spring Web Services is taking a string-based URI and asking Java to take if from there in constructing a SAAJ message. Any alteration in the efficiency of SAAJ would entail a bug report with the SAAJ spec lead.

WebServiceTemplate has a DestinationProvider interface, which includes a cached solution that supports caching URIs after they are parsed from objects, but your stack trace doesn't appear to invoke the getDefaultUri() call that would invoke that.

If you provided a little more information about your use case and how you think this is Spring Web Services making an inefficient call, then perhaps we can unravel the real issue you are running into.","25/Oct/17 9:35 AM;sasidharsmit;Hi Greg,
Thank you for the explanation. Below is the use case we are trying to implement.

- We have a client that calls a backend microservice
- The client can make two types of POST requests
- The URL of the requests is the same (i.e.) a single endpoint
- The client code invokes WebServiceTemplate.marshalSendAndReceive(String microserviceUrl, RequestObject request)

The client code looks like this:

{code:java}
class MicroserviceGateway extends WebServiceGatewaySupport implements MicroserviceGateway {

    private String microserviceUrl;
    private MicroserviceRequestResponseLogCollector requestResponseLogCollector;

    @Override
    public MicroserviceRequestOneResponse retrieveRequestTypeOne(final MicroserviceApplicableRewardRetrievalRequest microserviceApplicableRewardRetrievalRequest) {
        requestResponseLogCollector.addRequestLogEntries(microserviceApplicableRewardRetrievalRequest);
        MicroserviceRequestOneResponse microserviceRequestTypeOneResponse = (MicroserviceRequestOneResponse) sendAndReceive(microserviceApplicableRewardRetrievalRequest);
        requestResponseLogCollector.addResponseLogEntries(microserviceRequestTypeOneResponse);
        return microserviceRequestTypeOneResponse;
    }

    @Override
    public MicroserviceRequestTwoResponse retrieveRequestTypeTwo(final MicroserviceRequestTwoRetrievalRequest microserviceRequestTypeTwoRetrievalRequest) {
        requestResponseLogCollector.addRequestLogEntries(microserviceRequestTypeTwoRetrievalRequest);
        MicroserviceRequestTwoResponse microserviceRequestTypeTwoResponse = (MicroserviceRequestTwoResponse) sendAndReceive(microserviceRequestTypeTwoRetrievalRequest);
        requestResponseLogCollector.addResponseLogEntries(microserviceRequestTypeTwoResponse);
        return microserviceRequestTypeTwoResponse;
    }

    public void setMicroserviceUrl(final String microserviceUrl) {
        this.microserviceUrl = microserviceUrl;
    }

    public void setRequestResponseLogCollector(final MicroserviceRequestResponseLogCollector requestResponseLogCollector) {
        this.requestResponseLogCollector = requestResponseLogCollector;
    }

    private <T extends AbstractMicroserviceRequest> Object sendAndReceive(final T request) {
        return getWebServiceTemplate().marshalSendAndReceive(microserviceUrl, request);
    }
}
{code}

When a request comes in for RequestTypeOne, the client invokes _retrieveRequestTypeOne_ and likewise for RequestTypeTwo, which in turn pass the request object and the endpoint url to getWebServiceTemplate().marshalSendAndReceive(microserviceUrl, request). ","27/Oct/17 5:59 PM;gregturn;I guess what you have described sounds like a conventional approach. I don't know what your load factor is, but we are talking about blocking APIs when we discuss SOAP. (People have put in requests for Reactor-based APIs that I have had to decline). 

Since we are talking microservices, do you have a cloud-based solution in place? I didn't know if you were using Spring Cloud components like Spring Cloud Netflix Eureka or Spring Cloud Ribbon. Because if you have a pool of microservices, it would make sense to round robin between them for various calls. Whereas Spring Web Services doesn't support Eureka-based URL resolution, it probably wouldn't be too difficult to programmatically get that URL and hence simplify remote calls to a pool of SOAP microservices through service discovery.
","30/Oct/17 1:14 PM;sasidharsmit;We are not on cloud yet. The servers are physical, within our datacenter. But, we do have multiple instances behind a VIP to cover for this at the moment. The only concern is that we are unable to use the physical servers to their full capacity at the moment. 
I'm hoping we could implement the DestinationProvider interface in one of the subsequent sprints, to see if that helps our cause.","07/Nov/17 3:53 PM;sasidharsmit;Implementing the _AbstractCachingDestinationProvider_ has infact resolved the contention observed on URL resolution. A comparison of the url resolution attempts before and after could be found below.

*Before*
!Contention.png|thumbnail!
*After*
!Contention_removed.png|thumbnail!

As can be seen, only one call is made to resolve the url (marked by the HashTable.get())

Thank you so much for your help with this, Greg. I think this is resolved now.","07/Nov/17 4:01 PM;gregturn;Glad to help you resolve your issue.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1070|https://github.com/spring-projects/spring-ws/issues/1070]. ",,,,,,,,,,,
Thread proliferation and memory leak when using WSS4JSecurityInterceptor,SWS-997,78597,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,,,j.thomae,j.thomae,11/Oct/17 1:29 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,Core,,,,,2,,,,,,,"We're using a WSS4JSecurityInterceptor to validate incoming messages and sign outgoing messages:

{code}
 Wss4jSecurityInterceptor wss4jSecurityInterceptor = new Wss4jSecurityInterceptor();   

   // Validate signature of incoming messages
   wss4jSecurityInterceptor.setValidationSignatureCrypto(crypto);
   wss4jSecurityInterceptor.setValidationActions(""Timestamp Signature"");

   // Sign outgoing messages
   wss4jSecurityInterceptor.setSecurementSignatureCrypto(crypto);
   wss4jSecurityInterceptor.setSecurementSignatureKeyIdentifier(""DirectReference"");
   wss4jSecurityInterceptor.setSecurementUsername(privateKeyAlias);
   wss4jSecurityInterceptor.setSecurementPassword(privateKeyPassword);
   wss4jSecurityInterceptor.setSecurementActions(""Timestamp Signature"");
   wss4jSecurityInterceptor.setSecurementSignatureParts(""{}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{}{http://schemas.xmlsoap.org/soap/envelope/}Body"");

       // and later
class SpringWSConfiguration extends WsConfigurerAdapter  {
    @Override
    public void addInterceptors(List<EndpointInterceptor> interceptors) {
            interceptors.add(wss4jSecurityInterceptor);
    }
}
{code}

When using the interceptor this way, a lot of EHCache threads named ""wss4j%002etimestamp%002ecache-e%0058ga%0058l%0058%004b%0057g%004ah%0050w==.data"" (and similar) start to appear, one for each request that has been made. 

I believe this happens because of the way the {{Wss4jSecurityInterceptor}} initializes the WSS4J {{RequestData}} structure in {{initializeRequestData}} and {{initializeValidationRequestData}}. By default the {{RequestData}} class has caching enabled for detecting various replay attacks. However the default implementation is to just create one cache per {{RequestData}} structure using the {{ReplayCacheFactory.newInstance()}} method. 

Now when you send a request and this is validated, this at some point calls WSS4J's {{SignatureProcessor}} class, which in turn calls {{RequestData.getTimestampReplayCache()}} which by default creates a new EHCache instance (if EHCache happens to be on the classpath which it is for our project). 

I found out about this issue reading through http://apache-xml-project.6118.n7.nabble.com/nonce-cache-thread-proliferation-td42797.html for a similar problem. The recommended solution is to either disable replay caches or to properly initialize them by calling the {{setXXXReplayCache}} methods when creating the {{RequestData}} structure. 

So since the current implementation wouldn't detect replay attacks either (because having one cache per request basically disables replay attack checks, albeit in a very expensive manner), i would suggest changing the implementation of the {{Wss4jSecurityInterceptor}} {{initializeRequestData}} and {{initializeValidationRequestData}} methods and to append these lines before returning the {{RequestData}} structure:

{code}
  requestData.setEnableNonceReplayCache(false);
  requestData.setEnableSamlOneTimeUseReplayCache(false);
  requestData.setEnableTimestampReplayCache(false);
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-11-10 08:31:24.61,9223372036854775807,true,gregturn(gregturn),,,,"0|i0awlz:",9223372036854775807,9223372036854775807,,,,,,,,"10/Nov/17 8:31 AM;lcsontos;I've also faced the very same issue about a year ago and worked it around this way: https://gist.github.com/laszlocsontos/c0b1beac76e02cbaa0514a19f7db923c

Basically this was a bug in WSS4J ([WSS-584|https://issues.apache.org/jira/browse/WSS-584]) and they fixed it in 2.x by removing automatic creation of replay caches from *RequestData*: https://fisheye.apache.org/changelog/wss4j?cs=1753264.

{quote}The fix is not to create the ReplayCache instances internally. It's up to the calling code to manage them.{quote}

What this means for Spring-WS v2.4 is that this is a bug, because it's still using WSS4J 1.6.x. For the upcoming v3 however, this is a loss of functionality, because WSS4J has been recently upgraded to 2.x and replay caches aren't created at all.

I'd gladly contribute a fix for this along with a junit test and would appritiate some guidence from the Spring-WS team how to do that?

The idea is that users of *Wss4jSecurityInterceptor* could indicate with a flag if they want to use replay caches of not, by default I would leave it on. After that at the relevant places *Wss4jSecurityInterceptor* would ensure that caches are created only once. See a working PoC above.

Should I submit the fix first to *master* and then backport it to *2.4.0.RELEASE* or the other way around?

This is indeed a major issue and it's not easy to spot what's going on. Nice catch Jan!","10/Nov/17 4:03 PM;gregturn;To clarify, Spring WS 2.x will continue supporting both Wss4j 1.6.x and 2.x because we cannot remove 1.6.x support for backwards compatibility reasons. Spring WS 3.x IS the place where we drop support for Wss4j 1.6.x.

Any contribution to fix Wss4jSecurityInterceptor would be highly appreciated. My recommendation is to work against the master branch. Once completed, we can assess if we wish to backport the change or not. Simple stuff is typically quite simple.

Also, this change cannot break existing APIs in either branch. That would demand a 3.1 release of Spring WS and we aren't ready for that yet.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1068|https://github.com/spring-projects/spring-ws/issues/1068]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,
Fix XmppTransportUtils toURI,SWS-996,78569,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,06/Oct/17 9:50 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,17/Oct/17 3:24 PM,,,,,,,3.0.0.RC1,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i0awfr:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1067|https://github.com/spring-projects/spring-ws/issues/1067]. ",,,,,,,,,,,,,,,,,
Numerous test failures when testing against Spring IO Platform Cairo,SWS-993,78424,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,awilkinson,awilkinson,26/Sep/17 4:46 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,03/Oct/17 3:17 PM,2.4.1,,,,,,2.4.1,,,,,,,0,,,,,,,"The current head of master has numerous failures when testing its compatibility against Spring IO Platform Cairo. Details of the test failures can be found here: https://build.spring.io/browse/PLATFORM-COM-JOB1-507/test. It should also be possible to reproduce them locally by running the following (modified as necessary to match your JDK installation):

{code}
./gradlew springIoCheck -PJDK8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_141.jdk/Contents/Home -PplatformVersion=Cairo-BUILD-SNAPSHOT --continue
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-09-26 18:32:51.235,9223372036854775807,true,gregturn(gregturn),,,,"0|i0avjj:",9223372036854775807,9223372036854775807,https://build.spring.io/browse/PLATFORM-COM-JOB1-507/test,,,,,,,"26/Sep/17 6:32 PM;gregturn;So far, it appears to be failing purely by upgrading to 8u141. When I run things against 8u131, it passes those checks just fine.","27/Sep/17 5:18 AM;awilkinson;I don't have 8u131 installed, but with 8u121 I see the same failures as with 8u141.","03/Oct/17 1:44 PM;awilkinson;Any news on this?","03/Oct/17 2:02 PM;gregturn;It appears to purely be an XML namespace issue which isn't even the scope of the breaking unit tests. I could change the expected test namespaces but I'd rather have XmlUnit instructed to ignore namespaces when asserting. ","03/Oct/17 2:13 PM;gregturn;https://stackoverflow.com/questions/13358305/how-to-compare-two-xml-with-the-same-namespace-but-different-prefixes-using-java Appears like a solution. ","03/Oct/17 3:17 PM;gregturn;Resolved by implementing XMLUnit ""similar"" check for impacted test cases.","03/Oct/17 3:18 PM;gregturn;Resolved via https://github.com/spring-projects/spring-ws/commit/049b86dd23cc078c7319e5c558cad1567808f265 and https://github.com/spring-projects/spring-ws/commit/208dda4635635406104fae576e332008a6cfd5c9","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1065|https://github.com/spring-projects/spring-ws/issues/1065]. ",,,,,,,,,,
org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor memory leak,SWS-992,78378,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,leaqui,leaqui,22/Sep/17 2:19 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.0.RELEASE,,,,,,,,Security,,,,,1,leak,,,,,,"A memory leak occur when undeploying a web application that uses WSS4J.

The org.apache.ws.security.transform.STRTransformProvider is appended to java.security.Security at initialization in org.apache.ws.security.WSSConfig.init() but never removed. WSSConfig.init() is called when WSSConfig instance is created in WSSConfig.getNewInstance().

I've attached a screenshot of Eclipse MAT showing the leak.

Reported at WSS4J: https://issues.apache.org/jira/browse/WSS-614

Workaround created at wss4j-2.2.0 and wss4j-2.1.11, a cleanUp() method that might be called at destruction time: https://github.com/apache/wss4j/commit/ab7ce2f6ec40e865f00efcd86e344f95db733acb",,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 2:19 PM;leaqui;STRTransformProvider leak.jpg;https://jira.spring.io/secure/attachment/25113/STRTransformProvider+leak.jpg",,,,,,,,,,,,,24969600,,2020-09-23 16:48:13.147,9223372036854775807,true,gregturn(gregturn),,,,"0|i0av9b:",9223372036854775807,9223372036854775807,https://issues.apache.org/jira/browse/WSS-614,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1064|https://github.com/spring-projects/spring-ws/issues/1064]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
MessageSender incompatibility in SSL Mutual Auth and Basic Auth scenario,SWS-991,77882,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,thanosa75,thanosa75,28/Jul/17 7:01 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,Core,Documentation,,,,0,,,,,,,"h2. Environment prerequisites

We are integrating with a client that provides WSDL for their services. Their setup involves: 
* a properly signed server SSL certificate (Symantec Class 3 - G4, Verisign G5 root)
* a mutual-authentication setup, where we produced a hostname CSR and they signed with their own (internal) CA, not certified by known root certificates
* a load balancer (we assume NGINX but could be a heavy iron one) handling the SSL & Mutual Auth setup and authentication
* an internal WS (Spring Boot) server application presenting Basic Authentication requests to the client

h2. Action Plan

Using WS to generate and create client, we configure the WebServiceTemplate with the relevant jaxb2 marshaller/unmarshaller and proceed to configure message senders.

Two senders were configured: 
* {{HttpsUrlConnectionMessageSender}}, for the keystore/truststore configuration and hostname verifier
* {{HttpComponentsMessageSender}}, for the Basic Authentication to the end service

h2. Issue manifestation
It seems that using the {{webServiceTemplate.setMessageSenders()}} call to set the array of message senders, the combination of the two produces weird results:
* if the array contains the {{HttpsUrlConnectionMessageSender}} first, the SSL mutual auth consistently fails - the SSL trace shows that we do not produce a client certificate at all
* if the array contains the {{HttpComponentsMessageSender}} first, the Basic Auth fails - there is no Basic Auth header added to the request. However, the SSL client mutual auth succeeds!

h2. Conclusion
We believe that these two message senders are incompatible. Whichever goes last overrides (or uses different URL factories or something) and makes the first configuration to disappear. This is not evident in documentation anywhere and for our case it took us more than 2 days debugging with the client (initially thinking it was an SSL configuration issue on their side) to understand that this was an incompatibility.

h3. Available workaround
In our scenario of SSL Mutual Auth and Basic Auth, we proceeded to add a custom override of the {{prepareConnection()}} call of the {{HttpsUrlConnectionMessageSender}} as below:

{noformat}
@Override
protected void prepareConnection(HttpURLConnection connection) throws IOException {
	super.prepareConnection(connection);
	String userCredentials = name + "":"" + password;
	String basicAuth = ""Basic "" + new String(Base64.getEncoder().encode(userCredentials.getBytes()));
	connection.setRequestProperty (""Authorization"", basicAuth);
}
{noformat}

By doing that, we used only the SSL configuration MessageSender which successfully passed the client Mutual Authentication and also configured the header for the Basic Authentication.



PS: Flagging as major due to lack of documentation and complexity of the debugging involved.",Java 8 (OS irrelevant),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-11-01 17:41:11.492,9223372036854775807,true,gregturn(gregturn),,,,"0|i0as7b:",9223372036854775807,9223372036854775807,,,,,,,,"01/Nov/17 5:41 PM;gregturn;You aren't really supposed to configure two MessageSenders targeting one message. The purpose is to have different MessageSenders for different message types. Hence the supports() call. In other words, they don't act like layered filters, one feeding the next. Instead, a given MessageSender attempts to create a connection and then send the message.

The two strategies, perhaps as you've read in the reference docs, for sending messages over HTTP use either build in Java HttpUrlConnection or the more sophisticated one, using Apache HttpClient. For complex stuff, which your use case clearly is in, hints at using Apache HttpClient. This is where you get to configure everything in the HttpClient and then inject it into HttpComponentsMessageSender via constructor injection (preferred) or setter injection.

To use HttpClient, there are gobs of StackOverflow articles showing many permutations of configuration. The trick is the fact that mutual TLS is a relatively obscure configuration, so I understand how difficult it can be to find such an article and then mix it with BASIC authorization headers.

Given the fact that you found a suitable workaround by merely extending HttpsUrlConnectionMessageSender and tweaking the HttpURLConnection object by adding a single header, I'm inclined to agree that this was the best solution for your use case. Who wants to perform complex configurations against Apache HttpClient if this works?

What I am trying to investigate is whether this warrants augmenting Spring WS code, or if documenting this in the reference documents is really the best approach?

* Adding an Authorization header isn't confined to SSL, so such code would need to work for both HttpsUrlConnectionMessageSender AND HttpUrlConnectionMessageSender. This implies the code belongs in the parent class, HttpUrlConnectionMessageSender.
* Authorization headers aren't the only headers others may wish to add to HTTP-based messages.

So documenting the ability to extend and modify may be of the most benefit to all users vs. something actually added to the framework's code base.
","01/Nov/17 8:41 PM;thanosa75;Hello Greg,

thanks for taking the time to prepare such a thorough analysis. I will agree that this may be an ""obscure"" configuration that *was* probably not very requested in the past, but in recent times we've been faced with such configurations more than once in the last 2-3 months. Nevertheless, I would like to focus to your last sentence - and documentation is always the first place we go when we have such doubts. So +1 there.

On the other hand, I find really confusing your 1st sentence - If I'm not supposed to configure two message senders, why there is a {{webServiceTemplate.setMessageSenders(...)}} API call? What is it for? It directly implies a chain of MessageSenders - which was then quite an obvious path leading down the rabbit hole for us. 

Maybe a rethinking of the API is necessary. Or much more documentation, or both...
","01/Nov/17 8:58 PM;gregturn;The concept of setMessageSenders() is to support either a different sender for each type, or a different sender per transport. Imagine an array of senders, one for HTTP, one for JMS, one for email. (SOAP has this nice transport neutrality people often overlook).

The concept is also, one message sender for Order objects, a different message sender for ExpiredUser-based messages.

I can see how that API is confusing since it's not the same as an array of nested filters.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1063|https://github.com/spring-projects/spring-ws/issues/1063]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,
Setting up a Wss4jSecurityInterceptor as no security still requires WS-Security header,SWS-989,77207,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,jtorson,jtorson,30/May/17 6:49 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,10/Jul/17 6:40 PM,,,,,,,2.4.1,,,,,,,0,,,,,,,"When trying to use Wss4jSecurityInterceptor from the wss4j2 package, validation is still performed when no security is set.  This does not happen from the deprecated one in the wss4j package.  We use this as a simple simulator and thus we turned security off.  It looks like the real issue is that when calling WSSecurityUtil.decodeAction(), when NO_SECURITY is used, it returns an empty list instead of a list with 0 in it and thus:
{code}
if (validationActionsVector.contains(WSConstants.NO_SECURITY)) 
{code}
fails in validateMessage() since the list is really empty.",,,,,,,,,,,,,,,,,SWS-1008,,,,,SWS-961,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:12.42,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/90,"0|i0ao1z:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1018|https://github.com/spring-projects/spring-ws/issues/1018]. ",,,,,,,,,,,,,,,,,
ClientInterceptor's afterCompletion() is called twice.,SWS-983,71972,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,sarg,sarg,23/Mar/17 1:11 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.1,,,,,,,,Core,,,,,4,,,,,,,"Relevant code section in WebServiceTemplate.java
{code:java}
	protected Object handleError(WebServiceConnection connection, WebServiceMessage request) throws IOException {
		if (logger.isDebugEnabled()) {
			logger.debug(""Received error for request ["" + request + ""]"");
		}
		throw new WebServiceTransportException(connection.getErrorMessage());
	}

	protected <T> T doSendAndReceive(/* ... */) throws IOException {
		try {
      // ...

			if (!messageContext.hasResponse() && !intercepted) {
				sendRequest(connection, messageContext.getRequest());
				if (hasError(connection, messageContext.getRequest())) {
					triggerAfterCompletion(interceptorIndex, messageContext, null);
					return (T) handleError(connection, messageContext.getRequest());
				}
				WebServiceMessage response = connection.receive(getMessageFactory());
				messageContext.setResponse(response);
			}

      // ...
		}
		catch (TransformerException ex) {
			triggerAfterCompletion(interceptorIndex, messageContext, ex);
			throw new WebServiceTransformerException(""Transformation error: "" + ex.getMessage(), ex);
		}
		catch (RuntimeException ex) {
			// Trigger after-completion for thrown exception.
			triggerAfterCompletion(interceptorIndex, messageContext, ex);
			throw ex;
		}
		catch (IOException ex) {
			// Trigger after-completion for thrown exception.
			triggerAfterCompletion(interceptorIndex, messageContext, ex);
			throw ex;
		}
	}
{code}

If after {{sendRequest()}}, {{hasError}} returns true then {{triggerAfterCompletion}} is fired and then {{handleError()}} is called which throws {{WebServiceTransportException}}.
Latter exception is catched by {{catch (RuntimeException ex)}} block and then {{triggerAfterCompletion}} is called second time.

I got into this situation when target WebService was returning 404 error.

I have looked into the latest source code and seems that the bug remains.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2018-11-11 16:08:53.61,9223372036854775807,true,gregturn(gregturn),,,,"0|i09s87:",9223372036854775807,9223372036854775807,,,,,,,,"11/Nov/18 4:08 PM;zbynekvavros@gmail.com;Just found this myself so I just want to share my opinion.

This behavior still exists in 3.0.3.RELEASE but it's a question whether this is really a bug bacause handleError() is called when no [FaultMessageResolver|https://docs.spring.io/spring-ws/site/apidocs/org/springframework/ws/client/core/FaultMessageResolver.html] is registered. There is by default [SoapFaultMessageResolver|https://docs.spring.io/spring-ws/site/apidocs/org/springframework/ws/soap/client/core/SoapFaultMessageResolver.html] registered that throws [SoapFaultClientException|https://docs.spring.io/spring-ws/site/apidocs/org/springframework/ws/soap/client/SoapFaultClientException.html] that is catched by the catch block you mention. If you register custom FaultMessageHandler that doesn't throw exception, then catch block doesn't get involved and interceptor is called only once. I solved this by doing check for SOAP fault in the interceptor's afterCompletion() method. In case there is fault method execution is stopped immediately as it will be invoked again (by the catch block) after FaultMessageResolver is run. This is the real completion for me as I consider the resolver as part of message processing cycle.

 

Therefore I suggest the javadoc of FaultMessageResolver is improved as this issue is closed.","04/Sep/19 10:45 AM;mbutov;Same thing (ClientInterceptor.afterCompletion() called twice) when FaultMessageResolver.resolveFault(...) throws a RuntimeException.","01/Oct/19 1:01 PM;dadasopawale;looks like issue because of below for loop in WebServiceTemplate.triggerAfterCompletion

 

if (interceptors != null) \{if (interceptors != null) { for (int i = interceptorIndex; i >= 0; i--) { interceptors[i].afterCompletion(messageContext, ex); } }

 

i>=1 ","03/Jan/20 4:17 PM;apechinsky;Everything becomes clear if we try to consider ClientInterceptor as some sort of try/catch/finally block.
It seems that initial intent of afterCompletion() method was to play role of 'finally' block.
- handleRequest - is called at the beginning of try block
- handleResponse - at the en of try block
- handleFault - catch block
- afterCompletion - finally block

Javadoc says the same:
??...Will be called on *any outcome*, thus allows for *proper resource cleanup*.??","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1054|https://github.com/spring-projects/spring-ws/issues/1054]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,
webServiceTemplate.marshalSendAndReceive() is cleaning up the xmlns attribute,SWS-982,71924,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,beku,beku,17/Mar/17 12:28 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,Core,OXM,,,,0,,,,,,,"I'm using xstream and setting ""xmlns"" attribute using _@XStreamAsAttribute_. It works as expected when using _XStreamMarshaller#marshal(...)_ method. However when using _webServiceTemplate.marshalSendAndReceive(...)_ method the _xmlns_ attributes gets cleared out and results in empty string like: (I found out this with tracing)
{code:xml}
<generate xmlns="""" ...
{code}
Because the xml namespace changes depending on the envoirnment (dev & prod), and it seems like there's no easy way to achieve that with default jaxb marshaller. With Xstream, setting it on the attribute seems like an easier hack.

Please help me with this, thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:10.701,9223372036854775807,true,gregturn(gregturn),,,,"0|i09rxj:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1053|https://github.com/spring-projects/spring-ws/issues/1053]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
SOAPAction header with SOAP ver 1.2 messages,SWS-981,71811,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,jaminh,jaminh,07/Mar/17 3:36 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,27/Oct/17 5:03 PM,2.1.4,2.2.0.RELEASE,2.3.0,2.4.0,3.0.0.RC1,,3.0.0.RELEASE,,Core,,,,,0,,,,,,,"When sending SOAP version 1.2 messages using the SaajSoapMessageFactory if no SOAP action is specified (using SoapActionCallback) then the message will still be sent with a ""SOAPAction"" header. The response will also have a ""SOAPAction"" http header. The ""SOAPAction"" header was replaced with the ""action"" parameter of the application/soap+xml MIME type in SOAP version 1.2. If a SoapActionCallback is used then the SOAP action is added in the appropriate place and the ""SOAPAction"" http header is removed, but that SOAPAction header should never be present for SOAP 1.2 messages. It appears the header is being added in the SaajSoapMessage constructor (around line 118 in master at the time the issue was created). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:10.47,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/102,"0|i09r8f:",9223372036854775807,9223372036854775807,,,,,,,,"27/Oct/17 1:58 AM;jaminh;I figured I would make a note here that for SOAP version 1.1 the SOAPAction header appears to be required whether a value is specified or not per section 6.1 of the SOAP version 1.1 spec https://www.w3.org/TR/2000/NOTE-SOAP-20000508/#_Toc478383527.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1052|https://github.com/spring-projects/spring-ws/issues/1052]. ",,,,,,,,,,,,,,,,
Route works when running application but produces 404 during tests,SWS-977,70699,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,,,fNek,fNek,05/Dec/16 10:03 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,"*Steps to reproduce:*
* Clone the [reproduction project|https://github.com/fNek/spring-framework-issues/tree/master/SWS-977]
* Build the project using `./mvnw verify` -> 1 test failure
* Run the project using `./mvnw spring-boot:run`
* Use Postman or a similar program to upload a file via PUT to the URL from the test failure (http://localhost:8080/images/upload) -> works

What puzzles me:
* The route is clearly defined in com.example.presentation.ImageController
* It works when running the actual application, but it fails when running the tests
* Even during the tests, there is the following line in the log:


{code}
2016-12-05 10:53:31.878  INFO 8933 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped ""{[/images/upload],methods=[PUT]}"" onto public void com.example.presentation.ImageController.uploadImage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
{code}

After asking several other people to take a look at this, I have come to the conclusion that this is likely a bug. Unfortunately, I have no idea where to start looking for it.

I would appreciate it if somebody could look into this, as it currently prevents me from making progress with my journeypiece / thesis.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:09.563,9223372036854775807,true,gregturn(gregturn),,,,"0|i09ktj:",9223372036854775807,9223372036854775807,https://github.com/fNek/spring-framework-issues/tree/master/SWS-977,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1047|https://github.com/spring-projects/spring-ws/issues/1047]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
SOAP11: Invalid request XML causes HTTP status 500 (expected: 400),SWS-976,70630,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,akuznetc,akuznetc,29/Nov/16 4:06 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.0,2.4.0,,,,,,,,,,,,0,,,,,,,"Hi all,

When client sends invalid SOAP11 request (valid XML violating XSD), the server responds with SOAP Fault message (which contains all XSD violations), and HTTP status 500 (expected HTTP status 400). This is applicable only to SOAP11 clients. IMO, the problem is in the following lines of code:

{code:title=org.springframework.ws.transport.http.HttpServletConnection.java}
if (SOAPConstants.SOAP_SENDER_FAULT.equals(faultCode)) {
	getHttpServletResponse()
			.setStatus(HttpTransportConstants.STATUS_BAD_REQUEST);
}
else {
	getHttpServletResponse()
			.setStatus(HttpTransportConstants.STATUS_INTERNAL_SERVER_ERROR);
}
{code}

As you can see, in SOAP11 all failures will be mapped to {{STATUS_INTERNAL_SERVER_ERROR}}, because SOAP11 and SOAP12 have different QNames for client/sender errors:

{code:title=SOAP11}
{http://schemas.xmlsoap.org/soap/envelope/}Client
{code}

{code:title=SOAP12}
{http://www.w3.org/2003/05/soap-envelope}Sender
{code}

Note, that {{SOAPConstants.SOAP_SENDER_FAULT}} is not equal to SOAP11 client fault, it only equals to SOAP12 sender fault.

--
Thanks,
Andrei",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2016-12-01 00:26:32.311,9223372036854775807,true,gregturn(gregturn),,,,"0|i09kef:",9223372036854775807,9223372036854775807,,,,,,,,"01/Dec/16 12:26 AM;jaminh;According to https://www.w3.org/TR/2000/NOTE-SOAP-20000508/#_Toc478383529 all errors in SOAP version 1.1 should result in a 500 status code, so this is the correct behavior.","01/Dec/16 2:16 PM;akuznetc;My bad. You are right. Please reject the issue.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1046|https://github.com/spring-projects/spring-ws/issues/1046]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,
Spring WS interceptors with injected DAO's @Transactional not working,SWS-974,70244,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,,asilveri,asilveri,24/Oct/16 1:29 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,13/Sep/18 6:51 PM,2.2.1,,,,,,,,Core,,,,,0,dao,hibernate4,interceptor,spring-ws,transactional,,"When injecting DAOs within Endpoint intercetors @Transactional is being ignored casing the following exception:

_org.springframework.ws.soap.client.SoapFaultClientException: Could not obtain transaction-synchronized Session for current thread_

If the @EnableWs or sws:annotation-driven is commented out then @Transactional isn't being ignored. Please see reference URL for a detailed explanation. 

I have attached a SpringBoot 1.3.0, Maven 2 example. Run the unit test ApplicationTests to replicate the issue then Comment out the @EnableWs within WebServiceConfig and re-run the test. The unit test will then pass as the CountryDAO will be proxied (i.e. @Transactional is working).",,,,,,,,,,,,,,,,,,,,,,,,"24/Oct/16 1:27 AM;asilveri;SpringWebBoot.zip;https://jira.spring.io/secure/attachment/23594/SpringWebBoot.zip",,,,,,,,,,,,,24969600,,2020-09-23 16:48:08.865,9223372036854775807,true,gregturn(gregturn),,,,"0|i09i0n:",9223372036854775807,9223372036854775807,http://stackoverflow.com/questions/34214297/spring-ws-interceptors-with-injected-daos-transactional-not-working,,,,,,,"20/Dec/17 4:04 AM;asilveri;This issue can be closed.

Once our projects were upgraded to spring 4.3.10.RELEASE (from spring 4.2.0.RELEASE) and spring-ws 2.4.0.RELEASE (from spring-ws 2.2.1.RELEASE), the reported error above were no longer an issue even when the following code was re-introduced in our code base:

XML configuration:

<sws:annotation-driven>
Annotations:

@EnableWS from the @Congiuration object 

Once this was done endpointinterceptors that required @Transactional worked as they were intended to.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1044|https://github.com/spring-projects/spring-ws/issues/1044]. ",,,,,,,,,,,,,,,,
SimpleXsdSchema not thread safe.,SWS-973,70224,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,robql,robql,20/Oct/16 9:12 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,Core,,,,,0,,,,,,,"Hi guys,

We are using spring-ws and discovered an issue in SimpleXsdSchema.

SimpleXsdSchema has a reference to an instance of org.w3c.dom.Element which is not thread safe. This cause issues when multiple clients are requesting the schema file simultaneously. The end result is empty attributes which causes ws clients to fail validating the schema.

I've pushed an example of the issue  [here|https://github.com/robertlonnqvist/spring-ws-schema-issue].

For now, my workaround is to override SimpleXsdSchema with a version using a ThreadLocal for the element.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:08.61,9223372036854775807,true,gregturn(gregturn),,,,"0|i09hw7:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1043|https://github.com/spring-projects/spring-ws/issues/1043]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
SpringSecurityPasswordValidationCallbackHandler throws NPE when UserDetailsService does not find user,SWS-972,70023,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Complete,gregturn,joshis,joshis,29/Sep/16 10:21 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,27/Oct/17 4:39 PM,2.3.0,3.0.0.RC1,,,,,2.4.2,3.0.0.RELEASE,Security,,,,,0,,,,,,,"I implemented UserDetailsService class like so:

{code:java}
@Service
public class IntegrationUserDetailsService implements UserDetailsService {

    private IntegrationRepository integrationRepository;

    @Autowired
    public IntegrationUserDetailsService(IntegrationRepository integrationRepository) {
        this.integrationRepository = integrationRepository;
    }

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        IntegrationEntity integration = integrationRepository.findFirstByClientToken(username);
        if (integration != null) {
            List<GrantedAuthority> authorities = new ArrayList<>();
            authorities.add(new SimpleGrantedAuthority(""ROLE_ADMIN""));
            return new User(integration.getClientToken(), integration.getClientSecret(), authorities);
        } else {
            throw new UsernameNotFoundException(""No integration found for client token: "" + username);
        }
    }

}
{code}

Then, I use this service in the webservice configuration:

{code:java}
@Bean
public SpringSecurityPasswordValidationCallbackHandler securityCallbackHandler() {
    SpringSecurityPasswordValidationCallbackHandler callbackHandler = new SpringSecurityPasswordValidationCallbackHandler();
    callbackHandler.setUserDetailsService(userDetailsService);
    return callbackHandler;
}
{code}

However, this code causes issues, because SpringSecurityPasswordValidationCallbackHandler.java contains:

{code:java}
private UserDetails loadUserDetails(String username) throws DataAccessException {
    UserDetails user = this.userCache.getUserFromCache(username);
    if(user == null) {
        try {
            user = this.userDetailsService.loadUserByUsername(username);
        } catch (UsernameNotFoundException var4) {
            if(this.logger.isDebugEnabled()) {
                this.logger.debug(""Username \'"" + username + ""\' not found"");
            }
            return null; // <= HERE - EXCEPTION CAUGHT, NULL RETURNED
        }

        this.userCache.putUserInCache(user);
    }

    return user;
}

// ...

protected void handleUsernameToken(WSPasswordCallback callback) throws IOException, UnsupportedCallbackException {
    UserDetails details = this.loadUserDetails(callback.getIdentifier()); // <= HERE IS RETURNED THE NULL FROM ABOVE CODE
    callback.setPassword(details.getPassword()); // <= NPE THROWN
}
{code}

Affected code:

https://github.com/spring-projects/spring-ws/blob/master/spring-ws-security/src/main/java/org/springframework/ws/soap/security/wss4j2/callback/SpringSecurityPasswordValidationCallbackHandler.java

Note that this is ""wss4j2"" - the code seems correct in ""wss4j"".","OS: Mac OS X 10.12 
Server: Apache Tomcat, 8.0.28 
Java: 
java version ""1.8.0_92"" 
Java(TM) SE Runtime Environment (build 1.8.0_92-b14) 
Java HotSpot(TM) 64-Bit Server VM (build 25.92-b14, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-08-17 03:21:36.675,9223372036854775807,true,gregturn(gregturn),,,,"0|i09gnj:",9223372036854775807,9223372036854775807,,,,,,,,"11/Jul/17 11:53 AM;joshis;Sorry for the bump, but this issue is still present in 2.4.0 and it makes Spring-WS with basic username / password WS-Security pretty useless even in the most basic scenarios.

In case a user with provided username does not exist, the current code raises NPE that cannot be reasonably handled anywhere.

The issue is present only in wss4j2 version, not in wss4j. However, wss4j version is marked as deprecated and we would like to avoid having deprecated code in our projects.","17/Aug/17 3:21 AM;jaminh;Here is my attempt to fix this issue https://github.com/jaminh/spring-ws/tree/feature/SWS-972.","27/Oct/17 2:12 AM;jaminh;I have pull request for the 2.4 and 3.0 branches https://github.com/spring-projects/spring-ws/pull/104 and https://github.com/spring-projects/spring-ws/pull/103","27/Oct/17 4:42 PM;gregturn;Resolved! Thanks for the efforts to get this into both versions.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1042|https://github.com/spring-projects/spring-ws/issues/1042]. ",,,,,,,,,,,,,
new wss4j2.Wss4jSecurityInterceptor does not work with no security actions,SWS-971,70021,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,juris.zubkans,juris.zubkans,29/Sep/16 5:49 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.4.0,,,,,,,,Core,,,,,0,,,,,,,"I was trying to migrate deprecated Wss4jSecurityInterceptor to new one but can't get it work 
when there is no security validation in place.

This is because validationActionsVector is always empty or null.

Here is 2 failing 2 test cases:

	public void testNoSecurity() throws Exception {
		Wss4jSecurityInterceptor interceptor = new Wss4jSecurityInterceptor();
		interceptor.setSecurementActions(WSHandlerConstants.USERNAME_TOKEN);
		interceptor.setSecurementUsername(""foo"");
		interceptor.setSecurementPassword(""foo"");
		interceptor.setSecurementPasswordType(WSConstants.PW_DIGEST);
		interceptor.setValidationActions(WSHandlerConstants.NO_SECURITY);

		SoapMessage message = loadSoap11Message(""empty-soap.xml"");
		MessageContext context = getSoap11MessageContext(message);

		interceptor.validateMessage(message, context);
	}

	public void testNoSecurityAction() throws Exception {
		Wss4jSecurityInterceptor interceptor = new Wss4jSecurityInterceptor();
		interceptor.setSecurementActions(WSHandlerConstants.USERNAME_TOKEN);
		interceptor.setSecurementUsername(""foo"");
		interceptor.setSecurementPassword(""foo"");
		interceptor.setSecurementPasswordType(WSConstants.PW_DIGEST);

		SoapMessage message = loadSoap11Message(""empty-soap.xml"");
		MessageContext context = getSoap11MessageContext(message);

		interceptor.validateMessage(message, context);
	}

because in function 
protected void validateMessag...

if (validationActionsVector.contains(WSConstants.NO_SECURITY)) {
			return;
		}

block is never reached because vector is either empty or null
I suggest  to change this line to 

		if (CollectionUtils.isEmpty(validationActionsVector)) {
			return;
		}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2017-01-16 08:25:59.832,9223372036854775807,true,gregturn(gregturn),,,,"0|i09gn3:",9223372036854775807,9223372036854775807,,,,,,,,"16/Jan/17 8:25 AM;jvazquezmcp;This issue is related to SWS-961. There you can suggest how to solve the issue if you want. Please check the temporary fixes given by others - basically setting validateRequest or validateResponse to false will make your code work.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1041|https://github.com/spring-projects/spring-ws/issues/1041]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
"Getting ""java.lang.NoSuchMethodError: org.apache.xml.security.utils.I18n.init(Ljava/util/ResourceBundle;)V"" exception",SWS-970,69998,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,,joshis,joshis,29/Sep/16 9:05 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,19/Sep/18 6:26 PM,2.3.0,,,,,,,,Security,,,,,6,,,,,,,"Hello guys,

I tried to configure Spring WS Security to use ""UsernameToken"" validation on server. The service is working as expected when it's used without WS-Security. However, when I send a SOAP request with correct credentials, I get following exception:

{code:java}
java.lang.NoSuchMethodError: org.apache.xml.security.utils.I18n.init(Ljava/util/ResourceBundle;)V
	at org.apache.wss4j.common.crypto.WSProviderConfig.initializeResourceBundles(WSProviderConfig.java:199) ~[wss4j-ws-security-common-2.1.4.jar:2.1.4]
	at org.apache.wss4j.common.crypto.WSProviderConfig.init(WSProviderConfig.java:65) ~[wss4j-ws-security-common-2.1.4.jar:2.1.4]
	at org.apache.wss4j.dom.engine.WSSConfig.init(WSSConfig.java:347) ~[wss4j-ws-security-dom-2.1.4.jar:2.1.4]
	at org.apache.wss4j.dom.engine.WSSConfig.getNewInstance(WSSConfig.java:356) ~[wss4j-ws-security-dom-2.1.4.jar:2.1.4]
	at org.apache.wss4j.dom.engine.WSSecurityEngine.getWssConfig(WSSecurityEngine.java:67) ~[wss4j-ws-security-dom-2.1.4.jar:2.1.4]
	at org.apache.wss4j.dom.engine.WSSecurityEngine.processSecurityHeader(WSSecurityEngine.java:304) ~[wss4j-ws-security-dom-2.1.4.jar:2.1.4]
	at org.springframework.ws.soap.security.wss4j2.Wss4jSecurityInterceptor.validateMessage(Wss4jSecurityInterceptor.java:664) ~[spring-ws-security-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.soap.security.AbstractWsSecurityInterceptor.handleRequest(AbstractWsSecurityInterceptor.java:124) ~[spring-ws-security-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:227) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:176) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:89) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:61) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:293) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) ~[servlet-api.jar:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ~[servlet-api.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-websocket.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:215) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177) ~[spring-security-web-4.1.1.RELEASE.jar:4.1.1.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:119) [spring-boot-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.boot.web.support.ErrorPageFilter.access$000(ErrorPageFilter.java:61) [spring-boot-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.boot.web.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:94) [spring-boot-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.3.2.RELEASE.jar:4.3.2.RELEASE]
	at org.springframework.boot.web.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:112) [spring-boot-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.28]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.28]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217) [catalina.jar:8.0.28]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [catalina.jar:8.0.28]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [catalina.jar:8.0.28]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142) [catalina.jar:8.0.28]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [catalina.jar:8.0.28]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616) [catalina.jar:8.0.28]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [catalina.jar:8.0.28]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518) [catalina.jar:8.0.28]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091) [tomcat-coyote.jar:8.0.28]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673) [tomcat-coyote.jar:8.0.28]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500) [tomcat-coyote.jar:8.0.28]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456) [tomcat-coyote.jar:8.0.28]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_92]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_92]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.0.28]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_92]
{code}

Here is my WebService configuration class:

{code:java}
@EnableWs
@Configuration
public class WebServiceConfig extends WsConfigurerAdapter {

    private UserDetailsService userDetailsService;

    @Autowired
    public WebServiceConfig(UserDetailsService userDetailsService) {
        this.userDetailsService = userDetailsService;
    }

    @Bean
    public SpringSecurityPasswordValidationCallbackHandler securityCallbackHandler() {
        SpringSecurityPasswordValidationCallbackHandler callbackHandler = new SpringSecurityPasswordValidationCallbackHandler();
        callbackHandler.setUserDetailsService(userDetailsService);
        return callbackHandler;
    }

    @Bean
    public Wss4jSecurityInterceptor securityInterceptor(){
        Wss4jSecurityInterceptor securityInterceptor = new Wss4jSecurityInterceptor();
        securityInterceptor.setValidationActions(""UsernameToken"");
        securityInterceptor.setValidationCallbackHandler(securityCallbackHandler());
        return securityInterceptor;
    }

    @Override
    public void addInterceptors(List<EndpointInterceptor> interceptors) {
        interceptors.add(securityInterceptor());
        super.addInterceptors(interceptors);
    }

    @Bean
    public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {
        MessageDispatcherServlet servlet = new MessageDispatcherServlet();
        servlet.setApplicationContext(applicationContext);
        servlet.setTransformWsdlLocations(true);
        return new ServletRegistrationBean(servlet, ""/soap/*"");
    }

    @Bean(name = ""service"")
    public DefaultWsdl11Definition defaultWsdl11Definition(XsdSchema powerAuthSchema) {
        DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition();
        wsdl11Definition.setPortTypeName(""PowerAuthPort"");
        wsdl11Definition.setLocationUri(""/soap"");
        wsdl11Definition.setTargetNamespace(""http://getlime.io/security/powerauth"");
        wsdl11Definition.setSchema(powerAuthSchema);
        return wsdl11Definition;
    }

    @Bean
    public XsdSchema countriesSchema() {
        return new SimpleXsdSchema(new ClassPathResource(""xsd/PowerAuth-2.0.xsd""));
    }

}
{code}

Here is my pom.xml file:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">
	<modelVersion>4.0.0</modelVersion>

	<name>powerauth-java-server</name>
	<description>PowerAuth 2.0 Server</description>
	<groupId>io.getlime.security</groupId>
	<artifactId>powerauth-java-server</artifactId>
	<version>0.12.0</version>
	<packaging>war</packaging>

	<parent>
		<groupId>io.getlime.security</groupId>
		<artifactId>powerauth-parent</artifactId>
		<version>0.12.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-ws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.getlime.security</groupId>
			<artifactId>powerauth-java</artifactId>
			<version>0.12.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-ext-jdk15on</artifactId>
			<version>1.55</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>xjc</id>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaDirectory>${project.basedir}/src/main/resources/xsd/</schemaDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
{code}

The only information I found on web about this exception is following:

http://stackoverflow.com/questions/24522190/cxf-wss4j-maven-nosuchmethod-error/24537142

It suggests updating Wss4j to 2.0.x version. However, this might probably break compatibility with the rest of the Spring WS Security...

Thank you for the great work you guys do with Spring WS and looking forward hearing from you!","OS: Mac OS X 10.12
Server: Apache Tomcat, 8.0.28
Java:
java version ""1.8.0_92""
Java(TM) SE Runtime Environment (build 1.8.0_92-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.92-b14, mixed mode)",,,,,,,,,,,,,,,,,,,,,,,"13/Oct/16 4:48 PM;jkieley;Screen Shot 2016-10-06 at 8.50.55 AM.png;https://jira.spring.io/secure/attachment/23586/Screen+Shot+2016-10-06+at+8.50.55+AM.png","13/Oct/16 4:48 PM;jkieley;Screen Shot 2016-10-06 at 9.12.04 AM.png;https://jira.spring.io/secure/attachment/23587/Screen+Shot+2016-10-06+at+9.12.04+AM.png","13/Oct/16 4:48 PM;jkieley;Screen Shot 2016-10-06 at 9.12.10 AM.png;https://jira.spring.io/secure/attachment/23588/Screen+Shot+2016-10-06+at+9.12.10+AM.png","29/Sep/16 10:11 AM;joshis;dependency-diagram.png;https://jira.spring.io/secure/attachment/23580/dependency-diagram.png","13/Oct/16 5:35 PM;jkieley;full_dependencies.txt;https://jira.spring.io/secure/attachment/23589/full_dependencies.txt",,,,,,,,,24969600,,2016-10-13 16:38:19.526,9223372036854775807,true,gregturn(gregturn),,,,"0|i09ghz:",9223372036854775807,9223372036854775807,,,,,,,,"29/Sep/16 10:11 AM;joshis;I managed to workaround the issue by providing following Maven dependency:

{code:xml}
<dependency>
    <groupId>org.apache.santuario</groupId>
    <artifactId>xmlsec</artifactId>
    <version>2.0.7</version>
</dependency>
{code}

However, it feels like a ""hacky"" solution to me - IMO I am missing some dependency that should be there already. I am attaching a full diagram of dependencies, if that helps anything...","29/Sep/16 10:12 AM;joshis;Full Maven dependencies.","13/Oct/16 4:38 PM;jkieley;I ran into the exact same issue.
I resolved it by adding this dependency:

{code:xml}
        <dependency>
            <groupId>org.apache.wss4j</groupId>
            <artifactId>wss4j-ws-security-common</artifactId>
            <version>2.1.7</version>
        </dependency>
{code}
THIS CAUSED A MASSIVE THREAD LEAK, leading to out of memory exceptions. I would attach more details, but I don't feel they would be helpful in resolving the root issue. 
","13/Oct/16 4:44 PM;jkieley;@Petr Dvorak 
I tried your solution, with the same outcome, a massive thread leak. I'll attach what details I have","13/Oct/16 5:31 PM;jkieley;Rolling back spring-ws-security to 2.2.4 resolved my issue with no thread leaks. My final solution:


{code:xml}
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-security</artifactId>
            <version>2.2.4.RELEASE</version>
        </dependency>
{code}
","14/Oct/16 12:05 AM;joshis;Just FYI - I also ended up downgrading back to 2.2.4-RELEASE version. The issues in 2.3.0 were just too many.","16/Feb/17 9:37 AM;runeks;It worked for me to exclude the transitive xmlsec dependency from spring-ws-security, and add version 2.0.8:
{code}
<dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-security</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.santuario</groupId>
                    <artifactId>xmlsec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.santuario</groupId>
            <artifactId>xmlsec</artifactId>
            <version>2.0.8</version>
        </dependency>
{code}","11/Aug/17 9:53 PM;_AR_;Rune, this worked for me - THANKS!","24/Aug/17 5:55 AM;tuno;Same problem with Spring Boot 1.5.4.RELEASE","27/Oct/17 5:55 PM;gregturn;Are you using 2.4.1.RELEASE or 3.0.0.RC1? The version of wss4j 2.0 used by the 2.x branch is 2.1.11. Does that produce the same thread leak issue?

Additionally: in converting the project to maven, I too, excluded org.apache.santuario:xmlsec from org.apache.ws.security:wss4j (the older wss4j) due to many API collisions.","08/Jun/18 3:55 PM;joshis;Hello, I am using 3.0.1 and I still get the same I18N exception...","21/Aug/18 10:41 PM;joshis;Hello there, we are no longer able to reproduce the issue in 3.0.3.RELEASE after we did some [additional cleanup of dependencies|[https://github.com/wultra/powerauth-server/pull/153/files].] Hopefully, the issue is already resolved.","21/Aug/18 10:59 PM;joshis;[~jkieley] Hello James, I know this is a long time but you are the best person to verify this issue is fixed without the negative consequences you mention above. Could you please have a look at the newer version of Spring WS-Security 3.0.3 and check if there is still the thread leak you mentioned?","29/Aug/18 4:03 PM;joshis;[~gregturn] We have performed our own tests to check if there are still some issues with thread leaks and determined there are no such problems. Therefore, this issue can be closed - [~jkieley], feel free to reopen in case you still can reproduce the issue with thread leaks.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1009|https://github.com/spring-projects/spring-ws/issues/1009]. ",,,
HTTP headers are ignored,SWS-968,69823,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,SergeZ,SergeZ,15/Sep/16 9:28 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.0,,,,,,,,Core,,,,,0,,,,,,,"HTTP headers set in HttpUrlConnectionMessageSender implementation are ignored.
In particular issue refers to Content-type property.

Since I have the following exception trying to call a SOAP Action : 
Caused by: org.springframework.ws.soap.SoapMessageCreationException: Could not create message from InputStream: Invalid Content-Type:text/html. Is this an error message instead of a SOAP response?; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Invalid Content-Type:text/html. Is this an error message instead of a SOAP response?
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:216) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:60) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:92) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:611) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:555) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:390) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at com.redsys.integration.main.TririgaBaseClient.getModules(TririgaBaseClient.java:55) ~[classes/:na]
	at com.redsys.integration.main.Application.lambda$lookup$0(Application.java:20) [classes/:na]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:798) [spring-boot-1.4.0.RELEASE.jar:1.4.0.RELEASE]
	... 6 common frames omitted
Caused by: com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Invalid Content-Type:text/html. Is this an error message instead of a SOAP response?
	at com.sun.xml.internal.messaging.saaj.soap.MessageImpl.identifyContentType(MessageImpl.java:655) ~[na:1.8.0_101]
	at com.sun.xml.internal.messaging.saaj.soap.MessageImpl.<init>(MessageImpl.java:301) ~[na:1.8.0_101]
	at com.sun.xml.internal.messaging.saaj.soap.ver1_1.Message1_1Impl.<init>(Message1_1Impl.java:65) ~[na:1.8.0_101]
	at com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl.createMessage(SOAPMessageFactory1_1Impl.java:63) ~[na:1.8.0_101]
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:188) ~[spring-ws-core-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	... 14 common frames omitted

I decided to use custom sender with the following code:
@Override
	protected void prepareConnection(HttpURLConnection connection) throws IOException {
		
		connection.setRequestProperty(""Content-Type"", ""application/soap+xml;charset=UTF-8"");
		
		super.prepareConnection(connection); 
		
	}



Exception tells us about wrong Content-Type: text/html though it has been changed.

Before calling to marshalSendAndReceive I do call webServiceTemplate.afterPropertiesSet().",,,,,,,,,,,,,,,,,,,,,,,,"15/Sep/16 9:28 AM;SergeZ;Application.java;https://jira.spring.io/secure/attachment/23548/Application.java","15/Sep/16 9:28 AM;SergeZ;MainConfiguration.java;https://jira.spring.io/secure/attachment/23549/MainConfiguration.java","21/Sep/16 1:50 PM;SergeZ;SOAPUI-request-raw.dump;https://jira.spring.io/secure/attachment/23557/SOAPUI-request-raw.dump","21/Sep/16 1:50 PM;SergeZ;SOAPUI-response-raw.dump;https://jira.spring.io/secure/attachment/23558/SOAPUI-response-raw.dump","23/Sep/16 11:06 AM;SergeZ;SOAPUI.pcapng;https://jira.spring.io/secure/attachment/23564/SOAPUI.pcapng","23/Sep/16 11:06 AM;SergeZ;SpringWS.pcapng;https://jira.spring.io/secure/attachment/23565/SpringWS.pcapng","15/Sep/16 9:28 AM;SergeZ;TririgaBaseClient.java;https://jira.spring.io/secure/attachment/23550/TririgaBaseClient.java","15/Sep/16 9:28 AM;SergeZ;TririgaCallerWithAuth.java;https://jira.spring.io/secure/attachment/23551/TririgaCallerWithAuth.java","21/Sep/16 1:50 PM;SergeZ;WebServiceTemplate-logging.dump;https://jira.spring.io/secure/attachment/23559/WebServiceTemplate-logging.dump",,,,,24969600,,2016-09-19 02:38:11.26,9223372036854775807,true,gregturn(gregturn),,,,"0|i09ff3:",9223372036854775807,9223372036854775807,,,,,,,,"19/Sep/16 2:38 AM;jaminh;That content type, application/soap+xml is use for SOAP version 1.2. You likely just need to define a messageFactory configured to use SOAP version 1.2 as described here http://docs.spring.io/spring-ws/site/reference/html/common.html#soap_11_or_12.","21/Sep/16 11:47 AM;SergeZ;Unfortunately that didn't help.

I setted up SOAP version in the following way:
 final MessageFactory msgFactory = MessageFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL);
	        final SaajSoapMessageFactory newSoapMessageFactory = new SaajSoapMessageFactory(msgFactory);
	        
	        WebServiceTemplate webServiceTemplate = getWebServiceTemplate();
	        webServiceTemplate.setMessageFactory(newSoapMessageFactory);
	        webServiceTemplate.setMessageSender(new TririgaCallerWithAuth());

Now it complains about: 
Caused by: org.springframework.ws.soap.SoapMessageCreationException: Could not create message from InputStream: Invalid Content-Type:text/html. Is this an error message instead of a SOAP response?; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Invalid Content-Type:text/html. Is this an error message instead of a SOAP response?


URL I pass into _marshalSendAndReceive_ method works 100% ( tested it in SOAP UI manually ).","21/Sep/16 1:08 PM;jaminh;Sorry, if you look closely at the exception it is actually saying you are getting a content-type of ""text/html"" in the response. When you get the successful response back with SOAP UI what is the Content-Type header for the response? If it is ""text/html"" then the service you are calling is not implementing SOAP correctly. Would it be possible for you to include the request and response you are getting from SOAP UI and the WebServiceTemplate?","21/Sep/16 1:55 PM;SergeZ;I've attached three files - two of them relate to SOAPUI ( request and response ) while the last one results from TRACE logging webServiceTemplate request. I did manage to see only SOAP envelop, with no HTTP headers mentioned ( do not know how to dig deeper in webServiceTemplate ). But my code contains explicit Content-Type setting in my TririgaCallerWithAuth.java file. So, there is no reponse file related to webServiceTemplate, since it seems that endpoint couldn't serve my webServiceTemplate's request.","21/Sep/16 2:49 PM;jaminh;It appears from the SOAP UI response the service is using MTOM so you will need to enable that on your Marshaller. But based on the stack trace I think there is a different issue causing the service to send back an error page or something instead of an actual response. You could potentially get the whole HTTP conversation using tcpdump or wireshark to see the HTTP headers you are sending and the response you are getting back from the service. Otherwise you might be able to try one of the suggestions from here http://stackoverflow.com/questions/1445919/how-to-enable-wire-logging-for-a-java-httpurlconnection-traffic.","23/Sep/16 11:05 AM;SergeZ;I've tried inspection using Wireshark and saw SOAP envelope in both cases - SOAP UI and spring-ws code ( as in the attachments ). They a bit different - latter introduces 4 namespaces. But, I can manually type spring-ws' envelope in SOAP UI editor and it works! But I still can't make it work with spring-ws code.

Using Wireshark it is clear the there is no any mention of ""Content-Type:text/html"" - both soapui and sringws uses same ""application/soap+xml"" content type. 

I've attached them as well... *.pcap fles

If you have any idea, I really appreciate that.

P.S.: I did set SOAP version 1.2 - didn't help. It remains 1.2 in my experiments.","23/Sep/16 11:18 AM;SergeZ;Seems like SOAPUI can parse response from web service while my code is not... Still looking at how to set allowable response's content-type","23/Sep/16 11:46 AM;SergeZ;There is one place where text/html has mentioned - in Accept. Is there a way to disable automatic value for Action header and set it explicitly ? Looks like this is a reason. ","23/Sep/16 6:55 PM;jaminh;Seems like you are sending your message to the wrong endpoint and you are getting a service listing or something like that in the response.  You need to send the message to http://10.0.5.168/tririga/ws/TririgaWS ","26/Sep/16 7:51 AM;SergeZ;Yes, the whole point of the service is to give a list of so called modules. Response from SOAP UI contains it. So, I've tried different variations with URLs but result always remains the case - complain about ""text/html"" content type.

Could you please provide very short snippet of calling marshallSendAndReceive(...) method with URL you mentioned ?","26/Sep/16 10:33 PM;jaminh;Try replacing 
	        
	        Object response = webServiceTemplate.marshalSendAndReceive(""http://10.0.5.168/tririga/ws"",
	        		getModules, new SoapActionCallback(""http://10.0.5.168/tririga/ws/TririgaWS/getModules""));

with 
	        
	        Object response = webServiceTemplate.marshalSendAndReceive(""http://10.0.5.168/tririga/ws/TririgaWS"",
	        		getModules);

in TririgaBaseClient. You shouldn't need the SoapActionCallback since when you are sending the request with SoapUI it is not including a SoapAction. I think the important thing you are missing is the ""/TririgaWS"" at the end of the URL.","26/Sep/16 10:40 PM;jaminh;Also in the MainConfiguration you will want to change

	@Bean
	public Jaxb2Marshaller marshaller() {
		return new Jaxb2Marshaller() {{ setContextPath(""com.redsys.wsdl.model""); }} ;
	}

to


	@Bean
	public Jaxb2Marshaller marshaller() {
		return new Jaxb2Marshaller() {{ setContextPath(""com.redsys.wsdl.model""); setMtomEnabled(true) }} ;
	}","05/Oct/16 9:21 PM;SergeZ;Thank you very much, that helped !","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1039|https://github.com/spring-projects/spring-ws/issues/1039]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,
Using HttpComponentsMessageSender with NTLM Authentication,SWS-964,69292,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,lanoxx,lanoxx,25/Jul/16 2:21 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,"I am trying to configure the {{HttpComponentsMessageSender}} for use with the {{WebServiceGatewaySupport}} implementation. My webservices use NTLM for authentication, so I need to configure that in the {{HttpClient}} which is being used by the message sender. This should be platform independent so I cannot just rely on the native windows fallback that the httpcommons library seems to include because that won't work under linux.

The Spring WS documentation seems to have no mention of either NTLM or configuring the HttpClient which is being used by the message sender. I understand that most of the API is actually from {{httpcomponents}} rather then Spring specific, but once a custom {{HttpClient}} is used certain methods on the {{HttpComponentsMessageSender}} cannot be used anymore. For example the {{setConnectionTimeout}} method. At least in this respect it would be nice if that was documented.

When I started to write this issue I was struggling to come up with a valid implementation to configure the {{HttpClient}}, but in the mean time I have figured it out. I still though I would post this issue, maybe the code can be useful to anyone how has the same problem or for improving the documentation.

This is what I came up with in the end:

{code}
    HttpComponentsMessageSender messageSender = new HttpComponentsMessageSender ();

    AuthScope authscope;
    NTCredentials credentials;
    CredentialsProvider credentialsProvider;
    Registry<AuthSchemeProvider> registry;
    RequestConfig requestConfig;

    authscope = new AuthScope (HOST_IP, HOST_PORT);

    credentials = new NTCredentials (""user"", ""pass"", null, ""domain"");

    credentialsProvider = new BasicCredentialsProvider ();

    credentialsProvider.setCredentials (authscope, credentials);

    registry = RegistryBuilder.<AuthSchemeProvider>create ()
            .register(AuthSchemes.NTLM, new NTLMSchemeFactory ())
            .build ();

    HttpRequestInterceptor interceptor
            = (request, context) -> request.removeHeaders(HTTP.CONTENT_LEN);

    requestConfig = RequestConfig.custom ()
                                 .setConnectTimeout (3000)
                                 .build ();

    HttpClient httpClient =  HttpClientBuilder.create ()
                                              .setDefaultRequestConfig (requestConfig)
                                              .setDefaultAuthSchemeRegistry (registry)
                                              .setDefaultCredentialsProvider (credentialsProvider)
                                              .addInterceptorFirst (interceptor)
                                              .build ();

    messageSender.setHttpClient (httpClient);

{code}

Points to pay attention to:

1. The HttpRequestInterceptor is required or there will be a dubious error about a duplicate {{Content-Lenght}} header.
2. Things like timeouts must be set in the RequestConfig and injected into the {{HttpClientBuilder}}, setting them directly on the {{HttpComponentsMessageSender}} causes an {{UnsupportedMethodException}}.
3. It seems to be always necessary to pass the domain name to the {{NTCredentials}} class, before I was using the {{java.net}} native method and it was enough to just pass username and password to the {{Authenticator}} interface.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:06.459,9223372036854775807,true,gregturn(gregturn),,,,"0|i09c53:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1035|https://github.com/spring-projects/spring-ws/issues/1035]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Wss4jSecurityInterceptor (wss4j2) validates despite NoSecurity setting,SWS-962,69082,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,kevin92,kevin92,01/Jul/16 12:02 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.0,,,,,,,,Security,,,,,1,,,,,,,"When using the class {{org.springframework.ws.soap.security.*wss4j2*.Wss4jSecurityInterceptor}} with the property {{validationActions}} set to _NoSecurity_, Spring-WS-Security still tries to validate the message.

In the method {{setValidationActions}}, Apache's {{WSSecurityUtil}} decodes the splitted string into Integers representing the actions.

{{WSSecurityUtil}}  just returns the internal List if the _NoSecurity_ action is found. The dedicated Integer 0 for _NoSecurity_ is *not* returned.

However {{Wss4jSecurityInterceptor#validateMessage (line 646)}} decides to bypass validation if the Integer 0 exists in the actions list.

Assuming that in the case of a _NoSecurity_ validation action, no other validation action makes sense and therefore none else is specified, a fix would be to simply check whether the list is empty (NoSecurity applies).

{code:title=Wss4jSecurityInterceptor}
// replace line 646 with the following instruction
if (validationActionsVector.isEmpty()) {
{code}",,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:05.988,9223372036854775807,true,gregturn(gregturn),,,,"0|i09axr:",9223372036854775807,9223372036854775807,,,,,,,,"01/Jul/16 12:12 AM;kevin92;Duplicate of SWS-961 Aspect b).","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1033|https://github.com/spring-projects/spring-ws/issues/1033]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
WSS4J2 Wss4jSecurityInterceptor -> validation configuration errors,SWS-961,68953,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,mads1980,mads1980,18/Jun/16 1:39 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,30/Oct/17 2:53 PM,2.3.0,,,,,,2.4.1,3.0.0.RELEASE,Security,,,,,3,,,,,,,"In our use case, we don't use any validation, just securement. This used to work in previous Spring WS versions that depend on WSS4J 1.x, without setting the validationActions property. However when upgrading to Spring WS 2.3.0 and WSS4J 2.x our XML configuration fails because of the following two issues:

a) NullPointerException in validateMessage() because validationActionsVector is not initialized. This field is only initialized if setValidationActions() is invoked, which should not be necessary if validation is not required. NoSecurity should be configured by default.

b) After configuring validationActions=""NoSecurity"" our configuration still caused failures (Wss4jSecurityValidationException(""No WS-Security header found"")), as validation was being attempted anyway. This is due to validationActionsVector being initialized as an empty list by WSSecurityUtil.decodeAction(""NoSecurity""). Thus the validationActionsVector.contains(WSConstants.NO_SECURITY) check in validateMessage() fails. An empty vector should be interpreted as no validation required, even if validateRequest or validateResponse are true (which are the defaults)

We resolved this by setting the following properties, which should not be required for our use case:
validationActions=""NoSecurity""
validateRequest=""false""
validateResponse=""false""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2016-06-27 22:40:41.534,9223372036854775807,true,gregturn(gregturn),,,,"0|i09a53:",9223372036854775807,9223372036854775807,,,,,,,,"27/Jun/16 10:40 PM;jaminh;I addressed this as part of the changes I made for https://jira.spring.io/browse/SWS-955. You can try running from my branch https://github.com/jaminh/spring-ws/tree/feature/SWS-955 and see if that fixes it for you.","17/Oct/16 4:25 PM;MarcE;I have the same Problem, setting validateRequest and Response to false also helped me.

I did a little debugging and found in the 2.3.0 Release in the class AbstractWsSecurityInterceptor in the handleResponse method the following line:

          if(this.skipValidationIfNoHeaderPresent && !this.isSecurityHeaderPresent((SoapMessage)messageContext.getRequest())) {
                return true;
            } 

Although the skipValidationIfNoHeaderPresent flag is set, it will always find a security header in the request, because I added one when sending the request to the server, so it will always step into the validation part. But I'm here in the handle response context so, why would I care for the request ... just the response. And despite from this line there is only referred to messageContext.getResponse in the rest of the handleResponse method. Maybe that's the reason why this flag is not working.

But the handling of the validationActions for NoSecurity seems also buggy, because the decode returns an empty list and not the expected Integer.valueOf(0) ... so the valudateMessage Method in class Wss4jSecurityInterceptor should better check against empty List instead of if(!this.validationActionsVector.contains(Integer.valueOf(0))) {

","19/Oct/16 4:37 AM;jaminh;I made a new branch to address the validation actions issues specifically https://github.com/jaminh/spring-ws/tree/feature/SWS-961. I have it checking the validationActionsVector for null or empty now. It seems strange to me that Wss4j is decoding ""NoSecurity"" as an empty list as opposed to a list with the NO_SECURITY(0) value in it. I left the original check for the NO_SECURITY value in there even though looking at the code it seems like it will never get used. Also I agree that the client handleResponse method should be checking the response for a security header so I changed that as well. I added tests for the null, empty and ""NoSecurity"" securement and validation actions. Let me know if that solves your issues or your thoughts on my solution.","20/Nov/16 1:34 PM;damnhandy;I've had the same issue with using the {{NoSecurity}} option as well and found the same issue as @jaminh. The problem starts in the [Wss4jSecurityInterceptor on line 386|https://github.com/spring-projects/spring-ws/blob/master/spring-ws-security/src/main/java/org/springframework/ws/soap/security/wss4j2/Wss4jSecurityInterceptor.java#L386]. As @jaminh points out, the list is empty. This method seems to assume that the WSSecurityUtil is returning a value, but it is not. It's returnning an empty collection as evidenced by line [418 in the WSSecurityUtil class in wss4j|https://github.com/apache/wss4j/blob/trunk/ws-security-dom/src/main/java/org/apache/wss4j/dom/util/WSSecurityUtil.java#L418].

The problem really lies at [line 646 of the Wss4jSecurityInterceptor|https://github.com/spring-projects/spring-ws/blob/master/spring-ws-security/src/main/java/org/springframework/ws/soap/security/wss4j2/Wss4jSecurityInterceptor.java#L646] as it assumes there's a value of {{WSConstants.NO_SECURITY}} in the collection, but there never will be. 

I think the solution proposed by @jaminh might be the right direction, but I think there needs to be a bit more thought here. For example, if someone sets a validationAction of {{UsernameToken Timestamp NoSecurity}}, what should be the behavior? My thought is that {{NoSecurity}} should trump everything and disable validation. But with this proposal, the {{NoSecurity}} option is still dropped on the floor. My thoughts are that the [setValidationActions()|https://github.com/spring-projects/spring-ws/blob/master/spring-ws-security/src/main/java/org/springframework/ws/soap/security/wss4j2/Wss4jSecurityInterceptor.java#L386] method should be enhanced to add a bit more logic to check for the {{NoSecurity}} option and populate the {{validationActionsVector}} accordingly.","27/Nov/16 11:43 PM;jaminh;I would think as far as the Wss4jSecurityInterceptor is concerned the validationAction String should be parsed the way the WSSecurityUtil decodeAction method parses it. Looking at that method is appears it will interpret either null, an empty String, or a String beginning with ""NoSecurity"" as meaning no security actions will be taken and an empty list is returned.  Based on the example of ""UsernameToken Timestamp NoSecurity"" the WSSecurityUtil.decodeAction method would interpret that as the UsernameToken and Timestamp action. If you think that behaviour is incorrect I think the appropriate place to change it would be in the WSSecurityUtil.decodeAction method rather than in the Wss4jSecurityInterceptor.","30/Oct/17 8:08 AM;Vity;Jesus, this bug has been reported more than 1 year ago and the fix is easy. Are there any maintainers here?","30/Oct/17 12:11 PM;jaminh;This issue was addressed as part of https://jira.spring.io/browse/SWS-989.","30/Oct/17 2:53 PM;gregturn;Resolved by SWS-989 in 2.x and SWS-1008 in 3.0","30/Oct/17 3:03 PM;Vity;@jaminh @greg turniquist thanks to both of you.
I am using Spring Boot 1.5.8 (spring-boot-starter-web-services 1.5.8) which still includes version 2.4.0. Shall I wait for the next Spring Boot WS starter release or shall I override the version?","30/Oct/17 3:23 PM;gregturn;I'd suggest setting:

{code}
spring-ws.version=2.4.1.RELEASE
{code}

and giving it a whirl in your existing application.

Depending on whether you are using Maven or Gradle, this is done differently.","30/Oct/17 3:31 PM;Vity;Thank you, upgraded successfully.
","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1032|https://github.com/spring-projects/spring-ws/issues/1032]. ",,,,,,
Adding Authentication Headers to SOAP request using Spring Integration,SWS-960,68951,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,craig.gardner@cdk.com,craig.gardner@cdk.com,17/Jun/16 8:45 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.3,,,,,,,,Core,,,,,0,,,,,,,"We're using Spring Integration Webservices and making a SOAP request to a third party.  We recently noticed that the Authentication headers don't appear to be sending.

I've run my code through a debugger and haven't been able to find a way to set authorization headers.

Unless I'm missing something, there isn't a way to add Authorization headers using HttpComponentsMessageSender.

More details about my configuration can be found http://stackoverflow.com/questions/37813780/how-to-add-authentication-headers-to-soap-request",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:05.427,9223372036854775807,true,gregturn(gregturn),,,,"0|i09a4n:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#999|https://github.com/spring-projects/spring-ws/issues/999]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Exceptions for control flow in Axiom support,SWS-959,68782,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,marschall,marschall,30/May/16 5:05 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.4,,,,,,,,Core,,,,,0,,,,,,,"We use Spring WS with Axiom. During normal request processing of a non-XOP/MTOM request a {{org.apache.axiom.om.OMException}} will be thrown even if request processing is successful. We get the following stack trace:

{code}
org.apache.axiom.om.OMException.<init>(String)
org.apache.axiom.attachments.Attachments.getAttachmentSpecType()
org.springframework.ws.soap.axiom.AxiomSoapMessage.isXopPackage()
org.springframework.ws.soap.axiom.AxiomSoapMessage.getOutputFormat()
org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(OutputStream)
org.springframework.ws.transport.AbstractWebServiceConnection.send(WebServiceMessage)
org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceConnection, WebServiceMessageReceiver)
org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(HttpServletRequest, HttpServletResponse, Object)
org.springframework.ws.transport.http.MessageDispatcherServlet.doService(HttpServletRequest, HttpServletResponse)
org.springframework.web.servlet.FrameworkServlet.processRequest(HttpServletRequest, HttpServletResponse)
org.springframework.web.servlet.FrameworkServlet.doPost(HttpServletRequest, HttpServletResponse)
javax.servlet.http.HttpServlet.service(HttpServletRequest, HttpServletResponse)
org.springframework.web.servlet.FrameworkServlet.service(HttpServletRequest, HttpServletResponse)
javax.servlet.http.HttpServlet.service(ServletRequest, ServletResponse)
{code}

inside {{org.apache.axiom.attachments.Attachments.getAttachmentSpecType()}} the {{delegate}} variable is an instance of {{org.apache.axiom.attachments.AttachmentSet}}

and {{#getContentType()}} is implemented as

{code}
    ContentType getContentType() {
        return null;
    }
{code}

Request processing is successful because the OMException is caught in {{org.springframework.ws.soap.axiom.AxiomSoapMessage.isXopPackage()}}

{code}
	@Override
	public boolean isXopPackage() {
		try {
			return MTOMConstants.MTOM_TYPE.equals(attachments.getAttachmentSpecType());
		}
		catch (OMException ex) {
			return false;
		}
		catch (NullPointerException ex) {
			// gotta love Axis2
			return false;
		}
	}
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:05.184,9223372036854775807,true,gregturn(gregturn),,,,"0|i0993b:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1031|https://github.com/spring-projects/spring-ws/issues/1031]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Soap MTOM: mtomEnabled=true and XSD schemas=... fails,SWS-958,68667,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,martin.peterka,martin.peterka,18/May/16 5:35 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.3.0,,,,,,,,XML,,,,,2,mtom,webservices,xsd,,,,"Setting _mtomEnabled=true_ and _schemas=..._ causes error:

{code:xml|title=spring-ws-content.xml fragment}
	<bean id=""jaxb2Marshaller"" class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
                <!-- .... -->
		<property name=""schemas"" ref=""xsdList""/>
		<property name=""mtomEnabled"" value=""true""/>
	</bean>
	<bean id=""xsdList"" class=""org.springframework.beans.factory.config.ListFactoryBean"">
               <!-- ... -->
{code}
{code:xml|title=XSD fragment}
     <xs:element name=""content"" type=""xs:base64Binary"">
{code}


{noformat}
[org.xml.sax.SAXParseException; lineNumber: 0; columnNumber: 0; cvc-type.3.1.2: Element 'ns2:content' is a simple type, so it must have no element information item [children].]
{noformat}


It seems that validation against XSD was done *after* MTOM data replacement.

*Sample project is here:*
[https://github.com/mpeterka/spring-ws-mtom]
(Error is in {{cz.datalite.spring.mtom.client.WebServiceClientTest#testMarshall}} call.)

*Expected behaviour is:*
# Validate XML message according to XSD.
# Replace content of data element with MTOM include tag.
# Send SOAP message.

Disabling message validation is only known workaround.","OS: Win, Linux
JDK8",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2019-02-25 12:56:28.804,9223372036854775807,true,gregturn(gregturn),,,,"0|i098dr:",9223372036854775807,9223372036854775807,https://github.com/mpeterka/spring-ws-mtom,,,,,,,"25/Feb/19 12:56 PM;Nikola;I have the same problem on server side - schema expects xml binary, but request constains XOP include element. Any workarounds or plans to solve that?","25/Feb/19 1:06 PM;martin.peterka;See link [https://github.com/mpeterka/spring-ws-mtom], Reference chapter - there are some links to similar problems.

But I think, it is still unresoved issue with no known correct workarounds.","01/Jul/19 8:56 AM;plebcity;I'm having the exact same issue. Its either MTOM or Response/Request validation a.t.m. for us. Can we get an E.T.A. when this is going to get fixed or atleast properly looked at?","02/Jun/20 9:37 AM;rickvhal;I'm also facing this issue. Can someone from the team shed a light on whether this will be looked at or is just not important enough?","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1030|https://github.com/spring-projects/spring-ws/issues/1030]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,
Spring WS ignores HTTP 500,SWS-956,68375,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,ibrencsics,ibrencsics,15/Apr/16 9:00 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.0.RELEASE,,,,,,,,,,,,,0,,,,,,,"When Spring WS makes a SOAP call, and receives back HTTP 500, it ignores the response code, and considers the call as successful:

o.a.h.wire | http-outgoing-0 << ""HTTP/1.1 500 Internal Server Error [\r][\n]""
o.a.h.wire | http-outgoing-0 << ""Content-Type: application/soap+xml[\r][\n]""
o.a.h.wire | http-outgoing-0 << ""Content-Length: 0[\r][\n]""
o.a.h.wire | http-outgoing-0 << ""Server: WEBrick/1.3.1 (Ruby/1.9.1/2009-12-07) OpenSSL/0.9.8e-rhel5[\r][\n]""
o.a.h.wire | http-outgoing-0 << ""Date: Fri, 15 Apr 2016 14:46:53 GMT[\r][\n]""
o.a.h.wire | http-outgoing-0 << ""Connection: Keep-Alive[\r][\n]""
o.a.h.wire | http-outgoing-0 << ""[\r][\n]""
o.a.h.imp~.exe~.MainClientExec | Connection can be kept alive indefinitely
o.s.w.cli~.Mes~.received       | Received no response for request [...]

On the contrary, when receiving 50x other then 500, it fails properly:

o.s.w.cli~.cor~.WebServiceTemplate | Received error for request [...]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:04.456,9223372036854775807,true,gregturn(gregturn),,,,"0|i096l3:",9223372036854775807,9223372036854775807,,,,,,,,"18/Apr/16 11:59 AM;ibrencsics;I managed to find to root cause of the problem. It Spring WS receives a HTTP 500 error that has a Content-Type (such as above), it considers the calls as successful. If there is no Content-Type, the call fails, and an exception is thrown. Does this implementation have any reason?","18/Apr/16 12:31 PM;ibrencsics;Things are happening fast now: I found that HTTP 500 + Content-Type=application/soap+xml is handled similarly like 200 OK by Spring WS, because it can carry a SOAP fault. So this can justify the Spring WS implementation. The only problem is that we encountered now this case when there is an empty HTTP 500 response with that Content-Type. I think this can happen any time, if a web server is not following perfectly the best practices.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1028|https://github.com/spring-projects/spring-ws/issues/1028]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,
Fix Spring WS javadoc typo,SWS-954,68161,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,05/Apr/16 2:33 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,05/Apr/16 2:41 AM,,,,,,,2.3.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/62,"0|i0959r:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1026|https://github.com/spring-projects/spring-ws/issues/1026]. ",,,,,,,,,,,,,,,,,
"XmlRootElementPayloadMethodProcessor supports requests annotated with XmlType, but not responses annotated with XmlType",SWS-953,68079,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,alexhutnik,alexhutnik,25/Mar/16 6:32 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.3,,,,,,,,Core,,,,,0,,,,,,,"In XmlRootElementPayloadMethodProcessor, supportsRequestPayloadParameter() supports both XmlRootElement-annotated classes and XmlType-annotated classes.  However, supportsResponsePayloadReturnType supports *only* XmlRootElement-annotated classes.

My XSD's types are all named (that is, no anonymous types in my XSD), so their generated-class equivalents are annotated with XmlType, not XmlRootElement.  This bug is preventing me from using my return types.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:03.728,9223372036854775807,true,gregturn(gregturn),,,,"0|i094rj:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1025|https://github.com/spring-projects/spring-ws/issues/1025]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
XWS Security SignatureMethod with algorithm Hmac-sha1,SWS-952,68051,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,WajdiTn,WajdiTn,22/Mar/16 1:03 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,,2.2.4,,,,,,,,Security,,,,,0,,,,,,,"I have created an XWSSecurityInterceptor with a configurationPolicy within a file named policy.xml. 

When I put 
<xwss:SignatureMethod algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1""/> , then everything went fine and my SOAP message got signed. 

But, when I put
 <xwss:SignatureMethod algorithm=""http://www.w3.org/2000/09/xmldsig#hmac-sha1""/> then I can see that an EncryptionKeyCallBack was trigged and not a SignatureKeyCallback. And as a result I have a NullPointerException in the SignatureProcessor ( line 408). 

I am quiet sure that  a policy file with no <Encrypt> that can somehow find an EncryptionKeyCallBack  within it's XWSSecurityInterceptor, means that there is a bug.

Can anyone see and help me understand what's going on here?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:48:03.497,9223372036854775807,true,gregturn(gregturn),,,,"0|i094lb:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1023|https://github.com/spring-projects/spring-ws/issues/1023]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
getResponseHeaders() is case sensitive,SWS-950,67982,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,oddgeir.gitlestad@gmail.com,oddgeir.gitlestad@gmail.com,14/Mar/16 9:17 AM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,05/Apr/16 2:30 AM,2.2.3,,,,,,2.3.0,,Core,,,,,1,spring-ws,,,,,,"In org.springframework.ws.transport.http.HttpUrlConnection we find the following code:


{code:java}
@Override
	public Iterator<String> getResponseHeaders(String name) throws IOException {
		Map<String, List<String>> mapHeader = connection.getHeaderFields();
		List<String> listHeaderValues = mapHeader.get(name);
		if (listHeaderValues == null) {
		    return Collections.<String>emptyList().iterator();
		} else {
		    return listHeaderValues.iterator();
		}
	}
{code}

This code returns an Iterator containing the HTTP-Header(s) that matches the parameter ""name"" . The problem is that this is case sensitive. According to the RFC HTTP-Headers are [case-insensitive|https://tools.ietf.org/html/rfc7230#section-3.2]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2016-03-14 16:23:42.541,9223372036854775807,true,gregturn(gregturn),,,,"0|i0945z:",9223372036854775807,9223372036854775807,,,,,,,,"14/Mar/16 4:23 PM;gregturn;Great point. What I'm wrestling with is that the interface for this API governs response header handling for not only HTTP, but also JMS, Mail, and XMPP. Do those implementations have the same case insensitivity?","14/Mar/16 5:06 PM;gregturn;Sorry. I resolved the wrong issue. Reopened.","14/Mar/16 5:21 PM;oddgeir.gitlestad@gmail.com;I'm not sure about the other protocols. A quick google search gave me nothing. But this method is overridden so if you can fix it there it should not affect the others right? ","14/Mar/16 9:55 PM;gregturn;True. It might take a bit of work to actually craft a unit test.","18/Mar/16 10:20 AM;oddgeir.gitlestad@gmail.com;I started looking at it. If i change the content type header in MyServlet in AbstractHttpWebServiceMessageSenderIntegrationTestCase the testSendAndReceiveFault test fails. This is good since what I'm experiencing is that i don't get access to the fault when the header has a different case than Content-Type. I will write a fix for this but what i wonder is if this is enough test coverage or should i write a separate test case for header case sensitivity?","18/Mar/16 12:49 PM;oddgeir.gitlestad@gmail.com;I created a pull request for this: https://github.com/spring-projects/spring-ws/pull/65","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1020|https://github.com/spring-projects/spring-ws/issues/1020]. ",,,,,,,,,,,
race-condition breaks dynamic WSDL ,SWS-947,67640,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,johannesb,johannesb,11/Feb/16 3:20 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,23/Aug/16 4:28 PM,2.2.0.RELEASE,,,,,,2.3.1,,Core,,,,,0,,,,,,,"We have developed a couple of Spring Webservices deployed on Tomcat in a (stateless) Docker container that from time to time somehow fail to start correctly and return a stacktrace instead of the WSDL. Restarting the container will almost always fix it at the first attempt.

The same issue was reported here by someone else: http://forum.spring.io/forum/spring-projects/web-services/122858-thread-safety-issue-with-requests-to-wsdl 

It looks like it is similar to bugs like these:
* https://issues.apache.org/jira/browse/XERCESJ-211
* https://netbeans.org/bugzilla/show_bug.cgi?id=111862#c15

Below the complete stacktrace:

08:14:35.378 [http-nio-8080-exec-1] DEBUG o.s.w.t.h.MessageDispatcherServlet - Could not complete request
javax.xml.transform.TransformerException: java.lang.NullPointerException
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:752) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:357) ~[na:1.8.0_40-internal]
        at org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter.handle(WsdlDefinitionHandlerAdapter.java:144) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
        at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:285) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961) [spring-webmvc-4.0.5.RELEASE.jar:4.0.5.RELEASE]
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:852) [spring-webmvc-4.0.5.RELEASE.jar:4.0.5.RELEASE]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:618) [servlet-api.jar:na]
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837) [spring-webmvc-4.0.5.RELEASE.jar:4.0.5.RELEASE]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:725) [servlet-api.jar:na]
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291) [catalina.jar:8.0.20]
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.20]
        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.0.20]
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [catalina.jar:8.0.20]
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [catalina.jar:8.0.20]
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219) [catalina.jar:8.0.20]
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [catalina.jar:8.0.20]
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501) [catalina.jar:8.0.20]
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142) [catalina.jar:8.0.20]
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [catalina.jar:8.0.20]
        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610) [catalina.jar:8.0.20]
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [catalina.jar:8.0.20]
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:516) [catalina.jar:8.0.20]
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1086) [tomcat-coyote.jar:8.0.20]
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:659) [tomcat-coyote.jar:8.0.20]
        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223) [tomcat-coyote.jar:8.0.20]
        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558) [tomcat-coyote.jar:8.0.20]
        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515) [tomcat-coyote.jar:8.0.20]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_40-internal]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_40-internal]
        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.0.20]
        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_40-internal]
Caused by: java.lang.NullPointerException: null
        at com.sun.org.apache.xerces.internal.dom.DeferredElementNSImpl.synchronizeData(DeferredElementNSImpl.java:108) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xerces.internal.dom.ElementImpl.getNodeName(ElementImpl.java:122) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:152) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:230) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:230) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:230) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:230) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:230) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:136) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:98) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:699) ~[na:1.8.0_40-internal]
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:743) ~[na:1.8.0_40-internal]
        ... 30 common frames omitted",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2016-08-23 16:28:54.962,9223372036854775807,true,gregturn(gregturn),,,,"0|i09227:",9223372036854775807,9223372036854775807,,,,,,,,"08/Aug/16 8:39 AM;johannesb;CAUSE:
WsdlDefinitionHandlerAdapter uses an instance of the Source interface named definitionSource.
According to my debugger this is a javax.xml.transform.dom.DOMSource with its node attribute set to an instance of:
com.sun.org.apache.xerces.internal.dom.DeferredDocumentImpl (from Oracle JDK8).

This DeferredDocumentImpl is the root of a tree of DeferredNode's (DeferredElementNSImpl, DeferredTextImpl) which are not thread safe, not even for read access, as the whole idea is that these are lazyily initialised. (See for example the FAQ from Xerces: https://xerces.apache.org/xerces2-j/faq-dom.html)

This object is created by Wsdl4jDefinition.getSource() which is (partially) synchronized but caches the result of wsdlWriter.getDocument(definition) that causes the problem.

SOLUTION:
My (succesfully tested) proposal would be to remove the caching of the DOM version of the definition in Wsdl4jDefinition.java

ALTERNATIVES:
- In theory there are other DOM implementations like the original Xerces that can be configured to disable this deferred feature. See:  https://xerces.apache.org/xerces-j/features.html but we cannot be sure which dom implementation is used and we cannot configure DOM parser features through the JSR-110 WSDLFactory and WSDLWriter.
- The original race condition only affects parallel initialization of deferred elements. It might be possible to somehow solve the original code by iterating once over all the elements in the DOM tree within the synchronized block in order to initialise all the deferred elements.

Reproduction and testing the solution was done with a JMeter loadtest with 8 threads that was started before starting the application.
","09/Aug/16 1:28 PM;johannesb;Today discovered that this bug not only can cause NullPointerException during WSDL retrieval but sometimes corrupts the WSDL:

We have the same identical Docker container on both servers but this returns different results on different servers:

curl http://localhost:xxx/app/v1/App.wsdl|egrep -o 'xs:complexType name=""MediumIdCollection.{50}'

Server 1 returns:
xs:complexType name=""MediumIdCollection""><xs:sequence><xs:element maxOccurs="""" minOccurs=

Server 2 returns:
xs:complexType name=""MediumIdCollection""><xs:sequence><xs:element maxOccurs=""unbounded"" m

In this case the race condition made the maxOccurs attribute value disappear, which makes this even more unpredictable.","23/Aug/16 4:28 PM;gregturn;The cached version of Document has been removed from Wsdl4jDefinition so it should return a clean copy. Code is available on 2.3.1.BUILD-SNAPSHOT if you want to try it out.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1017|https://github.com/spring-projects/spring-ws/issues/1017]. ",,,,,,,,,,,,,,
AddressingEndpointInterceptor fails when MessageID is not present in SOAP Message,SWS-944,67534,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,gregturn,DGoico,DGoico,03/Feb/16 6:31 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,25/Oct/17 1:56 AM,,,,,,,,,,,,,,0,specification-compatibility,,,,,,"The addressing specifications say “MessageID : This OPTIONAL element (of type xs:anyURI) conveys the [message id] property. This element MUST be present if wsa:ReplyTo or wsa:FaultTo is present.”

In method hasRequiredProperties, the implementations (Addressing200408, Addressing10) check if FaultTo and ReplyTo are not null. However, AbstractAddressingVersion at method getMessageAddressingProperties fills the ReplyTo-FaultTo elements with default values if those elements are not present in SOAP Message. 

When AddressingEndpointInterceptor in handleRequest calls hasRequiredProperties, ReplyTo-FaultTo won’t ever be null, thus making MessageID mandatory.

A Possible solution is that AddressingVersion implementations check if the ReplyTo-FaultTo elements are not null and don’t have the default value.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2016-02-04 09:01:05.167,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/56,"0|i091f3:",9223372036854775807,9223372036854775807,,,,,,,,"04/Feb/16 9:01 AM;arjen.poutsma;It seems like you have a solution in mind, would you be able to create a pull request over at https://github.com/spring-projects/spring-ws ?","09/Feb/16 1:43 PM;DGoico;Well I investigated a little more and theres no bug. I sorry for that.

The same problem in  [JAX-WS|https://java.net/jira/si/jira.issueviews:issue-html/JAX_WS-525/JAX_WS-525.html]

And the same solution, there are a hidden constraint in [specs|https://www.w3.org/TR/2006/REC-ws-addr-core-20060509/#formreplymsg] that i missed. 
If a reply is expected MessageID is mandatory, even if the reply-to uri is ""annonymous"".

However, what happen in cases that no reply is expected? is messageID mandatory? I don't know, and the solution is not as simple as I first thought.","09/Feb/16 8:13 PM;DGoico;Well, don’t close this issue yet, the problem persist and I thinking in another solution.

We are checking MessageID in handleRequest and at this point we don’t know if messageID is mandatory or not because we don’t know if a reply must be sent. And as specs says messageID is mandatory if reply is expected 

handleRequest must check only the properties needed in request and handleResponse the properties needed in response.

Need some time for implement a solution
","10/Feb/16 9:05 AM;arjen.poutsma;Ok, let us know when you have something!","21/Feb/16 6:53 PM;DGoico;Well, I surrender. There’s no easy way to solve this issue.

I do a pull request with a possible solution, but I don’t know if this solution is the best way to solve the problem.
MessageID is mandatory if a reply is expected, and is impossible to know whether an endpoint will return a value or throw an exception.

For now, in my service I created a custom AddresingVersion that no check MessageID, this works for me because all the methods in my service don’t send response in any way

I know is more easy change the client and send the messageID, but the client is implemented by another company that don’t want to change anything.
","25/Oct/17 1:56 AM;gregturn;Since no clear solution is apparent for the framework, I'm closing this issue.","23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1014|https://github.com/spring-projects/spring-ws/issues/1014]. ",,,,,,,,,,,
Upgrade WSS4j 2.0 to 2.1,SWS-943,67531,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,03/Feb/16 5:37 PM,23/Sep/20 4:48 PM,10/Jul/21 8:38 AM,03/Feb/16 5:39 PM,,,,,,,2.3.0,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/55,"0|i091ef:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:48 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1013|https://github.com/spring-projects/spring-ws/issues/1013]. ",,,,,,,,,,,,,,,,,
Not enough namespace context during XSD validation when using AxiomSoapMessageFactory,SWS-932,67269,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,dnswlt,dnswlt,08/Jan/16 12:22 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Feb/16 5:26 PM,2.2.4,,,,,,2.3.0,,Core,,,,,1,,,,,,,"XSD request validation using AxiomSoapMessageFactory and PayloadValidatingInterceptor fails with an UndeclaredPrefix validation error, because Axiom does not have full access to the namespace declarations made on the SOAP Envelope level.

As suggested in http://stackoverflow.com/questions/34633662/xsd-validation-fails-with-undeclaredprefix-when-using-axiomsoapmessagefactory-in, a possible fix is to use OMContainer#getXMLStreamReader(boolean, OMXMLStreamReaderConfiguration) and set the preserveNamespaceContext property to true in the OMXMLStreamReaderConfiguration object (in CachingPayload#getStreamReader(OMElement)).

I tested this, and it fixes the problem. Patch is attached, as well as a small sample project exposing the erroneous behaviour.

Request that fails:
{code:xml}
<soapenv:Envelope xmlns:sch=""http://example.com/springws/extension/schema"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
   <soapenv:Header/>
   <soapenv:Body>
      <sch:formatRequest >
         <sch:value xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""sch:dateType"">
           <sch:day>1</sch:day>
           <sch:month>1</sch:month>
           <sch:year>2000</sch:year>
         </sch:value>
      </sch:formatRequest>
   </soapenv:Body>
</soapenv:Envelope>
{code}
Response is  a SOAP fault with detail
{code:xml}
<detail>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">UndeclaredPrefix: Cannot resolve 'sch:dateType' as a QName: the prefix 'sch' is not declared.</spring-ws:ValidationError>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-elt.4.1: The value 'sch:dateType' of attribute 'http://www.w3.org/2001/XMLSchema-instance,type' of element 'sch:value' is not a valid QName.</spring-ws:ValidationError>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-type.2: The type definition cannot be abstract for element sch:value.</spring-ws:ValidationError>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">UndeclaredPrefix: Cannot resolve 'sch:dateType' as a QName: the prefix 'sch' is not declared.</spring-ws:ValidationError>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-attribute.3: The value 'sch:dateType' of attribute 'xsi:type' on element 'sch:value' is not valid with respect to its type, 'QName'.</spring-ws:ValidationError>
    <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-complex-type.2.1: Element 'sch:value' must have no character or element information item [children], because the type's content type is empty.</spring-ws:ValidationError>
</detail>
{code}

Request that works, with namespace decl in payload:
localhost:8084/format/format.wsdl
{code:xml}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" >
   <soapenv:Header/>
   <soapenv:Body>
      <sch:formatRequest xmlns:sch=""http://example.com/springws/extension/schema"" >
         <sch:value xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""sch:dateType"">
           <sch:day>1</sch:day>
           <sch:month>1</sch:month>
           <sch:year>2000</sch:year>
         </sch:value>
      </sch:formatRequest>
   </soapenv:Body>
</soapenv:Envelope>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/16 12:16 PM;dnswlt;0001-Fixed-namespace-context-bug.patch;https://jira.spring.io/secure/attachment/23259/0001-Fixed-namespace-context-bug.patch","08/Jan/16 12:24 PM;dnswlt;springws-extension.tar.gz;https://jira.spring.io/secure/attachment/23260/springws-extension.tar.gz",,,,,,,,,,,,24969600,,2016-01-19 16:54:30.683,9223372036854775807,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/59,"0|i08zsn:",9223372036854775807,9223372036854775807,,,,,,,,"19/Jan/16 4:54 PM;gregturn;Evaluating if this fits in the scope of our 2.3 release.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#966|https://github.com/spring-projects/spring-ws/issues/966]. ",,,,,,,,,,,,,,,,
NoSuchMethodError when using Axiom 1.2.14,SWS-930,67130,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,awilkinson,awilkinson,18/Dec/15 4:13 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,11/Apr/16 4:28 PM,2.2.4,,,,,,2.3.0,,,,,,,0,,,,,,,"The changes made for SWS-922 have resulted in Spring Web Services no longer working with Axiom 1.2.14. Specifically the move to using {{getSOAPMessage}} in place of the, deprecated in 1.2.15, {{getSoapMessage}}. IMO, it would be preferable to continue to use {{getSoapMessage}} and suppress the deprecation warning. This approach will make things compatible with Axiom 1.2.14 _and_ 1.2.15.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-12-18 16:34:14.4,9223372036854775807,true,gregturn(gregturn),,,,"0|i08yxr:",9223372036854775807,9223372036854775807,,,,,,,,"18/Dec/15 4:17 PM;awilkinson;The problem can be reproduced by building against the Spring IO Platform. For example:

{noformat}
./gradlew clean springIoCheck -PJDK8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home -PplatformVersion=2.0.0.RELEASE --continue
{noformat}

You'll see numerous test failures in {{spring-ws-core}}, all with this underlying cause:

{noformat}
java.lang.NoSuchMethodError: org.apache.axiom.soap.impl.builder.StAXSOAPModelBuilder.getSOAPMessage()Lorg/apache/axiom/soap/SOAPMessage;
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createAxiomSoapMessage(AxiomSoapMessageFactory.java:274)
        …
{noformat}","18/Dec/15 4:34 PM;mdiskin;Also would make sense to current axiom 1.2.16 (not 15)","11/Apr/16 4:28 PM;gregturn;Changed release version.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1004|https://github.com/spring-projects/spring-ws/issues/1004]. ",,,,,,,,,,,,,,
Fix namespace prefix handling with StreamingPayload,SWS-929,67080,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,15/Dec/15 4:19 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Dec/15 4:37 PM,2.2.3,,,,,,2.2.4,,,,,,,0,,,,,,,"The getName() method in JaxbStreamingPayload doesn't report the actual
namespace prefix that is later generated by the writeTo method. With
Axiom 1.2.13 that didn't cause problems, but 1.2.14 is less lenient,
causing an error as described in AXIOM-463.

This change:
* Updates the StreamingPayload documentation to specify that the
namespace prefix in the QName returned by getName() has no significance
(which is effectively how things are currently).
* Updates AxiomSoapBody so that it Axiom is aware that the namespace
prefix of the created OMSourcedElement is unknown.
* Modifies the unit test for setStreamingPayload so that it uses a
StreamingPayload with a prefix mismatch.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i08ymv:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1003|https://github.com/spring-projects/spring-ws/issues/1003]. ",,,,,,,,,,,,,,,,,
Upgrade docbook-reference-plugin,SWS-928,67079,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,gregturn,gregturn,15/Dec/15 4:00 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Dec/15 4:01 PM,,,,,,,2.2.4,,Documentation,,,,,0,,,,,,,Upgrading Gradle beyond 2.4 requires upgrading this plugin to work properly.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,,9223372036854775807,true,gregturn(gregturn),,,,"0|i08ymn:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1002|https://github.com/spring-projects/spring-ws/issues/1002]. ",,,,,,,,,,,,,,,,,
XOP Support in MTOM,SWS-926,66637,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,thodte,thodte,09/Nov/15 6:56 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,2.2.2,,,,,,,,OXM,,,,,2,,,,,,,"Sending a request with an attachment which is references in SOPA request like this:

{code:xml}
<ht:snapshotDatei><inc:Include href=""cid:645612655853"" xmlns:inc=""http://www.w3.org/2004/08/xop/include""/></ht:snapshotDatei>[\n]""
{code}

I get the follwing saop response:



{code:java}
faultstring xml:lang=""en"">NPE while unmarshalling. This can happen on JDK 1.6 due to the presence of DTD declarations, which are disabled.; nested exception is java.lang.NullPointerException</faultstring>

{code}

I found this: [http://veithen.github.io/2015/10/05/spring-ws-mtom.html]

Is that right? I want to support MTOM/XOP in my application to send large attachments.

What's the problem? Is there a solution?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:57.976,9223372036854775807,true,gregturn(gregturn),,,,"0|i08vy7:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#1000|https://github.com/spring-projects/spring-ws/issues/1000]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
WebServiceTemplate doesn't correctly handle fault for a non-500 http status response,SWS-925,66616,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,,edeandrea,edeandrea,07/Nov/15 1:47 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,16/Nov/15 5:02 PM,2.2.0.RELEASE,2.2.1,2.2.2,2.3.0,3.0.0.RC1,,,,Core,,,,,0,Spring,,,,,,"WebServiceTemplate doesn't correctly handle faults on a non-500 http status response. If you look at the handleFault method in WebServiceTemplate on line 740 - the method returns false if the connection does not have a fault (500 http status). In our scenario, the response comes back as a 200 but inside the soap message there is a fault. Lines 743-746 never get executed, which would have caught the fault in the soap message and would have made the handleFault method return true, which then kicks in the appropriate faultMessageResolver from the doSendAndReceive method (lines 613-621). Because of this the if statement on line 613 returns true and the responseExtractor tries to extract the data but gets Unmarshalling exceptions. Instead in this situation hasFault should return true and therefore the else block (lines 619-621) should kick in.

I've had to create a workaround by extending WebServiceTemplate like this:

public class FixedWebServiceTemplate extends WebServiceTemplate {
		public FixedWebServiceTemplate(WebServiceMessageSender messageSender, WebServiceMessageFactory messageFactory, ClientInterceptor interceptor) {
			super(messageFactory);

			setMessageSender(messageSender);
			setInterceptors(new ClientInterceptor[] { new CustomClientInterceptor(), interceptor });
			setFaultMessageResolver(new SoapFaultMessageResolver());
		}

		protected boolean hasFault(WebServiceConnection connection, WebServiceMessage response) throws IOException {
			boolean hasFault = super.hasFault(connection, response);

			// Underlying logic is flawed in my opinion - it doesn't handle the case where the response is a 200 but the
			// response payload contains a soap fault
			return (!hasFault && (response instanceof FaultAwareWebServiceMessage)) ? ((FaultAwareWebServiceMessage) response).hasFault() : hasFault;
		}
	}",Java 7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-11-16 17:02:07.823,9223372036854775807,true,gregturn(gregturn),,,,"0|i08vtj:",9223372036854775807,9223372036854775807,,,,,,,,"16/Nov/15 5:02 PM;gregturn;The SOAP specs dictate that SOAP faults must be sent with a 500 response code (in 1.1) or with a 400 or 500 response code (in 1.2). To handle faults coming from a 200 status code would not be spec compliant.

http://www.w3.org/TR/2000/NOTE-SOAP-20000508/#_Toc478383529

http://www.w3.org/TR/soap12-part2/#tabresstatereccodes","16/Nov/15 5:26 PM;edeandrea;Thanks for the info.","17/Nov/15 8:47 AM;arjen.poutsma;[~edeandrea] Did you try to disable the {{checkConnectionForFault}} property? If this property is disabled, it will bypass the check on the HTTP connection status, and will check the message instead.","17/Nov/15 11:34 AM;edeandrea;I did see that. The issue with that is by setting that it is a mutually-exclusive setting - either it will look at the http status code & handle it or it wont. What I need is both. If there is an http status error (400/500) then I want the failure (even if there is no fault message in the body). If it's a 200 and there is a fault message I want it to fail as well. That setting makes it so only one of those cases can ever be handled in a single request. In my instance we are calling a 3rd party service (hosted externally by a 3rd party vendor) and so we have no control whatsoever what they are doing. In some instances there are 500s and others it's 200s with a fault message. We've told them they are deviating from the soap spec, but at the end of the day there is nothing we can do about it.","17/Nov/15 12:44 PM;arjen.poutsma;Note that there are two properties: {{checkConnectionForError}} and {{checkConnectionForFault}}:

*  If {{checkConnectionForError}} is set to {{true}} (the default), {{WebServiceTemplate}} will check the HTTP status code for a non-200 status code and a throw a transport exception if it is.
*  If {{checkConnectionForError}} is set to {{false}}, the template not check the status code, and will never raise a transport exception.

* If {{checkConnectionForFault}} is set to to {{true}} (the default), after checking for errors, the template will inspect the HTTP connection for a 500 error code. If it is, it might be a SOAP fault, so the message is parsed to see if it is indeed a SOAP fault.
* If {{checkConnectionForFault}} is set to to {{false}}, the template will not check the status code for a 500, and always parses the message to see if it is a SOAP fault.

As you might understand, the main reason for inspecting the status code for a 500 is performance: it can be quite expensive to parse a complete SOAP message, which is required to see if it is a fault.

I do not know the service you are trying to acces, but I gather that setting {{checkConnectionForFault}} to false will work for the problem you describe. Did you try it?","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#998|https://github.com/spring-projects/spring-ws/issues/998]. ",,,,,,,,,,,,
Mime header : Multiple keys with same value,SWS-924,66543,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,pierre-leger,pierre-leger,01/Nov/15 4:10 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,02/Nov/15 8:22 PM,2.2.1,2.2.2,2.3.0,,,,2.2.3,,Core,,,,,0,,,,,,,"Hi,

I have an HTTP Response with in the header multiple values for the same key:
* cookie : value1
* cookie : value2

When I called the function to have the MimeHeaders, I have this:
* cookie : value2
* cookie : value2

About the code:

SaajSoapMessageFactory use parseMimeHeaders to get header from HTTP Response. Behind this you called [http://docs.oracle.com/javase/7/docs/api/java/net/URLConnection.html#getHeaderField(java.lang.String)] , this function returned only the last value.

Thanks,

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:57.499,9223372036854775807,true,gregturn(gregturn),,,,"0|i08vfj:",9223372036854775807,9223372036854775807,,,,,,,,"01/Nov/15 4:44 PM;pierre-leger;Pull Request : https://github.com/spring-projects/spring-ws/pull/42

Have a nice day!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#997|https://github.com/spring-projects/spring-ws/issues/997]. ",,,,,,,,,,,,,,,,
Wss4jSecurityInterceptor in spring-ws-security version 2.2.0 is not compatible with wss4j version 2.0.3,SWS-916,65868,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,,,himaakishore,himaakishore,16/Sep/15 1:59 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,2.2.0.RELEASE,,,,,,,,Security,,,,,1,Spring,,,,,,"Wss4jSecurityInterceptor in spring-ws-security version 2.2.0.RELEASE is not compatible with wss4j version 2.0.3 which undergone package restructure.

org.apache.ws.security.WSSecurityException is a java class in lower versions of wss4j jar and currently it is restructured to org.apache.wss4j.common.ext.WSSecurityException in wss4j version 2.0.3.

So i'm getting  class not found exception for org.apache.ws.security.WSSecurityException class when calling Wss4jSecurityInterceptor .

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-09-17 15:16:53.0,9223372036854775807,true,gregturn(gregturn),,,,"0|i08rm7:",9223372036854775807,9223372036854775807,,,,,,,,"17/Sep/15 3:16 PM;gregturn;Spring WS is built against Wss4j 1.6.15. Moving to Wss4j 2.0.5 is a major breaking change.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#991|https://github.com/spring-projects/spring-ws/issues/991]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
Creating MockWebServiceServer with application context fails with two different web service templates.,SWS-915,65380,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,shivaveeram,shivaveeram,18/Aug/15 3:03 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,,,,,,,,,Test,,,,,0,,,,,,,"Looks like this is working as design, but how do I test two different web service clients defined in the same application context. 

Exception:

Creating mockwebserviceserver for one of the client with application context fails as it finds two web service template to deal with. Is there a way to feed the web service template needed for this client at that time ? Please advise.

Let me know if you have any queries.

org.springframework.beans.factory.BeanInitializationException: Could not find exactly 1 WebServiceTemplate in application context
	at org.springframework.ws.test.support.MockStrategiesHelper.getStrategy(MockStrategiesHelper.java:84)
	at org.springframework.ws.test.client.MockWebServiceServer.createServer(MockWebServiceServer.java:142)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:55.669,9223372036854775807,true,gregturn(gregturn),,,,"0|i08p5b:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#990|https://github.com/spring-projects/spring-ws/issues/990]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Setting passwordsAreEncoded to true has no effect,SWS-909,64306,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,rockotseng,rockotseng,16/Jun/15 6:26 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,"Filed passwordsAreEncoded of WSSConfig will be reset to false during method doSenderAction of WSHandler even though I pass a customize WSSConfig to Wss4jSecurityInterceptor with the passwordsAreEncoded is true.

In method decodeUseEncodedPasswords of WSHandler, filed passwordsAreEncoded is resetting by checking options of WSHandler and property of message context. When both values are null, default value ""false"" will be returned.  Since Wss4jHandler has no longer expose to Wss4jSecurityInterceptor, I cannot pass the setting via option of Wss4jHandler. So the only choice is creating a ClientInterceptor and implementing a method below, set a property ""useEncodedPasswords"" with value ""1"" or ""true"" in every message context. 

{code:java}
public boolean handleRequest(MessageContext messageContext) throws WebServiceClientException {
	messageContext.setProperty(WSHandlerConstants.USE_ENCODED_PASSWORDS, ""1"");
return true;
}
{code}

Hope can have a more intuitive way to config property ""useEncodedPasswords"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:54.325,9223372036854775807,true,gregturn(gregturn),,,,"0|i08iwf:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#985|https://github.com/spring-projects/spring-ws/issues/985]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
SOAP Web services are not working anymore since 2.2.1,SWS-900,64012,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Won't Fix,,mooshben,mooshben,29/May/15 1:46 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,31/May/15 12:29 PM,2.2.1,,,,,,,,Core,,,,,0,,,,,,,"After upgrading from 2.2.0 to 2.2.1 SOAP web services are no longer working, I'm getting null responses.

Going back to 2.2.0 fixes the issue.

I'm not really sure what to add to the jira item for you to help with the issue.

This is the web service template configuration:

{code}
Jaxb2Marshaller marshaller = new Jaxb2Marshaller();
marshaller.setSupportJaxbElementClass(true);
marshaller.setContextPath(""com.test.project"");
WebServiceTemplate wst = new WebServiceTemplate(marshaller, marshaller);
String wsdlAddress = ""https://localhost/ws"";
wst.setDefaultUri(wsdlAddress);

wst.setMessageFactory(soapMessageFactory());
wst.setMessageSender(new HttpComponentsMessageSender(httpClientFactory.getSOAPHttpClient()));
wst.setCheckConnectionForError(false);
wst.setFaultMessageResolver(new TestFaultMessageResolver());
wst.setInterceptors(new ClientInterceptor[]{new FaultHandlingInterceptor()});
return wst;
{code}",,,,,,,,,,,,,,,,,SWS-892,,,,,,,,,,,,,,,,,,,,24969600,,2015-05-29 07:45:58.365,9223372036854775807,true,gregturn(gregturn),,,,"0|i08h6n:",9223372036854775807,9223372036854775807,,,,,,,,"29/May/15 7:45 AM;gregturn;I'll take a peek at this regression and see what changed, and what gap got introduced.","29/May/15 8:09 AM;gregturn;The newly coded behavior in https://github.com/spring-projects/spring-ws/commit/b6500fe5ac4253f1d17daeaf8e841b9476074200 is that if an interceptor returns false, WebServiceTemplate doesn't send the SOAP message. Does this sound like the situation you are experiencing? If so, are you able to share more details of your setup?

In your configuration, I can't see what FaultHandlingInterceptor does. If it returns false, then it will cause this new behavior to kick in and return a null.

The linked issue raises a concern that its possible to get null for either a failed interceptor or null is there is no response to the SOAP message. The suggestion is that such results would be ambiguous.
","31/May/15 5:59 AM;mooshben;Hi Greg,
Thanks a lot for your help.
Indeed this was the issue.
After changing handleRequest/handleResponse to return true in the interceptor it now works.
You can close the issue.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#978|https://github.com/spring-projects/spring-ws/issues/978]. ",,,,,,,,,,,,,,
Create a way to filter endpoint URL,SWS-899,63466,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,ddiehl,ddiehl,28/Apr/15 10:17 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,2.2.1,,,,,,,,Security,,,,,0,,,,,,,"In the configuration of MessageDispatcherServlet
there is no way to restrict the endpoint access.

The problem is that I want to create security-constraint for the Actual Service calls, but have my WSDLs open.

I have this on web.xml:
    <servlet>
        <servlet-name>spring-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
 		...
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/services/*</url-pattern>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Unsecured</web-resource-name>
			<url-pattern>/services/test.wsdl</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>NONE</transport-guarantee>
		</user-data-constraint>
	</security-constraint>
	-->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>HttpAuth</web-resource-name>
			<url-pattern>/services/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>ws-user</role-name>
		</auth-constraint>
		<user-data-constraint>
			<transport-guarantee>INTEGRAL</transport-guarantee>
		</user-data-constraint>
		
	</security-constraint>
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>myrealm</realm-name>
	</login-config>
	<security-role>
		<role-name>ws-user</role-name>
	</security-role>

But when I use my client using endpoint http://myserver/myapp/services/test.wsdl, MessageDispatcher does not filter that it is a wsdl Call, and still executes my Endpoint Method.

I would expect only returning the wsdl in this URL call.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:52.464,9223372036854775807,true,gregturn(gregturn),,,,"0|i08ecn:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#977|https://github.com/spring-projects/spring-ws/issues/977]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Namespace getting Removed During unmarshalling in Spring inbound and outBound gateway Marshall,SWS-898,63336,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,,,jagan23527001,jagan23527001,20/Apr/15 11:01 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,,,,,,,,,OXM,,,,,0,,,,,,,"I have a PRoxy Webservice using spring Integration inboun  and outbound gateWay MArshall . Respone comes from the actual webservice is getting altered in unmarshalling .
Example : - actual respone received from webservice with namespace ""xmlns:xs=""http://www.w3.org/2001/XMLSchema""  .

{code:xml}
<env:Envelope xmlns:env=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <env:Header>
      <ser:responseHeader xsi:nil=""true"" xmlns:ser=""http://myComPany/services""/>
   </env:Header>
   <env:Body>
      <ser:getValues xmlns:ser=""http://myComPany/services"">
{code}


Respone received from inbound gateway after unmarshalling ..	  
{code:xml}
<env:Envelope xmlns:env=""http://schemas.xmlsoap.org/soap/envelope/"">
   <env:Header>
      <responseHeader xmlns=""http://myCompany/services"">
         <TransactionId xsi:nil=""true"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
         <Timestamp xsi:nil=""true"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
         <ResponseId xsi:nil=""true"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""/>
      </responseHeader>
   </env:Header>
   <env:Body>
      <ns2:getValues xmlns:ns2=""http://mycompany/services"" xmlns:ns3=""http://schemas.xmlsoap.org/soap/encoding/"">
	  <ser:return soapenc:arrayType=""xs:anyType[3]"">
{code}

In this above output , namespace  ""xmlns:xs=""http://www.w3.org/2001/XMLSchema"" missing, due to this getting error. so error at ""xs:anyType[3]""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-04-21 02:18:00.281,9223372036854775807,true,gregturn(gregturn),,,,"0|i08dmn:",9223372036854775807,9223372036854775807,,,,,,,,"21/Apr/15 2:18 AM;arjen.poutsma;It seems like you are using a RPC/Encoded style of Web service, which is essentially deprecated in the [Basic Profile|http://www.ws-i.org/profiles/basicprofile-1.1-2004-08-24.html#SOAP_encodingStyle_Attribute]. Spring-WS only supports document/literal web services. So you're pretty much on your own here.

That said, you can add a custom namespace declaration of any SOAP element by using http://docs.spring.io/spring-ws/docs/current/api/org/springframework/ws/soap/SoapElement.html#addNamespaceDeclaration-java.lang.String-java.lang.String-","21/Apr/15 9:24 AM;jagan23527001;How can intercept the inbound-gateway respone to add custom namespace in ""addNAmespaceDEclaration"" soapElement, ? . i am able to do it in outbound..","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#976|https://github.com/spring-projects/spring-ws/issues/976]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,
Duplicate httpclient dependency in pom.xml,SWS-897,63253,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,jorgeal,jorgeal,15/Apr/15 7:08 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Apr/15 7:52 AM,2.2.1,,,,,,,,Core,,,,,0,,,,,,,"spring-ws-core's pom contains dependencies to httpclient 3.1 as well as httpclient 4.3.4:

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.4</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

According to these urls, commons-httpclient was moved to httpclient:
http://mvnrepository.com/artifact/commons-httpclient/commons-httpclient
http://hc.apache.org/httpclient-3.x/

Shouldn't the dependency to commons-httpclient 3.1 be removed and leave just a dependency to httpclient 4.3.4?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-04-15 07:52:49.253,9223372036854775807,true,gregturn(gregturn),,,,"0|i08d7b:",9223372036854775807,9223372036854775807,http://mvnrepository.com/artifact/commons-httpclient/commons-httpclient,,,,,,,"15/Apr/15 7:52 AM;arjen.poutsma;We can't remove the dependency to commons-httpclient because we still have support for it in the [CommonsHttpMessageSender|http://docs.spring.io/spring-ws/docs/current/api/org/springframework/ws/transport/http/CommonsHttpMessageSender.html] (though it is deprecated in favor of the [HttpComponentsMessageSender|http://docs.spring.io/spring-ws/docs/current/api/org/springframework/ws/transport/http/HttpComponentsMessageSender.html]). Deprecated features will only be removed in a major release, i.e. Spring-WS 3.0.","15/Apr/15 8:22 AM;jorgeal;Thanks, Arjen.

Waiting for Spring WS 3.0 :-) ","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#975|https://github.com/spring-projects/spring-ws/issues/975]. ",,,,,,,,,,,,,,,
AxiomHandler doesn't cleanup prefix mapping between siblings,SWS-895,63164,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,twinther,twinther,09/Apr/15 6:51 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,20/Apr/15 11:26 AM,2.2.0.RELEASE,,,,,,2.2.3,,,,,,,0,,,,,,,"AxiomHandler must cleanup the prefix mapping created in startPrefixMapping(..).
endPrefixMapping(..) should remove the mapped prefix to avoid later siblings getting previous siblings namespace definitions.

In worst case if the later sibling doesn't define any namespaces (when covered by the parent element) it would get namespace definitions for the previous sibling.",,,,,,,,,,,,,,,,,,,,,,,,"09/Apr/15 6:51 AM;twinther;AxiomHandler.patch;https://jira.spring.io/secure/attachment/22736/AxiomHandler.patch","20/Apr/15 12:12 AM;twinther;AxiomHandlerTest.patch;https://jira.spring.io/secure/attachment/22752/AxiomHandlerTest.patch",,,,,,,,,,,,24969600,,2015-04-17 11:43:07.419,9223372036854775807,true,gregturn(gregturn),,,,"0|i08cnj:",9223372036854775807,9223372036854775807,,,,,,,,"17/Apr/15 11:43 AM;gregturn;@Tommy

Can you either craft a test case, or supply me with an XML example that illustrates this issue? We aren't going to submit a patch without proof of it solving a problem.","20/Apr/15 12:12 AM;twinther;Hi Greg,

I've attached a test case that fails without the patch in AxiomHandler.

Br.
Tommy","20/Apr/15 7:52 AM;gregturn;Perfect.","20/Apr/15 10:02 AM;gregturn;Looks great! Have you signed the Spring CLA form? If not, please see https://support.springsource.com/spring_committer_signup","20/Apr/15 10:28 AM;twinther;Sounds great. I have signed the Spring CLA just now.

Do you have a ballpark estimate when the fix is included in a release?
No rush though, I have patched it locally.

Thanks,
Tommy","20/Apr/15 11:26 AM;gregturn;Fixed via https://github.com/spring-projects/spring-ws/commit/b8e4b806fa402f863d852c137f8e1b1826609f93","20/Apr/15 11:27 AM;gregturn;I'm not sure when the next release will come out. Spring WS moves pretty slowly these days.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#973|https://github.com/spring-projects/spring-ws/issues/973]. ",,,,,,,,,,
SOAP call not rejected when an interceptor fails,SWS-892,62562,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,arjen.poutsma,ibrencsics,ibrencsics,06/Mar/15 7:18 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,25/Mar/15 10:29 AM,2.2.0.RELEASE,,,,,,2.2.1,,Core,,,,,0,,,,,,,"During a SOAP call, in case a ClientInterceptor returns false (meaning it did not manage to do its job), the call is not rejected. The WebServiceTemplate class iterates through the ClientInterceptors, and if one returns false, it simply stops calling the next interceptors, but executes the SOAP call itself.

In my opinion this can lead to a security hole. If the WSS interceptor does not manage to encrypt the message body, the call is not rejected, but sensitive data goes to the wire.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-03-09 07:44:38.842,9223372036854775807,true,gregturn(gregturn),,,,"0|i0895r:",9223372036854775807,9223372036854775807,,,,,,,,"09/Mar/15 7:44 AM;arjen.poutsma;Minor correction: the WebServiceTemplate only sends the SOAP message if none of the executed interceptors have set a response in the message context or thrown an exception. 

That said, I can see your point and this needs to be fixed: when a ClientInterceptor returns false for handleRequest(), the request should not be sent.","16/Mar/15 3:23 AM;arjen.poutsma;See https://github.com/spring-projects/spring-ws/commit/b6500fe5ac4253f1d17daeaf8e841b9476074200","16/Mar/15 3:45 AM;ibrencsics;Thanks Arjen again for the fast reaction.","26/May/15 9:17 AM;rune;Hello. I just wanted to chime in on something here. I discovered this change in behavior as I upgraded from 2.2.0 to 2.2.1.

I think it is very bad to return {{null}} in case of a failing interceptor, as the code does now in version 2.2.1 (and the test asserts that.) Wouldn't it be more appropriate to throw an exception if one of the interceptors fail? The method has not fulfilled it's task, the SOAP call has not been performed, yet the method silently finishes and returns {{null}}.

In version 2.2.0, {{doSendAndReceive}} returned {{null}} if the SOAP-call was executed succesfully, but with an empty response. I.e. {{null}} indicated the SOAP-call was done, and there was no response. Now, the method also returns {{null}} if an interceptor fails.

Sorry if I am overlooking something. If I should open up a new issue instead of extending this one, just let me know :)","29/May/15 8:03 AM;gregturn;These two appear to be experiencing the same effect in the same release.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#970|https://github.com/spring-projects/spring-ws/issues/970]. ",,,,,,,,,,,,
string to int conversion,SWS-889,61949,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,,narenpasa,narenpasa,25/Jan/15 6:01 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jan/15 12:47 AM,,,,,,,,,Test,,,,,0,,,,,,,,prod,,,,43200,43200,,0%,43200,43200,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:50.295,9223372036854775807,true,gregturn(gregturn),,,,"0|i085o7:",9223372036854775807,9223372036854775807,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#967|https://github.com/spring-projects/spring-ws/issues/967]. ",,,,,,,,,,,,,,,,,
HttpComponentsMessageSender does not set correctly the maximum connections per host for https connection,SWS-888,61907,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,gregturn,amh19,amh19,22/Jan/15 6:26 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/Mar/15 12:40 PM,2.1.2,2.2.0.RELEASE,,,,,2.2.1,,Core,,,,,0,,,,,,,"The following piece of code is used to set the maximum number of connection by route in the method ""setMaxConnectionsPerHost"":

HttpHost host = new HttpHost(uri.getHost(), uri.getPort(), uri.getScheme());
HttpRoute route = new HttpRoute(host);

This works well for http host but it does not work for https because the route will not be set as ""secure"".  The following patch seems to work to correct this issue:

if (uri.getScheme().equals(""https"")) {
     httpRoute = new HttpRoute(httpHost, null, true); 
} else {
    httpRoute = new HttpRoute(httpHost);
}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-03-18 12:40:41.604,9223372036854775807,true,gregturn(gregturn),,,,"0|i085f3:",9223372036854775807,9223372036854775807,,,,,,,,"18/Mar/15 12:40 PM;gregturn;Fixed by https://github.com/spring-projects/spring-ws/commit/8f559cfb99e64859ecbc42ba0171de503d992f40

Added extra test assertions to confirm expected behavior.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#965|https://github.com/spring-projects/spring-ws/issues/965]. ",,,,,,,,,,,,,,,,
NullPointerException for a soap request with missing soap body tag,SWS-887,61535,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jim_liu_83,jim_liu_83,09/Jan/15 3:41 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/Mar/15 2:13 AM,2.2.0.RELEASE,,,,,,2.2.1,,Core,,,,,0,,,,,,,"There is Web Service which was built by using Spring WS 2.2.0 release. When service receiving a soap request with missing soap body tag, Spring WS thrown a NullPointerException exception. Here are the Exception and call stack:

{noformat}
[DEBUG]:[01/09/15 17:01:44.884]:[qtp713450595-20]:[org.springframework.ws.server.MessageDispatcher] - Endpoint invocation resulted in exception - responding with Fault
java.lang.NullPointerException: null
	at org.springframework.ws.soap.saaj.SaajSoapEnvelope.getBody(SaajSoapEnvelope.java:54) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.soap.AbstractSoapMessage.getSoapBody(AbstractSoapMessage.java:38) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.soap.AbstractSoapMessage.getPayloadSource(AbstractSoapMessage.java:50) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping.getLookupKeyForMessage(PayloadRootAnnotationMethodEndpointMapping.java:62) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping.getLookupKeyForMessage(PayloadRootAnnotationMethodEndpointMapping.java:52) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.endpoint.mapping.AbstractMethodEndpointMapping.getEndpointInternal(AbstractMethodEndpointMapping.java:62) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointMapping.java:119) ~[spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:272) [spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:215) [spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:176) [spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:89) [spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at com.experian.atb.webservice.endpoints.ATBWebServiceMessageReceiverHandlerAdapter.handle(ATBWebServiceMessageReceiverHandlerAdapter.java:40) [classes/:na]
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:293) [spring-ws-core-2.2.0.RELEASE.jar:2.2.0.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:961) [spring-webmvc-4.0.3.RELEASE.jar:4.0.3.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:863) [spring-webmvc-4.0.3.RELEASE.jar:4.0.3.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) [servlet-api-3.1.jar:3.1.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:837) [spring-webmvc-4.0.3.RELEASE.jar:4.0.3.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [servlet-api-3.1.jar:3.1.0]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:751) [jetty-servlet-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:566) [jetty-servlet-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:578) [jetty-security-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1111) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:498) [jetty-servlet-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1045) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:199) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:98) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:309) [jetty-rewrite-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:98) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.Server.handle(Server.java:461) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244) [jetty-server-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:534) [jetty-io-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607) [jetty-util-9.2.1.v20140609.jar:9.2.1.v20140609]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536) [jetty-util-9.2.1.v20140609.jar:9.2.1.v20140609]
	at java.lang.Thread.run(Thread.java:744) [na:1.7.0_51]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-03-18 02:13:41.176,47608,true,gregturn(gregturn),,,,"0|i08467:",47380,47310,,,,,,,,"18/Mar/15 2:13 AM;arjen.poutsma;We now throw a SaajSoapBodyException instead of a NPE, as a SOAP Body tag is required according to the SOAP specifications.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#964|https://github.com/spring-projects/spring-ws/issues/964]. ",,,,,,,,,,,,,,,,
AbstractAddressingEndpointMapping not calling SmartEndpointInterceptor.shouldIntercept while creating invocation chain,SWS-883,61005,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,nstoddar,nstoddar,04/Dec/14 6:37 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,05/Dec/14 12:33 PM,2.2.0.RELEASE,,,,,,2.2.1,,Core,,,,,0,,,,,,,"AbstractAddressingEndpointMapping adds all SmartEndpointInterceptors to its SoapEndpointInvocationChain without calling shouldIntercept() on each instance.  Contract this to AbstractEndpointMapping which does call shouldIntercept() on each interceptor and only adds ones that return true to its chain.

AbstractAddressingEndpointMapping should be enhanced to invoke shouldIntercept and only add the necessary SmartEndpointInterceptors to its SoapEndpointInvocationChain.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-12-05 01:08:28.091,47078,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/27,"0|i080wf:",46850,46780,http://stackoverflow.com/questions/27276302/whats-the-proper-way-of-configuring-a-soapactionsmartendpointinterceptor-along,,,,,,,"05/Dec/14 1:08 AM;arjen.poutsma;PR at https://github.com/spring-projects/spring-ws/pull/27","05/Dec/14 1:10 AM;arjen.poutsma;SO question at http://stackoverflow.com/questions/27276302/whats-the-proper-way-of-configuring-a-soapactionsmartendpointinterceptor-along/27291014","05/Dec/14 7:06 AM;gregturn;@arjen No problem. Thanks!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#959|https://github.com/spring-projects/spring-ws/issues/959]. ",,,,,,,,,,,,,,
Wss4jSecurityInterceptor.verifyCertificateTrust does not respect validators from WSSConfig,SWS-878,58955,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,aslakjo,aslakjo,23/Jul/14 3:37 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,2.2.0.RELEASE,,,,,,,,Security,,,,,0,,,,,,,"While working on a custom certificate trust system. I discovert that in order to supply a custom validator of trust i had to both set it in WSSConfig and override the verifyCertificateTrust method.
The reason is that the verifyCertificateTrust instansiate a Validator hardcoded by name useing its constructor.
I would assume and prefer that it used the configuration set in WSSConfig. How ever it could be that this is done intentionally.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:47.658,45114,true,gregturn(gregturn),,,,"0|i07q9j:",45127,44816,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#953|https://github.com/spring-projects/spring-ws/issues/953]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,,
Maven cannot resolve dependency,SWS-876,58375,Defect,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,daanbiesterbos,daanbiesterbos,20/Jun/14 4:17 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,17/Jul/14 1:14 AM,2.2.0.RELEASE,,,,,,,,,,,,,0,,,,,,,"Maven cannot resolve dependency as shown on http://projects.spring.io/spring-ws 

<dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws</artifactId>
            <version>2.2.0.RELEASE</version>
</dependency>",Maven,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:47.198,44538,true,gregturn(gregturn),,,,"0|i07n73:",44630,44240,http://projects.spring.io/spring-ws,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#951|https://github.com/spring-projects/spring-ws/issues/951]. ",,,,,,,,,,,,,,,,,
XSD Spring validation for any tags,SWS-875,57969,Bug,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,,,alexandrad,alexandrad,27/May/14 5:29 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,,,,,,,,,,,,,,,0,,,,,,,"We have an issue regarding the xsd Spring validation when the request contains duplicate tags within a parent tag which can have 'any' elements.

We have an xsd that contains a complexType having an element with   'minOccurs=1' and 'maxOccurs=1' properties and an 'any' element. For example: 

<xs:complexType>
    <xs:sequence>
              <xs:element name=""TPD"" minOccurs=""1"" maxOccurs=""1"" />
              <xs:any namespace=""##any"" processContents=""skip"" minOccurs=""0"" maxOccurs=""unbounded"" />
   </xs:sequence>
</xs:complexType>

We also have a pattern restriction for ""TPD"" element. 

Our problem is that XSD Spring pattern validation does not apply for the duplicated elements, as they stand on the position of 'any' element.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-05-27 06:27:31.298,44133,true,gregturn(gregturn),,,,"0|i07l0f:",44276,43835,,,,,,,,"27/May/14 6:27 AM;arjen.poutsma;Spring-WS does not do the validation itself, it uses the JDK validation mechanism found in javax.xml.validation. Are you sure this is a Spring-WS bug and not a JDK bug?","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#950|https://github.com/spring-projects/spring-ws/issues/950]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
When using @Action and annotation-driven my custom interceptors are not added to the endpoint,SWS-874,57283,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,joensson,joensson,22/Apr/14 11:29 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,23/Apr/14 5:27 AM,2.1.4,,,,,,2.2.RC1,,,,,,,0,,,,,,,"I have a small spring-ws project with a simple XML config:

{code}
<sws:interceptors>
    <bean class=""org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor""/>
</sws:interceptors>

<sws:annotation-driven/>
<context:component-scan base-package=""package.with.my.endpoints"" />

<bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"">
    <property name=""payloadCaching"" value=""true""/>
</bean>
{code}

My Endpoint class uses @Action for mapping requests:
{code}
@Endpoint(""MedicineCardIdwsEndpoint"")
public class MedicineCardIdws {
    @Action(""http://someuriandversion#GetMedicineCardIdws"")
    @ResponsePayload
    public Element getMedicineCard(@RequestPayload Element payload, SoapMessage soapMessage) {
        return null; 
    }
{code}
I know this is not a valid implementation, I just want to illustrate that the global interceptor described in the XML config is not getting executed.

To figure out why I inserted a breakpoint inside org.springframework.ws.soap.server.SoapMessageDispatcher#headerUnderstood and when that breakpoint is triggered I can see that the only interceptor that is registered for my Endpoint is the org.springframework.ws.soap.addressing.server.AddressingEndpointInterceptor which got added because of the Action annotation in my endpoint. 

I thought that any global interceptors in the XML configuration would end up being added to the interceptor chain for all endpoints regardles of how the endpoints were mapped? 
However it seems this is not the case. At first Ifigured I must be doing something wrong, but I cannot find any description of how to add custom interceptors when using @Action. (This is my first time using @Action and Spring-ws, so I may be mistaken)

If I switch from using @Action to using @SoapAction mappings instead my ""XML"" interceptors are added just fine. 

When using SoapActions I also have the option of registering interceptors for my mapping using the SoapActionAnnotationMethodEndpointMapping, but I could not find a similar endpointmapping class allowing me to register custom interceptors for WS addressing:
{code}
    <bean class=""org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping"">
        <property name=""interceptors"">
            <list>
<!-- my custom interceptors -->
            </list>        
        </property>
</bean>
{code}

The only workaround I could find that would allow me to add my custom interceptors when using @Action was doing as this forum post describes
http://forum.spring.io/forum/spring-projects/web-services/100060-interceptors-not-working-for-ws-addressing-endpoint-action?p=586915#post586915

If it is possible to add the interceptors when using WS-Addressing with Spring-ws in a simpler way it would be nice to get this documented. Otherwise I guess it must be a bug that the interceptors are not added to the endpoint?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-04-23 03:02:33.454,43537,true,gregturn(gregturn),,,,"0|i07hyv:",43783,43239,,,,,,,,"22/Apr/14 11:36 PM;joensson;I forgot to mention that my requests use a soap header with the mustUnderstand=""1"" attribute - which is why I added the breakpoint  in the headerUnderstood method that iterates over the interceptors.","23/Apr/14 3:02 AM;arjen.poutsma;Indeed, the SoapActionAnnotationMethodEndpointMapping does not have an {{interceptors}} property, but it does have a {{preInterceptors}} and {{postInterceptors}} property, as is described in the last paragraph of the class-level documentation here: http://docs.spring.io/spring-ws/site/apidocs/org/springframework/ws/soap/addressing/server/AbstractAddressingEndpointMapping.html. Granted, it is a bit hidden, but it's documented :).

That said, I will make the WS-Addressing endpoint mappings support the global {{<sws:interceptors/>}} block as well.","23/Apr/14 3:13 AM;joensson;Great news about the sws:interceptors and thank you for pointing out the pre/postInterceptors properties I had missed those when reading the docs. ","23/Apr/14 5:27 AM;arjen.poutsma;Fixed. Will be in upcoming 2.2.RC1 release.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#949|https://github.com/spring-projects/spring-ws/issues/949]. ",,,,,,,,,,,,,
Preventing Denial of Service attack at the server side,SWS-873,57148,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,Dinni,Dinni,15/Apr/14 5:32 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Apr/14 6:41 AM,2.1.4,,,,,,2.2.RC1,,XML,,,,,0,,,,,,,"Hi,
The request i am trying to send through WebServiceTemplate at the client side is as follows:-

<?xml version=""1.0""?>
<!DOCTYPE lolz [
  <!ENTITY lol ""lol"">
  <!ENTITY lol2 ""&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;"">
  <!ENTITY lol3 ""&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;"">
  <!ENTITY lol4 ""&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;"">
  <!ENTITY lol5 ""&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;"">
  <!ENTITY lol6 ""&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;"">
  <!ENTITY lol7 ""&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;"">
  <!ENTITY lol8 ""&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;"">
  <!ENTITY lol9 ""&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;"">
]>
<lolz>&lol9;</lolz>

At the server side, i am extending ""AxiomSoapMessageFactory"" and overriding its ""createXmlInputFactory()"" method to create an instance of WstxInputFactory and injecting this in MessageDispatcherServlet. On the WstxInputFactory instance, i am setting ""IS_REPLACING_ENTITY_REFERENCES"" & ""IS_SUPPORTING_EXTERNAL_ENTITIES"" to ""false"".

However, when i am sending the above request the execution control goes to FrameworkServlet then DispatcherServlet but before even going to the MessageDispatcherServlet it fails throwing Java Heap Space Error.
It is trying to create a string Object using StringBuilder for the request xml, but the since the request xml has nested Entity references it throws Out Of Memory Exception.

Please see the attachment for the exception.

After debugging in detail i came to know that the Java Heap Space Error is first caught as InvocationTargetException in org.springframework.web.method.support.InvocableHandlerMethod.invoke().

Because of this the execution control is not going from the DispatcherServlet to the MessageDispatcherServlet.doService() method.

Please help me in resolving this Error. 


","Windows 7, JDK1.7.51, Tomcat 7.0.32",,,,,,,,,,,,,,,,,,,,,,,"15/Apr/14 5:32 AM;Dinni;StackTrace.docx;https://jira.spring.io/secure/attachment/21942/StackTrace.docx","15/Apr/14 6:10 AM;Dinni;StackTrace.txt;https://jira.spring.io/secure/attachment/21943/StackTrace.txt",,,,,,,,,,,,24969600,,2014-04-15 05:41:52.126,43402,true,gregturn(gregturn),,,,"0|i07hav:",43675,43104,,,,,,,,"15/Apr/14 5:41 AM;arjen.poutsma;I do not have access to Microsoft word. Could you attach the stracktrace in another format? Or better yet: past it in a comment in noformat tags?","15/Apr/14 6:09 AM;Dinni;{noformat}
org.springframework.web.util.NestedServletException: Handler processing failed; nested exception is java.lang.OutOfMemoryError: Java heap space
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:972)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.cannontech.servlet.filter.GeneralSecurityFilter.doFilter(GeneralSecurityFilter.java:27)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.cannontech.servlet.filter.FacesFilter.doFilter(FacesFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.cannontech.servlet.filter.TimerFilter.doFilter(TimerFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.cannontech.web.util.ErrorHelperFilter.doFilter(ErrorHelperFilter.java:139)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at com.cannontech.web.login.LoginFilter.doFilter(LoginFilter.java:145)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2367)
	at java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:130)
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:114)
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:535)
	at java.lang.StringBuilder.append(StringBuilder.java:204)
	at com.sun.org.apache.xalan.internal.xsltc.trax.SAX2DOM.characters(SAX2DOM.java:117)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.characters(ToXMLSAXHandler.java:546)
	at org.apache.xerces.parsers.AbstractSAXParser.characters(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.characters(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanContent(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:650)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:746)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:359)
	at org.springframework.ws.client.core.WebServiceTemplate$5.doWithMessage(WebServiceTemplate.java:496)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:573)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:494)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:438)
	at com.cannontech.web.support.development.EimTestController.sendSoapRequest(EimTestController.java:162)
	at com.cannontech.web.support.development.EimTestController.executeRequest(EimTestController.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:219)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
04/11/2014 15:31:51,533 IST [http-bio-8080-exec-5] ERROR 
{noformat}","15/Apr/14 6:41 AM;arjen.poutsma;I don't think there is anything we can do about the particular issue you're running into.That said, disabling the ""IS_REPLACING_ENTITY_REFERENCES"" & ""IS_SUPPORTING_EXTERNAL_ENTITIES"" properties is a good idea by default. I've changed the AxiomSoapMessageFactory accordingly.","15/Apr/14 7:02 AM;Dinni;Is it possible to have a feature like ""prohibitDtd"" in the DispatcherServlet itself so that such malicious requests based on the Business needs can be handled appropriately without causing runtime errors.
We can find this feature in Microsoft .Net framework","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#948|https://github.com/spring-projects/spring-ws/issues/948]. ",,,,,,,,,,,,,
Security Headers missing with XwsSecurityInterceptor and Spring Integration,SWS-871,56810,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,mleese,mleese,31/Mar/14 9:29 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,14/Apr/14 3:05 AM,2.1.4,,,,,,,,Security,,,,,0,,,,,,,"When using Spring Integration's (2.2.4) Web Service Outbound Gateway with the XwsSecurityInterceptor, the security headers are not added to the message that is sent to the server.

When creating the actual SAAJ SOAP message, the AbstractWebServiceOutboundGateway.RequestMessageCallback calls the DefaultHeaderMapper which sets the SOAP action field.  This triggers the serialization of the Java SOAP object to a byte array.

Later, when the XwsSecurityInterceptor adds the security headers, the byte array is not recreated so the data actually sent to the server does not include the byte array.  

Recommend adding the following at line 139 of the XwsSecurityInterceptor to fix the issue:
try
{
   result.saveChanges();
}
catch ( SOAPException e)
{
  throw new XwsSecuritySecurementException(""Unable to save security headers to SOAP message"", e);
}
}",,,,,,,,,,,,,,,,SWS-870,,,,,,,,,,,,,,,,,,,,,24969600,,2014-04-08 06:10:20.778,43065,true,gregturn(gregturn),,,,"0|i07flj:",43399,42767,,,,,,,,"08/Apr/14 6:10 AM;arjen.poutsma;This seems related to SWS-870.","10/Apr/14 12:52 AM;arjen.poutsma;Could you please indicate your runtime environment? (JDK, app server, etc. with version numbers).","10/Apr/14 7:34 AM;mleese;JDK 1.7 on Tomcat 7.  We're using Metro 2.1.1 for the security backend.  This problem only occurred after upgraing to JDK 1.7 and Spring WS 2.1.4 and Spring Integration 2.1.","14/Apr/14 3:05 AM;arjen.poutsma;Duplicate of SWS-870","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#945|https://github.com/spring-projects/spring-ws/issues/945]. ",,,,,,,,,,,,,
WS-Addressing headers missing from synchronous SOAP responses,SWS-870,56794,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ibrencsics,ibrencsics,31/Mar/14 1:26 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,14/Apr/14 3:04 AM,2.1.4,,,,,,2.2.RC1,,Core,,,,,0,,,,,,,"WS-Addressing headers are missing from synchonous SOAP responses:
<env:Header/>

By debugging Spring-WS, we found that the AddressingEndpointInterceptor inserts the header values correctly in the SOAPMessage, and even the SOAPMessage parameter of the Saaj13Implementation.writeTo() contains the right WS headers. But when message.writeTo(outputStream) is called, the headers are not serialized.

If in the beginning of the method Saaj13Implementation.writeTo() we call message.saveChanges() without checking message.saveRequired(), the WS-A headers are serialized correctly. We assume that the flag that controls if save is needed might not be correctly set by a previous method.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-04-10 00:51:46.872,43049,true,gregturn(gregturn),,,,"0|i07fi7:",43384,42751,,,,,,,,"10/Apr/14 12:51 AM;arjen.poutsma;Could you please indicate your runtime environment? (JDK, app server, etc. with version numbers).","10/Apr/14 2:10 AM;ibrencsics;Please find the parameters here:

$ /usr/java/default/bin/java -version
java version ""1.7.0_51""
Java(TM) SE Runtime Environment (build 1.7.0_51-b13)
Java HotSpot(TM) Client VM (build 24.51-b03, mixed mode, sharing)

$ cat /etc/*release*
CentOS release 5.10 (Final)

Apache Tomcat Version 7.0.37","10/Apr/14 3:48 AM;arjen.poutsma;Thanks!
The reason I asked is that we got two similar issues around the same time (this one and SWS-871), while I don't recollect making any changes in the header code recently. I suspected it might have had something to do with JDK 8 coming out and changing SAAJ behavior, but that doesn't seem to be the case.

I will investigate further next week.","10/Apr/14 6:42 AM;ibrencsics;Thanks a lot for investigating. I also noticed that the other ticket (871) has the same problem, and the same conclusion. Probably it is not an accident. Although I cant imagine what could happen to SAAJ, but the fact is that if I call the saveChanges() unconditionally, the WSA headers are serialized correclty.","10/Apr/14 6:50 AM;arjen.poutsma;Indeed, it appears that changing it to an unconditional saveChanges() would do the trick.

But first I would like to understand what caused these two bugs to appear all of a sudden, when the underlying SAAJ code in Spring-WS has been pretty much the same since version 1.0 was released over five years ago. We've never had SOAP headers disappear in all that time, and now we get two reports on a single day. That much coincidence makes me suspicious and I want to investigate it more.","10/Apr/14 7:35 AM;mleese;I also found it quite the coincidence that both bug reports were written on the same day.  

I was able to track down our issue to Spring Integration.  The DefaultSoapHeaderMapper sets the SOAP action on the SOAPMessage (this functionality was added in Spring Integration 2.1).  This causes the SOAPMessage to call saveChanges() which sets needsSave to false.  After this, the security headers are added.  When SOAPMessage.writeTo() is called, it doesn't call saveChanges() again because needsSave is false.  

So I think the true culprit is the changes made in Spring Integration.  They just excercise an underlying bug in Spring WS.

Incidentally, SOAPMessage.writeTo() sets needsSave to true so if you set on the trace level logging on the WebServiceTemplate, the message transmission will work with the security headers attached.","10/Apr/14 7:40 AM;arjen.poutsma;[~ibrencsics] are you also using Spring Integration, by any chance?","10/Apr/14 1:08 PM;ibrencsics;No, we dont use Spring Integration.","10/Apr/14 4:06 PM;ibrencsics;I did some investigation, but still confused. The SAAJ MessageImpl.needsSave() method has this comment: ""All write methods (i.e setters) should call this method in order to make sure that a save is necessary since the state has been modified"".

The only thing I can imagine is that in some setter in SAAJ the needsMethod() is not called, and finally in the Saaj13Implementation the saveChanges() is not triggered. Maybe it would make sense calling the needsSave() manually as the last step of the interceptors that inject the WSS, WSA headers.","11/Apr/14 1:37 AM;ibrencsics;I can confirm what Matthew wrote. If I set the logging level to TRACE for the org.springframework.ws package, the problem is fixed. In case of TRACE level:
1) in the log entry the WSA headers are missing (the first call to writeTo() is not correct), but the save flag is configured
2) but when the Saaj13Implementation calls the writeTo() the second time, the WSA headers are correct on the wire.","14/Apr/14 3:04 AM;arjen.poutsma;Fixed by calling saveChanges unconditionally now. Thanks for the help, everybody.","17/Sep/14 7:47 AM;ibrencsics;Let me just share here that there might be a side effect of this fix:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=444222
https://java.net/jira/browse/SAAJ-75","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#944|https://github.com/spring-projects/spring-ws/issues/944]. ",,,,,
Performance issue in retrieving ws-addressing headers,SWS-869,56763,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,,koosg,koosg,28/Mar/14 6:41 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,28/Mar/14 8:22 AM,2.1.4,,,,,,,,Core,,,,,0,,,,,,,"When using the abstractAddressingEndpointmapping the addressing versions to be set are both instances of the abstractAddressingVersion class.
The AbstractAddressing version retrieves the to, action, and messageId fields from the soapheader by xpath.
This is very slow: our performance tests showed a 10-15% slowdown because of this in our application. A barebone test application will probably show much higher numbers.

Cause: 
on most machines, it uses apache xalan for xpath resolution, which, for each evaluate, transforms the DOM to a new Document Table Model. This is slow.
What is even worse, is that for each DTM, it starts scanning the classpath to determine what sort of DTM is necessary. 

In total, this means that *for every incoming request*, three times the classpath is scanned to read a file from a jar, *then* the DTM is constructed
The first can be worked around with a JVM property, but that only solves roughly half of the performance hit.

As is, it is impossible to work around this: 
The abstractAddressingEndpointmapping uses the (privately set) versions to see which matches, so we cannot set a differing AddressingVersion implementation which retrieves these fields without xpath.

The solution would be to either 
a) fetch the elements from the ws-address header directly (instead of using xpath) in the AbstractAddressingVersion, or, 
b) at the very least, make it possible to set which versions are supported (i.e. make them non-private) in the AbstractAddressingEndpointMapping so people can resolve this themselves (although I have no idea where I'd then ensure that the new endpointmapping is used instead of the 'invalid' one)

(NB: I'm judging this critical as I think it might actually be a 50% or more performance hit for a barebones application)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-03-28 07:23:58.301,43019,true,gregturn(gregturn),,,,"0|i07fcf:",43358,42721,,,,,,,,"28/Mar/14 7:23 AM;arjen.poutsma;I don't see how the versions are private, as there is a public setter available. Do you mean that you would like to have a getter as well?","28/Mar/14 7:50 AM;koosg;Hmmm... don't know how that passed my view. Indeed there is! That would imply that we can work around it by implementing a version which does *not* use xpath.","28/Mar/14 7:56 AM;koosg;So it's possible to work around xpath by implementing our own addressingversions.

Still, that leaves the performance issue in spring-ws...","28/Mar/14 8:22 AM;arjen.poutsma;Note that there is also a initDefaultStrategies method in the AbstractAddressingEndpointMapping you can override, just to get rid of the defaults. Not sure if it's necessary.

With regard to the performance: I'd rather use XPath and be more robust (albeit slower) than a custom solution which easily breaks.

Closing as Invalid for now.","31/Mar/14 3:46 AM;koosg;I understand and agree... for now ;)

I'll work around it, and if I find the time, do a performance analysis and post it here (which should include testcode so we can all verify it, of course). 
Thanks!","21/May/14 12:23 AM;koosg;I've made a workaround.

Interestingly enough, I've found that the ws-addressing header is parsed three times. Is there a reason why it is not cached?
It is called in order at:

	at nl.rabobank.bvk.ta.msg.intercept.CustomAddressing10.getMessageAddressingProperties(SoapMessageInterceptorInitializer.java:147)
	at org.springframework.ws.soap.addressing.server.AbstractAddressingEndpointMapping.getEndpoint(AbstractAddressingEndpointMapping.java:223)
	at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:269)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:212)

Then at:
	at nl.rabobank.bvk.ta.msg.intercept.CustomAddressing10.getMessageAddressingProperties(SoapMessageInterceptorInitializer.java:147)
	at org.springframework.ws.soap.addressing.server.AddressingEndpointInterceptor.handleRequest(AddressingEndpointInterceptor.java:76)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:224)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:173)

And finally at:
	at nl.rabobank.bvk.ta.msg.intercept.CustomAddressing10.getMessageAddressingProperties(SoapMessageInterceptorInitializer.java:147)
	at org.springframework.ws.soap.addressing.server.AddressingEndpointInterceptor.handleResponseOrFault(AddressingEndpointInterceptor.java:99)
	at org.springframework.ws.soap.addressing.server.AddressingEndpointInterceptor.handleFault(AddressingEndpointInterceptor.java:93)
	at org.springframework.ws.server.MessageDispatcher.triggerHandleResponse(MessageDispatcher.java:371)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:225)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:173)


That looks a bit like overkill to me","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#943|https://github.com/spring-projects/spring-ws/issues/943]. ",,,,,,,,,,,
How to set Properties in messageContext during spring configuration via XML. and what are the properties and how are they set which are available in Messagecontext,SWS-866,56242,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Invalid,arjen.poutsma,kingroger76,kingroger76,07/Mar/14 1:48 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,10/Mar/14 2:17 AM,2.1.4,,,,,,,,Core,,,,,0,,,,,,, what are the properties and how are they set which are available in Messagecontext from a client perspective.? there isn't enough support out there to understand this.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-03-10 02:17:45.051,42585,true,gregturn(gregturn),,,,"0|i07d27:",42988,42287,,,,,,,,"10/Mar/14 2:17 AM;arjen.poutsma;Sorry, but this does not qualify as a bug report. If you have questions, please use the forum.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#940|https://github.com/spring-projects/spring-ws/issues/940]. ",,,,,,,,,,,,,,,,
wsdl generation issue with CommonsXsdSchemaCollection,SWS-861,55184,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Cannot Reproduce,arjen.poutsma,stasilla,stasilla,17/Jan/14 1:54 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,10/Feb/14 6:58 AM,2.1.3,,,,,,2.2.RC1,,XML,,,,,0,,,,,,,"while trying to generate wsdl from xsd the attributes minOccurs, maxOccurs, nillable and etc. are getting lost:
xsd:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns=""http://services.webservices.customerapi.de"" xmlns:objects=""http://objects.webservices.customerapi.de""
  targetNamespace=""http://services.webservices.customerapi.de"" elementFormDefault=""qualified"" attributeFormDefault=""qualified"">
  <xsd:import namespace=""http://objects.webservices.customerapi.de"" schemaLocation=""Hello.xsd"" />
  <xsd:element name=""HelloRequest"">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element nillable=""false"" name=""name"" type=""xsd:string""  />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name=""HelloResponse"">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name=""Hello"" type=""objects:Hello"" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
{code}

with such defined DefaultWsdl11Definition bean:
{code:xml}
  <bean id=""HelloService"" class=""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"" lazy-init=""true"">
    <property name=""schemaCollection"">
      <bean class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"">
        <property name=""inline"" value=""true"" />
        <property name=""xsds"">
          <list>
            <value>schemas/HelloService.xsd</value>
          </list>
        </property>
      </bean>
    </property>
    <property name=""portTypeName"" value=""HelloService"" />
    <property name=""serviceName"" value=""HelloService"" />
    <property name=""locationUri"" value=""/endpoints"" />
  </bean>
{code}
as a result am receiving wsdl (here only part of it):
{code:xml}
  <xsd:element name=""HelloRequest"">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name=""name"" type=""xsd:string"" /> <!-- here was ""nillable"" attr lost-->
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name=""HelloResponse"">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name=""Hello"" type=""objects:Hello"" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
{code}
could you please check this issue, because it is very important for contract-data-first approach.

regards",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-02-03 03:28:38.352,41664,true,gregturn(gregturn),,,,"0|i078nz:",42276,41366,,,,,,,,"03/Feb/14 3:28 AM;arjen.poutsma;Can you elaborate on which specific attributes were lost? You mention that {{nillable=""false""}} was lost, but that is not a problem, because nillable is false by default (see http://www.w3schools.com/schema/el_element.asp) and does not need to be specified.","03/Feb/14 6:04 AM;stasilla;Sorry for bad example. I tried with nillable=""true"" and it didn't work too. Also minOccurs and maxOccurs didn't work.","10/Feb/14 6:58 AM;arjen.poutsma;I'm afraid I can't reproduce this. I've added additional tests for this purpose (see https://github.com/spring-projects/spring-ws/commit/ea9e2d1d2d35e8f588bd09bd9571ad86894953b3) but it works fine for me.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#930|https://github.com/spring-projects/spring-ws/issues/930]. ",,,,,,,,,,,,,,
NullPointerException: empty SOAP body and use of an interceptor,SWS-857,52594,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,martin.wegner@ebp.de,martin.wegner@ebp.de,07/Jan/14 7:45 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,27/Jan/14 3:19 AM,2.1.4,,,,,,2.2.RC1,,Core,,,,,0,,,,,,,"What you need:
1.) An endpoint with SOAP action mapping and payload root mapping.
2.) An interceptor for the payload root mapping.

When you send a message with a SOAP action and an empty SOAP body, then you will get a null pointer exception.

Problem is in PayloadRootSmartSoapEndpointInterceptor line 61/62:
{code:java}
QName payloadRootName = PayloadRootUtils.getPayloadRootQName(request.getPayloadSource(), transformerHelper);
if (!namespaceUri.equals(payloadRootName.getNamespaceURI())) {
{code}

The variable payloadRootName is null if the SOAP body is empty.

{noformat}
Stack trace (the NullPointerException is logged at DEBUG level...):
DEBUG o.s.w.s.s.SoapMessageDispatcher MessageDispatcher.processEndpointException:333 - Endpoint invocation resulted in exception - responding with Fault
java.lang.NullPointerException: null
	at org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptor.shouldIntercept(PayloadRootSmartSoapEndpointInterceptor.java:62) ~[spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.server.endpoint.interceptor.DelegatingSmartEndpointInterceptor.shouldIntercept(DelegatingSmartEndpointInterceptor.java:61) ~[spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointMapping.java:139) ~[spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:269) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:212) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:173) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:59) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:292) [spring-ws-2.1.4.RELEASE-all.jar:2.1.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:931) [spring-webmvc-4.0.0.RELEASE.jar:4.0.0.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:833) [spring-webmvc-4.0.0.RELEASE.jar:4.0.0.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:647) [servlet-api.jar:na]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:807) [spring-webmvc-4.0.0.RELEASE.jar:4.0.0.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:728) [servlet-api.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) [catalina.jar:7.0.47]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.47]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) [tomcat7-websocket.jar:7.0.47]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) [catalina.jar:7.0.47]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) [catalina.jar:7.0.47]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222) [catalina.jar:7.0.47]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123) [catalina.jar:7.0.47]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:611) [catalina.jar:7.0.47]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171) [catalina.jar:7.0.47]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100) [catalina.jar:7.0.47]
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:953) [catalina.jar:7.0.47]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) [catalina.jar:7.0.47]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408) [catalina.jar:7.0.47]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1041) [tomcat-coyote.jar:7.0.47]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:603) [tomcat-coyote.jar:7.0.47]
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2430) [tomcat-coyote.jar:7.0.47]
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2419) [tomcat-coyote.jar:7.0.47]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [na:1.7.0_45]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.7.0_45]
	at java.lang.Thread.run(Unknown Source) [na:1.7.0_45]
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:42.672,39074,true,gregturn(gregturn),,,,"0|i06t1b:",39742,38776,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#927|https://github.com/spring-projects/spring-ws/issues/927]. ",,,,,,,,,,,,,,,,,
SPRING WEB SERVICES 2.1.3 is not generating content type  as application/xop+xml  for MTOM.,SWS-855,52223,Defect,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Cannot Reproduce,arjen.poutsma,vepanjerigovind,vepanjerigovind,06/Dec/13 5:11 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Feb/14 5:45 AM,2.1.3,,,,,,2.2.RC1,,,,,,,0,,,,,,,"Spring WS isnot generating raw message as  below mentioned

{noformat}
Accept-Encoding: gzip,deflate
Content-Type: application/soap+xml;charset=UTF-8;action=""urn:ihe:iti:2007:RetrieveDocumentSet""
Content-Length: 1566
Host: 192.168.6.158:9080
Connection: Keep-Alive
User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
{noformat}

{code:xml}
<s:Envelope xmlns:s=""http://www.w3.org/2003/05/soap-envelope"" xmlns:a=""http://www.w3.org/2005/08/addressing"">
  <!--The following header applies for a Synchronous Web Services Exchange Request 
        Please note that a soap message can only have one header section. -->
  <s:Header>
{code}

Any client accessing this web service expects Content-Type as application/xop+xml.  

Due to this content type mismatch client is not receiving the response ant throwing error as below mentioned

System.ServiceModel.ProtocolException: The content type application/xop+xml;type=""application/soap+xml"" of the response message does not match the content type of the binding (multipart/related; type=""application/xop+xml""). If using a custom encoder, be sure that the IsContentTypeSupported method is implemented properly.”

XSD
------
{code:xml}
<xs:element name=""DocumentContent"" type=""xs:base64Binary""/>
{code}


Spring config
-----
{code:xml}
<bean id=""messageFactory"" class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory"">
  	
		<description>A message factory to support SOAP 1.2</description>
		<!--  <constructor-arg ref=""soapMessageFactory"" />		 -->
		<property name=""soapVersion"">
			<util:constant static-field=""org.springframework.ws.soap.SoapVersion.SOAP_12"" />
		</property>		
	</bean>

<bean id=""messageReceiver""
		class=""org.springframework.ws.soap.server.SoapMessageDispatcher"">
		<property name=""endpointAdapters"">
			<bean
				class=""org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapter"">
				<property name=""marshaller"" ref=""marshaller"" />
				<property name=""unmarshaller"" ref=""marshaller"" />
			</bean>
		</property>
		<property name=""endpointMappings"" ref=""endpointMapping"" />
	</bean>


	<bean id=""endpointMapping""
		class=""org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping"">
	<!-- 	<property name=""messageSenders"">
			<bean
				class=""org.springframework.ws.transport.http.HttpUrlConnectionMessageSender"" />
		</property> -->
		<property name=""postInterceptors"">
			<list>
							<ref bean=""soapEnvelopePayloadInterceptorRef"" />
							
			</list>
		</property>

	</bean>


	<bean id=""marshaller"" class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
		<property name=""contextPaths"">
			<list>
				<value>package1</value>
				<value> package2</value>
			
			</list>
		</property> 	
		<property name=""mtomEnabled"" value=""true"" />
{code}


Please let me know how to fix this issue.
","Spring ws 2.1.3
Websphere 8.5.5.1 application server
JDK 1.6
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-02-06 05:45:37.919,38702,true,gregturn(gregturn),,,,"0|i06r6n:",39442,38404,,,,,,,,"06/Feb/14 5:45 AM;arjen.poutsma;I am having problems reproducing this. Can you attach a simple, minimal test case that reproduces this behavior?","30/Dec/14 11:11 AM;aggiepilot04;This is also happening to us in a Grails app and Spring WS 2.2.0. The ContentType header is set correctly while running locally, but running on Weblogic (10.3.6), the header is set to text/xml. 

{code:title=Weblogic}
<Dec 30, 2014 12:52:45 PM CST> <Notice> <Stdout> <BEA-000000> <2014-12-30 12:52:45,931 [[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'] TRACE MessageTracing.sent  - Sent request [------=_Part_1_370067740.1419965565920
Content-Type: text/xml; charset=utf-8
Content-Transfer-Encoding: 8bit
Content-ID: <soapPart>
{code}

{code:title=Local}
2014-12-30 12:43:23,021 [http-bio-8081-exec-14] TRACE MessageTracing.sent  - Sent request [------=_Part_4_1021751216.1419965003018
Content-Type: application/xop+xml; charset=utf-8; type=""text/xml""
{code}

Can we re-open?","30/Dec/14 8:13 PM;aggiepilot04;Disregard.  Pulling in saaj-impl 1.3.23 and preferring application classes for javax.xml.soap.* resolved this issue.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#926|https://github.com/spring-projects/spring-ws/issues/926]. ",,,,,,,,,,,,,,
Uploading Project on Maven Central,SWS-852,51879,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Won't Fix,arjen.poutsma,bassem.zohdy,bassem.zohdy,16/Nov/13 4:17 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/Mar/15 2:05 AM,2.1.4,,,,,,,,Core,,,,,0,Maven,,,,,,"the dependency of the project on maven with version 2.1.4 not downloading the jar file, and by checking maven central I found the pom is only uploaded please check below link:
http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.springframework.ws%22%20AND%20a%3A%22spring-ws%22 ",maven using STS 3.4,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2015-03-18 02:05:32.544,38360,true,gregturn(gregturn),,,,"0|i06pgn:",39163,38062,http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.springframework.ws%22%20AND%20a%3A%22spring-ws%22,,,,,,,"18/Mar/15 2:05 AM;arjen.poutsma;As of Spring-WS 2.2, we no longer publish the all-in-one spring-ws jar. Instead, you'll have to use the separate module jars, such as spring-ws-core, spring-ws-security, etc.","04/Jun/15 11:38 PM;v.jansen;[~arjen.poutsma] the version this issue is about is 2.1.4 not a 2.2.x version. Also the ""all-in-one"" binaries are available on other repos like [http://maven.springframework.org/release/org/springframework/ws/spring-ws/2.1.4.RELEASE/]. We have no direct access from our build servers to this repo, but we can retrieve jars from the repo1.maven.org repo.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#928|https://github.com/spring-projects/spring-ws/issues/928]. ",,,,,,,,,,,,,,,
NoEndpointFoundException swallowed by WebServiceMessageReceiverObjectSupport,SWS-850,51078,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,slsh,slsh,26/Sep/13 1:25 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,03/Feb/14 3:54 AM,2.1.3,,,,,,2.2.RC1,,Core,,,,,0,,,,,,,"Most HTTP level exceptions, such as XML parsing issues, can be handled by writing a custom WebServiceMessageHandlerAdapter that converts them to, for example, SOAP faults. However, NoEndpointFoundException is swallowed by WebServiceMessageReceiverObjectSupport class so that it is not thrown:

        catch (NoEndpointFoundException ex) {
            if (connection instanceof EndpointAwareWebServiceConnection) {
                ((EndpointAwareWebServiceConnection) connection).endpointNotFound();
            }
        }

this is in final method handleConnection(), so it cannot be overridden either. Instead, a handle adapter must re-implement this whole method if NoEndpointFoundException is wanted to be converted to SOAP Fault. Either the exception should be re-thrown or there needs to be an extension point.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-02-03 03:53:53.291,37569,true,gregturn(gregturn),,,,"0|i06lvr:",38583,37271,,,,,,,,"26/Sep/13 1:33 AM;slsh;looks like a simple add of throw at the end of 'catch' would fix this:
{code}
        catch (NoEndpointFoundException ex) {
            if (connection instanceof EndpointAwareWebServiceConnection) {
                ((EndpointAwareWebServiceConnection) connection).endpointNotFound();
            }
            throw ex;
        }
{code}","03/Feb/14 3:53 AM;arjen.poutsma;I'm afraid that rethrowing the exception is not an option, as that would break a lot of transports. The NoEndpointFoundException is meant to be dealt with by the transport.

That said, I've refactored the code so that the handling of the exception is now in a template method (WebServiceMessageReceiverObjectSupport#handleNoEndpointFoundException), which you can override in your subclass.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#924|https://github.com/spring-projects/spring-ws/issues/924]. ",,,,,,,,,,,,,,,
Logging on DEBUG breaks DefaultMessageListenerContainer on WebSphere MQ,SWS-848,50841,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,jkva,jkva,11/Sep/13 12:07 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,27/Jan/14 3:13 AM,2.1.3,,,,,,2.2.RC1,,Core,,,,,0,,,,,,,"When I set the logging in the package org.springframework.ws.transport.support (or org.springframework FWIW), I get a strange exception. See below:

{code:Java}
[9/5/13 20:18:30:610 CEST] 00000056 ConnectionEve A   J2CA0056I: The Connection Manager received a fatal connection error from the Resource Adapter for resource JMS$LQG00386-LQG00386$JMSManagedConnection@3. The exception is: com.ibm.msg.client.jms.DetailedIllegalStateException: JMSCC0032: This message consumer is closed. An application called a method that must not be used after the message consumer is closed. Ensure that the message consumer is not closed before calling the method.
[9/5/13 20:18:30:640 CEST] 00000051 MCWrapper     E   J2CA0081E: Method cleanup failed while trying to execute method cleanup on ManagedConnection <null> from resource jms/LQG00386. Caught exception: javax.resource.spi.ResourceAdapterInternalException: Failed to stop connection on cleanup
        at com.ibm.ejs.jms.JMSCMUtils.mapToResourceException(JMSCMUtils.java:176)
        at com.ibm.ejs.jms.JMSManagedConnection.cleanup(JMSManagedConnection.java:1122)
        at com.ibm.ejs.j2c.MCWrapper.cleanup(MCWrapper.java:1549)
        at com.ibm.ejs.j2c.FreePool.cleanupAndDestroyMCWrapper(FreePool.java:732)
        at com.ibm.ejs.j2c.FreePool.returnToFreePool(FreePool.java:502)
        at com.ibm.ejs.j2c.PoolManager.release(PoolManager.java:1915)
        at com.ibm.ejs.j2c.MCWrapper.releaseToPoolManager(MCWrapper.java:2404)
        at com.ibm.ejs.j2c.MCWrapper.connectionErrorOccurred(MCWrapper.java:2543)
        at com.ibm.ejs.j2c.ConnectionEventListener.connectionErrorOccurred(ConnectionEventListener.java:511)
        at com.ibm.ejs.jms.JMSManagedConnection.connectionErrorOccurred(JMSManagedConnection.java:1493)
        at com.ibm.ejs.jms.JMSConnectionHandle.markManagedConnectionAsStale(JMSConnectionHandle.java:922)
        at com.ibm.ejs.jms.JMSSessionHandle.markManagedObjectsAsStale(JMSSessionHandle.java:1540)
        at com.ibm.ejs.jms.JMSMessageConsumerHandle.markManagedObjectsAsStale(JMSMessageConsumerHandle.java:915)
        at com.ibm.ejs.jms.JMSMessageConsumerHandle.receive(JMSMessageConsumerHandle.java:570)
        at com.ibm.ejs.jms.JMSMessageConsumerHandle.receive(JMSMessageConsumerHandle.java:500)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:429)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
        at java.lang.Thread.run(Thread.java:738)
Caused by: com.ibm.msg.client.jms.DetailedIllegalStateException: JMSCC0008: This connection is closed. An application called a method that must not be used after the connection is closed. Ensure that the connection is not closed before calling the method.
        at sun.reflect.GeneratedConstructorAccessor319.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:39)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:527)
        at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:411)
        at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:390)
        at com.ibm.msg.client.jms.internal.JmsErrorUtils.createException(JmsErrorUtils.java:104)
        at com.ibm.msg.client.jms.internal.State.checkNotClosed(State.java:145)
        at com.ibm.msg.client.jms.internal.JmsConnectionImpl.getExceptionListener(JmsConnectionImpl.java:590)
        at com.ibm.mq.jms.MQConnection.getExceptionListener(MQConnection.java:373)
        at com.ibm.ejs.jms.JMSManagedConnection.cleanup(JMSManagedConnection.java:1100)
        ... 20 more
 
[9/5/13 20:18:30:643 CEST] 00000051 MCWrapper     W   J2CA0088W: The ManagedConnection that is being destroyed from resource No longer available is in an invalid state STATE_INACTIVE. Processing will continue.
[9/5/13 20:21:31:349 CEST] 00000057 FreePool      E   J2CA0045E: Connection not available while invoking method createOrWaitForConnection for resource JMS$LQG00386-LQG00386$JMSManagedConnection@4.
[9/5/13 20:21:36:371 CEST] 00000058 ConnectionEve W   J2CA0206W: A connection error occurred.  To help determine the problem, enable the Diagnose Connection Usage option on the Connection Factory or Data Source. This is the multithreaded access detection option.
[9/5/13 20:21:36:372 CEST] 00000058 ConnectionEve A   J2CA0056I: The Connection Manager received a fatal connection error from the Resource Adapter for resource JMS$LQG00386-LQG00386$JMSManagedConnection@4. The exception is: com.ibm.msg.client.jms.DetailedIllegalStateException: JMSCC0032: This message consumer is closed. An application called a method that must not be used after the message consumer is closed. Ensure that the message consumer is not closed before calling the method.
{code}

When digging down into the issue, I found that the root cause was in the org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport#logUri() method. This method calls a method: org.springframework.ws.transport.jms.JmsReceiverConnection#getUri() which crashes because requestMessage.getJMSDestination() resolves to null.

However, the exception is not caught, so it bubbles up. And since it's outside of the try block, the rest of the code is not executed and the connection is not freed. In my local environment I fixed the issue by adding a catch clause to the logURI method, like this:
{code:Java}
    private void logUri(WebServiceConnection connection) {
        if (logger.isDebugEnabled()) {
            try {
                logger.debug(""Accepting incoming ["" + connection + ""] at ["" + connection.getUri() + ""]"");
            }
            catch (URISyntaxException e) {
                // ignore
            }
            catch (IllegalArgumentException e) {
                if (logger.isWarnEnabled()) {
                    logger.warn(""Error while trying to log WebServiceConnection URI "" + e.getMessage());
                } else {
                    logger.debug(""Error while trying to log WebServiceConnection URI"", e);
                }
            }
        }
    }
{code}

This way, the logging statement doesn't have (a visible at least) side effect.

Expanding the try block in handleConnection was also something I tried, but that had as a result that the connection is properly closed, but the rest of the code (my service endpoint) was still not executed. So that solution also had side effects","WebSphere 7 FP 27on Red Hat Linux, IBM J9VM - 20121024_126067",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-01-27 03:13:05.186,37335,true,gregturn(gregturn),,,,"0|i06krr:",38403,37037,,,,,,,,"27/Jan/14 3:13 AM;arjen.poutsma;Fixed. When the destination is null, the URI is null as well.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#922|https://github.com/spring-projects/spring-ws/issues/922]. ",,,,,,,,,,,,,,,,
Samples application points to Spring WS 2.1.4-SNAPSHOT,SWS-847,50605,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,willmay,willmay,28/Aug/13 1:28 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,28/Aug/13 3:18 AM,2.1.3,,,,,,,,Samples,,,,,0,,,,,,,The samples in the Spring WS point to Spring WS parent version 2.1.4.RELEASE-SNAPSHOT and the Spring WS parent is now at version 2.1.5.RELEASE-SNAPSHOT. They need to be updated to the correct snapshot version or a released version to make them easier to build.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:40.365,37099,true,gregturn(gregturn),,,,"0|i06jqn:",38236,36801,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#921|https://github.com/spring-projects/spring-ws/issues/921]. ",,,,,,,,,,,,,,,,,
checkForUtf8ByteOrderMark() will not detect BOM with some TLSv1 implementations,SWS-845,50244,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,martin.cizek,martin.cizek,09/Aug/13 5:15 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,20/Aug/13 3:37 AM,2.1.3,,,,,,2.1.4,,Core,,,,,0,,,,,,,"SWS-750 fixed data corruption when first read() from the stream returned just 1 or 2 bytes instead of all three.

But the BOM removal functionality still won't work e.g. if the first byte is sent separately.

I suggest a modification like this (haven't tested it):
{code:java}
   private InputStream checkForUtf8ByteOrderMark(InputStream inputStream) throws IOException {
       PushbackInputStream pushbackInputStream = new PushbackInputStream(new BufferedInputStream(inputStream), 3);
       byte[] bytes = new byte[3];
       int bytesRead = 0;
       // Ensure filling the buffer
       while (bytesRead < bytes.length) {
           int n = pushbackInputStream.read(bytes, bytesRead, bytes.length - bytesRead);
           if (n > 0) {
               bytesRead += n;
           } else {
               break;
           }
       }
       if (bytesRead > 0) {
           // check for the UTF-8 BOM, and remove it if there. See SWS-393
           if (!isByteOrderMark(bytes)) {
               pushbackInputStream.unread(bytes, 0, bytesRead);
           }
       }
       return pushbackInputStream;
   }
{code}

The thing is that the read() call guarantees just one byte. And this situation isn't that rare - some implementations of TLSv1 really send the first byte separately, our customer had this problem with a WS client based on WinHttp.WinHttpRequest object on Windows 2008 R2. We had to workaround SWS-750 by forcing SSLv3 (before we learned that it is actually fixed).

So if anybody had bad luck of having the TLSv1 + BOM issue, they would be affected.

Hope this helps.",All setups where first read() from the stream does not return at least three bytes + clients that send BOM.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:39.907,36740,true,gregturn(gregturn),,,,"0|i06i67:",37982,36442,http://stackoverflow.com/questions/13528021/java-ssl-streaming-splitted-applicationdata,,,,,,,"09/Aug/13 5:24 AM;martin.cizek;I was too quick when submitting, may I ask for updating the subject to ""checkForUtf8ByteOrderMark() will not detect BOM with some TLSv1 implementations""? Thanks.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#919|https://github.com/spring-projects/spring-ws/issues/919]. ",,,,,,,,,,,,,,,,
WebServiceTemplate(Marshaller marshaller) constructor doesn't call initDefaultStrategies(),SWS-844,50103,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,pgrimard,pgrimard,02/Aug/13 6:28 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,19/Aug/13 4:26 AM,,,,,,,2.1.4,,,,,,,0,,,,,,,"I noticed this morning that when creating a new WebServiceTemplate using the default no arg constructor, the behaviour is different compared to using the constructor that accepts a Marshaller arg.  The constructor with the Marshaller arg doesn't call the initDefaultStrategies() method, and therefore calling methods on the template throws exceptions that you don't get if using the no arg constructor and just call the setMarshaller() and setUnmarshaller() methods.

Here's the 2 constructors source:

{code}
public WebServiceTemplate() {
    initDefaultStrategies();
}

public WebServiceTemplate(Marshaller marshaller) {
    Assert.notNull(marshaller, ""marshaller must not be null"");
    if (!(marshaller instanceof Unmarshaller)) {
        throw new IllegalArgumentException(""Marshaller ["" + marshaller + ""] does not implement the Unmarshaller "" +
                ""interface. Please set an Unmarshaller explicitly by using the "" +
                ""WebServiceTemplate(Marshaller, Unmarshaller) constructor."");
    }
    else {
        this.setMarshaller(marshaller);
        this.setUnmarshaller((Unmarshaller) marshaller);
    }
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:39.601,36601,true,gregturn(gregturn),,,,"0|i06hlr:",37890,36303,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#918|https://github.com/spring-projects/spring-ws/issues/918]. ",,,,,,,,,,,,,,,,,
Wss4jSecurityInterceptor bspCompliant,SWS-843,50014,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Works as Designed,arjen.poutsma,stephane.cizeron,stephane.cizeron,29/Jul/13 5:12 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,21/Aug/13 1:38 AM,2.1.3,,,,,,,,,,,,,0,bspcompliant,signature,Wss4jSecurityInterceptor,,,,"Hello,

When you set bspCompliant to false, the singed infos unfortunately contains inclusiveNamespaces xml elements whereas they couldn't be present.

In springws 2.0.x, the bspCompliant option didn't exist and the inclusiveNamespaces xml elements didn't appaear. Nowadays, they are included all the time whenever you configure.

(for example : 						<ec:InclusiveNamespaces xmlns:ec=""http://www.w3.org/2001/10/xml-exc-c14n#""
							PrefixList=""soapenv"" />)

Best regards,
Stéphane

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2013-08-21 01:38:16.127,36514,true,gregturn(gregturn),,,,"0|i06h9b:",37834,36216,,,,,,,,"21/Aug/13 1:38 AM;arjen.poutsma;I tried removing the bspCompiant flag altogether, and the ec:InclusiveNamespaces element still appears. So I am guessing this is a WSS4J feature that has nothign to do with the bspCompiant flag.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#917|https://github.com/spring-projects/spring-ws/issues/917]. ",,,,,,,,,,,,,,,,
Signature & Binary Security Token,SWS-842,50013,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,stephane.cizeron,stephane.cizeron,29/Jul/13 5:06 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Feb/14 5:05 AM,2.1.3,,,,,,2.2.RC1,,,,,,,0,signature,Wss4jSecurityInterceptor,,,,,"Hello,
When you want to sign the BinarySecurityToken with Wss4jSecurityInterceptor, in a previous version of spring 2.0.x and wss4j (1.5.x), you only had to add a special keyword Token in the signatureParts. Since spring-ws 2.1.x relies on wss4j 1.6.x, this keyword was removed from wss4j and the signature processing failed => Token element not found in the DOM. The current doc makes a reference to the old special keyword. Nowadays, it's impossible to sign the BST. When using STRTransform, we don't sign the BST but just a reference, that's not really the same issue and the signature validation fails on server.

if you have a replacement procedure in order to sign the BST, i will take it quickly.

Best regards",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2014-02-06 05:05:43.268,36513,true,gregturn(gregturn),,,,"0|i06h93:",37833,36215,,,,,,,,"06/Feb/14 5:05 AM;arjen.poutsma;Fixed by removing the paragraph from the documentation.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#916|https://github.com/spring-projects/spring-ws/issues/916]. ",,,,,,,,,,,,,,,,
I can't set transformSchemaLocation attribute in MessageDispatcherServlet class through web.xml file,SWS-840,49800,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,thiago gutenberg,thiago gutenberg,17/Jul/13 6:08 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,19/Aug/13 4:18 AM,2.1.3,,,,,,2.1.4,,Core,XML,,,,0,,,,,,,"In my Spring XML file I have a static-wsdl defined and in the WSDL I imported a XML Schema Definition with namespace and schemaLocation attributes.

When I deploy my Web Application I want to the {code:xml} <soap:address location /> {code} and {code:xml} <xs:import schemaLocation /> {code} in WSDL to be transformed to reflect the URI of the incoming HttpServletRequest.

So to achieve this behavior in the web.xml file I have this configuration:

{code:xml}
<servlet>
   <servlet-name>spring-ws-dispatcher</servlet-name>
   <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
      <init-param>
         <param-name>transformWsdlLocations</param-name>
         <param-value>true</param-value>
      </init-param>
      <init-param>
         <param-name>transformSchemaLocations</param-name>
         <param-value>true</param-value>
      </init-param>
      <load-on-startup>1</load-on-startup>
    </servlet>
{code}

The problem:

When the application is deployed, the method 'initWsdlDefinitionHandlerAdapter' in class 'MessageDispatcherServlet' runs, but only the attribute {code} transformLocations {code} in class 'WsdlDefinitionHandlerAdapter' is properly setted with the value passed through the {code:xml}<init-param />{code} tag in the web.xml file, and the attribute {code} transformSchemaLocations {code} is not. As can be seen in red in the code below:


{code:title= MessageDispatcherServlet.class|borderStyle=solid}
private void initWsdlDefinitionHandlerAdapter(ApplicationContext context) {
   try {
      try {
         wsdlDefinitionHandlerAdapter = context.getBean(getWsdlDefinitionHandlerAdapterBeanName(), WsdlDefinitionHandlerAdapter.class);

      } catch (NoSuchBeanDefinitionException ignored) {
           wsdlDefinitionHandlerAdapter = new WsdlDefinitionHandlerAdapter();
      }
{color:red} 
      wsdlDefinitionHandlerAdapter.setTransformLocations(isTransformWsdlLocations());
{color}
      wsdlDefinitionHandlerAdapter.afterPropertiesSet();

   } catch (Exception ex) {
        throw new BeanInitializationException(""Could not initialize WsdlDefinitionHandlerAdapter"", ex);
   }
}
{code}

My solution was: 

Create in the Spring XML file a wsdlDefinitionHandlerAdapter bean and set the properties 'transformLocations' and 'transformSchemaLocations' with value true.

{code}
<bean id=""wsdlDefinitionHandlerAdapter"" class=""org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter"">
	<property name=""transformSchemaLocations"" value=""true"" />
    	<property name=""transformLocations"" value=""true"" />
</bean>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:38.682,36302,true,gregturn(gregturn),,,,"0|i06g67:",37658,36004,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#914|https://github.com/spring-projects/spring-ws/issues/914]. ",,,,,,,,,,,,,,,,,
Typo in embedded HTTP server documentation,SWS-837,49607,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Complete,arjen.poutsma,dantheperson,dantheperson,09/Jul/13 2:58 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,19/Aug/13 3:44 AM,2.1.3,,,,,,2.1.4,,Documentation,,,,,0,,,,,,,"In the same bean definition for the embedded http server the line

<property name=""defaultEndpoint"" ref=""stockEndpoint""

is missing a /> at the end.

While you're updating it you may as well change the endpoint mapping in the example from the deprecated PayloadRootQNameEndpointMapping to PayloadRootAnnotationMethodEndpointMapping

This deprecated mapping also appears in the other bean context examples.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:38.012,36110,true,gregturn(gregturn),,,,"0|i06fdb:",37528,35812,http://static.springsource.org/spring-ws/sites/2.0/reference/html/server.html#d5e966,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#911|https://github.com/spring-projects/spring-ws/issues/911]. ",,,,,,,,,,,,,,,,,
WebService Stop Responding,SWS-834,49279,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,,joelvm,joelvm,21/Jun/13 3:12 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,24/Jun/13 3:03 AM,1.5.8,,,,,,,,,,,,,0,,,,,,,"After a variable time of use, WebService Stop responding, the rest of the aplication continue to work just fine.
After a Tomcat restart all goes back to normal.

The WebService response is:

Error in call to extension function {public static org.w3c.dom.Element pt.caso.quala.exslt.WsProcessor.getWsResponse(org.w3c.dom.Element,org.w3c.dom.Document)}: Exception in extension function pt.caso.quala.exceptions.FormsRuntimeException: com.sun.xml.internal.ws.wsdl.parser.InaccessibleWSDLException: 2 counts of InaccessibleWSDLException.

java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:8080/igweb/ws/movimentaStocksService.wsdl
java.io.IOException: Server returned HTTP response code: 500 for URL: http://localhost:8080/igweb/ws/movimentaStocksService.wsdl?wsdl


Server logs:

SEVERE: Servlet.service() for servlet spring-ws threw exception
java.lang.NullPointerException
	at com.sun.org.apache.xml.internal.serializer.SerializerBase.getLocalName(SerializerBase.java:281)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:196)
	at com.sun.org.apache.xml.internal.serializer.ToSAXHandler.flushPending(ToSAXHandler.java:277)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:243)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:555)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:231)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:226)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:226)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:226)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:226)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:226)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:132)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:94)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:679)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:723)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:336)
	at org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter.handle(WsdlDefinitionHandlerAdapter.java:125)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:222)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:65)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:389)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:112)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:235)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:169)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.struts2.dispatcher.ActionContextCleanUp.doFilter(ActionContextCleanUp.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:864)
	at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:579)
	at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1665)
	at java.lang.Thread.run(Thread.java:662)","Windows 7
Apache Tomcat 6.0.18
JDK 1.6.0_31
Struts2.1.14 + Spring 2.5 + Hibernate 3.3.2 Aplication",,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2013-06-24 03:02:48.8,35786,true,gregturn(gregturn),,,,"0|i06e6v:",37337,35488,,,,,,,,"24/Jun/13 3:02 AM;arjen.poutsma;Version 1.5.x is no longer supported. Can you try a more recent version and see if the bug still occurs there?","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#908|https://github.com/spring-projects/spring-ws/issues/908]. ",,,,,,,,,,,,,,,,
"All JMS headers ignored, if the are not contained in CONVERSION_TABLE or prefixed with SOAPJMS_",SWS-833,49126,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,paulgbsl,paulgbsl,14/Jun/13 5:30 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,20/Aug/13 3:06 AM,2.1.2,,,,,,2.1.4,,Core,,,,,0,,,,,,,"As a result of SWS-798, when JMS messages are *received*, headers are no longer returned (from {{JmsTransportUtils.headerToJmsProperty}}) unless they are either contained in the CONVERSION_TABLE array, or prefixed with ""{{SOAPJMS_}}"".

This seems overly restrictive and prevents spring-ws being used to call 3rd party services, where we have no control over the MQ headers being sent.

Is the SOAPJMS_restriction necessary?",,,,,,,,,,,,,,,,,SWS-798,,,,,,,,,,,,,,,,,,,,24969600,,2013-08-20 03:06:22.792,35640,true,gregturn(gregturn),,,,"0|i06dmf:",37245,35342,,,,,,,,"20/Aug/13 3:06 AM;arjen.poutsma;Fixed. I removed the fallback mechanism.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#907|https://github.com/spring-projects/spring-ws/issues/907]. ",,,,,,,,,,,,,,,,
BspCompliant is always set to true in Wss4jSecurityInterceptor,SWS-831,48359,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,juergene,juergene,29/Apr/13 3:55 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,02/Jul/13 3:43 AM,2.1.3,,,,,,2.1.4,,,,,,,0,,,,,,,"The fix in SWS-828 is incorrect. The handler option IS_BSP_COMPLIANT is always set to 'true'.
{code}
    public void setBspCompliant(boolean bspCompliant) {
	this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT, true);
        this.bspCompliant = bspCompliant;
    }
{code}
should be 

{code}
    public void setBspCompliant(boolean bspCompliant) {
	this.handler.setOption(WSHandlerConstants.IS_BSP_COMPLIANT, bspCompliant);
        this.bspCompliant = bspCompliant;
    }
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:36.534,34880,true,gregturn(gregturn),,,,"0|i06a33:",36672,34582,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#905|https://github.com/spring-projects/spring-ws/issues/905]. ",,,,,,,,,,,,,,,,,
Setting bspCompliant = false has effect only for first request,SWS-828,48104,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,juergene,juergene,10/Apr/13 6:23 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,12/Apr/13 2:54 AM,2.1.2,,,,,,2.1.3,,,,,,,0,,,,,,,"Symptom: Setting the property 'bspCompliant' on Wss4jSecurityInterceptor to false has an effect only for the first web service request after application start. Setting 'wsiBspCompliant=false' on the wssConfig object has the same result.

Cause: WSS4J sets back the value in WssConfig to true in each WSHandler.doSenderAction() call. WSHandler.doSenderAction() asks the Spring Wss4JHandler for the value of the configuration option IS_BSP_COMPLIANT in the set of options, and Wss4JHandler returns null. The default behaviour of WSS4J is: If an option is not set in the handler, the value defaults to true.

Possible correction: add IS_BSP_COMPLIANT to the set of options in Wss4JHandler on call to Wss4jSecurityInterceptor.setBspCompliant().

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:36.315,34633,true,gregturn(gregturn),,,,"0|i068m7:",36434,34335,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#904|https://github.com/spring-projects/spring-ws/issues/904]. ",,,,,,,,,,,,,,,,,
A SOAP:Fault does not set the the response code to 500,SWS-827,48078,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,,betlista,betlista,08/Apr/13 4:59 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,08/Apr/13 5:15 AM,2.1.1,2.1.2,,,,,,,,,,,,0,spring-ws,,,,,,"I have problem, that SOAP:Fault messages are not handled as fault and so I'm getting

javax.xml.bind.UnmarshalException: unexpected element (uri:""http://schemas.xmlsoap.org/soap/envelope/"", local:""Fault"")

I found the forum question about this - http://forum.springsource.org/showthread.php?39122-simple-question-on-jaxb2-unmarshalling that links to https://jira.springsource.org/browse/SWS-128 which is marked as fixed.

I'm using sping-ws-core 2.1.1 (but also tried in 2.1.2) and the implementation seems incorrect to me.

{code}
    protected boolean hasFault(WebServiceConnection connection, WebServiceMessage response) throws IOException {
        if (checkConnectionForFault && connection instanceof FaultAwareWebServiceConnection) {
            // check whether the connection has a fault (i.e. status code 500 in HTTP)
            FaultAwareWebServiceConnection faultConnection = (FaultAwareWebServiceConnection) connection;
            if (!faultConnection.hasFault()) {
                return false;
            }
        }
        if (response instanceof FaultAwareWebServiceMessage) {
            // either the connection has a fault, or checkConnectionForFault is false: let's verify the fault
            FaultAwareWebServiceMessage faultMessage = (FaultAwareWebServiceMessage) response;
            return faultMessage.hasFault();
        }
        return false;
    }

{code}
and if it mathces first condition response type is not checked.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2013-04-08 05:15:20.915,34607,true,gregturn(gregturn),,,,"0|i068gn:",36409,34309,,,,,,,,"08/Apr/13 5:15 AM;arjen.poutsma;Correct. The SOAP spec states that the HTTP response code should be 500 for SOAP Faults. If the service that you're using doesn't do that, you can set the 'checkConnectionForFault' property to false, in order to make Spring-WS use the less efficient way to check the response for a fault by parsing the XML. See http://static.springsource.org/spring-ws/sites/2.0/apidocs/org/springframework/ws/client/core/WebServiceTemplate.html#setCheckConnectionForFault(boolean)","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#903|https://github.com/spring-projects/spring-ws/issues/903]. ",,,,,,,,,,,,,,,,
Binary data get inlined when using JAXB for marshaling MTOM-enabled Axiom SOAP messages,SWS-825,47474,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Deferred,arjen.poutsma,mjemala,mjemala,19/Feb/13 9:08 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Apr/13 3:49 AM,1.5.10,2.1.2,,,,,2.1.3,,,,,,,0,axiom,inline,mtom,multipart,saaj,xop,"When using Axiom and JAXB in conjunction binary data will be inlined instead of sent as a attachment within a MIME multipart message. This does not occur when using plain Axiom API to construct a message or SAAJ instead (see dumps.tar.gz attachments for HTTP communication trace).

Use mtom samples distributed with Spring WS itself plus the attached modified/created files to replicate the issue.

This may be related to the method org.springframework.ws.soap.axiom.AxiomSoapMessage.convertToXopPackage() always returning FALSE when asked for from the JAXB attachment marshaller.",,,,,,,,,,,,,SWS-826,,,,,,,,,,,"19/Feb/13 9:08 AM;mjemala;AxiomJaxbMtomClient.java;https://jira.spring.io/secure/attachment/20960/AxiomJaxbMtomClient.java","19/Feb/13 9:08 AM;mjemala;Driver.java;https://jira.spring.io/secure/attachment/20961/Driver.java","19/Feb/13 9:08 AM;mjemala;applicationContext.xml;https://jira.spring.io/secure/attachment/20959/applicationContext.xml","19/Feb/13 9:08 AM;mjemala;dumps.tar.gz;https://jira.spring.io/secure/attachment/20962/dumps.tar.gz",,,,,,,,,,24969600,,2013-04-09 03:49:56.571,34059,true,gregturn(gregturn),,,,"0|i0656n:",35878,33761,,,,,,,,"09/Apr/13 3:49 AM;arjen.poutsma;Unfortunately, this issue cannot be resolved at this moment, due to the way we use Axiom. However, there are plans to improve the Axiom support (SWS-826) and hopefully this issue can be resolved as part of that effort.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#793|https://github.com/spring-projects/spring-ws/issues/793]. ",,,,,,,,,,,,,,,,
"In v 2.1.0, dispatch method of MessageDispatcher does not call processEndpointException method if response schema validation fails ",SWS-824,47305,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,subhar2006,subhar2006,05/Feb/13 7:24 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Apr/13 7:10 AM,2.1.2,,,,,,2.1.3,,Core,,,,,0,,,,,,,"I have upgraded spring web service library from 2.0 to 2.1 in my application. But after that overriden customizeFault method of ServiceFaultExceptionResolver class (which extends SimpleSoapExceptionResolver of Spring) does not get invoked from dispatch method of MessageDispatcherServllet class if exception is thrown from overriden handleResponseValidationErrors method of PayloadValidatingInterceptorWithException class (Which extends PayloadValidatingInterceptor of Spring). 

Now this works fine if I use v 2.0. But in v2.1, If exception is thrown from overriden handleResponseValidationErrors then control is coming to the second catch block of dispatch method which does not call processEndpointException. And processEndpointException is responsible to call all the fault resolver. second catch block is below:

{code}
catch (Exception ex) {
			// Trigger after-completion for thrown exception.
            triggerAfterCompletion(mappedEndpoint, interceptorIndex, messageContext, ex);
            throw ex;
        }
{code}

If exception is thrown from overriden handleRequestValidationErrors method of PayloadValidatingInterceptorWithException ( which extends PayloadValidatingInterceptor of Spring) then control comes to the first catch block(Please see below) of dispatch method and that calls processEndpointException - So everything is fine for request schema validation fail scenario

{code}
catch (Exception ex) {
                Object endpoint = mappedEndpoint != null ? mappedEndpoint.getEndpoint() : null;
                processEndpointException(messageContext, endpoint, ex);
            }  
{code}

But In v 2.0 there is only one catch block in dispatch method for all the code and that catch block calls processEndpointException - So both request and response schema validation scenario works fine with v2.0. 

So change of exception handling in dispatch method of v2.1 is breaking my application. 
 

 			       ","Windows, Java 7",,,,,,,,,,,,,,,,SWS-754,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:35.389,33890,true,gregturn(gregturn),,,,"0|i0645r:",35712,33592,http://forum.springsource.org/showthread.php?134305-FaultResolver-not-get-called-if-Response-schema-validation-fails-in-spring-ws-2-1-0,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#792|https://github.com/spring-projects/spring-ws/issues/792]. ",,,,,,,,,,,,,,,,,
Spring Web Services/Axiom does not accept XOP content-type,SWS-823,47124,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,gjkrupa,gjkrupa,22/Jan/13 2:34 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,07/Feb/13 3:00 AM,2.0.4,,,,,,,,Core,,,,,0,,,,,,,"A SOAP request is sent with the following Content-Type header:
{noformat}
Content-Type: multipart/related; boundary=""MIMEBoundary_697784e707e24f3b138e9522eb5c625fe5ba4ed126325b47""; type=""application/xop+xml""; start=""<0.797784e707e24f3b138e9522eb5c625fe5ba4ed126325b47@apache.org>""; start-info=""application/xop+xml""
{noformat}

This is generated from Spring-WS/Axiom (version 1.2.11) using https://gist.github.com/1853883 plus the following:

{code}
template.marshalSendAndReceive(request,
  new SoapActionCallback(SOAP_ACTION_UPLOAD_DOCUMENT) {
    @Override
    public void doWithMessage(final WebServiceMessage message) throws IOException {
      super.doWithMessage(message);
      AxiomSoapMessage msg = (AxiomSoapMessage)message;
      OMOutputFormat fmt = new OMOutputFormat();
      fmt.setCharSetEncoding(""UTF-8"");
      fmt.setContentType(MTOMConstants.MTOM_TYPE);
      fmt.setDoOptimize(true);
      fmt.setSOAP11(true);
      msg.setOutputFormat(fmt);
    }
});
{code}

The Jaxb2Marshaller is configured with <property name=""mtomEnabled"" value=""true""/>

When the server receives this request, the following exception is thrown:

{noformat}
[21/01/13 18:07:47:177 GMT] 00000014 webapp        E com.ibm.ws.webcontainer.webapp.WebApp logServletError SRVE0293E: [Servlet Error]-[document-service]: org.springframework.ws.soap.axiom.AxiomSoapMessageCreationException: Unknown content type 'multipart/related; boundary=""MIMEBoundary_729ef333846e300e9f705a8fa7136ea83f8863ac613c67d6""; type=""application/xop+xml""; start=""<0.629ef333846e300e9f705a8fa7136ea83f8863ac613c67d6@apache.org>""; start-info=""application/xop+xml""'
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.getSoapEnvelopeNamespace(AxiomSoapMessageFactory.java:282)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createMultiPartAxiomSoapMessage(AxiomSoapMessageFactory.java:258)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createWebServiceMessage(AxiomSoapMessageFactory.java:210)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createWebServiceMessage(AxiomSoapMessageFactory.java:81)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:90)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:59)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:221)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:738)
	...
{noformat}

This appears to be because AxiomSoapMessageFactory.getSoapEnvelopeNamespace() is expecting the Content-type header to contain either ""text/xml"" or ""application/soap+xml"" which isn't the case with Axiom's MTOM messages.

I haven't tested directly with 2.0.5 but I expect the behaviour to be the same since AxiomSoapMessageFactory.getSoapEnvelopeNamespace() hasn't changed.","Windows XP 32-bit
Java(TM) SE Runtime Environment (build 1.6.0_13-b03)
WebSphere 7",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2013-01-22 03:10:22.86,33708,true,gregturn(gregturn),,,,"0|i0631z:",35533,33410,,,,,,,,"22/Jan/13 3:10 AM;arjen.poutsma;Formatting.","22/Jan/13 3:54 AM;gjkrupa;Having discussed this with a colleague it looks like the problem is actually with Axiom (or the way I'm calling it) rather than Spring-WS.  The W3C spec requires ""text/xml"" to be present in the header when using MTOM and SOAP 1.1.  It appears that using OMOutputFormat.setContentType() is preventing this from occurring and if that is replaced with OMOutputFormat.setDoOptimize(true) then start-info=""application/xop+xml"" is replaced with start-info=""text/xml"".","07/Feb/13 3:00 AM;arjen.poutsma;Resolved as invalid, as the reporter has indicated it's not a SWS bug.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#902|https://github.com/spring-projects/spring-ws/issues/902]. ",,,,,,,,,,,,,,
NoSuchMethodError after upgrading to AXIOM 1.2.14,SWS-822,46852,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,mdiskin,mdiskin,10/Jan/13 5:59 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,04/Apr/13 3:47 AM,2.1.2,,,,,,2.1.3,,,,,,,0,,,,,,,"{code}
SEVERE: Servlet.service() for servlet [ws] in context with path [/settleinv] threw exception [Request processing failed; nested exception is java.lang.NoSuchMethodError: org.apache.axiom.soap.SOAPFactory.createSOAPMessage(Lorg/apache/axiom/om/OMXMLParserWrapper;)Lorg/apache/axiom/soap/SOAPMessage;] with root cause
java.lang.NoSuchMethodError: org.apache.axiom.soap.SOAPFactory.createSOAPMessage(Lorg/apache/axiom/om/OMXMLParserWrapper;)Lorg/apache/axiom/soap/SOAPMessage;
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.<init>(AxiomSoapMessage.java:99)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createWebServiceMessage(AxiomSoapMessageFactory.java:189)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createWebServiceMessage(AxiomSoapMessageFactory.java:81)
{code}

I attempted to add the compat additional JAR but that did not fix the problem looks like that Factory Method no longer takes an argument see https://issues.apache.org/jira/browse/AXIOM-412.

http://ws.apache.org/axiom/userguide/ch04.html#changes-1.2.14",,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/13 1:28 PM;veithen;SWS-822-part2.patch;https://jira.spring.io/secure/attachment/20840/SWS-822-part2.patch","10/Jan/13 10:41 AM;veithen;SWS-822.patch;https://jira.spring.io/secure/attachment/20839/SWS-822.patch",,,,,,,,,,,,24969600,,2013-01-10 09:24:50.253,33585,true,gregturn(gregturn),,,,"0|i06293:",35403,33287,,,,,,,,"10/Jan/13 9:24 AM;veithen;The issue is also described here:

https://issues.apache.org/jira/browse/AXIOM-444

I'm currently working on a fix in Axiom to restore compatibility, but the code in Spring-WS should definitely be changed because the method it attempts to use is considered an internal method.","10/Jan/13 10:41 AM;veithen;Attached a patch for this issue.","10/Jan/13 12:43 PM;veithen;While working on the fix for Axiom, I discovered another potential issue (although I didn't see any test failures). The problem is that Spring-WS instantiates the SOAP factories (SOAP11Factory and SOAP12Factory) directly, while the recommended approach is to use OMAbstractFactory to locate the (singleton) factories. However, there is some code in Axiom that makes the assumption that factories are singletons, so this may cause problems.

It should also be noted that SOAP11Factory and SOAP12Factory are part of axiom-impl, but application code is expected to only use classes from axiom-api (and in Maven projects, axiom-impl should be a dependency with scope runtime).

I'll try to provide a patch for this issue as well.","10/Jan/13 1:28 PM;veithen;Attached a patch for the SOAP factory issue.","04/Apr/13 3:47 AM;arjen.poutsma;Fixed! Thanks for the patches.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#901|https://github.com/spring-projects/spring-ws/issues/901]. ",,,,,,,,,,,,
SimpleNamespaceContext.removeBinding() does not clean up all references,SWS-819,46541,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,tthomas,tthomas,06/Dec/12 10:21 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,07/Dec/12 2:39 AM,1.5.9,2.1.2,,,,,2.1.3,,XML,,,,,0,,,,,,,"In SimpleNamespaceContext.removeBinding() the first line should be changed to 

String namespaceUri = prefixToNamespaceUri.remove(prefix);

Otherwise the internal map prefixToNamespaceUri still contains the prefix, and hasBinding(String prefix) behaves incorrectly.

This is error is critical, as under certain circumstances XML schema validation fails. If necessary I can provide an example. ",n/a,";07/Dec/12 2:39 AM;arjen.poutsma;600",,,3600,3600,600,16%,3600,3600,600,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-12-07 02:39:31.212,33280,true,gregturn(gregturn),,,,"0|i060db:",35098,32982,,,,,,,,"07/Dec/12 2:39 AM;arjen.poutsma;Fixed! Thanks for spotting this.","09/Dec/12 6:35 AM;tthomas;Your welcome. Took me a whole day to track this down. Didn't expect an error at this level, quite surprising that this one could live for so long.

Please also fix for 1.5.10 as this is the version we're currently using. Thanks. ","10/Dec/12 2:20 AM;arjen.poutsma;I've fixed this in the 1.5 branch in SVN, but I am afraid there won't be a 1.5.11 that contains it, as it is not supported anymore.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#899|https://github.com/spring-projects/spring-ws/issues/899]. ",,,,,,,,,,,,,,
HttpsUrlConnectionMessageSender is missing,SWS-818,46533,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,lirany,lirany,06/Dec/12 4:52 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Dec/12 5:05 AM,2.1.1,,,,,,,,,,,,,0,,,,,,,"The class HttpsUrlConnectionMessageSender is in the API documentation:
http://static.springsource.org/spring-ws/sites/2.0/apidocs/org/springframework/ws/transport/http/HttpsUrlConnectionMessageSender.html

But it doesn't exist in the repository:
‫https://fisheye.springsource.org/browse/spring-ws/tags/spring-ws-2.1.1.RELEASE/core/src/main/java/org/springframework/ws/transport/http‬/HttpsUrlConnectionMessageSender
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-12-06 05:05:06.983,33272,true,gregturn(gregturn),,,,"0|i060bj:",35090,32974,,,,,,,,"06/Dec/12 5:05 AM;arjen.poutsma;It does exist, but lives in the support module (not the core module). See https://fisheye.springsource.org/browse/spring-ws/tags/spring-ws-2.1.1.RELEASE/support/src/main/java/org/springframework/ws/transport/http","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#898|https://github.com/spring-projects/spring-ws/issues/898]. ",,,,,,,,,,,,,,,,
Camel Spring-WS and AbstractAddressingEndpointMapping,SWS-817,46523,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,azachar,azachar,05/Dec/12 7:32 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Apr/13 3:21 AM,2.0.3,,,,,,2.1.3,,Core,,,,,0,,,,,,,"Beste Arjen!

I am developing Camel support for Spring-WS, currently I am working on WS-Addressing issues.  Could you help me please?

Imagine I would like to specify the camel configuration like this:

<camelContext>
   <from uri=""spring-ws:action:http://consumerOfwsaActionWithReplyTo.com?messageSender=#myCustomBean&endpointMapping=WSACamelSpringWSEndpoint''>
...
<camelContext>

The camel endpoint (WSACamelSpringWSEndpoint) that implements SoapEndpointMapping inherits from the AbstractAddressingEndpointMapping, but in order to provide custom messageSenders from the camel uri as you see above I need to change the method AbstractAddressingEndpointMapping#getEndpointInvocationChain so I can supply my message sender.



So, is it possible to create at least method called getMessageSender(Object endpoint) so I can easily hook different endpoint's message senders? E.g. here is the code with the appropriated changes marked bold:

public abstract class AbstractAddressingEndpointMappingHacked extends TransformerObjectSupport
        implements SoapEndpointMapping, InitializingBean, Ordered {

.....

{code}
 /**
     * Creates a {@link SoapEndpointInvocationChain} based on the given endpoint and {@link
     * org.springframework.ws.soap.addressing.version.AddressingVersion}.
     */
    protected EndpointInvocationChain getEndpointInvocationChain(Object endpoint,
                                                               AddressingVersion version,
                                                               MessageAddressingProperties requestMap) {
        URI responseAction = getResponseAction(endpoint, requestMap);
        URI faultAction = getFaultAction(endpoint, requestMap);
        
        WebServiceMessageSender[] messageSenders = getMessageSenders(endpoint);
        MessageIdStrategy messageIdStrategy = getMessageStrategy(endpoint);

        EndpointInterceptor[] interceptors =
                new EndpointInterceptor[preInterceptors.length + postInterceptors.length + 1];
        System.arraycopy(preInterceptors, 0, interceptors, 0, preInterceptors.length);
        AddressingEndpointInterceptor interceptor = new AddressingEndpointInterceptor(version, messageIdStrategy,
                messageSenders, responseAction, faultAction);
        interceptors[preInterceptors.length] = interceptor;
        System.arraycopy(postInterceptors, 0, interceptors, preInterceptors.length + 1, postInterceptors.length);
        return new SoapEndpointInvocationChain(endpoint, interceptors, actorsOrRoles, isUltimateReceiver);
    }
    
    /**
     * Default implementation
     * @param endpoint specific message strategy
     * @return
     */
    protected MessageIdStrategy getMessageStrategy(Object endpoint) {
       return this.messageIdStrategy;
    }

    /**
     * Default implementation
     * @param endpoint
     * @return endpoint specific message senders
     */
    protected WebServiceMessageSender[] getMessageSenders(Object endpoint) {
       return this.messageSenders;
    }
    
    public final WebServiceMessageSender[] getMessageSenders() {
        return this.messageSenders;
    }

{code}

Thank you very much for your support and cooperation!
Andrej",,,,,,,,,,,,,,,,,,,,,,,,"05/Dec/12 7:32 AM;azachar;AbstractAddressingEndpointMapping.java.patch;https://jira.spring.io/secure/attachment/20793/AbstractAddressingEndpointMapping.java.patch",,,,,,,,,,,,,24969600,,2013-04-09 03:21:54.451,33262,true,gregturn(gregturn),,,,"0|i0609b:",35080,32964,,,,,,,,"09/Apr/13 3:21 AM;arjen.poutsma;Fixed. Thanks for the patch!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#897|https://github.com/spring-projects/spring-ws/issues/897]. ",,,,,,,,,,,,,,,,
Missing encoding in dom4j element/document,SWS-816,46521,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Works as Designed,arjen.poutsma,lino,lino,05/Dec/12 6:30 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Apr/13 2:41 AM,,,,,,,2.1.3,,Core,,,,,0,,,,,,,"I'm using spring-ws 2.1.0.RELEASE, my webservice has @RequestPayload on a dom4j element. It appears that the dom4j element has no encoding set: the method element.getDocument().getXMLEncoding() returns null.

How do I know what encoding was used sending in the request? Is there a way I can force conversion to an encoding such as UTF-8?

The incoming request (I'm using SOAPUI for testing) shows it transfers ContenType: text/xml;charset=UTF-8, but it's not picked up when creating the Element. Isn't this an issue, or should the dom4j Element be changed to a Document? How do I do that, it appears it's not supported (yet).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2013-04-09 02:41:55.227,33260,true,gregturn(gregturn),,,,"0|i06093:",35079,32962,,,,,,,,"09/Apr/13 2:41 AM;arjen.poutsma;The underlying issue seems to be a DOM4J issue, as Spring-WS is using the functionality provided in DOM4J to convert the incoming XML request into a DOM4J. DOM4J just doesn't seem to pick up the encoding during that conversion process.

If you would like to know the character encoding of the incoming message, you can always use the TransportContext to get to it: see ws/site/reference/html/common.html#transport-context.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#896|https://github.com/spring-projects/spring-ws/issues/896]. ",,,,,,,,,,,,,,,,
Error loading SAML properties file,SWS-815,46515,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,jaminh,jaminh,04/Dec/12 12:44 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,05/Dec/12 1:39 AM,2.1.2,,,,,,2.1.3,,Security,,,,,0,,,,,,,Wss4j is unable to load the properties file when it is given an absolute path. Wss4j is using the ClassLoader to load the properties file. See http://grepcode.com/file/repository.springsource.com/org.apache.ws/com.springsource.org.apache.ws.security/1.6.5/org/apache/ws/security/saml/SAMLIssuerFactory.java#SAMLIssuerFactory.getProperties%28java.lang.String%29 for how the saml properties file gets loaded by Wss4j.,,";05/Dec/12 1:29 AM;arjen.poutsma;300",,,,,300,,,,300,,,,,,SWS-796,,,,,,,,,,,,,,,,,,,,24969600,,2012-12-05 01:39:22.445,33254,true,gregturn(gregturn),,,,"0|i0607r:",35073,32956,,,,,,,,"04/Dec/12 12:45 PM;jaminh;Related to https://jira.springsource.org/browse/SWS-796","04/Dec/12 1:19 PM;jaminh;It is probably worth mentioning that I used a ClassPathResource for specifying the saml properties location. Perhaps if I used a different kind of Resource getAbsolutePath() would just return the string I pass into it when I construct it? Ultimately I think using Resource for the parameter on the setSamlProperties() method in the Wss4jSecurityInterceptor is inappropriate since the properties file has to be on the Classpath. Perhaps it would make sense to require a ClassPathResource that way we can ensure that the file is on the classpath and that it exists, but instead of calling getFile().getAbsolutePath() we can just call getPath().","05/Dec/12 1:39 AM;arjen.poutsma;I'm sorry for this. I thought that using a Resource would allow for more flexibility, but it turns out WSS4J is a bit picky (as always).

I have changed the Resource parameter into a String in SVN. I've also triggered a snapshot build of 2.1.3 that contains this change. Could you please try a snapshot and see if it works? See http://static.springsource.org/spring-ws/site/downloads/snapshots.html","05/Dec/12 6:09 AM;jaminh;Tried it with the snapshot and it worked. Thanks.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#895|https://github.com/spring-projects/spring-ws/issues/895]. ",,,,,,,,,,,,,
EndPointIntercepters do not respect the (Autowired) properties provided in beans XML,SWS-814,46512,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,pieni,pieni,04/Dec/12 6:42 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Apr/13 3:46 AM,2.0.5,2.1.1,,,,,2.1.3,,Core,,,,,0,,,,,,,"Wehn defining a EndpointIntercepter with the <sws:interceptors>..</sws:interceptors>
Properties either added with a @Autowired annotation or added in the bean definition with <property... are not respected.

The instances of the interceptors each have a different instance of that property. Even when the property inserted is explicitly decorated with the singleton scope.

The attachment provides a snippet of the code.","Windows, IBM JDK, Tomee",,,,,,,,,,,,,,,,,,,,,,,"04/Dec/12 6:42 AM;pieni;sample.txt;https://jira.spring.io/secure/attachment/20790/sample.txt",,,,,,,,,,,,,24969600,,2013-04-09 03:46:43.639,33251,true,gregturn(gregturn),,,,"0|i06073:",35070,32953,,,,,,,,"09/Apr/13 3:46 AM;arjen.poutsma;I wrote a test to reproduce this issue, but I cannot do so. See https://github.com/SpringSource/spring-ws/blob/master/core/src/test/java/org/springframework/ws/config/InterceptorsBeanDefinitionParserTest.java#L66","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#894|https://github.com/spring-projects/spring-ws/issues/894]. ",,,,,,,,,,,,,,,,
com.sun.xml.messaging.saaj.SOAPExceptionImpl: Error during saving a multipart message,SWS-810,46055,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Incomplete,arjen.poutsma,shreykhandelwal,shreykhandelwal,09/Nov/12 4:08 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Nov/12 3:16 AM,1.5.4,,,,,,,,XML,,,,,0,,,,,,,"i have developed a webservice using spring , jaxb for marshalling and unmarshalling. Sometimes when i restart my server after redeploying my war , it throws an exception.

org.springframework.ws.soap.saaj.SaajSoapMessageException: Could not write message to OutputStream: Error during saving a multipart message&#59; nested exception is com.sun.xml.messaging.saaj.SOAPExceptionImpl: Error during saving a multipart message
	at org.springframework.ws.soap.saaj.SaajSoapMessage.writeTo(SaajSoapMessage.java:123)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:172)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:231)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:512)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:821)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226)
	at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:176)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3404)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(Unknown Source)
	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2140)
	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2046)
	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1398)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:172)
Caused by: com.sun.xml.messaging.saaj.SOAPExceptionImpl: Error during saving a multipart message
	at com.sun.xml.messaging.saaj.soap.MessageImpl.saveChanges(MessageImpl.java:1126)
	at org.springframework.ws.soap.saaj.Saaj13Implementation.writeTo(Saaj13Implementation.java:264)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.writeTo(SaajSoapMessage.java:119)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:173)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:89)
	... 18 more
Caused by: com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to get header stream in saveChanges: 
	at com.sun.xml.messaging.saaj.soap.MessageImpl.saveChanges(MessageImpl.java:1103)
	... 22 more
Caused by: java.io.IOException: org.apache.xml.serializer.ToXMLSAXHandler
	at com.sun.xml.messaging.saaj.soap.impl.EnvelopeImpl.output(EnvelopeImpl.java:298)
	at com.sun.xml.messaging.saaj.soap.impl.EnvelopeImpl.output(EnvelopeImpl.java:309)
	at com.sun.xml.messaging.saaj.soap.SOAPPartImpl.getContentAsStream(SOAPPartImpl.java:305)
	at com.sun.xml.messaging.saaj.soap.MessageImpl.getHeaderBytes(MessageImpl.java:947)
	at com.sun.xml.messaging.saaj.soap.MessageImpl.saveChanges(MessageImpl.java:1098)
	... 22 more

I am unable to understand why this exception is getting thrown when the server is restarted. I am using xalan 2.7.0 , spring ws core/oxm/xml 1.5.4 and spring core 2.5.5","Os - Linux , Server - Weblogic 10 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-11-26 03:15:47.667,32946,true,gregturn(gregturn),,,,"0|i05ybr:",34767,32648,,,,,,,,"09/Nov/12 5:44 AM;shreykhandelwal;Actually , the xalan version is 2.7.1
Thanks ","26/Nov/12 3:15 AM;arjen.poutsma;I am not sure there is anything we can do about this, as it seems to be a Xalan issue. Can you perhaps give a bit more context? Does the SOAP message have headers and/or attachments? Is it big?","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#890|https://github.com/spring-projects/spring-ws/issues/890]. ",,,,,,,,,,,,,,,
Not able to set start-info field in Http transport header,SWS-809,46049,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,,jashandeep,jashandeep,08/Nov/12 7:19 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,09/Nov/12 3:14 AM,1.5.6,,,,,,,,,,,,,0,,,,,,,"Hi,
I am using spring ws version 1.5.6. I am trying to set the Content-Type htransport eader of the outgoing message in the doMessage method of the webservice call back .
All the following parameters are being set but not the start-info. 
Please see the following code snippet.

{code}
String contenttype=""multipart/related; start-info=\""application/soap+xml\""; type=\""application/xop+xml\""; start=\""<rootpart@soapui.org>\""; boundary=\""=MIME\"""";

soapMessage.getMimeHeaders().setHeader(""Content-Type"", contenttype);
{code}

However the start-info does not reflect in the outgoing message.
The header of the outgoing message is as follows:

{noformat}
POST / HTTP/1.1
Accept-Encoding: gzip
SOAPAction: """"
Content-Type: multipart/related; type=""application/soap+xml""; start=""<106410720379.1352422169816.IBM.WEBSERVICES@IMMIBELAST26>""; boundary=""----=_Part_25_422058280.1352422169816""
MIME-Version: 1.0
Content-Description: AUS XOP document
Cache-Control: no-cache
Pragma: no-cache
User-Agent: Java/1.6.0
Host: 127.0.0.1:3333
{noformat}

Can anybody please suggest what might be the issue.?





","OS:Windows,
 Application Server: IBM WAS 7.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-11-09 03:14:31.326,32940,true,gregturn(gregturn),,,,"0|i05yaf:",34761,32642,,,,,,,,"09/Nov/12 3:14 AM;arjen.poutsma;The problem here is that SAAJ (the underlying SOAP library used by WAS) overwrites these values at runtime. I am afraid there is very little we can do about that, though you might try and use the TransportContext to change the headers at a later time (see http://static.springsource.org/spring-ws/site/reference/html/common.html#transport-context). Not sure if that will get you any further, though.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#889|https://github.com/spring-projects/spring-ws/issues/889]. ",,,,,,,,,,,,,,,,
@ symbol in the content-id is converted to %40. The receiving web server is not able to handle it,SWS-806,45922,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Works as Designed,arjen.poutsma,jashandeep,jashandeep,30/Oct/12 8:01 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,03/Dec/12 5:56 AM,1.5.6,,,,,,2.1.2,,XML,,,,,0,,,,,,,"Hi,

Spring ws version :1.5.6
Marshaller: Jaxb2Marshaller

Problem description: I am sending a series of Spring MTOM attachments to a webservice.In the Content-Id inside the ""XOP"" tag in the request XML there is a special character '@' which is encoded as % + ASCII hexadecimal
The web service provider is not able to handle this. 

Please refer the following XML for issue.
<ns10:FingerImpressionImage>
- <<ns6:BinaryBase64Object>
  <<xop:Include href=""cid:be434728-da9e-4b88-858f-065cc11074a0%40niem.gov"" xmlns:xop=""http://www.w3.org/2004/08/xop/include"" /> 
  </ns6:BinaryBase64Object>

---      ------=_Part_4_1104626135.1351225350567
Content-Type: application/octet-stream
Content-Transfer-Encoding: binary
Content-Id: <be434728-da9e-4b88-858f-065cc11074a0@niem.gov>

My question is as follows
1. Is this an issue or is that a standard process of encoding the Content-Id
2. Can I stop encoding from happening.
3. How is the Content-Id in Spring generated. How can i stop using Spring from using @niem.gov in the Content-Id.
4. In which jar file is the code for Content-Id.
5. Should this be handled at the service provider or consumer side.
6. How can i get around this problem? 
",,";03/Dec/12 5:57 AM;arjen.poutsma;4020",,,,,4020,,,,4020,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-12-03 05:55:32.293,32812,true,gregturn(gregturn),,,,"0|i05xjb:",34639,32514,,,,,,,,"03/Dec/12 5:55 AM;arjen.poutsma;Hi,

Let me try and answer your questions:

1. This is a standard process. Content-IDs are URIs, and therefor need to be encoded.
2. You currently can't. However, if you want to customize the marshalling process, take a look at the Jaxb2AttachmentMarshaller and Jaxb2AttachmentUnmarshaller classes inside org.springframework.oxm.jaxb.Jaxb2Marshaller. Note that these classes are in the Spring Framework, not Spring Web Services.
3. It is generated from the element name space that the attachment is attached to. So in your case, niem.gov is probably the namespace of the XML element of the attachment.
4. Not sure I understand this question. Spring-WS is correct here, and has no problem interacting with other WS implementations doing MTOM. See the mton sample, for instance, which has a JAX-WS client.
5. Like I said in 2, take a look at the Jaxb2Marshaller in SPR, and create a custom subclass.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#886|https://github.com/spring-projects/spring-ws/issues/886]. ",,,,,,,,,,,,,,,,
SpringPlainTextPasswordValidationCallbackHandler,SWS-805,45797,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,bemorgan,bemorgan,21/Oct/12 4:15 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,05/Nov/12 4:32 AM,2.1.1,,,,,,,,Security,,,,,0,,,,,,,"The wss4j plain text password validation callback handler (org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler) has been removed from the latest production version - 2.1.1

It appears to have been deleted in the unreleased tag 2.0.6 but is still referenced in the reference documentation. This class is also missing from trunk in svn.

Has this functionality been replaced and the documentation requires updating or is this an oversight?

I discovered this when upgrading to the latest version of spring ws.

For reference here are the urls:

2.0.5 svn - https://src.springframework.org/svn/spring-ws/tags/spring-ws-2.0.5.RELEASE/security/src/main/java/org/springframework/ws/soap/security/wss4j/callback/SpringPlainTextPasswordValidationCallbackHandler.java

Reference documentation - http://static.springsource.org/spring-ws/site/reference/html/security.html#security-wss4j-security-interceptor
",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-11-05 04:32:05.195,32721,true,gregturn(gregturn),,,,"0|i05wz3:",34548,32421,,,,,,,,"05/Nov/12 4:32 AM;arjen.poutsma;As stated in the [release notes|http://forum.springsource.org/showthread.php?126958-Spring-Web-Services-2-1-0-RELEASE-released], the SpringDigestPasswordValidationCallbackHandler and SpringPlainTestPasswordValidationCallbackHandler have been merged into SpringSecurityPasswordValidationCallbackHandler, which works the same way as the SpringDigestPasswordValidationCallbackHandler (i.e. supply it with a  UserDetailsService).
","05/Nov/12 5:06 PM;bemorgan;Thanks Arjen,

The documentation still seems to be out of date:

http://static.springsource.org/spring-ws/site/reference/html/security.html#security-wss4j-security-interceptor

It now has the right class in the sample configuration but the sample configuration still shows an AuthenticationManager. The SpringPlainTextPasswordValidationCallbackHandler only has a user details service not AuthenticationManager.

<beans>
  <bean id=""springSecurityHandler""
      class=""org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler"">
    <property name=""authenticationManager"" ref=""authenticationManager""/>
  </bean>

  <bean id=""authenticationManager"" class=""org.springframework.security.providers.ProviderManager"">
      <property name=""providers"">
          <bean class=""org.springframework.security.providers.dao.DaoAuthenticationProvider"">
              <property name=""userDetailsService"" ref=""userDetailsService""/>
          </bean>
      </property>
  </bean>

  <bean id=""userDetailsService"" class=""com.mycompany.app.dao.UserDetailService"" />
  ...
</beans>","06/Nov/12 2:53 AM;arjen.poutsma;You're right, I'll correct the documentation right now.","06/Nov/12 3:38 AM;arjen.poutsma;Fixed!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#885|https://github.com/spring-projects/spring-ws/issues/885]. ",,,,,,,,,,,,,
WebServiceMessageReceiverHandlerAdapter not easily overridable to produce SOAP faults,SWS-804,45750,Defect,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,machine,machine,15/Oct/12 10:28 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,30/Nov/12 3:49 AM,2.1 GA,,,,,,2.1.2,,,,,,,0,,,,,,,"WebServiceMessageReceiverHandlerAdapter has been changed recently to catch InvalidXmlException and return a HTTP 400 status code. We would like to instead return a SOAP fault with a detailed message of the parse error (I'm not certain but returning 400 is probably against the SOAP spec). This is impossible with the new implementation of WebServiceMessageReceiverHandlerAdapter without re-implementing the handle(...) method. 

Could the handling of this exception (and probably the non-POST transport method) be done by a separate protected method such that it can be overridden?",,";30/Nov/12 3:48 AM;arjen.poutsma;720",,,,,720,,,,720,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-11-30 03:49:30.517,32674,true,gregturn(gregturn),,,,"0|i05wov:",34502,32374,,,,,,,,"30/Nov/12 3:49 AM;arjen.poutsma;Fixed!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#884|https://github.com/spring-projects/spring-ws/issues/884]. ",,,,,,,,,,,,,,,,
SimpleSoapExceptionResolver :customizFault stopped working in verions 2.1.1,SWS-799,45582,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,arvindbpatel,arvindbpatel,27/Sep/12 7:04 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,08/Oct/12 2:33 AM,2.1.1,,,,,,,,Core,,,,,0,,,,,,,"I had this exception resolver that used to work in version 2.0.5
Now I downloaded 2.1.1 for my wsdl adapter change and exception resolver stopped working .

Here is what I have defined in config.
<bean id=""exceptionResolver""
        class=""org.test.MyExceptionResolver"">
</bean>

The class I have is as below.
************
public class MyExceptionResolver extends
SimpleSoapExceptionResolver {
	

    protected boolean resolveExceptionInternal(MessageContext messageContext,
            Object endpoint, Exception ex) {
    	return true;
    } 
    
    
    protected void customizeFault(org.springframework.ws.context.MessageContext messageContext, java.lang.Object endpoint, java.lang.Exception ex, org.springframework.ws.soap.SoapFault fault){

// In case of exception it would not come here at all.

... Some Code
...
    	
}			
		
*************


Please let me know if you have any questions.

Thank you,
",Spring Web Services : Weblogic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-10-08 02:32:45.142,32503,true,gregturn(gregturn),,,,"0|i05vnr:",34335,32203,,,,,,,,"03/Oct/12 7:14 AM;arvindbpatel;Any update ?

Please let me know if you have any questions.","08/Oct/12 2:32 AM;arjen.poutsma;Please see this comments on SWS-772: https://jira.springsource.org/browse/SWS-772?focusedCommentId=79384#comment-79384","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#880|https://github.com/spring-projects/spring-ws/issues/880]. ",,,,,,,,,,,,,,,
XsdSchemaHandlerAdapter does not transform schema locations,SWS-797,45540,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arvindbpatel,arvindbpatel,24/Sep/12 1:19 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,25/Sep/12 6:30 AM,2.1 GA,,,,,,2.1.2,,Core,,,,,0,,,,,,,"This is on an existing issue that was marked resolved.
The issue number is SWS-791.

I have modified the issue but didn't know how to reopen it so I am opening this new one referring to SWS-791.

Sorry for that.

Thanks,",Spring WS,";25/Sep/12 6:29 AM;arjen.poutsma;3900",,,,,3900,,,,3900,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-09-25 06:30:29.596,32461,true,gregturn(gregturn),,,,"0|i05ven:",34294,32161,https://jira.springsource.org/browse/SWS-791?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel,,,,,,,"25/Sep/12 6:30 AM;arjen.poutsma;Fixed in 2.1.2. Please try a recent snapshot as of tonight (http://static.springsource.org/spring-ws/site/downloads/snapshots.html) to verify this functionality.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#777|https://github.com/spring-projects/spring-ws/issues/777]. ",,,,,,,,,,,,,,,,
Signature validation fails when using SAML token.,SWS-794,45061,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Deferred,,jaminh,jaminh,24/Aug/12 7:27 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,21/Aug/13 1:09 AM,2.1 GA,,,,,,,,Security,,,,,0,,,,,,,"Validation of SAML assertions results in an error in the verifyCertificateTrust() method because this method assumes that signatures are always signed by an X509 certificate. The SAML spec gives an example of a signature that uses the SAML assertion to sign the signature in section 3.5.1.4 Example V2.0 from http://docs.oasis-open.org/wss/v1.1/wss-v1.1-spec-os-SAMLTokenProfile.pdf. After checking ""if (actionResult != null)"" the type of token(X509, public key, or SAML) used for the signature should be determined and trust should be verified accordingly. The name of the method should probably be changed to since it would be verifying trust on more than just certificates.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:28.781,32073,true,gregturn(gregturn),,,,"0|i05t13:",33909,31773,,,,,,,,"23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#876|https://github.com/spring-projects/spring-ws/issues/876]. ",,,,,,,,,,,,,,,,,
Extending SoapFaultAnnotationExceptionResolver results in competing annotation resolvers with backwards order,SWS-793,45055,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Duplicate,arjen.poutsma,jonnycatlett,jonnycatlett,23/Aug/12 7:50 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,28/Aug/12 3:03 AM,2.1 GA,,,,,,,,Core,,,,,1,,,,,,,"I extended SoapFaultAnnotationExceptionResolver to create a custom exception resolver.  While testing I realized that the default SoapFaultAnnotationExceptionResolver was handling the annotated exception being thrown.  From the logs I could see that both resolvers were being created, and the custom one was never called.

I reverted back to version 2.0.1_RELEASE and the problem went away.  It also appeared like the default SoapFaultAnnotationExceptionResolver was not created.

One workaround for this is to set the order of the custom resolver to highest priority, therefore delegating the exceptions to that resolver first, but this is not consistent with the documentation and samples.  ","Mac OSX (10.7.4), java version ""1.7.0_05"", Spring WS  core version (2.1.0_RELEASE)",,,,,,,,,,,,,,,SWS-777,SWS-772,,,,,,,,,,,,,,,,,,,,24969600,,2012-08-28 03:03:16.592,32067,true,gregturn(gregturn),,,,"0|i05szr:",33903,31767,,,,,,,,"28/Aug/12 3:03 AM;arjen.poutsma;This is due to SWS-772. See my [last comment|https://jira.springsource.org/browse/SWS-772?focusedCommentId=79384&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-79384] on that issue for the reason.

As suggested, the workaround is to set an order on the exception resolver.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#875|https://github.com/spring-projects/spring-ws/issues/875]. ",,,,,,,,,,,,,,,,
Retrieving SOAP Header info,SWS-792,45012,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Complete,arjen.poutsma,arvindbpatel,arvindbpatel,20/Aug/12 2:17 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,21/Aug/12 2:01 AM,,,,,,,,,,,,,,0,,,,,,,"I am looking for a help rather than issue.

I need to retrieve the SOAP Header info and don't know the way to do it.

I used the code below

SaajSoapMessage msg = (SaajSoapMessage) msgContext.getRequest();
SoapEnvelope envelope = msg.getEnvelope();
SoapHeader header = envelope.getHeader();
Iterator<SoapHeaderElement> iter = header.examineAllHeaderElements();

but iterator will ultimately give me weblogic.xml.saaj.TextImpl object which is not public in the package.

Please help.

Thanks,
Arvind.

",Weblogic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-08-21 02:00:21.971,32023,true,gregturn(gregturn),,,,"0|i05sq7:",33860,31723,,,,,,,,"21/Aug/12 2:00 AM;arjen.poutsma;I am guessing that TextImpl probably implements javax.xml.soap.Text, which *is* public.","21/Aug/12 2:01 AM;arjen.poutsma;Resolving as invalid, as it's not a Spring-WS issue.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#874|https://github.com/spring-projects/spring-ws/issues/874]. ",,,,,,,,,,,,,,,
SoapEnvelopeLoggingInterceptor won't log,SWS-789,44639,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Cannot Reproduce,arjen.poutsma,lino,lino,23/Jul/12 8:41 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,07/Aug/12 3:26 AM,2.1 GA,,,,,,2.1.1,,,,,,,0,,,,,,,"The SoapEnvelopeLoggingInterceptor does not log request/responses.

I'm using 2.1.0.RELEASE spring-ws-core, with the SoapEnvelopeLoggingInterceptor as the first/only interceptor (I usually have the payload and validation interceptors also).

{code}
<!-- ordered(!) list of interceptors -->
<sws:interceptors>
	
	<bean id=""soapInterceptor""
		class=""org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"">
		<property name=""logFault"" value=""true"" />
		<property name=""logRequest"" value=""true"" />
		<property name=""logResponse"" value=""true"" />			
	</bean>
{code}

and setting log4j level to debug on org.springframework.ws.server.endpoint.interceptor to debug.

If I add the PayloadLoggingInterceptor, I can see the Payload request/responses. I don't see the soap request/response or fault logging.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-08-07 03:26:50.278,31670,true,gregturn(gregturn),,,,"0|i05qon:",33529,31370,,,,,,,,"07/Aug/12 3:26 AM;arjen.poutsma;I've tried to reproduce this, but the SoapEnvelopeLoggingInterceptor works fine in my tests.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#871|https://github.com/spring-projects/spring-ws/issues/871]. ",,,,,,,,,,,,,,,,
MethodEndpoint.getBean is inconsistent with its API,SWS-787,44617,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,hpstoerr,hpstoerr,23/Jul/12 5:24 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,07/Aug/12 2:52 AM,2.0.4,,,,,,2.1.1,,Core,,,,,0,,,,,,,"The API description of MethodEndpoint.getBean says ""Returns the object bean for this method endpoint."" But if the constructor with a BeanFactory argument is used, it actually returns the bean name (String) instead of the actual bean! 

You might correct the documentation, but I'd much prefer if you fix the implementation to do as the documentation says, since currently you need to get hold of the BeanFactory as well to get to the endpoint object, and the MethodEndpoint does not provide it.
",,";07/Aug/12 2:52 AM;arjen.poutsma;360",,,,,360,,,,360,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-08-07 02:52:35.327,31647,true,gregturn(gregturn),,,,"0|i05qjz:",33508,31347,,,,,,,,"07/Aug/12 2:52 AM;arjen.poutsma;Fixed!","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#869|https://github.com/spring-projects/spring-ws/issues/869]. ",,,,,,,,,,,,,,,,
"SaxUtils leaks file handles, locks file on Windows",SWS-783,44236,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,krosenvold,krosenvold,27/Jun/12 2:14 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,07/Aug/12 2:33 AM,2.1 GA,,,,,,2.1.1,,XML,,,,,0,,,,,,,"The method ""createInputSource"" in SaxUtils leaks the input stream in 

InputSource inputSource = new InputSource(resource.getInputStream());

While this might be considered a small nuisance, it becomes a PITA on Windows, because the ""SimpleXsdSchema"" uses this method and therefore locks the ""xsd"" file in the file system, which is a pain when running ""mvn clean install"" because clean fails because the XSD/WSDL file is locked.

There are basically 4 non-test usages of this method that need to be reworked to avoid leaking file handles.
",,";07/Aug/12 2:45 AM;arjen.poutsma;2100",,,,,2100,,,,2100,,,,,,,,,,,,,"27/Jun/12 3:14 AM;krosenvold;Added_closeable_support_to_saxutils.patch;https://jira.spring.io/secure/attachment/20000/Added_closeable_support_to_saxutils.patch","27/Jun/12 3:36 AM;krosenvold;Added_closeable_support_to_saxutils1-v2.patch;https://jira.spring.io/secure/attachment/20001/Added_closeable_support_to_saxutils1-v2.patch",,,,,,,,,,,,24969600,,2012-07-10 03:21:10.613,31382,true,gregturn(gregturn),,,,"0|i05oof:",33204,31082,,,,,,,,"27/Jun/12 3:14 AM;krosenvold;The enclosed patch adds a ""CloseableInputSource"" that can be properly closed. 

The test-cases on spring-ws seem to be quite far from working on windows, so I am unable to run them. 

I am unsure of how this should be tested (if necessary).","27/Jun/12 3:31 AM;krosenvold;It's locking on the WSDL too. Update coming soon","27/Jun/12 3:36 AM;krosenvold;And here's version 2 that does not lock the wsdl file either","10/Jul/12 3:21 AM;arjen.poutsma;Thanks for work you put into those patches, but I cannot confirm the problem actually exists. According to the [InputSource Javadoc|http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html], the underlying input stream should be closed as part of the parsing process:

{quote}[...] standard processing of both byte and character streams is to close them on as part of end-of-parse cleanup, so applications should not attempt to re-use such streams after they have been handed to a parser.{quote}

I did some further testing on this by putting a breakpoint on InputStread.close(), and it does get called as part of DocumentBuilder.parse(). All of this on MacOS X, using the standard Oracle JDK (1.7.0_04-b21).

Are you using the standard Oracle JDK Xerces parser, or perhaps using something else, like the IBM JDK or a different parser?","07/Aug/12 2:33 AM;arjen.poutsma;Closing as invalid for now.","12/Apr/13 10:13 AM;rogerdpack;also possibly related: http://betterlogic.com/roger/2013/04/documentbuilder-file-handle-leak-windows","15/Apr/13 10:41 PM;krosenvold;@roger ""not really"", since I've been running on java7 all along.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#768|https://github.com/spring-projects/spring-ws/issues/768]. ",,,,,,,,,,
"DefaultMethodEndpointAdapter.JDOM_CLASS_NAME must be updated to ""org.jdom2.Element""",SWS-782,43967,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mtopolnik,mtopolnik,21/Jun/12 2:00 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jun/12 12:59 AM,,,,,,,2.1.1,,,,,,,0,,,,,,,"The class name used by the DefaultMethodEndpointAdapter to detect whether JDOM is on classpath wasn't updated to reflect the upgrade to JDOM2. This breaks the use of JDOM2 Elements for endpoint mapping. A workaround is to add the class org.jdom.Element to the classpath---either by adding the old JDOM dependency, or by just creating an empty class of that name.",,";26/Jun/12 12:59 AM;arjen.poutsma;300",,,,,300,,,,300,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-06-21 02:18:49.79,31268,true,gregturn(gregturn),,,,"0|i05nyn:",33088,30968,,,,,,,,"21/Jun/12 2:18 AM;arjen.poutsma;Thanks for spotting this, it will be fixed in 2.1.1.

Note that I did make the change in the AnnotationDrivenBeanDefinitionParser, so that <sws:annotation-driven/> will pick up JDOM 2.","21/Jun/12 2:32 AM;mtopolnik;I see. That explains why this one was missed :)","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#865|https://github.com/spring-projects/spring-ws/issues/865]. ",,,,,,,,,,,,,,,
Axiom based WS - XML attachment throws StreamCopyException,SWS-780,43859,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,bart gluszak,bart gluszak,13/Jun/12 11:46 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,27/Jun/12 12:11 AM,2.1 GA,,,,,,,,,,,,,0,,,,,,,"I've switched from SaajSoapMessageFactory to AxiomSoapMessageFactory to handle large WS attachments more efficiently. I am using Spring WS 2.1 and Apache Axiom 1.2.13.

This problem occurs with WS attachment which is an xml file (text/xml content type):
- encoded in UTF-8 with BOM OR
- has non ASCII characters i.e. ęąàè

2012-06-13 13:13:40,378 ERROR [rt.service.episode.ws.AddMedCaseEndpoint] - Internal error org.apache.axiom.ext.io.StreamCopyException: Error reading from source
org.apache.axiom.om.OMException: org.apache.axiom.ext.io.StreamCopyException: Error reading from source
at org.apache.axiom.attachments.PartContentFactory.cr eatePartContent(PartContentFactory.java:153)
at org.apache.axiom.attachments.PartImpl.fetch(PartIm pl.java:176)
at org.apache.axiom.attachments.MIMEMessage.getNextPa rtDataHandler(MIMEMessage.java:299)
at org.apache.axiom.attachments.MIMEMessage.fetchAllP arts(MIMEMessage.java:264)
at org.apache.axiom.attachments.MIMEMessage.getConten tIDs(MIMEMessage.java:271)
at org.apache.axiom.attachments.Attachments.getConten tIDSet(Attachments.java:311)
at org.springframework.ws.soap.axiom.AxiomSoapMessage $AxiomAttachmentIterator.<init>(AxiomSoapMessage.java:360)
(...)
Caused by: java.io.IOException: Found LF without CR
at org.apache.james.mime4j.codec.QuotedPrintableInput Stream.read0(QuotedPrintableInputStream.java:194)
at org.apache.james.mime4j.codec.QuotedPrintableInput Stream.read(QuotedPrintableInputStream.java:306)
at org.apache.axiom.attachments.utils.BAAOutputStream .readFrom(BAAOutputStream.java:112)

The attachment uses CR LF as new line sign. With SaajSoapMessageFactory there is no problem with such attachment.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-06-26 00:50:24.165,31160,true,gregturn(gregturn),,,,"0|i05naf:",32979,30860,,,,,,,,"14/Jun/12 3:17 AM;bart gluszak;The request created with SoapUI was wrong. For UTF-8 XML attachment it adds a header Content-Type: text/xml; charset=Cp1250 and encodes the attachment with this charset.","26/Jun/12 12:50 AM;arjen.poutsma;@Bart: does that mean I can close this issue?","26/Jun/12 7:34 AM;bart gluszak;@Arjen: I think yes.

Conclusion: AxiomSoapMessageFactory is more sensitive on the incorrect attachment headers than SaajSoapMessageFactory, which consumes such attachments without error.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#864|https://github.com/spring-projects/spring-ws/issues/864]. ",,,,,,,,,,,,,,
PayloadValidatingInterceptor 's method is not getting triggered in the echo server sample program when the echo client program is executed. ,SWS-779,43774,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Invalid,arjen.poutsma,vganesh,vganesh,07/Jun/12 9:24 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jun/12 2:44 AM,2.1 GA,,,,,,2.1.1,,Core,,,,,0,springwebservices,,,,,,"I am following the instructions available at spring-ws-2.1.0.RELEASE/samples/echo/readme.txt. The file spring-ws-2.1.0.RELEASE/samples/echo/server/target/echo-server.war is successfully deployed at apache-tomcat-7.0.22/webapps/echo-server. When I run the client program ""mvn install exec:java"" from spring-ws-2.1.0.RELEASE/samples/echo/client/spring-ws/ directory, I can verify call stacks 1 and 2, attached to this issue does get invoked and the program completes successfully. 

However, I have set breakpoint for PayloadValidatingInterceptor class and also the methods in this class. The interceptor is not getting invoked. Why, the interceptor's callback methods are not getting called? My intent is to to add some application logic when the interceptor call back method is called after I can verify the callbacks are really getting called. 

Thanks and regards, 
 

$ grep PayloadValidatingInterceptor spring-ws-2.1.0.RELEASE/samples/echo/server/src/main/webapp/WEB-INF/spring-ws-servlet.xml
        <bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">


Break points are here: 

PayloadValidatingInterceptor	
EchoEndpoint [line: 67] - EchoEndpoint(EchoService)	
EchoEndpoint [line: 83] - handleEchoRequest(Element)	
PayloadValidatingInterceptor [line: 52] - getValidationRequestSource(WebServiceMessage)	
PayloadValidatingInterceptor [line: 63] - getValidationResponseSource(WebServiceMessage)	
WebServiceMessageReceiverHandlerAdapter [line: 50] - getLastModified(HttpServletRequest, Object)	
WebServiceMessageReceiverHandlerAdapter [line: 56] - handle(HttpServletRequest, HttpServletResponse, Object)	
WebServiceMessageReceiverHandlerAdapter [line: 72] - supports(Object)	
WebServiceMessageReceiverHandlerAdapter [entry] - getLastModified(HttpServletRequest, Object)	
WebServiceMessageReceiverHandlerAdapter [entry] - handle(HttpServletRequest, HttpServletResponse, Object)	
WebServiceMessageReceiverHandlerAdapter [entry] - supports(Object)	

","$ java -version 
java version ""1.6.0_30""
Java(TM) SE Runtime Environment (build 1.6.0_30-b12)
Java HotSpot(TM) 64-Bit Server VM (build 20.5-b03, mixed mode)

$ uname -a 
Linux stardev 3.2.0-24-generic #39-Ubuntu SMP Mon May 21 16:52:17 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux

apache-tomcat-7.0.22 spring-ws-2.1.0.RELEASE",,,,,,,,,,,,,,,,,,,,,,,"07/Jun/12 9:24 AM;vganesh;callstack1.txt;https://jira.spring.io/secure/attachment/19829/callstack1.txt","07/Jun/12 9:24 AM;vganesh;callstack2.txt;https://jira.spring.io/secure/attachment/19830/callstack2.txt",,,,,,,,,,,,24969600,,2012-06-26 02:44:27.533,31076,true,gregturn(gregturn),,,,"0|i05ms7:",32897,30776,,,,,,,,"26/Jun/12 2:44 AM;arjen.poutsma;I think your put breakpoints on the client-side PayloadValidatingInterceptor (i.e. org.springframework.ws.client.support.interceptor.PayloadValidatingInterceptor),and they should be on the server-side variant (org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor).","28/Jun/12 7:20 PM;vganesh;thanks for the clarification. I am able to verify server side interceptor is getting called. Please close this issue. Thanks a lot. ","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#863|https://github.com/spring-projects/spring-ws/issues/863]. ",,,,,,,,,,,,,,,
SoapFaultMappingExceptionResolver not handling exception,SWS-777,43528,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,gordonad,gordonad,22/May/12 7:37 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,29/May/12 4:03 AM,2.1 RC1,,,,,,2.1 GA,,Core,,,,,0,,,,,,,"Given the following configuration:

{code:xml}
    <bean class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
        <property name=""exceptionMappings"">
            <value>
                org.springframework.dao.EmptyResultDataAccessException=CLIENT,Entity not found
            </value>
        </property>
        <property name=""defaultFault"" value=""SERVER""/>
    </bean>
{code}

The result in 2.0.5 is correct:
{code:xml}
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
        <SOAP-ENV:Header/>
        <SOAP-ENV:Body>
            <SOAP-ENV:Fault>
                <faultcode>SOAP-ENV:Client</faultcode>
                <faultstring xml:lang=""en"">Entity not found</faultstring>
            </SOAP-ENV:Fault>
        </SOAP-ENV:Body>
    </SOAP-ENV:Envelope>
{code}

The result in 2.1.0.RC1 is INCORRECT:
{code:xml}
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
    <SOAP-ENV:Header/>
    <SOAP-ENV:Body>
        <SOAP-ENV:Fault>
            <faultcode>SOAP-ENV:Server</faultcode>
            <faultstring xml:lang=""en"">Incorrect result size: expected 1, actual 0</faultstring>
        </SOAP-ENV:Fault>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
{code}",,";29/May/12 4:03 AM;arjen.poutsma;7260",,,,,7260,,,,7260,,,,,,SWS-772,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-23 00:33:05.088,30871,true,gregturn(gregturn),,,,"0|i05lin:",32692,30571,,,,,,,,"23/May/12 12:33 AM;arjen.poutsma;Hmm, that's strange. Do you also use {{<sws:annotation-driven>}}, by any chance? There were some changes to that in 2.1.

Also: does the EmptyResultDataAccessException have a {{@SoapFault}} annotation, perhaps?","23/May/12 12:33 AM;arjen.poutsma;Added formatting.","23/May/12 6:10 AM;gordonad;Arjen,

Yes, I have configured <ws:annotation-driven/>

I am using the examples from the Enterprise Integration with Spring course that I am teaching this week.  I use those to run through the upcoming versions of SWS, SI & SB to determine any api changes to share with the students.

Thanks,
Gordon Dickens

@gdickens
linkedin.com/in/gordondickens
Blog: technophile.gordondickens.com
","29/May/12 1:08 AM;arjen.poutsma;Gordon,

Can you elaborate which example(s) of the EI course show this problem? That makes it a bit easier to duplicate.

EDIT: never mind, I found it myself in the ws-2 lab of the course.

Thanks,

Arjen","29/May/12 4:10 AM;arjen.poutsma;It seems like SWS-772 was the culprit here. See my [last comment|https://jira.springsource.org/browse/SWS-772?focusedCommentId=79384&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-79384] on that issue for the reason.

For the ws-2 lab, it seems like adding an ordered property will fix it, like so:
{code:xml}

<bean class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
    <property name=""order"" value=""0""/>
    <property name=""exceptionMappings"">
        <value>
            org.springframework.dao.EmptyResultDataAccessException=CLIENT,Entity not found
        </value>
    </property>
    <property name=""defaultFault"" value=""SERVER""/>
</bean>
{code}","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#861|https://github.com/spring-projects/spring-ws/issues/861]. ",,,,,,,,,,,,
Windows-specific error with relative XSD referencing,SWS-776,43499,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,desliner,desliner,21/May/12 5:00 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,14/Aug/12 2:04 AM,2.0.5,,,,,,2.1.1,,Core,,,,,0,,,,,,,"It appears, that Spring ignores relative addressing in XSD files on Windows platform.

Root cause was found at org.springframework.xml.sax.SaxUtils.getSystemId() method. It tries to construct java.net.URI object from path string with Windows-style \-slashes and fails on this operation. This path string is obtained from java.net.URL.toExternalForm(). Exception is silently ignored and null is returned from the method.

Current workaround is to implement custom org.springframework.core.io.ClassPathResource class that will override getURL() returning paths with valid /-slashes.
Then one should use instances of this class to populate xsds property of org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection, instead of automatic Spring-generated instances.
Patch with workaround is attached. Now XSD schema collection declaration looks like this:

{code:xml}
<bean class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"">
  <property name=""xsds"">
    <list>
      <bean class=""com.platform.util.spring.SafeClassPathResource"">
         <constructor-arg value=""META-INF/xsd/service.xsd"" />
      </bean>
    </list>
  </property>
</bean>
{code}",OS Windows,";26/Jun/12 2:38 AM;arjen.poutsma;5760",,,,,5760,,,,5760,,,,,,,,,,,,,"21/May/12 5:00 AM;desliner;SafeClassPathResource.patch;https://jira.spring.io/secure/attachment/19689/SafeClassPathResource.patch","26/Jun/12 2:37 AM;arjen.poutsma;path-1.0-src.zip;https://jira.spring.io/secure/attachment/19996/path-1.0-src.zip",,,,,,,,,,,,24969600,,2012-06-26 02:37:04.474,30842,true,gregturn(gregturn),,,,"0|i05lc7:",32663,30542,,,,,,,,"26/Jun/12 2:37 AM;arjen.poutsma;I suspect Spring-WS is not to blame, but rather Spring itself. But I've tried to reproduce this on a Windows VM, and I couldn't. I've attached a sample maven project, could you please take a look at it and see what's different from your project?","14/Aug/12 2:04 AM;arjen.poutsma;Closing as Cannot Reproduce for now, due to lack of feedback.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#860|https://github.com/spring-projects/spring-ws/issues/860]. ",,,,,,,,,,,,,,,
Asynchronous parameters for JMS calls are not used,SWS-775,43408,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,pilerou,pilerou,19/May/12 4:23 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jun/12 12:46 AM,2.0.4,,,,,,,,Core,,,,,0,,,,,,,"Hi,

Il would like to use Spring WS and JMS capabilities in order to :
- make my client call an ActiveMQ server, send a message to it, continue the process
- then the server consume the message asynchronously

I don't make it work with many configuration i already tried.

Here is my configuration :

Code:

    <bean id=""my-jms-url"" class=""net.sf.itcb.common.client.destination.SimpleDestinationProvider"" >
        <property name=""destinationURI"" value=""jms:myRequestQueue?deliveryMode=NON_PERSISTENT""/>
    </bean>  
    
    <bean id=""myJmsConnectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
        <property name=""brokerURL"" value=""tcp://localhost:61616""/>
        <property name=""dispatchAsync"" value=""true""/>
        <property name=""alwaysSessionAsync"" value=""true""/>
        <property name=""sendAcksAsync"" value=""true""/>
        <property name=""useAsyncSend"" value=""true""/>
    </bean>

    <bean id=""myJmsWebserviceTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"" >
        <property name=""messageSender"">
            <bean class=""org.springframework.ws.transport.jms.JmsMessageSender"">
                <property name=""connectionFactory"" ref=""myJmsConnectionFactory""/>
            </bean>
        </property>
    </bean>

As you can see, i activated all async functionalities, and my JMS communication are still synchronous.
Client waits for the server response.

Moreover, client never ends when it calls a function with void return.


Is there a way to do it ?

Thanks for your help. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-06-26 00:46:17.481,30827,true,gregturn(gregturn),,,,"0|i05l8v:",32648,30527,http://forum.springsource.org/showthread.php?126066-Asynchronous-JMS-call,,,,,,,"26/Jun/12 12:46 AM;arjen.poutsma;Spring-WS currently does not support asynchronous web service invocations natively. However, you can use the Spring @Async annotations to do so, see http://static.springsource.org/spring/docs/3.0.5.RELEASE/reference/scheduling.html#scheduling-annotation-support-async","13/Jan/15 6:06 AM;dariovmartine;There are plans to add asynchronous support?","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#859|https://github.com/spring-projects/spring-ws/issues/859]. ",,,,,,,,,,,,,,,
"In documentation, JMS server configuration doesn't work",SWS-770,43156,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,arjen.poutsma,pilerou,pilerou,02/May/12 2:53 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,02/May/12 6:01 AM,,,,,,,2.0.5,,Documentation,,,,,0,,,,,,,"http://static.springsource.org/spring-ws/site/reference/html/server.html contains a jms configuration for server.

This configuration uses a deprecated class : org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping

When i use it, i have an exception : java.lang.IllegalStateException: No adapter for endpoint

Using the recommanded class org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping works fine.

Documentation should be updated.
",,";02/May/12 6:01 AM;arjen.poutsma;120",,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:15.641,30575,true,gregturn(gregturn),,,,"0|i05jov:",32396,30275,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#855|https://github.com/spring-projects/spring-ws/issues/855]. ",,,,,,,,,,,,,,,,
Error in org.springframework.ws.context's content ,SWS-769,43151,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Complete,arjen.poutsma,dr_pompeii,dr_pompeii,01/May/12 6:48 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,01/May/12 7:29 AM,2.0.4,,,,,,2.0.5,,Documentation,,,,,0,,,,,,,"The package org.springframework.ws.context has an explanation where does mention to two interfaces, only one exists within the complete API, the other not.",,";01/May/12 7:29 AM;arjen.poutsma;60",,,,,60,,,,60,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:35.214,30570,true,gregturn(gregturn),,,,"0|i05jnr:",32391,30270,http://forum.springsource.org/showthread.php?125731-Error-API-SWS-2-0-4,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#854|https://github.com/spring-projects/spring-ws/issues/854]. ",,,,,,,,,,,,,,,,
 Broken link in SWS 2.0.4 - org.springframework.ws.soap.security.xwss,SWS-766,43079,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Complete,arjen.poutsma,dr_pompeii,dr_pompeii,24/Apr/12 7:24 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,01/May/12 4:18 AM,2.0.4,,,,,,2.0.5,,Documentation,,,,,0,,,,,,,"The package org.springframework.ws.soap.security.xwss has a broken link, It must be updated",,";01/May/12 4:18 AM;arjen.poutsma;60",,,,,60,,,,60,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:17.931,30501,true,gregturn(gregturn),,,,"0|i05j8f:",32322,30201,http://forum.springsource.org/showthread.php?125757-Broken-link-in-SWS-2-0-4-org-springframework-ws-soap-security-xwss,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#852|https://github.com/spring-projects/spring-ws/issues/852]. ",,,,,,,,,,,,,,,,
SoapEnvelopeLoggingInterceptor logging only partial request/response when Axis SAAJ API is used along with Xalan 2.7.1 and log4j 1.2.16 (using %m option),SWS-764,42970,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,maheshkandpal,maheshkandpal,16/Apr/12 3:57 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,02/May/12 6:05 AM,2.0.2,,,,,,2.0.5,,Core,,,,,0,interceptor,logging,,,,,"Excerpt of Catalina log:

{noformat}
Apr 16, 2012 3:33:33 PM org.apache.catalina.core.ApplicationContext log
INFO: Initializing Spring FrameworkServlet 'spring-ws'
2012-04-16 15:33:33,803 INFO [transport.http.MessageDispatcherServlet] - FrameworkServlet 'spring-ws': initialization started
2012-04-16 15:33:33,991 INFO [context.support.XmlWebApplicationContext] - Refreshing WebApplicationContext for namespace 'spring-ws-servlet': startup date [Mon Apr 16 15:33:33 IST 2012]; root of context hierarchy
2012-04-16 15:33:34,756 INFO [factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring-ws-servlet.xml]
2012-04-16 15:33:39,428 INFO [addressing.server.AnnotationActionEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2012-04-16 15:33:39,568 INFO [factory.support.DefaultListableBeanFactory] - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@188c838: defining beans [stubHumanResourceService,holidayEndpoint,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping#0,org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping#0,org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping#0,org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter#0,org.springframework.ws.soap.server.endpoint.interceptor.DelegatingSmartSoapEndpointInterceptor#0,org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptor#0,org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection#0,holiday]; root of factory hierarchy
2012-04-16 15:33:41,818 INFO [xsd.commons.CommonsXsdSchemaCollection] - Loaded ServletContext resource [/WEB-INF/holiday.xsd]
2012-04-16 15:33:43,130 INFO [soap.saaj.SaajSoapMessageFactory] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2012-04-16 15:33:43,209 INFO [transport.http.MessageDispatcherServlet] - FrameworkServlet 'spring-ws': initialization completed in 9406 ms
2012-04-16 15:33:44,990 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03
2012-04-16 15:33:45,224 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [07-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 15:33:45,255 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse xmlns:sch=""http://mycompany.com/hr/schemas""><sch:Status xmlns:sch=""http://mycompany.com/hr/schemas"">Booked
2012-04-16 15:33:59,379 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03
2012-04-16 15:33:59,379 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [01-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 15:33:59,379 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse xmlns:sch=""http://mycompany.com/hr/schemas""><sch:Status xmlns:sch=""http://mycompany.com/hr/schemas"">Not Booked
2012-04-16 15:34:16,845 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03
2012-04-16 15:34:16,845 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [07-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 15:34:16,845 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse xmlns:sch=""http://mycompany.com/hr/schemas""><sch:Status xmlns:sch=""http://mycompany.com/hr/schemas"">Booked
2012-04-16 15:34:31,890 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03
2012-04-16 15:34:31,890 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [07-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 15:34:31,890 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse xmlns:sch=""http://mycompany.com/hr/schemas""><sch:Status xmlns:sch=""http://mycompany.com/hr/schemas"">Booked
{noformat}

When I exclude Xalan from the axis-saaj-api dependency, it correctly displays the request/response in the log.

{noformat}
INFO: Initializing Spring FrameworkServlet 'spring-ws'
2012-04-16 16:16:49,950 INFO [transport.http.MessageDispatcherServlet] - FrameworkServlet 'spring-ws': initialization started
2012-04-16 16:16:49,997 INFO [context.support.XmlWebApplicationContext] - Refreshing WebApplicationContext for namespace 'spring-ws-servlet': startup date [Mon Apr 16 16:16:49 IST 2012]; root of context hierarchy
2012-04-16 16:16:50,168 INFO [factory.xml.XmlBeanDefinitionReader] - Loading XML bean definitions from ServletContext resource [/WEB-INF/spring-ws-servlet.xml]
2012-04-16 16:16:51,481 INFO [addressing.server.AnnotationActionEndpointMapping] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2012-04-16 16:16:51,512 INFO [factory.support.DefaultListableBeanFactory] - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1085e92: defining beans [stubHumanResourceService,holidayEndpoint,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping#0,org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping#0,org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping#0,org.springframework.ws.server.endpoint.adapter.method.dom.DomPayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.method.dom.JDomPayloadMethodProcessor#0,org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter#0,org.springframework.ws.soap.server.endpoint.interceptor.DelegatingSmartSoapEndpointInterceptor#0,org.springframework.ws.soap.server.endpoint.interceptor.PayloadRootSmartSoapEndpointInterceptor#0,org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection#0,holiday]; root of factory hierarchy
2012-04-16 16:16:52,231 INFO [xsd.commons.CommonsXsdSchemaCollection] - Loaded ServletContext resource [/WEB-INF/holiday.xsd]
2012-04-16 16:16:52,512 INFO [soap.saaj.SaajSoapMessageFactory] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2012-04-16 16:16:52,543 INFO [transport.http.MessageDispatcherServlet] - FrameworkServlet 'spring-ws': initialization completed in 2593 ms
2012-04-16 16:16:52,902 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03</sch:StartDate>
            <sch:EndDate>2006-03-07</sch:EndDate>
         </sch:Holiday>
         <sch:Employee>
            <sch:Number>67</sch:Number>
            <sch:FirstName>Mahesh</sch:FirstName>
            <sch:LastName>Kandpal</sch:LastName>
         </sch:Employee>
      </sch:HolidayRequest>
   </soapenv:Body>
</soapenv:Envelope>
2012-04-16 16:16:52,949 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [07-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 16:16:52,980 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse><sch:Status>Booked</sch:Status><sch:Duration>4</sch:Duration><sch:EmployeeNumber>67</sch:EmployeeNumber></sch:HolidayResponse></soapenv:Body></soapenv:Envelope>
2012-04-16 16:17:00,729 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03</sch:StartDate>
            <sch:EndDate>2006-03-01</sch:EndDate>
         </sch:Holiday>
         <sch:Employee>
            <sch:Number>67</sch:Number>
            <sch:FirstName>Mahesh</sch:FirstName>
            <sch:LastName>Kandpal</sch:LastName>
         </sch:Employee>
      </sch:HolidayRequest>
   </soapenv:Body>
</soapenv:Envelope>
2012-04-16 16:17:00,729 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [01-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 16:17:00,729 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse><sch:Status>Not Booked</sch:Status><sch:Duration>-2</sch:Duration><sch:EmployeeNumber>67</sch:EmployeeNumber></sch:HolidayResponse></soapenv:Body></soapenv:Envelope>
2012-04-16 16:17:12,039 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Request: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:HolidayRequest>
         <sch:Holiday>
            <sch:StartDate>2006-03-03</sch:StartDate>
            <sch:EndDate>2006-03-07</sch:EndDate>
         </sch:Holiday>
         <sch:Employee>
            <sch:Number>67</sch:Number>
            <sch:FirstName>Mahesh</sch:FirstName>
            <sch:LastName>Kandpal</sch:LastName>
         </sch:Employee>
      </sch:HolidayRequest>
   </soapenv:Body>
</soapenv:Envelope>
2012-04-16 16:17:12,070 INFO [hr.service.StubHumanResourceService] - Booking holiday from [03-Mar-06] to [07-Mar-06] for employee [Mahesh Kandpal]
2012-04-16 16:17:12,070 DEBUG [endpoint.interceptor.SoapEnvelopeLoggingInterceptor] - Response: <soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://mycompany.com/hr/schemas""><soapenv:Header/><soapenv:Body><sch:HolidayResponse><sch:Status>Booked</sch:Status><sch:Duration>4</sch:Duration><sch:EmployeeNumber>67</sch:EmployeeNumber></sch:HolidayResponse></soapenv:Body></soapenv:Envelope>
{noformat}

I had used Xalan 2.7.1 initially with the default Sun SAAJ API as I was facing some issues w.r.t Response Payload as mentioned somewhere in the WS documentation.

Please look into the same. I have included the POM, log4j.properties as well as the Xalan-free WAR so as to fit inside 10M limit.

Thanks & Regards
Mahesh","Tomcat 6.0.14, Log4j 1.2.16, JDK 1.5.0_19, Xalan 2.7.1",,,,73800,73800,,0%,73800,73800,,,,,,,,,,,,,,"16/Apr/12 3:57 AM;maheshkandpal;holiday.war;https://jira.spring.io/secure/attachment/19592/holiday.war","16/Apr/12 3:57 AM;maheshkandpal;log4j.properties;https://jira.spring.io/secure/attachment/19591/log4j.properties","16/Apr/12 3:57 AM;maheshkandpal;pom.xml;https://jira.spring.io/secure/attachment/19590/pom.xml",,,,,,,,,,,24969600,,2012-05-02 06:05:16.267,30392,true,gregturn(gregturn),,,,"0|i05ijz:",32212,30092,,,,,,,,"16/Apr/12 4:07 AM;maheshkandpal;By mistake, I had put the wrong POM. There is change in dependency for spring-ws-core instead of spring-ws-test. I have tested using both with Xalan 2.7.1. Getting same results...","02/May/12 6:05 AM;arjen.poutsma;It looks like this is an Axis SAAJ issue, and not a Spring-WS issue. Especially because you mention that excluding the Xerces dependency from the Axis SAAJ jars solves the issue.

Please comment if there is something we can do about this issue, but for now I will resolve it.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#851|https://github.com/spring-projects/spring-ws/issues/851]. ",,,,,,,,,,,,,,
Namespace problems after upgrading to Axiom 1.2.13,SWS-763,42936,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Complete,arjen.poutsma,grzes,grzes,13/Apr/12 1:11 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,01/May/12 7:44 AM,2.0.4,,,,,,2.0.5,,Core,,,,,1,,,,,,,"After upgrading to Axiom 1.2.13 which changes (restricts) some namespace issues there are several problems with Spring-WS + Axiom Message Factory:

1. {{UnsupportedOperationException}} in {{org.springframework.ws.soap.axiom.AxiomSoapMessage}} constructor:

{noformat}
java.lang.UnsupportedOperationException: This is not allowed. Use set SOAPEnvelope instead
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.setOMDocumentElement(SOAPMessageImpl.java:59)
	at org.apache.axiom.om.impl.llom.OMDocumentImpl.<init>(OMDocumentImpl.java:101)
	at org.apache.axiom.soap.impl.llom.SOAPMessageImpl.<init>(SOAPMessageImpl.java:42)
	at org.apache.axiom.soap.impl.llom.soap11.SOAP11Factory.createSOAPMessage(SOAP11Factory.java:329)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.<init>(AxiomSoapMessage.java:100)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.<init>(AxiomSoapMessage.java:89)
	at org.springframework.ws.soap.axiom.AxiomSoap11MessageTest.createSoapMessage(AxiomSoap11MessageTest.java:29)
	at org.springframework.ws.soap.AbstractSoapMessageTestCase.createMimeMessage(AbstractSoapMessageTestCase.java:51)
	at org.springframework.ws.mime.AbstractMimeMessageTestCase.createWebServiceMessage(AbstractMimeMessageTestCase.java:44)
	at org.springframework.ws.AbstractWebServiceMessageTestCase.setUp(AbstractWebServiceMessageTestCase.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

2. {{org.apache.axiom.attachments.Attachments.getAttachmentSpecType()}} throws OMException, not NullPointerException now:

{noformat}
org.springframework.ws.soap.axiom.AxiomSoapMessageException: Could not write message to OutputStream: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type; nested exception is org.apache.axiom.om.OMException: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:295)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.axiom.om.OMException: Unable to determine the attachment spec type because the Attachments object doesn't have a known content type
	at org.apache.axiom.attachments.Attachments.getAttachmentSpecType(Attachments.java:164)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.isXopPackage(AxiomSoapMessage.java:220)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.getOutputFormat(AxiomSoapMessage.java:309)
	at org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(AxiomSoapMessage.java:258)
	... 24 more
{noformat}

3. Conflicting namespace declarations in {{org.springframework.ws.soap.axiom.AxiomHandler.startElement()}}:

{noformat}
javax.xml.transform.TransformerException: org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:716)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at org.apache.axiom.om.impl.llom.OMElementImpl.declareDefaultNamespace(OMElementImpl.java:401)
	at org.springframework.ws.soap.axiom.AxiomHandler.startElement(AxiomHandler.java:93)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:204)
	at com.sun.org.apache.xml.internal.serializer.ToSAXHandler.flushPending(ToSAXHandler.java:277)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:243)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:601)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:180)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3104)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:609)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:707)
	... 25 more
---------
org.apache.axiom.om.OMException: Attempt to add a namespace declaration that conflicts with the namespace information of the element
	at org.apache.axiom.om.impl.llom.OMElementImpl.declareDefaultNamespace(OMElementImpl.java:401)
	at org.springframework.ws.soap.axiom.AxiomHandler.startElement(AxiomHandler.java:93)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:204)
	at com.sun.org.apache.xml.internal.serializer.ToSAXHandler.flushPending(ToSAXHandler.java:277)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.endElement(ToXMLSAXHandler.java:243)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:601)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:180)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3104)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:609)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:707)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
	at org.springframework.ws.soap.soap11.AbstractSoap11MessageTestCase.testWriteToTransportOutputStream(AbstractSoap11MessageTestCase.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

4. Violation of Iterator contract in {{org.springframework.ws.soap.axiom.support.AxiomUtils.removeContents(OMContainer)}}:

{noformat}
java.util.ConcurrentModificationException: The current node has been removed using a method other than Iterator#remove()
	at org.apache.axiom.om.impl.traverse.OMAbstractIterator.hasNext(OMAbstractIterator.java:67)
	at org.springframework.ws.soap.axiom.support.AxiomUtils.removeContents(AxiomUtils.java:107)
	at org.springframework.ws.soap.axiom.AbstractPayload.getResult(AbstractPayload.java:72)
	at org.springframework.ws.soap.axiom.AxiomSoapBody.getPayloadResult(AxiomSoapBody.java:57)
	at org.springframework.ws.soap.AbstractSoapBodyTestCase.testGetPayloadResultTwice(AbstractSoapBodyTestCase.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
{noformat}

Please find attached a patch (with tests) allowing Spring-WS to be used with Axiom 1.2.13. All tests pass also with Axiom 1.2.9.

regards
Grzegorz Grzybek",,";01/May/12 7:44 AM;arjen.poutsma;420",,,,,420,,,,420,,,,,,,,,,,,,"13/Apr/12 1:11 AM;grzes;axiom-1.2.13.patch;https://jira.spring.io/secure/attachment/19579/axiom-1.2.13.patch",,,,,,,,,,,,,24969600,,2012-05-01 07:46:38.73,30358,true,gregturn(gregturn),,,,"0|i05icf:",32178,30058,,,,,,,,"01/May/12 7:46 AM;arjen.poutsma;Thanks for the patch, works like a charm!

Arjen","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#850|https://github.com/spring-projects/spring-ws/issues/850]. ",,,,,,,,,,,,,,,
FAQ about Mac OS X test failures needs updating,SWS-759,42616,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,arjen.poutsma,jetforme,jetforme,15/Mar/12 2:52 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,01/May/12 4:16 AM,,,,,,,2.0.5,,,,,,,0,,,,,,,"http://static.springsource.org/spring-ws/site/faq.html#osx

As of Lion 10.7.3 (and probably earlier), neither Java 1.5.0 or 1.6.0 includes this compatibility jar.",,";01/May/12 4:16 AM;arjen.poutsma;120",,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:46.485,30038,true,gregturn(gregturn),,,,"0|i05ge7:",31862,29738,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#846|https://github.com/spring-projects/spring-ws/issues/846]. ",,,,,,,,,,,,,,,,
Airline Sample Maven Build Error,SWS-757,42403,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,nishimorit,nishimorit,28/Feb/12 1:43 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,08/May/12 2:00 AM,2.0.4,,,,,,2.1 RC1,,Samples,,,,,0,maven,,,,,,"When Maven builds the airline sample project, there occur the following errors;

com.sun.xml.wsit:xws-security:jar:1.3.1 is missing.
com.sun.xml.wsit:wsit-rt:jar:1.1 is missing.

I cannot find a repository which has them.","Tomcat 7, STS 2.8.1, Maven 3.0.3",";08/May/12 2:04 AM;arjen.poutsma;1020",,,,,1020,,,,1020,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-03-02 01:28:35.161,29678,true,gregturn(gregturn),,,,"0|i04nr3:",27222,21871,http://forum.springsource.org/showthread.php?119544-Spring-WS-2-0-3-Ariline-Sample-Maven-Build-Error,,,,,,,"02/Mar/12 1:28 AM;arjen.poutsma;These are in:

{code:xml}
<repository>
    <id>jboss.repository.releases.public</id>
    <name>JBoss Repo Public</name>
    <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
</repository>
{code}
","08/Mar/12 3:20 AM;nishimorit;This description is in spring-ws-2.0.4.RELEASE/samples/airline/client/saaj/pom.xml[Client Project].
I build spring-ws-2.0.4.RELEASE/samples/airline/server/pom.xml[Server Project], so build errors occur.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","06/May/12 9:27 AM;kumagaur;I have the same issue and I am using the sample file which has same location as you mentioned
<?xml version=""1.0"" encoding=""UTF-8""?>
<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
    <parent>
        <artifactId>airline-client</artifactId>
        <groupId>org.springframework.ws</groupId>
        <version>2.0.4.RELEASE</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>airline-saaj-client</artifactId>
    <packaging>jar</packaging>
    <name>Spring WS Airline Sample - SAAJ Client</name>
    <profiles>
        <profile>
            <id>jdk15</id>
            <activation>
                <jdk>!1.6</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax.xml.soap</groupId>
                    <artifactId>saaj-api</artifactId>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>com.sun.xml.messaging.saaj</groupId>
                    <artifactId>saaj-impl</artifactId>
                </dependency>
                <dependency>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.sun.org.apache.xml.security</groupId>
                    <artifactId>xmlsec</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>jboss.repository.releases.public</id>
            <name>JBoss Repo Public</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.springframework.ws.samples.airline.client.saaj.Driver</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.sun.xml.wsit</groupId>
            <artifactId>xws-security</artifactId>
        </dependency>
        <dependency>
          <groupId>com.sun.xml.wsit</groupId>
          <artifactId>wsit-rt</artifactId>
        </dependency>
    </dependencies>
</project>
.

","07/May/12 2:13 AM;arjen.poutsma;I'll take another look at this for 2.1 RC1","08/May/12 2:00 AM;arjen.poutsma;I just did a build with an empty repository, and all the samples build fine for me:

{noformat}
> pwd
/Users/arjen/Projects/spring-ws/samples
> mvn clean install -Dmaven.repo.local=./repo
...
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring WS Samples ................................. SUCCESS [0.216s]
[INFO] Spring WS Echo Sample ............................. SUCCESS [0.007s]
[INFO] Spring WS Echo Sample - Server .................... SUCCESS [2.406s]
[INFO] Spring WS Echo Sample - Clients ................... SUCCESS [0.021s]
[INFO] Spring WS Echo Sample - SAAJ Client ............... SUCCESS [0.563s]
[INFO] Spring WS Echo Sample - Spring-WS Client .......... SUCCESS [0.404s]
[INFO] Spring WS Holiday Service Tutorial ................ SUCCESS [1.493s]
[INFO] Spring WS MTOM Sample ............................. SUCCESS [0.006s]
[INFO] Spring WS MTOM Sample - Server .................... SUCCESS [1.571s]
[INFO] Spring WS MTOM Sample - Clients ................... SUCCESS [0.005s]
[INFO] Spring WS MTOM Sample - JAX-WS Client ............. SUCCESS [1.749s]
[INFO] Spring WS MTOM Sample - Spring-WS Client .......... SUCCESS [0.607s]
[INFO] Spring WS POX Sample .............................. SUCCESS [0.006s]
[INFO] Spring WS POX Sample - Server ..................... SUCCESS [1.332s]
[INFO] Spring WS POX Sample - Clients .................... SUCCESS [0.014s]
[INFO] Spring WS POX Sample - Spring-WS Client ........... SUCCESS [0.314s]
[INFO] Spring WS Stock Quote Sample ...................... SUCCESS [0.005s]
[INFO] Spring WS Stock Quote Sample - Server ............. SUCCESS [0.760s]
[INFO] Spring WS Stock Quote Sample - Clients ............ SUCCESS [0.005s]
[INFO] Spring WS Stock Quote Sample - JAX-WS Client ...... SUCCESS [1.519s]
[INFO] Spring WS Stock Quote Sample - Spring-WS Client ... SUCCESS [0.419s]
[INFO] Spring WS Airline Sample .......................... SUCCESS [0.007s]
[INFO] Spring WS Airline Sample - Server ................. SUCCESS [6.498s]
[INFO] Spring WS Airline Sample - Clients ................ SUCCESS [0.005s]
[INFO] Spring WS Airline Sample - SAAJ Client ............ SUCCESS [0.361s]
[INFO] Spring WS Airline Sample - Axis 1 Client .......... SUCCESS [1.020s]
[INFO] Spring WS Airline Sample - Spring-WS Client ....... SUCCESS [4.410s]
[INFO] Spring WS Airline Sample - JMS Client ............. SUCCESS [0.297s]
[INFO] Spring WS Airline Sample - JAX-WS Client .......... SUCCESS [1.463s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 28.211s
[INFO] Finished at: Tue May 08 10:56:04 CEST 2012
[INFO] Final Memory: 29M/81M
[INFO] ------------------------------------------------------------------------
{noformat}

Make sure you build from the 'samples' directory, not a subdirectory.
","20/Jun/12 8:44 AM;jimv;Arjen,
I also started with a blank repository, and built from the samples dir, but I get errors:
xxx$ pwd
/Users/xxx/Downloads/spring-ws-2.1.0.RELEASE
xxx$ cd samples
xxx$ mvn clean install -Dmaven.repo.local=./repo
[INFO] Scanning for projects...

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring WS Samples ................................. SUCCESS [18.744s]
[INFO] Spring WS Echo Sample ............................. SUCCESS [0.006s]
[INFO] Spring WS Echo Sample - Server .................... SUCCESS [1:26.472s]
[INFO] Spring WS Echo Sample - Clients ................... SUCCESS [0.004s]
[INFO] Spring WS Echo Sample - SAAJ Client ............... SUCCESS [19.522s]
[INFO] Spring WS Echo Sample - Spring-WS Client .......... SUCCESS [0.297s]
[INFO] Spring WS Holiday Service Tutorial ................ SUCCESS [3.531s]
[INFO] Spring WS MTOM Sample ............................. SUCCESS [0.005s]
[INFO] Spring WS MTOM Sample - Server .................... SUCCESS [18.549s]
[INFO] Spring WS MTOM Sample - Clients ................... SUCCESS [0.006s]
[INFO] Spring WS MTOM Sample - JAX-WS Client ............. FAILURE [26.047s]
[INFO] Spring WS MTOM Sample - Spring-WS Client .......... SKIPPED

[ERROR] Failed to execute goal org.codehaus.mojo:jaxws-maven-plugin:1.10:wsimport (default) on project mtom-jax-ws-client: Error executing: wsimport [-s, /Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/target/jaxws/wsimport/java, -d, /Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/target/classes, -p, org.springframework.ws.samples.mtom.client.jaxws, file:///Users/xxx/Downloads/spring-ws-2.1.0.RELEASE/samples/mtom/client/jax-ws/mtom.wsdl] -> [Help 1]

Since I am currently most interested in the airline project, I tried running mvn clean install from airline dir, but get the following error:
[ERROR] Failed to execute goal on project airline-server: Could not resolve dependencies for project org.springframework.ws:airline-server:war:2.1.0.RELEASE: The following artifacts could not be resolved: com.sun.xml.wsit:xws-security:jar:1.3.1, com.sun.xml.wsit:wsit-rt:jar:1.1: Could not find artifact com.sun.xml.wsit:xws-security:jar:1.3.1 in spring-ext (https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/) -> [Help 1]","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#844|https://github.com/spring-projects/spring-ws/issues/844]. ",,,,,,,,,,
EndpointInterceptor.afterCompletion is not always invoked,SWS-754,42281,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,larshvile,larshvile,20/Feb/12 4:07 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,02/May/12 7:10 AM,2.0.4,,,,,,2.0.5,,Core,,,,,0,,,,,,,"afterCompletion's javadoc states that it will be called on any outcome of endpoint invocation, allowing for proper resource cleanup. There is however a case where handleRequest() successfully completes, but afterCompletion() is never invoked. This happens whenever an exception occurs and no EndpointExceptionResolver is able to resolve the exception.

{code:title=MessageDispatcher.java|borderStyle=solid}
// within dispatch()'s last catch block
catch (Exception ex) {
  Object endpoint = mappedEndpoint != null ? mappedEndpoint.getEndpoint() : null;
  processEndpointException(messageContext, endpoint, ex); // exception is rethrown here..
  triggerHandleResponse(mappedEndpoint, interceptorIndex, messageContext);
  triggerAfterCompletion(mappedEndpoint, interceptorIndex, messageContext, ex); // .. and afterCompletion() is never invoked
}
{code}

",,";02/May/12 7:09 AM;arjen.poutsma;2820",,,,,2820,,,,2820,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-02 07:10:01.422,29556,true,gregturn(gregturn),,,,"0|i047pb:",24622,21334,,,,,,,,"02/May/12 7:10 AM;arjen.poutsma;Fixed. Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#841|https://github.com/spring-projects/spring-ws/issues/841]. ",,,,,,,,,,,,,,,
Provider com.sun.xml.stream.ZephyrParserFactory not found using annotation-driven,SWS-752,41851,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Deferred,arjen.poutsma,momega,momega,23/Jan/12 10:00 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,25/Jan/12 1:20 AM,2.0.3,,,,,,2.0.4,,Security,,,,,0,,,,,,,"Error message appears when <sws:annotation-driven /> is used.

{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor#0': Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor]: Constructor threw exception; nested exception is javax.xml.stream.FactoryFinder$ConfigurationError: Provider com.sun.xml.stream.ZephyrParserFactory not found
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:965)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:911)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:467)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:483)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:358)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:325)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:127)
        at javax.servlet.GenericServlet.init(GenericServlet.java:241)
        at org.mortbay.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:431)
        at org.mortbay.jetty.servlet.ServletHolder.doStart(ServletHolder.java:263)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:667)
        at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)
        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1239)
        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:466)
        at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:124)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
        at org.mortbay.jetty.Server.doStart(Server.java:222)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)
        at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)
        at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:205)
        at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.ws.server.endpoint.adapter.method.SourceP
ayloadMethodProcessor]: Constructor threw exception; nested exception is javax.xml.stream.FactoryFinder$ConfigurationError: Provider com.sun.xml.stream.ZephyrPa
rserFactory not found
        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:141)
        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:74)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:958)
        ... 58 more
Caused by: javax.xml.stream.FactoryFinder$ConfigurationError: Provider com.sun.xml.stream.ZephyrParserFactory not found
        at javax.xml.stream.FactoryFinder.newInstance(FactoryFinder.java:154)
        at javax.xml.stream.FactoryFinder.findJarServiceProvider(FactoryFinder.java:308)
        at javax.xml.stream.FactoryFinder.find(FactoryFinder.java:233)
        at javax.xml.stream.XMLInputFactory.newInstance(XMLInputFactory.java:123)
        at org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor.createXmlInputFactory(SourcePayloadMethodProcessor.java:128)
        at org.springframework.ws.server.endpoint.adapter.method.SourcePayloadMethodProcessor.<init>(SourcePayloadMethodProcessor.java:48)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:126)
        ... 60 more

{noformat}


The error message does not appear in previous versions. 

I have tried to trace the problem and I have found out, that due task: ""SWS:697: Support maven 3"" library wsit-rt (wsit-rt-1.1.jar) has been added as an dependency. This library became part of my ear and therefore part of the my classpath.

This library contains /META-INF/services/javax.xml.stream.XMLInputFactory, which contains com.sun.xml.stream.ZephyrParserFactory. This overrides default settings without saying a word.

The simple workaround is to remove the related dependencies:
Fox example:
{code:xml}
<dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-security</artifactId>
      <exclusions>
      	<exclusion>
            <groupId>com.sun.xml.wsit</groupId>
            <artifactId>xws-security</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.wsit</groupId>
          <artifactId>wsit-rt</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
{code}

Still I believe this is wrong behavior and has to be fixed.",WebSphere 6.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-01-24 01:38:19.028,29184,true,gregturn(gregturn),,,,"0|i03men:",21172,17870,,,,,,,,"24/Jan/12 1:38 AM;arjen.poutsma;Added formatting.","25/Jan/12 1:20 AM;arjen.poutsma;Unfortunately, there is very little I can do about fixing that wsit-rt jar. I contacted the Oracle guys about it, but got no response so far. 

As an alternative to excluding the dependency altogether, you can also make sure that your preferred StAX parser (Woodstox) comes before wsit-rt on the class path. This will put Woodstox's /META-INF/services/javax.xml.stream.XMLInputFactory before the one in wsit-rt, thus overriding it.","25/Jan/12 3:01 AM;momega;Hi, thanks for the quick answer.

You are right, classpath alternation is possible but because the Maven creates the EAR and classpath MANIFEST within it is quite uncontrolled what comes first. And because of more 100 jar libraries in our ear, it is even harder. 

I do not know code of spring-ws in detail, but why is wsit-rt dependency of spring-ws?
","25/Jan/12 3:44 AM;arjen.poutsma;wsit-rt.jar contains an implementation of WS-Security called XWWS. As such, it's a dependency of the security module of spring-ws.","15/Mar/12 4:09 PM;pokneetail@gmail.com;The following Maven dependency setup worked for me. I am Running on Tomcat 6, Java 7.

com.sun.xml.stream.ZephyrParserFactory is a reference to the Sun Java Streaming XML Parser (apparently this was a code name at one point).

<dependency>
  <groupId>org.springframework</groupId>
  <artifactId>spring-web</artifactId>
  <version>3.1.0.RELEASE</version>
</dependency>

<dependency>
  <groupId>org.springframework.ws</groupId>
  <artifactId>spring-ws-security</artifactId>
  <version>2.0.4.RELEASE</version>
</dependency>
<!-- spring-ws-security depends on Sun Java Streaming XML Parser -->
<dependency>
  <groupId>com.sun.xml.stream</groupId>
  <artifactId>sjsxp</artifactId>
  <version>1.0.1</version>
</dependency>

Pay it forward ;)","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#840|https://github.com/spring-projects/spring-ws/issues/840]. ",,,,,,,,,,,
JAXB marshalling with 'any' elements ,SWS-751,41850,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,arjen.poutsma,dl_dan,dl_dan,23/Jan/12 8:53 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jan/12 2:00 AM,2.0.3,,,,,,,,OXM,,,,,0,,,,,,,"This can also be an improvement, but different from what the user expects as Jaxb2Marshaller is correctly configured.
class A {
  @XmlAnyElement(lax = true)
  protected Object any;
}

// B is any
@XmlRootElement
class B {
}
Jaxb2Marshaller.classesToBeBound = {A, B}

If I create an object A with A.any=B, AbstractJaxb2PayloadMethodProcessor.getJaxbContext creates a JAXBContext which only sees A, and not B, so marshalling fails.

The solution
@XmlSeeAlso(B.class)
class A {
}
is not elegant. Is there a better way to set the local context to work with any elements?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-01-24 01:36:20.372,29183,true,gregturn(gregturn),,,,"0|i03mef:",21171,17869,,,,,,,,"24/Jan/12 1:36 AM;arjen.poutsma;I am not sure if there are better ways to configure the Jaxb2Marshaller for this scenario.

At any rate, I can't reproduce this issue with the following code:

{code:title=A.java}

@XmlRootElement
public class A {

    @XmlAnyElement(lax = true)
    public Object any;

}
{code}

{code:title=B.java}

@XmlRootElement
public class B {

}
{code}

{code:xml|title=jaxb2.xml}
<bean id=""marshaller"" class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
    <property name=""classesToBeBound"">
        <list>
            <value>jaxb.schema.A</value>
            <value>jaxb.schema.B</value>
        </list>
    </property>
</bean>
{code}

{code}
ApplicationContext applicationContext = new ClassPathXmlApplicationContext(""jaxb.xml"", Driver.class);
Jaxb2Marshaller marshaller = applicationContext.getBean(""marshaller"", Jaxb2Marshaller.class);

A a = new A();
a.any = new B();

marshaller.marshal(a, new StreamResult(System.out));
{code}

the above prints out:

{code:xml}
<a><b/></a>
{code}


which I think is correct.","25/Jan/12 5:56 AM;dl_dan;As I said (maybe not that clear), the issue is with AbstractJaxb2PayloadMethodProcessor.getJaxbContext, not using Jaxb2Marshaller  directly which obviously works.

The issue here is how to populate the JAXBContext. With 'any' elements, the possible candidates are lost since this is how JAXB works. But Jaxb2Marshaller already has all the candidates configured. getJaxbContext does JAXBContext.newInstance(clazz), where I would need the 'any' candidates included. So I asked for a solution to that.","25/Jan/12 6:53 AM;dl_dan;One more comment, it is not clear to me why jaxbContexts Map is needed in AbstractJaxb2PayloadMethodProcessor when the JAXBContext from the marshaller could be used.","26/Jan/12 2:00 AM;arjen.poutsma;I see now; sorry for the misunderstanding earlier.

I don't think there is a better way of using the AbstractJaxb2PayloadMethodProcessor in this particular scenario. The underlying reason is that this processor detects the JAXBContext for a given class automatically, and since A does not have a reference to B (except with the @XmlSeeAlso annotation), it will not work.

You can, however, use the MarshallingPayloadMethodProcessor instead of the JAXB2 one. The way to make this work is to configure a Jaxb2Marshaller from the Spring OXM module with the classesToBeBound property (as shown in the snippet above), and plug that into the MarshallingPayloadMethodProcessor. This way, JAXB2 is explicitly configured for a particular set of classes (A & B) and will only work for those classes.

To answer your final question: we cache the JAXB2Contexts in a map because they are quite expensive to create. Check the getJaxbContext() method to see more.

Hope this helps.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#839|https://github.com/spring-projects/spring-ws/issues/839]. ",,,,,,,,,,,,
SaajSoapMessageFactory's checkForUtf8ByteOrderMark is corrupting input stream,SWS-750,41817,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,zakvandermerwe,zakvandermerwe,20/Jan/12 12:25 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,24/Jan/12 7:16 AM,1.5.8,1.5.9,,,,,2.0.4,,Core,,,,,1,,,,,,,"There appears to be a bug in the implementation of ""checkForUtf8ByteOrderMark"" in org.springframework.ws.soap.saaj.SaajSoapMessageFactory.

Under certain circumstances, the call to pushbackInputStream.read(bom) will read less than the required 3 bytes into bom. Then, since the byte order mark isn't found, unread(bom) is called which results in some invalid bytes being added to the stream.

The contract for PushbackInputStream.read(byte[] b, int off, int len) says ""Reads *up to* len bytes of data."" In our case, using Tomcat (versions 6 and 7) with recent releases of Chrome and IE, the call to inputstream.available() in BufferedInputStream's implementation of read returns 0. This is because no more data can be read without blocking. It seems to be just an unfortunate coincidence caused by the size of the header sent by the newest version of chrome and IE. The end result is that our soap envelope is corrupted and our system is unusable.",,";24/Jan/12 7:15 AM;arjen.poutsma;1860",,,,,1860,,,,1860,,,,,,SWS-845,,,,,,,,,,,,,,,,,,,,24969600,,2012-01-24 07:14:57.317,29150,true,gregturn(gregturn),,,,"0|i03lzj:",21104,17828,,,,,,,,"24/Jan/12 7:14 AM;arjen.poutsma;This should be fixed now, as we now only unread the amount of bytes that were actually read.

I do wonder, however, what Chrome and IE have to do with this bug. Are you sending SOAP messages to Spring-WS from these browsers?","24/Jan/12 10:57 PM;zakvandermerwe;Hi Arjen, thanks for your fast response!

   ""I do wonder, however, what Chrome and IE have to do with this bug. Are you sending SOAP messages to Spring-WS from these browsers?""
That's right, we are sending SOAP messages from these browsers. I only included this information in the ticket because it seems strange that we suddenly started to encounter this bug after using spring-ws without problems for a couple of years. We thought it must have something to do with a change in the payload sent by recent versions of these two browsers.

Your change will fix our issue, but isn't it possible to miss a valid byte order mark if the first read call doesn't read all 3 bytes? It seems like you might need to call read() in a loop until 3 bytes have been read.
","25/Jan/12 1:10 AM;arjen.poutsma;No problem. I was just wondering about the browser use, I have never seen it before :).

With regard to the fix: yes, it is possible to miss a BOM with this new code. However, I think the PushbackInputStream cannot unread multiple reads, so that would defy the purpose. Having a UTF-8 SOAP message with a BOM is quite uncommon anyway, so I don't think this will bother many users, if any at all.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","10/Mar/13 4:49 PM;pkotlov;Hello,

having some hard time thinking of a hotfix for a release still using Spring-ws-1.5.9

After reading this (It describes my problem pretty exact):
http://forum.springsource.org/showthread.php?131438-Using-spring-ws-behind-https
I assumed SaajSoapMessageFactory could be the root of my problem. 
I have already created a fixed version of spring-ws with the checkForUtf8ByteOrderMark 
Method fixed but I am still facing the same Problem.

I face the Problem only on my https server and only when using a special service.

This is the SOAP Message that is passed to Xerces:
<nullnullSOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">

For several reasons I will have to update to spring 3.2 and spring-ws 2.1 in 1-2 months. 
It' just, I can't do it right now.

Any Help or pointing to the place where my problem could be, will be very much appreciated.



","10/Mar/13 7:33 PM;pkotlov;Hm... after 5 hours of trying different solution I found out that the only code that works for me is:

{code:title=SaajSoapMessageFactory.java|borderStyle=solid}
    private InputStream checkForUtf8ByteOrderMark(InputStream inputStream) throws IOException {
        return inputStream;
    }
{code} 
I will digg into it if the update to 3.2/2.1 want work.
","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#838|https://github.com/spring-projects/spring-ws/issues/838]. ",,,,,,,,,,,
Not well formed xml causes server 500 error,SWS-748,41746,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,dl_dan,dl_dan,14/Jan/12 7:49 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,25/Jan/12 4:12 AM,2.0.3,,,,,,2.0.4,,XML,,,,,0,,,,,,,"In 2.0.3 and likely previous versions, parsing a not well formed xml causes http 500 instead of a client error, e.g bad request.

	com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	com.sun.xml.internal.messaging.saaj.util.transform.EfficientStreamingTransformer.transform(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.EnvelopeFactory.createEnvelope(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl.createEnvelopeFromSource(Unknown Source)
	com.sun.xml.internal.messaging.saaj.soap.SOAPPartImpl.getEnvelope(Unknown Source)
	org.springframework.ws.soap.saaj.support.SaajUtils.getSaajVersion(SaajUtils.java:155)
	org.springframework.ws.soap.saaj.SaajSoapMessage.getSaajVersion(SaajSoapMessage.java:257)
	org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:342)
	org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init&gt;(SaajSoapMessage.java:117)
	org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:184)
	org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:58)
	org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:90)
	org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	",,";25/Jan/12 4:11 AM;arjen.poutsma;4020",,,,,4020,,,,4020,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:33.116,29079,true,gregturn(gregturn),,,,"0|i03e73:",19842,17633,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#836|https://github.com/spring-projects/spring-ws/issues/836]. ",,,,,,,,,,,,,,,,
SHA1 Checksums Incorrect For Downloads,SWS-743,41421,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,intellectual_tortoise,intellectual_tortoise,20/Dec/11 4:49 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,21/Dec/11 3:22 AM,2.0.3,,,,,,,,Documentation,,,,,0,,,,,,,"Using the MD5 Reborned Hasher (http://sourceforge.net/projects/md5rehasher/) for Firefox (8.0.1):

1) http://s3.amazonaws.com/dist.springframework.org/release/SWS/spring-ws-2.0.3.RELEASE-full.zip reports 92f63d84d0bc4d8af2b9051ee59091ab5d4176bb as the SHA-1 digest.  However, http://s3.amazonaws.com/dist.springframework.org/release/SWS/spring-ws-2.0.3.RELEASE-full.zip.sha1 says it should be b344c36e8f5cd9961c8aab979fabf395043b686b.

2) http://s3.amazonaws.com/dist.springframework.org/release/SWS/spring-ws-2.0.3.RELEASE-minimal.zip reports db132f433885754bb807675e777a4d3f10faed55 as the SHA-1 digest.  However, http://s3.amazonaws.com/dist.springframework.org/release/SWS/spring-ws-2.0.3.RELEASE-minimal.zip.sha1 says it should be fb9d2d9de8979307f3e686caffdbc22e0b9597d8

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-12-21 03:22:05.169,28753,true,gregturn(gregturn),,,,"0|i02vvr:",16875,15877,,,,,,,,"21/Dec/11 3:22 AM;arjen.poutsma;I use the following on Mac OS X:

{noformat}
# openssl version
OpenSSL 0.9.8r 8 Feb 2011

# openssl sha1 spring-ws-2.0.3.RELEASE-full.zip 
SHA1(spring-ws-2.0.3.RELEASE-full.zip)= b344c36e8f5cd9961c8aab979fabf395043b686b
{noformat}

I am not sure why you get a different hash.","21/Dec/11 5:26 AM;intellectual_tortoise;I must have done something wrong with the -full.zip yesterday since I'm now getting the correct checksum (same file and newly downloaded).

However, the checksum for the -minimal.zip is supposed to be fb9d2d9de8979307f3e686caffdbc22e0b9597d8, but both openssl and the plugin report the same checksum:

# openssl version
OpenSSL 0.9.8g 19 Oct 2007
# uname -a
Linux 2.6.24-21-server #1 SMP Wed Oct 22 00:18:13 UTC 2008 i686 GNU/Linux
# openssl sha1 spring-ws-2.0.3.RELEASE-minimal.zip
SHA1(spring-ws-2.0.3.RELEASE-minimal.zip)= db132f433885754bb807675e777a4d3f10faed55
","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#833|https://github.com/spring-projects/spring-ws/issues/833]. ",,,,,,,,,,,,,,
JMSCorrelationID together with Oracle AQ,SWS-742,41419,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,amarakov,amarakov,20/Dec/11 2:45 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,25/Jan/12 2:58 AM,2.0.3,,,,,,2.0.4,,Core,,,,,0,feature-support,third-party-compatibility,,,,,"In org.springframework.ws.transport.jms.JmsSenderConnection.onReceiveBeforeRead() the following code set the value of messageSelector:

{code}
if (responseDestination instanceof TemporaryQueue || responseDestination instanceof TemporaryTopic) {
       messageConsumer = session.createConsumer(responseDestination);
} else {
       String messageId = requestMessage.getJMSMessageID().replaceAll(""'"", ""''"");
       String messageSelector = ""JMSCorrelationID = '"" + messageId + ""'"";
       messageConsumer = session.createConsumer(responseDestination, messageSelector);
}
{code}

If  I'm using Oracle AQ, expression (responseDestination instanceof TemporaryQueue) always returns true (See Oracle Streams Advanced Queuing Java API Reference http://docs.oracle.com/cd/B19306_01/server.102/b14291/oracle/jms/AQjmsDestination.html). Regarding this it is impossible to use JMSCorrelationID together with Oracle AQ. ","spring-ws-2.0.3.RELEASE, spring-framework-3.1.0.RC1, AQAPI12_BUILT_WITH_RDBMS_VERSION_10.2",";25/Jan/12 2:58 AM;arjen.poutsma;4200",,,,,4200,,,,4200,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-01-25 02:58:58.591,28751,true,gregturn(gregturn),,,,"0|i02vvb:",16873,15875,,,,,,,,"25/Jan/12 2:58 AM;arjen.poutsma;Fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#832|https://github.com/spring-projects/spring-ws/issues/832]. ",,,,,,,,,,,,,,,
Please Provide the Source for SWS-271 Issue,SWS-741,41363,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,,sagardasari,sagardasari,16/Dec/11 5:36 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,19/Dec/11 2:55 AM,2.0.2,2.0.3,,,,,,,Samples,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-12-19 02:55:49.172,28695,true,gregturn(gregturn),,,,"0|i02uwf:",16715,15730,,,,,,,,"19/Dec/11 2:55 AM;arjen.poutsma;It's right here: https://src.springframework.org/svn/spring-ws/trunk/core/src/main/java/org/springframework/ws/wsdl

and subpackages, of course.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#831|https://github.com/spring-projects/spring-ws/issues/831]. ",,,,,,,,,,,,,,,
Spring WS Core manifest prevents usage of javax.servlet version 3.0.0,SWS-739,40220,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,ericeberry,ericeberry,19/Oct/11 11:31 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,20/Oct/11 1:23 AM,2.0.2,,,,,,2.0.3,,Core,,,,,0,,,,,,,,,,,,,,,,,,,,,,,SWS-732,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:46.086,27780,true,gregturn(gregturn),,,,"0|i00lk7:",3538,4928,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#829|https://github.com/spring-projects/spring-ws/issues/829]. ",,,,,,,,,,,,,,,,
"EndpointInterceptorAdapter removes ""throws Exception"" from handleFault() method defined by EndpointInterceptor",SWS-737,40087,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,klr8,klr8,10/Oct/11 12:15 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,17/Oct/11 1:10 AM,2.0.2,,,,,,2.0.3,,Core,,,,,0,,,,,,,"EndpointInterceptor defines handleFault as follows:

boolean handleFault(MessageContext messageContext, Object endpoint) throws Exception;

EndpointInterceptorAdapter provides a default implementation like this (notice the missing ""throws Exception""):

public boolean handleFault(MessageContext messageContext, Object endpoint) {
    return true;
}

As a result subclasses of EndpointInterceptorAdapter can no longer throw exceptions from handleFault()",,";17/Oct/11 1:09 AM;arjen.poutsma;120",,,,,120,,,,120,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:38.245,27647,true,gregturn(gregturn),,,,"0|i00lkn:",3540,4930,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#827|https://github.com/spring-projects/spring-ws/issues/827]. ",,,,,,,,,,,,,,,,
Version 2.0.2.RELEASE is not drop-in compatible with 2.0.1.RELEASE,SWS-736,40086,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,klr8,klr8,10/Oct/11 12:07 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,12/Oct/11 3:10 AM,2.0.2,,,,,,,,,,,,,0,,,,,,,"Version 2.0.2.RELEASE is not backwards compatible with 2.0.1.RELEASE:
A completely undocumented new method ""afterCompletion()"" was introduced in the EndpointInterceptor interface.
I don't think point releases (in this case even a security related point release) should introduce such incompatibilities.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-12 03:10:01.172,27646,true,gregturn(gregturn),,,,"0|i00lkv:",3541,4931,,,,,,,,"12/Oct/11 3:10 AM;arjen.poutsma;In general, I agree with you: minor releases should be drop-in compatible. In this case, however, I don't.

The afterCompletion() method was introduced in both 2.0.2 and 1.5.10 to resolve a major security issue (SWS-708), and these kind of security fixes takes priority over convenience.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#826|https://github.com/spring-projects/spring-ws/issues/826]. ",,,,,,,,,,,,,,,
"Project can not be built with Maven 3, missing org.springframework.build.aws.maven extension dependency",SWS-734,39957,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,sslavic,sslavic,28/Sep/11 2:56 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 2:18 AM,2.0.2,,,,,,2.0.3,,Core,,,,,0,,,,,,,"Maven 3 seems to resolve build extension from pluginRepositories so org.springframework.build.aws.maven can not be resolved. spring-release needs to be added as pluginRepository in spring-ws-parent pom.xml. Attached [^spring-ws-parent_pom.xml.patch] fixes this.

JIRA component ""Build"" would be more suitable for issues of this type, but it doesn't seem to be defined for SWS JIRA project.",,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 2:56 AM;sslavic;spring-ws-parent_pom.xml.patch;https://jira.spring.io/secure/attachment/18844/spring-ws-parent_pom.xml.patch",,,,,,,,,,,,,24969600,,2011-10-06 02:18:21.517,12961,true,gregturn(gregturn),,,,"0|i00llb:",3543,4933,,,,,,,,"06/Oct/11 2:18 AM;arjen.poutsma;Fixed, thanks for the patch!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#824|https://github.com/spring-projects/spring-ws/issues/824]. ",,,,,,,,,,,,,,,
Typo in marshalSendAndReceive javadoc,SWS-733,39956,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,arjen.poutsma,sslavic,sslavic,28/Sep/11 2:49 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 3:09 AM,2.0.2,,,,,,2.0.3,,Documentation,,,,,0,,,,,,,"Javadoc for marshalSendAndReceive (one that uses default URI) was

{{This will only work with a default specified!}}

should be

{{This will only work with a default uri specified!}}",,,,,,,,,,,,,,,,,,,,,,,,"28/Sep/11 2:49 AM;sslavic;WebServiceOperations.java.patch;https://jira.spring.io/secure/attachment/18843/WebServiceOperations.java.patch",,,,,,,,,,,,,24969600,,2011-10-06 03:09:12.861,12960,true,gregturn(gregturn),,,,"0|i00llj:",3544,4934,,,,,,,,"06/Oct/11 3:09 AM;arjen.poutsma;Fixed!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#823|https://github.com/spring-projects/spring-ws/issues/823]. ",,,,,,,,,,,,,,,
OSGi manifest version range for javax.servlet package import too restrictive,SWS-732,39952,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,mpilquist,mpilquist,27/Sep/11 6:52 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 3:06 AM,2.0.2,,,,,,2.0.3,,,,,,,0,,,,,,,"The Import-Package statement for javax.servlet and javax.servlet.http is currently [2.4.0, 3.0.0).  Since spring-ws is compatible with Servlet 3, this should be opened to [2.4.0, 4.0.0).",,";06/Oct/11 3:05 AM;arjen.poutsma;840",,,,0,840,,,0,840,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 03:06:35.986,12854,true,gregturn(gregturn),,,,"0|i00llr:",3545,4935,,,,,,,,"06/Oct/11 3:06 AM;arjen.poutsma;Fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#822|https://github.com/spring-projects/spring-ws/issues/822]. ",,,,,,,,,,,,,,,
building a webapp targetting Java 1.5 environment on JDK5 and JDK6 pulled in different dependencies for spring-ws-core 2.0.2,SWS-727,39317,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,dj.meng,dj.meng,24/Aug/11 7:24 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 2:27 AM,2.0.2,2.0.3,,,,,2.0.3,,Core,,,,,0,,,,,,,"Building a webapp targetting Java 1.5 envrionment with JDK1.6 as the build environment, doesn't pull in the maven dependency: javax.xml.stream : stax-api, which causes java.lang.ClassNotFoundException: javax.xml.stream.XMLStreamException.

The expected result will be that the final artifacts from the build should be the same regardless of the Java version of the build environment. The dependencies should be based on the target Java runtime environment not the build environment.

The following is found in spring-ws-core-2.0.2.RELEASE.pom file:

        <profile>
            <id>jdk15</id>
            <activation>
                <jdk>!1.6</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </dependency>




",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 02:27:17.693,1390,true,gregturn(gregturn),,,,"0|i00lmn:",3549,4939,,,,,,,,"06/Oct/11 2:27 AM;arjen.poutsma;The problem here is that javax.xml.stream is built into JDK 1.6, and not 1.5. Using JDK-profiles at least makes it easy to build, but they are not fool proof, i.e. you'll still have to think about the libraries for the deployment environment.

In general, I would not recommend using a different JDK (version) than what deployment uses, but that's another discussion.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#818|https://github.com/spring-projects/spring-ws/issues/818]. ",,,,,,,,,,,,,,,
CryptoFactoryBean keystore location can't resolve ClassPathResource where resource is located in a jar,SWS-726,39314,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,kyle.cronin,kyle.cronin,24/Aug/11 9:21 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,17/Oct/11 1:30 AM,2.0.2,,,,,,2.0.3,,Security,,,,,0,,,,,,,"When using a ClassPathResource to set the keyStoreLocation property, if the resource is located in a jar file a FileNotFoundException is thrown.

{noformat}
Caused by: java.io.FileNotFoundException: class path resource [com/foo/security/foo.keystore] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/C:/views/java/jboss/server/oneforce/deploy/oba.war/WEB-INF/lib/foo-security.jar!/com/foo/security/foo.keystore
	at org.springframework.util.ResourceUtils.getFile(ResourceUtils.java:204)
	at org.springframework.core.io.AbstractFileResolvingResource.getFile(AbstractFileResolvingResource.java:52)
	at org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean.setKeyStoreLocation(CryptoFactoryBean.java:88)
{noformat}

{{org.apache.ws.security.components.crypto.AbstractCrypto}} has it's own mechanism for locating classpath resources. The following patch will fallback to the ClassPathResource path if can't be resolved to a file.

{code:java|title=org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean}
public void setKeyStoreLocation(Resource location) throws IOException {
	String resourcePath = null;
	try {
		File keyStoreFile = location.getFile();
		resourcePath = keyStoreFile.getAbsolutePath();
	} catch (IOException ioe) {
		// can't resolve to file on the file system
		// allow org.apache.ws.security.components.crypto.AbstractCrypt to resolve from resource path
		if(location instanceof ClassPathResource) {
			resourcePath = ((ClassPathResource) location).getPath();
		} else {
			throw ioe;
		}
	}
	
	this.configuration.setProperty(""org.apache.ws.security.crypto.merlin.file"", resourcePath);	
}
{code}",,";17/Oct/11 1:29 AM;arjen.poutsma;840",,,,,840,,,,840,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-17 01:30:18.006,1391,true,gregturn(gregturn),,,,"0|i00lmv:",3550,4940,,,,,,,,"17/Oct/11 1:30 AM;arjen.poutsma;Fixed, thanks for the patch!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#706|https://github.com/spring-projects/spring-ws/issues/706]. ",,,,,,,,,,,,,,,
"DefaultConcretePartProvider is not allowing a blank suffix, due to improper assertion",SWS-724,39156,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jpyeron,jpyeron,11/Aug/11 9:56 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 3:23 AM,2.0.2,,,,,,2.0.3,,Core,,,,,0,patch,,,,,,"The allowance for a blank ("""") suffix is esential to be able to maintain compatability w/ legacy or handwritten WSDLs.

should read as:

    /** Sets the suffix to append to the port type name to obtain the binding name. */
    public void setBindingSuffix(String bindingSuffix) {
        Assert.notNull(bindingSuffix, ""'bindingSuffix' must not be null"");
        this.bindingSuffix = bindingSuffix;
    }

currently as:

  public void setBindingSuffix(String bindingSuffix)
  {
    Assert.hasText(bindingSuffix, ""'bindingSuffix' must not be null"");
    this.bindingSuffix = bindingSuffix;
  }


patch forthcomming....",,,,,,,,,,,,,,,,,,,,,,,,"11/Aug/11 9:59 AM;jpyeron;patch-SWS-724-spring-nonnull-bindingsuffix-issue.patch;https://jira.spring.io/secure/attachment/18552/patch-SWS-724-spring-nonnull-bindingsuffix-issue.patch",,,,,,,,,,,,,24969600,,2011-10-06 03:23:01.879,1393,true,gregturn(gregturn),,,,"0|i00lnb:",3552,4942,,,,,,,,"11/Aug/11 9:59 AM;jpyeron;Permission is given for inclusion or any other use.
","06/Oct/11 3:23 AM;arjen.poutsma;Fixed, thanks for the patch!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#816|https://github.com/spring-projects/spring-ws/issues/816]. ",,,,,,,,,,,,,,
EndpointExceptionResolver mentions SOAP but this interface is not necessarily SOAP releated,SWS-721,38923,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,arjen.poutsma,paul4christ79,paul4christ79,26/Jul/11 9:31 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 3:11 AM,2.0 GA,,,,,,2.0.3,,Core,,,,,0,,,,,,,"Javadoc for EndpointExceptionResolver:
{code}Defines the interface for objects than can resolve exceptions thrown during endpoint execution, resulting in SOAP messages.{code}.

Not true. Resolvers don't have to produce SOAP messages, but the ones in the SOAP packages do. Just eliminate the clause at the end.",,,,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 03:11:22.182,1396,true,gregturn(gregturn),,,,"0|i00lnz:",3555,4945,,,,,,,,"06/Oct/11 3:11 AM;arjen.poutsma;Fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#813|https://github.com/spring-projects/spring-ws/issues/813]. ",,,,,,,,,,,,,,,
samples build failure,SWS-720,38852,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jpyeron,jpyeron,21/Jul/11 10:05 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 2:15 AM,2.0.2,,,,,,2.0.3,,Samples,,,,,0,,,,,,,"{noformat}
$ rm -rf newrepo; mvn -Dmaven.repo.local=newrepo -X
Apache Maven 3.0.3 (r1075438; 2011-02-28 12:31:09-0500)
Maven home: C:\Program Files\Apache Software Foundation\apache-maven-3.0.3
Java version: 1.6.0_26, vendor: Sun Microsystems Inc.
Java home: C:\Program Files\Java\jdk1.6.0_26\jre
Default locale: en_US, platform encoding: Cp1252
OS name: ""windows xp"", version: ""5.2"", arch: ""amd64"", family: ""windows""
[INFO] Error stacktraces are turned on.
[DEBUG] Reading global settings from C:\Program Files\Apache Software Foundation\apache-maven-3.0.3\conf\settings.xml
[DEBUG] Reading user settings from C:\Documents and Settings\jpyeron\.m2\settings.xml
[DEBUG] Using local repository at C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo
[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10 for C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo
[INFO] Scanning for projects...
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repo1.maven.org/maven2
Downloading: http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-parent/2.0.2.RELEASE/spring-ws-parent-2.0.2.RELEASE.pom
Downloaded: http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-parent/2.0.2.RELEASE/spring-ws-parent-2.0.2.RELEASE.pom (31 KB at 85.6 KB/sec)
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\ws\spring-ws-parent\2.0.2.RELEASE\spring-ws-parent-2.0.2.RELEASE.pom.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\ws\spring-ws-parent\2.0.2.RELEASE\spring-ws-parent-2.0.2.RELEASE.pom.lastUpdated
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repo1.maven.org/maven2
Downloading: http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-samples/2.0.2.RELEASE/spring-ws-samples-2.0.2.RELEASE.pom
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\ws\spring-ws-samples\2.0.2.RELEASE\spring-ws-samples-2.0.2.RELEASE.pom.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\ws\spring-ws-samples\2.0.2.RELEASE\spring-ws-samples-2.0.2.RELEASE.pom.lastUpdated
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repository.springsource.com/maven/bundles/release/
Downloading: http://repository.springsource.com/maven/bundles/release/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.pom
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.pom.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.pom.lastUpdated
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repo1.maven.org/maven2
Downloading: http://repo1.maven.org/maven2/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.pom
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.pom.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.pom.lastUpdated
[WARNING] The POM for org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE is missing, no dependency information available
[DEBUG] org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE:
[DEBUG]    org.codehaus.plexus:plexus-utils:jar:1.1:runtime
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repository.springsource.com/maven/bundles/release/
Downloading: http://repository.springsource.com/maven/bundles/release/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Downloading: http://repository.springsource.com/maven/bundles/release/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.jar
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.jar.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.jar.lastUpdated
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\codehaus\plexus\plexus-utils\1.1\plexus-utils-1.1.jar.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\codehaus\plexus\plexus-utils\1.1\plexus-utils-1.1.jar.lastUpdated
[DEBUG] Using connector WagonRepositoryConnector with priority 0 for http://repo1.maven.org/maven2
Downloading: http://repo1.maven.org/maven2/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.jar
Downloading: http://repo1.maven.org/maven2/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar
Downloaded: http://repo1.maven.org/maven2/org/codehaus/plexus/plexus-utils/1.1/plexus-utils-1.1.jar (165 KB at 215.2 KB/sec)
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.jar.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\build\aws\org.springframework.build.aws.maven\3.1.0.RELEASE\org.springframework.build.aws.maven-3.1.0.RELEASE.jar.lastUpdated
[DEBUG] Reading resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\codehaus\plexus\plexus-utils\1.1\plexus-utils-1.1.jar.lastUpdated
[DEBUG] Writing resolution tracking file C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\codehaus\plexus\plexus-utils\1.1\plexus-utils-1.1.jar.lastUpdated
[DEBUG] Looking up lifecyle mappings for packaging pom from ClassRealm[plexus.core, parent: null]
[ERROR] The build could not read 2 projects -> [Help 1]
org.apache.maven.project.ProjectBuildingException: Some problems were encountered while processing the POMs:
[FATAL] Non-resolvable parent POM: Could not find artifact org.springframework.ws:spring-ws-samples:pom:2.0.2.RELEASE in central (http://repo1.maven.org/maven2) and 'parent.relativePath' points at wrong local POM @ line 3, column 13
[WARNING] 'build.plugins.plugin.version' for org.mortbay.jetty:maven-jetty-plugin is missing. @ line 23, column 21
[WARNING] 'build.plugins.plugin.version' for org.apache.maven.plugins:maven-war-plugin is missing. @ line 27, column 21
[WARNING] The expression ${pom.artifactId} is deprecated. Please use ${project.artifactId} instead. @
[ERROR] Unresolveable build extension: Plugin org.springframework.build.aws:org.springframework.build.aws.maven:3.1.0.RELEASE or one of its dependencies could not be resolved: Could not find artifact org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE in com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release/) @
[WARNING] 'distributionManagement.repository.id' must not be 'local', this identifier is reserved for the local repository, using it for other repositories will corrupt your repository metadata. @ org.springframework.ws:spring-ws-parent:2.0.2.RELEASE, C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\newrepo\org\springframework\ws\spring-ws-parent\2.0.2.RELEASE\spring-ws-parent-2.0.2.RELEASE.pom, line 12, column 17

        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:339)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:632)
        at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:581)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:233)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
[ERROR]
[ERROR]   The project org.springframework.ws:tutorial:2.0.2.RELEASE (C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\tutorial\pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.springframework.ws:spring-ws-samples:pom:2.0.2.RELEASE in central (http://repo1.maven.org/maven2) and 'parent.relativePath' points at wrong local POM @ line 3, column 13 -> [Help 2]
org.apache.maven.model.resolution.UnresolvableModelException: Could not find artifact org.springframework.ws:spring-ws-samples:pom:2.0.2.RELEASE in central (http://repo1.maven.org/maven2)
        at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:159)
        at org.apache.maven.model.building.DefaultModelBuilder.readParentExternally(DefaultModelBuilder.java:819)
        at org.apache.maven.model.building.DefaultModelBuilder.readParent(DefaultModelBuilder.java:691)
        at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:308)
        at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:232)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:386)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:355)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:471)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:355)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:319)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:632)
        at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:581)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:233)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Could not find artifact org.springframework.ws:spring-ws-samples:pom:2.0.2.RELEASE in central (http://repo1.maven.org/maven2)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:541)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:220)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifact(DefaultArtifactResolver.java:197)
        at org.sonatype.aether.impl.internal.DefaultRepositorySystem.resolveArtifact(DefaultRepositorySystem.java:323)
        at org.apache.maven.project.ProjectModelResolver.resolveModel(ProjectModelResolver.java:155)
        ... 24 more
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Could not find artifact org.springframework.ws:spring-ws-samples:pom:2.0.2.RELEASE in central (http://repo1.maven.org/maven2)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:945)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:940)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.flush(WagonRepositoryConnector.java:695)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.flush(WagonRepositoryConnector.java:689)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector.get(WagonRepositoryConnector.java:445)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:460)
        ... 28 more
[ERROR]
[ERROR]   The project org.springframework.ws:spring-ws-samples:2.0.2.RELEASE (C:\Documents and Settings\jpyeron\Desktop\spring-ws-2.0.2.RELEASE\samples\pom.xml) has 1 error
[ERROR]     Unresolveable build extension: Plugin org.springframework.build.aws:org.springframework.build.aws.maven:3.1.0.RELEASE or one of its dependencies could not be resolved: Could not find artifact org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE in com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release/) -> [Help 3]
org.apache.maven.plugin.PluginResolutionException: Plugin org.springframework.build.aws:org.springframework.build.aws.maven:3.1.0.RELEASE or one of its dependencies could not be resolved: Could not find artifact org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE in com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release/)
        at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolve(DefaultPluginDependenciesResolver.java:215)
        at org.apache.maven.project.DefaultProjectBuildingHelper.resolveExtensionArtifacts(DefaultProjectBuildingHelper.java:377)
        at org.apache.maven.project.DefaultProjectBuildingHelper.createProjectRealm(DefaultProjectBuildingHelper.java:237)
        at org.apache.maven.project.DefaultModelBuildingListener.buildExtensionsAssembled(DefaultModelBuildingListener.java:106)
        at org.apache.maven.model.building.ModelBuildingEventCatapult$1.fire(ModelBuildingEventCatapult.java:43)
        at org.apache.maven.model.building.DefaultModelBuilder.fireEvent(DefaultModelBuilder.java:1041)
        at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:391)
        at org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:374)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:536)
        at org.apache.maven.project.DefaultProjectBuilder.build(DefaultProjectBuilder.java:328)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:632)
        at org.apache.maven.DefaultMaven.getProjectsForMavenReactor(DefaultMaven.java:581)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:233)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.sonatype.aether.resolution.ArtifactResolutionException: Could not find artifact org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE in com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release/)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:541)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:220)
        at org.sonatype.aether.impl.internal.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:395)
        at org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver.resolve(DefaultPluginDependenciesResolver.java:207)
        ... 24 more
Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Could not find artifact org.springframework.build.aws:org.springframework.build.aws.maven:jar:3.1.0.RELEASE in com.springsource.repository.bundles.release (http://repository.springsource.com/maven/bundles/release/)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:945)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$4.wrap(WagonRepositoryConnector.java:940)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.flush(WagonRepositoryConnector.java:695)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector$GetTask.flush(WagonRepositoryConnector.java:689)
        at org.sonatype.aether.connector.wagon.WagonRepositoryConnector.get(WagonRepositoryConnector.java:445)
        at org.sonatype.aether.impl.internal.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:460)
        ... 27 more
[ERROR]
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
[ERROR] [Help 3] http://cwiki.apache.org/confluence/display/MAVEN/PluginResolutionException
{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 02:15:54.205,1397,true,gregturn(gregturn),,,,"0|i00lo7:",3556,4946,,,,,,,,"21/Jul/11 10:05 AM;jpyeron;http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-samples/
http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-samples/2.0.2.RELEASE/
http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-samples/2.0.2.RELEASE/spring-ws-samples-2.0.2.RELEASE.pom

all return a 404 error.","21/Jul/11 10:07 AM;jpyeron;http://repository.springsource.com/maven/bundles/release/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.jar

gives:

<Error>
  <Code>NoSuchKey</Code> 
  <Message>The specified key does not exist.</Message> 
  <Key>maven/bundles/release/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.jar</Key> 
  <RequestId>3B9DCBC7B5187D5C</RequestId> 
  <HostId>6jMf+YcxNrXg9avrfKjxK2PNHeuhFBTajjkiZw9xJOGwu31/27ePGdQ80qgS9vQ0</HostId> 
  </Error>","06/Oct/11 2:15 AM;arjen.poutsma;The samples parent pom is not deployed to any repository, you will need to install it yourself from local sources.

As for the AWS plugin (your last comment), that is now fixed.","06/Apr/12 11:51 AM;jaminh;I downloaded Spring WS from trunk today and tried building it and got errors on the AWS plugin. I clicked the link above (http://repository.springsource.com/maven/bundles/release/org/springframework/build/aws/org.springframework.build.aws.maven/3.1.0.RELEASE/org.springframework.build.aws.maven-3.1.0.RELEASE.jar) and got the same NoSuchKey error.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#812|https://github.com/spring-projects/spring-ws/issues/812]. ",,,,,,,,,,,,
DefaultMethodEndpointAdapter does not work with CastorMarshaller.,SWS-719,38773,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,,jnarloch,jnarloch,14/Jul/11 9:51 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,15/Aug/11 1:07 AM,2.0.2,,,,,,,,Core,,,,,0,,,,,,,"I had prepared a very simple WS that were suppose to be used as example of using Castor marshaller together with SpringWS and run into fallowing problem. I had declared the DefaultMethodEndpointAdapter with help of annotation-driven tag and set its marshaller.

I turn that such configured service throws an IllegalStateException at runtime, stack trace below:
{code}
java.lang.IllegalStateException: No adapter for endpoint [public org.castor.springws.sample.xsd.EchoResponse org.castor.springws.sample.endpoint.EchoEndpoint.echo(org.castor.springws.sample.xsd.EchoRequest)]: Is your endpoint annotated with @Endpoint, or does it implement a supported interface like MessageHandler or PayloadEndpoint?
	at org.springframework.ws.server.MessageDispatcher.getEndpointAdapter(MessageDispatcher.java:289)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:230)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:172)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:222)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
{code}

The solution that I found to make the WS working is to register seperate *GenericMarshallingMethodEndpointAdapter* - but that class become obsolate in SpringWS 2.

I had attached the simple project, untill You uncomment the GenericMarshallingMethodEndpointAdapter in the spring-ws-servlet.xml the service, won't work.","Windows 7, JDK 6, Glassfish 3",,,,,,,,,,,,,,,,,,,,,,,"14/Jul/11 9:51 AM;jnarloch;CastorWS.rar;https://jira.spring.io/secure/attachment/18474/CastorWS.rar",,,,,,,,,,,,,24969600,,2012-05-04 07:03:33.504,1398,true,gregturn(gregturn),,,,"0|i00lof:",3557,4947,,,,,,,,"14/Jul/11 10:12 AM;jnarloch;Ok, I find that I didn't annotae the method with ResponsePayload, so You can close this issue. Sorry for trouble.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#811|https://github.com/spring-projects/spring-ws/issues/811]. ",,,,,,,,,,,,,,,
Reloading the spring context does not refresh the MessageDispatcherServlet,SWS-718,38744,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,j.gorter,j.gorter,12/Jul/11 8:38 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,17/Oct/11 3:18 AM,2.0.2,,,,,,2.0.3,,Core,,,,,0,,,,,,,"Our application uses a special classloader from which it can load beans dynamically. The applicationcontext is reloaded to do this. The normal DispatcherServlet has a mechanism to allow the applicationcontext to be reloaded by overriding the onRefresh method. The MessageDispatcherServlet does not do this and crashes occur when webservices are invoked. 

The class below can be used as a workaround.

{code}
public class FixedMessageDispatcherServlet
	extends MessageDispatcherServlet
{

	private boolean initializing = true;

	@Override
	protected void onRefresh(ApplicationContext context)
	{
		try {
			if (this.initializing) {
				this.initializing = false;
			} else {
				this.initFrameworkServlet();
			}
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}
{code}",,";17/Oct/11 3:17 AM;arjen.poutsma;3300",,,,,3300,,,,3300,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-17 03:18:01.043,1399,true,gregturn(gregturn),,,,"0|i00lon:",3558,4948,,,,,,,,"17/Oct/11 3:18 AM;arjen.poutsma;Fixed. MessageDispatcherServlet.onRefresh now calls the new initDefaultStrategies method, just like the normal DispatcherServlet does. ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#700|https://github.com/spring-projects/spring-ws/issues/700]. ",,,,,,,,,,,,,,,
Order of interceptor calls is dependent on the way the interceptors are included,SWS-713,38584,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jterstiege,jterstiege,30/Jun/11 5:30 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 4:08 AM,2.0.2,,,,,,2.0.3,,Core,,,,,1,,,,,,,"The InterceptorsBeanDefinitionParser scans for interceptors in the following order: first ""bean"", then ""ref"", and so on. I.e. the order in which the interceptors are called is dependent on the way the interceptors are included.

One would expect that the interceptors are called in the order in which they were specified, so that changing a ""bean"" to a ""ref"" does not modify the calling order.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 04:08:23.821,1404,true,gregturn(gregturn),,,,"0|i00lpr:",3563,4953,,,,,,,,"06/Oct/11 4:08 AM;arjen.poutsma;Fixed in SVN. Let me know if it works for you.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#806|https://github.com/spring-projects/spring-ws/issues/806]. ",,,,,,,,,,,,,,,
JavaDoc for WebServiceTemplate#setFaultMessageResolver has wrong default class,SWS-709,38108,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,jkuipers,jkuipers,24/May/11 8:53 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 3:14 AM,2.0.2,,,,,,2.0.3,,Documentation,,,,,0,,,,,,,"The JavaDoc for WebServiceTemplate#setFaultMessageResolver claims that SimpleFaultMessageResolver is the default, whereas it's actually SoapFaultMessageResolver as listed in WebServiceTemplate.properties. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 03:14:47.389,1408,true,gregturn(gregturn),,,,"0|i00lqn:",3567,4957,,,,,,,,"06/Oct/11 3:14 AM;arjen.poutsma;Fixed","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#803|https://github.com/spring-projects/spring-ws/issues/803]. ",,,,,,,,,,,,,,,
PayloadValidatingInterceptor errors not clearing SecurityContextHolder ,SWS-708,37851,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,harshi,harshi,09/May/11 3:44 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/May/11 7:24 AM,2.0 GA,,,,,,1.5.10,2.0.2,Security,,,,,0,,,,,,,"I have Validtion Interecptor first and SecurityInterceptor Later in the sequence. 

When response has validation errors some how SecurityConextHolder has old previous authenticated user Information. 

When there are NO response validation errors SecurityContextHolder is clean.

I am guessing that when PayloadValidatingInterceptor has errors which is causing not to clean up thread local ?

Once the request is complete all thread context should be nulled out and give back to pool. It does that there are no reponse validation errors but doesn't do that when there are response validation errors. I tried to debug the code , all the way to MessageDispatcherServlet but didn't find any clue.



Here is my configuration


{code:xml}
<sws:interceptors>


        <bean id=""wsSecurityInterceptor"" class=""com.mycompancy.MyXwsSecurityInterceptor"">
            
            <property name=""secureResponse"" value=""false""/>
            <property name=""policyConfiguration""
                      value=""/WEB-INF/spring/securityPolicy.xml""/>
            <property name=""callbackHandlers"">
                <list>
                    <bean class=""com.mycompancy.security.MySpringDigestPasswordValidationCallbackHandler"">
                        <property name=""userDetailsService"" ref=""securityService""/>
                        <property name=""userCache"" ref=""userCache""/>
                    </bean>
                </list>
            </property>
        </bean>


        <bean class=""com.mycompancy.util.MyLoggingInterceptor""/>
        <bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor""
              p:validateRequest=""true"" p:validateResponse=""true"">
            <property name=""schemas"">
                <list>
                    <value>/WEB-INF/schema/customer.xsd</value>
                    <value>/WEB-INF/schema/users.xsd</value>
                    <value>/WEB-INF/schema/userDetails.xsd</value>
                </list>
            </property>
        </bean>
    </sws:interceptors>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,"13/May/11 8:10 AM;harshi;MyXwsSecurityInterceptor.java;https://jira.spring.io/secure/attachment/18224/MyXwsSecurityInterceptor.java",,,,,,,,,,,,,24969600,,2011-05-10 02:27:31.237,1409,true,gregturn(gregturn),,,,"0|i00lqv:",3568,4958,http://forum.springsource.org/showthread.php?108650-PayloadValidatingInterceptor-error-not-clearing-SecurityContextHolder&p=360306,,,,,,,"10/May/11 2:27 AM;arjen.poutsma;Added formatting","10/May/11 3:57 AM;arjen.poutsma;Note that the interceptor configuration you pasted is different than the one described: in the description you write that the validating interceptor comes before the security interceptor, while in the config they are in opposite order. I assume that the config is correct.

Besides this minor issue, I can't seem to reproduce this with the standard org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor. This is what should happen (and what *does* happen with the standard interceptors):

# New request comes in
# Security interceptor sets up a security context based on the credentials in the request
# Logging interceptor logs the request
# Validating interceptor tries to validate the request, and finds it invalid. This result in a SOAP fault as a response.
# Logging interceptor does not log the response, as it's a fault (see org.springframework.ws.server.endpoint.AbstractLoggingInterceptor#handleFault)
# Security interceptor cleans up the security context, by calling cleanup. See org.springframework.ws.soap.security.AbstractWsSecurityInterceptor#handleFault(MessageContext messageContext, Object endpoint)

As I can't reproduce this with the standard interceptors, my guess is that you are overriding handleFault() in your MyXwsSecurityInterceptor, and do not call cleanUp() in that method. If you attach the MyXwsSecurityInterceptor code, I can verify this.","10/May/11 3:57 AM;arjen.poutsma;Resolving as Cannot Reproduce for now.","13/May/11 8:10 AM;harshi;Hi Arjen,
Please find the attached MyXwsSecurity Interceptor.

Also , the issue is with when response has  validation errors not request.


Thanks
Harshi","13/May/11 8:13 AM;harshi;Hi Arjen,
I have attached MyXwsSecurityInterceptor . The issue is with when response has validation errors not request.

If you want I can create a simple ws for this.  when I Debug the code it didn't come to HadnldeFault method.


Thannks
Harshi","18/May/11 5:28 AM;arjen.poutsma;Hi Harshi,

Thanks for posting the additional information. You have indeed spotted a potential security issue in Spring Web Services. That said, it is quite easy to work around, by swapping the security and validation interceptor, so that the validation interceptor is the first one in the sequence. This obviously won't work when you need encryption of the payload, as the schema probably does not conform to the encrypted data.  Alternatively, you can disable response validation entirely. Or you could override the PayloadValidatingInterceptor to make sure it doesn't return false for handleResponseValidationErrors(). All of these suggestions will work around the issue at hand.

We will fix this issue in the next minor release, but I do think it's a corner case. After all, this issue only occurs when the response payload does not validate against you own schema, and generally I believe that sending an invalid response is a bug that should be fixed. After all, if you don't conform to your own schema, you can't really expect your clients to do so either. As such, the response validation is mostly meant to be used during the development stages of your project, making sure that all your response messages are valid. When going into production, I generally recommend to disable response validation, as it slows things down considerably (i.e. schema validation is slow).","18/May/11 7:23 AM;arjen.poutsma;Reopening","18/May/11 7:24 AM;arjen.poutsma;Fixed in trunk.","18/May/11 7:52 AM;arjen.poutsma;Fixed in 1.5 branch.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#802|https://github.com/spring-projects/spring-ws/issues/802]. ",,,,,,,
Recievign very large attachments in the clent will cause a OutOfMemoryError,SWS-707,37691,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,gregturn,karthikramachandran,karthikramachandran,29/Apr/11 10:46 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,24/Oct/17 4:21 PM,1.5.9,2.0.1,,,,,3.0.0.RELEASE,,Core,,,,,4,,,,,,,"AbstractHttpSenderConnectio.hasResponse reads the enter message into memory in order to ensure a message exists. When dealing with large messages this causes an OutOfMemoryError: 

Exception in thread ""main"" java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2786)
	at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94)
	at org.springframework.util.FileCopyUtils.copy(FileCopyUtils.java:113)
	at org.springframework.util.FileCopyUtils.copyToByteArray(FileCopyUtils.java:164)
	at org.springframework.ws.transport.http.AbstractHttpSenderConnection.hasResponse(AbstractHttpSenderConnection.java:72)
	at org.springframework.ws.transport.AbstractSenderConnection.createTransportInputStream(AbstractSenderConnection.java:46)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:548)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:496)
	at gov.ic.dia.cdir.client.CdirFetchServicesClientImpl.fetchWithAttachments(CdirFetchServicesClientImpl.java:160)
	at gov.ic.dia.cdir.client.CommandLineClient.testFetchEnclosure(CommandLineClient.java:283)
	at gov.ic.dia.cdir.client.CommandLineClient.main(CommandLineClient.java:129) ",,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/15 3:27 PM;stuckert;PatchedAbstractHttpSenderConnection.java;https://jira.spring.io/secure/attachment/23097/PatchedAbstractHttpSenderConnection.java",,,,,,,,,,,,,24969600,,2011-06-09 13:27:56.5,1410,true,gregturn(gregturn),,,https://github.com/spring-projects/spring-ws/pull/99,"0|i00lr3:",3569,4959,,,,,,,,"09/Jun/11 1:27 PM;cwong15;This rather defeats the point of the various underlying streaming message facilities, such as StreamingWebServiceMessage or the Axiom message factory with payloadCaching disabled. It makes WebServiceTemplate unusable for large messages.","18/Mar/14 3:53 AM;arjen.poutsma;AbstractHttpSenderConnection only reads the message to determine the content-length of the message. If a Content-Length header is set in the response, it is used and the message is not read.","23/Apr/14 3:35 AM;gyszalai;How can I set the Content-Length header to the appropriate value on the server side? I tried it with an EndpointInterceptor, but I don't know how to get the full size of the response message in bytes.","24/Apr/14 2:12 AM;gyszalai;I have a response that contains a 600MB attachment, since I was not able to calculate the full size of the response (see my previous comment) I just set the Content-Length to a relatively small value (10000) and tried the client. I got the following error:

{code}
java.lang.RuntimeException: org.jvnet.mimepull.MIMEParsingException: Reached EOF, but there is no closing MIME boundary.
	at org.jvnet.mimepull.MIMEParser.readBody(MIMEParser.java:223)
	at org.jvnet.mimepull.MIMEParser.access$600(MIMEParser.java:68)
	at org.jvnet.mimepull.MIMEParser$MIMEEventIterator.next(MIMEParser.java:163)
	at org.jvnet.mimepull.MIMEParser$MIMEEventIterator.next(MIMEParser.java:130)
	at org.jvnet.mimepull.MIMEMessage.makeProgress(MIMEMessage.java:198)
	at org.jvnet.mimepull.MIMEMessage.parseAll(MIMEMessage.java:181)
	at org.jvnet.mimepull.MIMEMessage.getAttachments(MIMEMessage.java:106)
	at com.sun.xml.messaging.saaj.packaging.mime.internet.MimePullMultipart.parseAll(MimePullMultipart.java:122)
	at com.sun.xml.messaging.saaj.packaging.mime.internet.MimePullMultipart.parse(MimePullMultipart.java:133)
	at com.sun.xml.messaging.saaj.packaging.mime.internet.MimeMultipart.getCount(MimeMultipart.java:210)
	at com.sun.xml.messaging.saaj.soap.MessageImpl.initializeAllAttachments(MessageImpl.java:1444)
	at com.sun.xml.messaging.saaj.soap.MessageImpl.getAttachments(MessageImpl.java:950)
	at org.springframework.ws.soap.saaj.Saaj13Implementation.getAttachment(Saaj13Implementation.java:363)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getAttachment(SaajSoapMessage.java:323)
	at org.springframework.ws.support.MarshallingUtils$MimeMessageContainer.getAttachment(MarshallingUtils.java:109)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller$Jaxb2AttachmentUnmarshaller.getAttachmentAsDataHandler(Jaxb2Marshaller.java:957)
	at com.sun.xml.bind.v2.runtime.unmarshaller.MTOMDecorator.startElement(MTOMDecorator.java:100)
	at com.sun.xml.bind.v2.runtime.unmarshaller.InterningXmlVisitor.startElement(InterningXmlVisitor.java:75)
	at com.sun.xml.bind.v2.runtime.unmarshaller.SAXConnector.startElement(SAXConnector.java:150)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:244)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:281)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:250)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:281)
	at com.sun.xml.bind.unmarshaller.DOMScanner.visit(DOMScanner.java:250)
	at com.sun.xml.bind.unmarshaller.DOMScanner.scan(DOMScanner.java:127)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:324)
	at com.sun.xml.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:307)
	at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:127)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:738)
	at org.springframework.ws.support.MarshallingUtils.unmarshal(MarshallingUtils.java:62)
	at org.springframework.ws.client.core.WebServiceTemplate$3.extractData(WebServiceTemplate.java:409)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:598)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:386)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:380)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:372)
	at hu.vanio.springwsmtom.client.SaajMtomClient.loadContent(SaajMtomClient.java:66)
	at hu.vanio.springwsmtom.client.SaajMtomClientIT.testLoad(SaajMtomClientIT.java:19)
{code}

Then I set the Content-Length header to a very large value (10,000,000,000) I get the following error (I think it's the same as the original):

{code}
java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2271)
	at java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:113)
	at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:93)
	at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:140)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:125)
	at org.springframework.util.FileCopyUtils.copy(FileCopyUtils.java:109)
	at org.springframework.util.FileCopyUtils.copyToByteArray(FileCopyUtils.java:156)
	at org.springframework.ws.transport.http.AbstractHttpSenderConnection.hasResponse(AbstractHttpSenderConnection.java:72)
	at org.springframework.ws.transport.AbstractSenderConnection.createTransportInputStream(AbstractSenderConnection.java:46)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:591)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:539)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:386)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:380)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:372)
	at hu.vanio.springwsmtom.client.SaajMtomClient.loadContent(SaajMtomClient.java:66)
	at hu.vanio.springwsmtom.client.SaajMtomClientIT.testLoad(SaajMtomClientIT.java:19)
{code}

I used an EndpointInterceptor implementation to set the Content-Lenght header as follows:

{code:java}

    ...

    @Override
    public boolean handleResponse(MessageContext messageContext, Object endpoint) throws Exception {
        WebServiceMessage responseMessage = messageContext.getResponse();
        AbstractSoapMessage abstractSoapMessage = (AbstractSoapMessage) responseMessage;
        SaajSoapMessage saajSoapMessage = (SaajSoapMessage) abstractSoapMessage;
        SOAPMessage soapMessage = saajSoapMessage.getSaajMessage();
        
        MimeHeaders mimeHeaders = soapMessage.getMimeHeaders();
        mimeHeaders.addHeader(""Content-Length"", ""10000000000"");
        return true;
    }

    ....
{code}

Am I doing something wrong?

","24/Apr/14 2:33 AM;kalthoff;I would try to set it to a value less than Integer.MAX_VALUE
2147483647      <-- max int
10000000000   <--- your value

","24/Apr/14 3:27 AM;gyszalai;Thanks Marcus, that helped. If I set it to 2147483647 I don't get OOM on the client anymore. 
However, I think, an attachment (at least in theory) can be larger than 2 GB, so  it can be a problem.
","04/Sep/15 3:25 PM;stuckert;If you do streaming, you often don't know any content-lenght in advance. 

And you do not need to read the whole content into memory just to decide, whether there is content. This could easily be done using a PushbackInputStream, reading one byte and pushing it back.","04/Sep/15 3:28 PM;stuckert;Implementation using a PushbackInputStream in order to avoid reading the whole content","04/Sep/15 3:29 PM;stuckert;Here is an implemenation using a PushbackInputStream: [^PatchedAbstractHttpSenderConnection.java]

It works fine and allows streaming of large content without content-length header being set.","04/Sep/15 3:32 PM;stuckert;And since the method {{hasResponse()}} is final, there is no chance to fix by inheritance.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#801|https://github.com/spring-projects/spring-ws/issues/801]. ",,,,,,,
OSGi import of org.springframework.security.authentication seems to be the wrong version,SWS-705,37679,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,asutula,asutula,28/Apr/11 10:03 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,19/May/11 5:26 AM,2.0 GA,,,,,,2.0.2,,Security,,,,,0,,,,,,,"I'm using an OSGi bundle from the Springsource Enterprise Bundle Repository, org.springframework.ws.soap.security_2.0.0.RELEASE . This bundle imports the package org.springframework.security.authentication at version=""[2.0.0,3.0.0)"" (to clarify, this means greater than or equal to 2.0.0 and less than 3.0.0). This same import information still seems to be in the Spring WS trunk. The org.springframework.security.authentication package is provided by Spring Security Core, but that package doesn't seem to exist in versions of Spring Securtiy Core prior to 3.0.0. This is causing org.springframework.ws.soap.security to be unable to resolve its dependency on Spring Security Core.",Virgo OSGi,";19/May/11 5:26 AM;arjen.poutsma;60",,,,0,60,,,0,60,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-05-19 05:27:22.415,1412,true,gregturn(gregturn),,,,"0|i00lrj:",3571,4961,http://forum.springframework.org/showthread.php?t=108577,,,,,,,"28/Apr/11 10:32 AM;asutula;Looking at this more, I see the Spring WS parent pom specifies use of Spring Security Core 3.0.2. So the issue seems to be that the template.mf file for the Spring WS security module was not updated to reflect that: https://fisheye.springsource.org/browse/spring-ws/trunk/security/template.mf?hb=true. It still constrains use of Spring Security Core from [2.0.0-3.0.0). ","19/May/11 5:27 AM;arjen.poutsma;This is now fixed: I changed the OSGi range to [3.0.0, 4.0.0)","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#800|https://github.com/spring-projects/spring-ws/issues/800]. ",,,,,,,,,,,,,,
sws:annotation-driven does not pick up @Endpoint annotations on classes that are JDK proxies,SWS-702,37272,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,klr8,klr8,04/Apr/11 5:20 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/Oct/11 4:14 AM,2.0.1,,,,,,2.0.3,,Core,,,,,0,,,,,,,"We essentially have an app context loaded by the MessageDispatcherServlet that does the following:

{code:xml}
<bean id=""ws.myWebService"" class=""foo.bar.MyWebServiceImpl""/>
<aop:aspectj-autoproxy />
<bean class=""foo.bar.MyCustomAspect""/>
<sws:annotation-driven/>
{code}

The MyWebServiceImpl looks like this:

{code}
@Endpoint
public class MyWebServiceImpl implements MyWebService {

  @PayloadRoot(namespace = ""http://my.foo.bar"", localPart = ""myWebService"")
  @MyCustomAnnotation // picked up by MyCustomAspect to proxy this class
  @ResponsePayload
  public MyResponseDocument getFactInfo(@RequestPayload MyRequestDocument request) {
    ...
  }
}
{code}

As a result of the @MyCustomAnnotation, the MyWebServiceImpl will be JDK proxied. Because of this the @Endpoint is not picked up. If we remove the custom aspect the @Endpoint is indeed picked up.

For now, I have added the following to the app context as a workaround:
{code:xml}
<aop:config proxy-target-class=""true""/>
{code}

Note that this seems to be similar to SWS-262",SWS 2.0.1.RELEASE,";19/May/11 5:55 AM;arjen.poutsma;1020",";18/Oct/11 4:14 AM;arjen.poutsma;14580",,,0,15600,,,0,15600,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-04-04 05:39:18.395,1414,true,gregturn(gregturn),,,,"0|i00lrz:",3573,4963,,,,,,,,"04/Apr/11 5:39 AM;arjen.poutsma;Hey Erwin,

Changing back to unassigned, that's the way I track issues I have to take a look at.","19/May/11 5:55 AM;arjen.poutsma;I can't seem to reproduce this. I have a test case which reproduces this scenario, but it works for me (with or without using CGlib proxies).

See https://src.springframework.org/svn/spring-ws/trunk/core/src/test/java/org/springframework/ws/server/endpoint/mapping/PayloadRootAnnotationMethodEndpointMappingTest.java and the related app context: https://src.springframework.org/svn/spring-ws/trunk/core/src/test/resources/org/springframework/ws/server/endpoint/mapping/applicationContext.xml.

Let me know what I am missing.","25/May/11 11:25 PM;klr8;Arjen,

I think you missed the ""implements MyWebService"" part.
In your test the OtherBean does not implement an interface that defines the ""void doIt()"" method. As a result JDK proxying is never even considered (it only works with interfaces) and you get the effects of ""aop:config proxy-target-class=""true"""" automatically.","18/Oct/11 4:20 AM;arjen.poutsma;I hope I finally fixed this.

Take a look at https://src.springframework.org/svn/spring-ws/trunk/core/src/test/java/org/springframework/ws/server/endpoint/mapping/JdkProxyRegistrationTest.java and the related app context: https://src.springframework.org/svn/spring-ws/trunk/core/src/test/resources/org/springframework/ws/server/endpoint/mapping/jdk-proxy-registration.xml

Note, however, that the annotations have to be on the interface, and cannot only be on the implementing class. This is due to the fact that the AOP target might change at runtime, and it would be very inefficient to introspect the endpoint each time a web service request comes in. This is consistent with Spring MVC (see SPR-5084).","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#798|https://github.com/spring-projects/spring-ws/issues/798]. ",,,,,,,,,,,,
Wss4jSecurityInterceptor decryption problem,SWS-701,37113,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,arjen.poutsma,abarre,abarre,31/Mar/11 1:43 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,28/Jul/14 5:32 AM,2.0.1,,,,,,,,Security,,,,,0,,,,,,,"I would like to implement a web service that receive encrypted signed messages (XML-encryption and XML-Signature). Here's my interceptor part in spring-ws-servlet.xml :
{code}
<bean id=""crypto""
		class=""org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean"">
		<property name=""keyStorePassword"" value=""${deltabank.security.server.keystore.password}"" />
		<property name=""keyStoreLocation"" value=""file:${deltabank.security.server.keystore}"" />
	</bean>
<sws:interceptors>
        <bean id=""encryptInterceptor""
			class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
			<property name=""securementActions"" value=""Signature Encrypt""/>
			<property name=""securementUsername"" value=""${deltabank.security.server.signature.keystore.alias}""/>
			<property name=""securementPassword"" value=""${deltabank.security.server.signature.keystore.alias.password}""/>
			<property name=""securementEncryptionUser"" value=""${deltabank.security.server.encryption.keystore.alias}"" />
			<property name=""securementEncryptionCrypto"">
				<ref bean=""crypto""/>
			</property>
			<property name=""securementSignatureCrypto"">
				<ref bean=""crypto""/>
			</property>
			
			<property name=""validationActions"" value=""Signature Encrypt""/>
			<property name=""validationDecryptionCrypto"">
				<ref bean=""crypto""/>
			</property>
			<property name=""validationSignatureCrypto"">
				<ref bean=""crypto""/>
			</property>
			<property name=""validationCallbackHandler"">
				<bean class=""org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler"">
					<property name=""privateKeyPassword"" value=""${deltabank.security.server.encryption.keystore.alias.password}""/>
				</bean>
			</property>
		</bean>
</sws:interceptors>
{code}

Here's the part of the code of my client where the interceptor is created: 
{code}
Wss4jSecurityInterceptor interceptor = new Wss4jSecurityInterceptor();
		
		CryptoFactoryBean cryptoFactoryBean = new CryptoFactoryBean();
		cryptoFactoryBean.setKeyStoreLocation(new FileSystemResource(""C:/Documents and Settings/a.barre/.keystore""));
		cryptoFactoryBean.setKeyStorePassword(""deltabank"");		
		cryptoFactoryBean.afterPropertiesSet();
		Crypto crypto = cryptoFactoryBean.getObject();
		
		interceptor.setValidationActions(""Signature Encrypt"");		
		interceptor.setValidationDecryptionCrypto(crypto);
		KeyStoreCallbackHandler callbackHandler = new KeyStoreCallbackHandler();
		callbackHandler.setPrivateKeyPassword(""deltabank"");
		interceptor.setValidationCallbackHandler(callbackHandler);		
		interceptor.setValidationSignatureCrypto(crypto);
		
		interceptor.setSecurementActions(""Signature Encrypt"");
		interceptor.setSecurementUsername(""tomcat"");
		interceptor.setSecurementPassword(""deltabank"");
		interceptor.setSecurementEncryptionUser(""tomcat"");
		interceptor.setSecurementEncryptionCrypto(crypto);
		interceptor.setSecurementSignatureCrypto(crypto);
		
		setInterceptors(new ClientInterceptor[] {interceptor});
{code}

Here's the logs for the web service:
{code}
10:40:02.456 [http-8080-1] DEBUG o.s.w.t.h.WebServiceMessageReceiverHandlerAdapter - Accepting incoming [org.springframework.ws.transport.http.HttpServletConnection@11cf5b3] at [http://localhost:8080/funds-transfer]
10:40:02.456 [http-8080-1] DEBUG o.s.w.server.MessageTracing.received - Received request [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData]
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.e.m.PayloadRootAnnotationMethodEndpointMapping - Looking up endpoint for [{http://www.w3.org/2001/04/xmlenc#}EncryptedData]
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.server.SoapMessageDispatcher - Endpoint mapping [org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping@140df03] has no mapping for request
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.s.e.m.SoapActionAnnotationMethodEndpointMapping - Looking up endpoint for []
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.server.SoapMessageDispatcher - Endpoint mapping [org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping@1f13e99] has no mapping for request
10:40:02.456 [http-8080-1] WARN  o.s.ws.server.EndpointNotFound - No endpoint mapping found for [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData]
10:40:02.456 [http-8080-1] DEBUG o.s.w.t.h.MessageDispatcherServlet - Successfully completed request
{code}

Here is the request sent by the client:
{code}
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/""
                   xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"">
  <SOAP-ENV:Header>
    <wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
                   SOAP-ENV:mustUnderstand=""1"">
      <xenc:EncryptedKey xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""
                         Id=""EncKeyId-D8F835AB8EC535FF8813015608023945"">
        <xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#rsa-1_5"" />
        <ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
          <wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
            <ds:X509Data>
              <ds:X509IssuerSerial>
                <ds:X509IssuerName>CN=Arnaud BARRE,OU=Delta WS,O=Delta Informatique,L=Tours,ST=37,C=FR</ds:X509IssuerName>
                <ds:X509SerialNumber>1301067314</ds:X509SerialNumber>
              </ds:X509IssuerSerial>
            </ds:X509Data>
          </wsse:SecurityTokenReference>
        </ds:KeyInfo>
        <xenc:CipherData>
          <xenc:CipherValue>AG+v+wtJHbZnhFB/sZ27g8fzRuFfUdh04uF7YlZ0EZxw28d5BsFT3ekCaXiYmmGHG2yiv2cyr5khze+p6lrN6I6okVtoiKxNTljM0dRv+B1eRsglIBfiWEzH3a1LRje5XD3NWVKmF8O2uEmt1/CjIUHnGcu2svUiPpKisIgJ4Zg=</xenc:CipherValue>
        </xenc:CipherData>
        <xenc:ReferenceList>
          <xenc:DataReference URI=""#EncDataId-3"" />
        </xenc:ReferenceList>
      </xenc:EncryptedKey>
      <ds:Signature xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""
                    Id=""Signature-1"">
        <ds:SignedInfo>
          <ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" />
          <ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1"" />
          <ds:Reference URI=""#id-2"">
            <ds:Transforms>
              <ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" />
            </ds:Transforms>
            <ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1"" />
            <ds:DigestValue>oVw2xDtXKZMxmmqbJj1vVhuMmyk=</ds:DigestValue>
          </ds:Reference>
        </ds:SignedInfo>
        <ds:SignatureValue>
hZy5vlcHb/Z7qD8lBJTnYj73lKGuWJnC/gDi6krQIbjGnnDn0+dfOOch7dJ9wlgubBluyf+KtHkL
XeZT662tgfXrSvuPMVKJa0arDfwtwUI45VCmFFkTySzk41M6Iysv2K84Av4HKgCF4r0KzSceFaLr
9AH4C2yQ2uuPUF3Rlu8=
</ds:SignatureValue>
        <ds:KeyInfo Id=""KeyId-D8F835AB8EC535FF8813015608017382"">
          <wsse:SecurityTokenReference xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
                                       xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
                                       wsu:Id=""STRId-D8F835AB8EC535FF8813015608017533"">
            <ds:X509Data>
              <ds:X509IssuerSerial>
                <ds:X509IssuerName>CN=Arnaud BARRE,OU=Delta WS,O=Delta Informatique,L=Tours,ST=37,C=FR</ds:X509IssuerName>
                <ds:X509SerialNumber>1301067314</ds:X509SerialNumber>
              </ds:X509IssuerSerial>
            </ds:X509Data>
          </wsse:SecurityTokenReference>
        </ds:KeyInfo>
      </ds:Signature>
    </wsse:Security>
  </SOAP-ENV:Header>
  <SOAP-ENV:Body xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""
                 wsu:Id=""id-2"">
    <xenc:EncryptedData xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""
                        Id=""EncDataId-3""
                        Type=""http://www.w3.org/2001/04/xmlenc#Content"">
      <xenc:EncryptionMethod Algorithm=""http://www.w3.org/2001/04/xmlenc#aes128-cbc"" />
      <ds:KeyInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
        <wsse:SecurityTokenReference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
          <wsse:Reference xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""
                          URI=""#EncKeyId-D8F835AB8EC535FF8813015608023945"" />
        </wsse:SecurityTokenReference>
      </ds:KeyInfo>
      <xenc:CipherData>
        <xenc:CipherValue>FDFo13ZDhmMbQ72D4ho/sEVmAD5xVdaMmFaI7tarhPq9ykWpmWF97IvgiGs1VUNW5DH0xS9SbukY
UUF2KazElMmPdAmSsW8C2p25xzHdX4Ub658pXWeJRYvRv0Akl0gk1vKsH+Ho48LDNd2gpdE9Oweq
jlYy5CcRSN39E7ntXcXf6PBpTzY8uoEC6mqNFMzB2ZRnONNN1uNOip9VKNk2l4l/NrQ2hxFt06Df
JWRIBGFwUeOIkTtxmZYzjEX4QnCG1Ai13NmkMnDWU3PJarq/r6KrHKtEZM85Iq9UucM73VEJF7q4
HUSVQrMjgbz2ThRyjBKYwIYeQhb3fRQj91ADK8H2tueOVRat/44BqtWCqaNNkGazAsTxhQT0xL4K
VinxpucsvbeKmyjgL0ImyedgAP06ecTvcK7k2N9Tweea4iTM8KaDBvIET5NTaTERPLUK0bQBIF9F
OIdEAYJgjWgxmPLCkaJh+3xUuwaTDFrFTWU=</xenc:CipherValue>
      </xenc:CipherData>
    </xenc:EncryptedData>
  </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
{code}

I don't see why the request is not decrypted by the security interceptor. Did I do something's wrong?

Thanks,

Arnaud",,,,,,,,,,,,,,,,,,,,,,,,"01/Apr/11 12:37 AM;abarre;FundsTransferWSClient.java;https://jira.spring.io/secure/attachment/17891/FundsTransferWSClient.java","01/Apr/11 12:37 AM;abarre;spring-ws-servlet.xml;https://jira.spring.io/secure/attachment/17890/spring-ws-servlet.xml",,,,,,,,,,,,24969600,,2011-04-06 02:37:12.778,1415,true,gregturn(gregturn),,,,"0|i00ls7:",3574,4964,,,,,,,,"01/Apr/11 12:37 AM;abarre;Here's my spring-ws-servlet.xml and the client code","06/Apr/11 2:12 AM;abarre;Any news about this subject ? It is very important for me to have this POC working because we're currently investigating on Web service frameworks and we need to make our choice very soon. And I would like to introduce Spring-WS in my company as we're already working with other spring components and I don't want to add a new framework but this will be the case if this case is not supported...","06/Apr/11 2:37 AM;arjen.poutsma;It seems that the server cannot map the request to any endpoint. Apparently there is no mapping for the payload root of the message (EncrypedData), and since you are not setting any SOAP action in the client, there is no SOAP Action mapping either. All of this is the logs:

{noformat}
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.e.m.PayloadRootAnnotationMethodEndpointMapping - Looking up endpoint for [{http://www.w3.org/2001/04/xmlenc#}EncryptedData]
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.server.SoapMessageDispatcher - Endpoint mapping [org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping@140df03] has no mapping for request
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.s.e.m.SoapActionAnnotationMethodEndpointMapping - Looking up endpoint for []
10:40:02.456 [http-8080-1] DEBUG o.s.w.s.server.SoapMessageDispatcher - Endpoint mapping [org.springframework.ws.soap.server.endpoint.mapping.SoapActionAnnotationMethodEndpointMapping@1f13e99] has no mapping for request
10:40:02.456 [http-8080-1] WARN  o.s.ws.server.EndpointNotFound - No endpoint mapping found for [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData]
{noformat}

The solution to your problem would be to either create a mapping for Encrypted Data (which I would not recommend), or set the SOAP Action in the client (which is probably a better idea). Read [this section in the reference docs|http://static.springsource.org/spring-ws/site/reference/html/client.html#d4e1822] to find out how you can set the soap action.

At any rate, this is not a bug, as Spring-WS is doing its job fine. A post in the [forums|http://forum.springsource.org/forumdisplay.php?f=39] would have been a better idea.

Closing as invalid.

","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#797|https://github.com/spring-projects/spring-ws/issues/797]. ",,,,,,,,,,,,,
Bug with UsernameToken and Wss4jSecurityInterceptor,SWS-700,37096,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,abarre,abarre,30/Mar/11 8:32 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,31/Mar/11 1:37 AM,2.0 GA,,,,,,,,Security,,,,,0,,,,,,,"Here's a part of my spring-ws-servlet.xml
{code}
<sws:interceptors>
		<bean id=""securityInterceptor"" 
			 class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
			<property name=""validationActions"" value=""UsernameToken""/>			
			<property name=""validationCallbackHandler"">
				<ref bean=""authenticationHandler"" />
			</property>			
		</bean>		
	</sws:interceptors>
	
	<bean id=""authenticationHandler""
		class=""org.springframework.ws.soap.security.wss4j.callback.SimplePasswordValidationCallbackHandler"">
		<property name=""users"">
			<props>
				<prop key=""${auth.user}"">${auth.password}</prop>
			</props>
		</property>
	</bean>
{code}

When I send the following SOAP message using SOAPUi, it works, I get the result :
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:web=""http://deltabank.com/webservices"">
   <soapenv:Header>
      
   </soapenv:Header>
   <soapenv:Body>
      <web:versionRequest/>
   </soapenv:Body>
</soapenv:Envelope>
{code}

But if I add UsernameToken informations like this :
{code}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:web=""http://deltabank.com/webservices"">
   <soapenv:Header>
      <wsse:Security soapenv:mustUnderstand=""1"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
         <wsse:UsernameToken wsu:Id=""UsernameToken-38"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">
            <wsse:Username>tomcat</wsse:Username>
            <wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"">XXXXXX</wsse:Password>
            <wsse:Nonce EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"">kD6o77T+cO3QbE1gd4/9lA==</wsse:Nonce>
            <wsu:Created>2011-03-30T15:31:33.906Z</wsu:Created>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>
      <web:versionRequest/>
   </soapenv:Body>
</soapenv:Envelope>
{code}

I get the following exception : 
Security processing failed (actions mismatch)

Could you help me please because where I did something's wrong...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:16.127,1416,true,gregturn(gregturn),,,,"0|i00lsf:",3575,4965,,,,,,,,"31/Mar/11 1:31 AM;abarre;Please close this issue. The problem was due to SOAPUi that automatically adds the UsernameToken in the header... ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#796|https://github.com/spring-projects/spring-ws/issues/796]. ",,,,,,,,,,,,,,,
XomPayloadMethodProcessor is not added methodReturnValueHandlers in DefaultMethodEndpointAdapter,SWS-699,36998,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,arjen.poutsma,sannies,sannies,24/Mar/11 5:38 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,28/Mar/11 2:31 AM,2.0 GA,,,,,,2.0.1,,Core,XML,,,,0,,,,,,,"{code:java}
      private void initMethodReturnValueHandlers() {
            ...
            if (isPresent(XOM_CLASS_NAME)) {
                methodArgumentResolvers.add(new XomPayloadMethodProcessor());
            }
            ...
      }
{code}

as you can see the XomPayloadMethodProcessor is added to the methodArgumentResolvers and not to the methodReturnValueHandlers. 

To fix the problem just replace the methodArgumentResolvers.add(...) with methodReturnValueHandlers.add(...) 
",all,";28/Mar/11 2:31 AM;arjen.poutsma;360",";28/Mar/11 2:31 AM;arjen.poutsma;360",,,0,720,,,0,720,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-03-28 02:31:57.736,1417,true,gregturn(gregturn),,,,"0|i00lsn:",3576,4966,,,,,,,,"28/Mar/11 2:31 AM;arjen.poutsma;Fixed. Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#795|https://github.com/spring-projects/spring-ws/issues/795]. ",,,,,,,,,,,,,,,
EndpointExceptionResolver is not registered automatically when used together with <sws:annotation-driven/> tag,SWS-698,36835,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,griff777,griff777,15/Mar/11 6:56 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,22/Mar/11 4:26 AM,2.0 GA,,,,,,2.0.1,,,,,,,0,,,,,,,"After removing <sws:annotation-driven/> EndpointExceptionResolver starts to work. Whats more - it looks like that <sws:annotation-driven/> tag is not needed as anotation based Endpoints works without it.
Additional details in the Spring forum post.

",,";22/Mar/11 4:21 AM;arjen.poutsma;6000",,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-03-22 02:27:28.05,1418,true,gregturn(gregturn),,,,"0|i00lsv:",3577,4967,http://forum.springsource.org/showthread.php?p=351055&posted=1#post351055,,,,,,,"22/Mar/11 2:27 AM;arjen.poutsma;Indeed, annotation-based endpoints work without it, but the use of the XSD namespace will give you some extras (like marshaller autodetection, for isntance).","22/Mar/11 4:26 AM;arjen.poutsma;This should be fixed now: the <sws:annotation-driven/> tag does not register any exception resolvers anymore. It used to, and thus overrided the defaults in SoapMessageDispatcher.properties and also disabled autodetected exception resolvers, which is what you ran into.

Can you please try a snapshot (as of tonight) and see if it works for you? I'd like to push out a 2.0.1 release later this week, containing this fix.

Cheers, Arjen","24/Mar/11 12:04 AM;griff777;Works for me, Thanks!","29/Mar/11 2:29 AM;arjen.poutsma;Corrected spelling in Summary","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#791|https://github.com/spring-projects/spring-ws/issues/791]. ",,,,,,,,,,,,
WSS4J SpringDigestPasswordValidationCallbackHandler uses WSUsernameTokenPrincipal instead of UserDetails for creating authentication token?,SWS-693,36351,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,ferrerogg,ferrerogg,14/Feb/11 11:52 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,20/Mar/14 7:06 AM,1.5.9,,,,,,,,Security,,,,,0,,,,,,,"I'm using SpringDigestPasswordValidationCallbackHandler for WSS4J Authentication.
The Handler correctly stores a UsernamePasswordAuthenticationToken in the SecurityContext when the user is correctly authenticated, the problem is that this Token does not contain a reference to my custom UserDetails (as the Principal) but it references the original WSUsernameTokenPrincipal read from the Callback.

This is the code that handles SecurityContextHolder:

{code}
    protected void handleUsernameTokenPrincipal(UsernameTokenPrincipalCallback callback)
            throws IOException, UnsupportedCallbackException {
        UserDetails user = loadUserDetails(callback.getPrincipal().getName());
        WSUsernameTokenPrincipal principal = callback.getPrincipal();
        UsernamePasswordAuthenticationToken authRequest =
                new UsernamePasswordAuthenticationToken(principal, principal.getPassword(), user.getAuthorities());
        if (logger.isDebugEnabled()) {
            logger.debug(""Authentication success: "" + authRequest.toString());
        }
        SecurityContextHolder.getContext().setAuthentication(authRequest);
    }
{code}


I think that the Token should reference the UserDetails object as follows:

{code}
        UsernamePasswordAuthenticationToken authRequest =
                new UsernamePasswordAuthenticationToken(user, user.getPassword(), user.getAuthorities());
{code}

so that the SecurityContext contains my custom implementation of the UserDetails object...

Is this the intended behaviour? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-03-28 02:35:08.032,1422,true,gregturn(gregturn),,,,"0|i00ltr:",3581,4971,,,,,,,,"28/Mar/11 2:35 AM;arjen.poutsma;Added formatting","28/Mar/11 3:44 AM;tareq;Hi,

Thanks for spotting this. I think you're right, SpringDigestPasswordValidationCallbackHandler should pass the UserDetails instance that it loads instead of creating a WSUsernameTokenPrincipal. However, I prefer not to include the fix in a minor version since, as you understand, it has the potential of causing ClassCastException to users who are currently relying on the fact that the principal is a WSUsernameTokenPrincipal. For this reason, I'm rescheduling this to 2.1. 
Once the fix is applied I would very much appreciate getting your feedback before doing a release.
Thanks,
Tareq
  ","20/Mar/14 7:06 AM;arjen.poutsma;The SpringDigestPasswordValidationCallbackHandler has been removed in favor of the SpringSecurityPasswordValidationCallbackHandler in version 2.1.","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#787|https://github.com/spring-projects/spring-ws/issues/787]. ",,,,,,,,,,,,,,
EntityResolver cannot be specified for Webservice templates,SWS-692,36328,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,nstamps,nstamps,14/Feb/11 2:19 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,24/Mar/11 3:09 AM,,,,,,,,,OXM,XML,,,,0,,,,,,,"It is not possible to define an EntityResolver for webservice templates, resulting in failure of services with external public document references in closed environments (without internet).

A mechanism similar to the spring.schemas for webservice/http interfaces would seem a sensible addition to the spring framework. This would then not require an injection to be offered, but instead provides a generic entity resolver mechanism.

",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-03-24 02:09:22.325,1423,true,gregturn(gregturn),,,,"0|i00ltz:",3582,4972,http://forum.springsource.org/showthread.php?t=103271,,,,,,,"24/Mar/11 2:09 AM;arjen.poutsma;Given that the WebServiceTemplate supports so many different XML APIs, it would be hard to pick one particular EntityResolver type. For instance, when using SAAJ, you're effectively using SAX/DOM (and org.xml.sax.EntityResolver), but when using Axiom, you use StAX.","24/Mar/11 2:43 AM;nstamps;However - there is not even a standard mechanism to provide your own. I have had to extend the basic webservicetemplate to allow an entity resolver to be passed in.","24/Mar/11 3:08 AM;arjen.poutsma;The point I was trying to make is that there is no common interface that I could use for providing such a mechanism. Each message factory (SAAJ vs Axiom) uses a different XML parsing API, and the entity resolution mechanisms they provide have nothing in common (SAAJ uses org.xml.sax.EntityResolver, while Axiom uses javax.xml.stream.XMLResolver). Since I am not a contributor to neither SAAJ nor Axiom, there is very little I can do about that.

Also, most of the classes in Spring (WS) are written with extension in mind. So the fact that you could extend WebServiceTemplate and provide your own custom fix to this problem is a good solution for me.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#786|https://github.com/spring-projects/spring-ws/issues/786]. ",,,,,,,,,,,,,
Annotation-driven tag does not support ws-addressing @Action,SWS-691,36226,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,willemvd,willemvd,08/Feb/11 3:51 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,22/Mar/11 5:00 AM,2.0 GA,,,,,,2.0.1,,Core,,,,,0,,,,,,,"Objects annotated with @Action should be picked up by the sws:annotation-driven tag (triggered with AnnotationActionEndpointMapping), but this fails because the AnnotationDrivenBeanDefinitionParser does not register all possible endpoint mappings in the registerEndpointMappings method.

Ws-addressing support is not working without explicit adding the AnnotationActionEndpointMapping in the Spring context.

Workaround:

Add the following line to the Spring context xml:
<bean class=""org.springframework.ws.soap.addressing.server.AnnotationActionEndpointMapping"" />

","Windows XP, IBM WebSphere 7",";22/Mar/11 5:00 AM;arjen.poutsma;360",,,,0,360,,,0,360,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-03-22 05:01:22.36,1424,true,gregturn(gregturn),,,,"0|i00lu7:",3583,4973,http://forum.springframework.org/showthread.php?t=102326,,,,,,,"22/Mar/11 5:01 AM;arjen.poutsma;Fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#688|https://github.com/spring-projects/spring-ws/issues/688]. ",,,,,,,,,,,,,,,
"URIs in WebServiceTemplate don't allow using caret sign (^) in addresses",SWS-689,36036,Defect,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,,grzes,grzes,26/Jan/11 3:52 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,26/Jan/11 6:52 AM,2.0 GA,,,,,,,,Core,,,,,0,,,,,,,"I have SAP XI address in the form:
{{http://host:port/sap/xi/engine?type=entry&version=3.0&Sender.Service=BS_WebSphere&Interface=http://ibm.com^SI_websphere_to_sap_sender}}

Unfortunately WebServiceTemplate uses URIs, which (by the way) are used to invoke {{toString()}} and {{getScheme()}} methods. {{URI.create(String)}} throws an exception when the argument contains {{""^""}} character, {{new URL(String)}} - don't.

Please let me invoke the SAP service...

regards
Grzegorz Grzybek",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:35.447,1425,true,gregturn(gregturn),,,,"0|i00luf:",3584,4974,,,,,,,,"26/Jan/11 4:46 AM;grzes;Please delete this issue. URL escaping didn't work initially - now it works... Sorry!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#785|https://github.com/spring-projects/spring-ws/issues/785]. ",,,,,,,,,,,,,,,
Attachment content id is resetted by spring web service,SWS-687,36002,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,jaise007,jaise007,24/Jan/11 9:12 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,06/Oct/11 4:41 AM,1.5.7,,,,,,2.0.3,,Core,,,,,0,,,,,,,"Content id set from the end point or intercepter is being overrided by the spring ws api. Please tell me if this issue is fixed already in another version.


		axiomSoapMessage.addAttachment(
				""JTT001-CONTENT-007-TXT1"", new File(""C:\\files\\test.xml""));
		//Attachment att1= axiomSoapMessage.getAttachment(""JTT001-CONTENT-007-TXT1"");
		//System.out.println(""content id of the attachment is working""+att1 != null);

		Iterator itr = axiomSoapMessage.getAttachments();
		Attachment att2 = null;
		while(itr.hasNext()){
			att2 = (Attachment)itr.next();
			System.out.println(""Content id$$$""+att2.getContentId());
		}
		soapMessage.getSOAPPart().setContentId(""CONTENT-SOAP-01"");
		if (soapMessage.saveRequired()) {
			soapMessage.saveChanges();
		}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 04:41:04.165,1427,true,gregturn(gregturn),,,,"0|i00luv:",3586,4976,,,,,,,,"06/Oct/11 4:41 AM;arjen.poutsma;I can't reproduce this using the code provided. Can you attach a sample project that reproduces this issue, please?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#783|https://github.com/spring-projects/spring-ws/issues/783]. ",,,,,,,,,,,,,,,
ExceptionResolver order is reversed,SWS-682,35928,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,,j.gorter,j.gorter,19/Jan/11 7:36 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,22/Mar/11 5:10 AM,2.0 GA,,,,,,2.0.1,,Core,,,,,0,,,,,,,"I've added my own ExceptionResolver as a bean in the applicationcontext by registering it as a bean. When an exception occurs, the code at MessageDispatcher.processEndpointException walks over the exception resolvers. When I debug, i see that they are in the following order: SimpleSoapExceptionResolver, SoapFaultAnnotationExceptionResolver, my resolver. This means that the SimpleSoapExceptionResolver will always handle all exceptions. I expect the order here to be reversed, so I can handle exceptions easily using my own exceptionResolver, as the documentation states.",,,,,,,,,,,,,,,,,SWS-698,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:47.808,1432,true,gregturn(gregturn),,,,"0|i00lvz:",3591,4981,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#782|https://github.com/spring-projects/spring-ws/issues/782]. ",,,,,,,,,,,,,,,,
Manifest files in 2.0.0 release are incorrect,SWS-681,35893,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,casey.hadden,casey.hadden,17/Jan/11 10:27 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,21/Mar/11 4:59 AM,2.0 GA,,,,,,2.0.1,,Core,,,,,5,,,,,,,"The manifest files in the 2.0 release jars appear incorrect.

The spring-ws-core jar does not include OSGi information, while the spring-ws-security jar and others reference the 2.0.0.M4 release.

spring-ws-core-2.0.0.RELEASE.jar/META-INF/MANIFEST.MF :
Manifest-Version: 1.0
Archiver-Version: Plexus Archiver
Created-By: Apache Maven
Built-By: arjen
Build-Jdk: 1.6.0_22

spring-ws-security-2.0.0.RELEASE.jar/META-INF/MANIFEST.MF:
Manifest-Version: 1.0
Archiver-Version: Plexus Archiver
Created-By: Apache Maven
Built-By: arjen
Build-Jdk: 1.6.0_22
Export-Package: org.springframework.ws.soap.security;version=""2.0.0.M4""
[snip]
Bundle-Vendor: SpringSource
Bundle-Version: 2.0.0.M4
Tool: Bundlor 1.0.0.RELEASE
Bundle-Name: Spring Web Services SOAP Security
",,";21/Mar/11 4:56 AM;arjen.poutsma;1440",,,,0,1440,,,0,1440,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-02-13 04:59:56.649,1433,true,gregturn(gregturn),,,,"0|i00lw7:",3592,4982,,,,,,,,"13/Feb/11 4:59 AM;rkettelerij;This turns out to be an issue for Apache Camel, see https://issues.apache.org/jira/browse/CAMEL-3659.","15/Mar/11 8:00 AM;david_geary;Also ensure that javax package imports do not include version numbers (or are verison ""0"") where possible (ie for packages now part of java se)

eg in spring ws 1.5.9 the imports are (extract from manifest)

javax.activation;version=""1.1"",
javax.servlet,javax.servlet.http,javax.wsdl;resolution:=optional,
javax.wsdl.extensions;resolution:=optional,
javax.wsdl.extensions.schema;resolution:=optional,
javax.wsdl.extensions.soap;resolution:=optional,
javax.wsdl.extensions.soap12;resolution:=optional,
javax.wsdl.factory;resolution:=optional,
javax.wsdl.xml;resolution:=optional,
javax.xml.namespace,
javax.xml.parsers,
javax.xml.soap;resolution:=optional,
javax.xml.stream;version=""1.0"",
javax.xml.stream.events;version=""1.0"",
javax.xml.stream.util;version=""1.0"",
javax.xml.transform,
javax.xml.transform.dom,
javax.xml.transform.sax,
javax.xml.transform.stream

whereas in spring ws 2.0.0.M1 more versions are referenced ie 

javax.activation;version=""[1.1.0, 2.0.0)"",
javax.servlet;version=""[2.4.0, 3.0.0)"",
javax.servlet.http;version=""[2.4.0, 3.0.0)"",
javax.wsdl;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.schema;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.soap;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.extensions.soap12;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.factory;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.wsdl.xml;version=""[1.6.1, 2.0.0)"";resolution:=""optional"",
javax.xml.namespace;version=""0"",
javax.xml.parsers;version=""0"",
javax.xml.soap;version=""[1.1.0, 2.0.0)"";resolution:=""optional"",
javax.xml.stream;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.stream.events;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.stream.util;version=""[1.0.1, 2.0.0)"";resolution:=""optional"",
javax.xml.transform;version=""0"",
javax.xml.transform.dom;version=""0"",
javax.xml.transform.sax;version=""0"",
javax.xml.transform.stream;version=""0"",
javax.xml.xpath;version=""0"",

compared to core spring (3.0.5) where the imports are just 

javax.xml.namespace;version=""0"";resolution:=""optional"",
javax.xml.stream;version=""0"";resolution:=""optional"",
javax.xml.stream.events;version=""0"";resolution:=""optional"",
javax.xml.stream.util;version=""0"";resolution:=""optional"",
javax.xml.transform;version=""0"";resolution:=""optional"",
javax.xml.transform.sax;version=""0"";resolution:=""optional"",
javax.xml.transform.stax;version=""0"";resolution:=""optional""

Since spring ws currently forces the version, to get the spring ws bundles resolved you need to install additional bundles (eg javax.xml.stream) but even then this will cause a conflict with core spring which gets wired to the underlying JRE javax classes.

Not having the version number allows the everything to pick up the underlying JRE javax classes.","21/Mar/11 4:59 AM;arjen.poutsma;This should be fixed now.

I've uploaded a new snapshot for you to verify. Could you please download this snapshot and see if the manifests are correct now?","21/Mar/11 10:12 AM;david_geary;Seems to be fixed, tested on Karaf - the snapshot bundles install and resolve now.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#781|https://github.com/spring-projects/spring-ws/issues/781]. ",,,,,,,,,,,,
MessageSource injection in AbstractFaultCreatingValidatingMarshallingPayloadEndpoint,SWS-679,35842,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,,sylvestris,sylvestris,13/Jan/11 5:19 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,13/Jan/11 5:54 AM,1.5.9,,,,,,,,Core,,,,,0,,,,,,,"My Endpoint extends AbstractFaultCreatingValidatingMarshallingPayloadEndpoint.  I would like to localize the validation errors by using my JdbcMessageSource - so I add it as a property to my Endpoint in the application context.  However, when the application context fires up, AbstractFaultCreatingValidatingMarshallingPayloadEndpoint.setMessageContext() is called twice :

firstly in AbstractAutowireCapableBeanFactory.populateBean() - populated with my JdbcMessageSource

secondly in AbstractAutowireCapableBeanFactory.initializeBean() - populated with XmlWebApplicationContext

How do I prevent the second one overwriting the first one ?  Can I stop the second one ?

My current workaround is to override onUnmarshallRequest() and call setMessageSource(jdbcMessageSource) for each call. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:27.441,1435,true,gregturn(gregturn),,,,"0|i00lwn:",3594,4984,,,,,,,,"13/Jan/11 5:44 AM;sylvestris;ok, the solution is to rename 'jdbcMessageSource' to 'messageSource'.

please delete this issue

thanks

Martin
","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#779|https://github.com/spring-projects/spring-ws/issues/779]. ",,,,,,,,,,,,,,,
/META-INF/spring.schema,SWS-677,35673,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,eschult,eschult,03/Jan/11 1:19 PM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,04/Jan/11 3:34 AM,2.0 RC2,,,,,,2.0 GA,,Core,,,,,0,,,,,,,"The '/META-INF/spring.schemas' in spring-ws-core (and possibly other jars) needs a reference to the v2 schema files:

Current:
{quote}
http\://www.springframework.org/schema/web-services/web-services-1.5.xsd=/org/springframework/ws/config/web-services-1.5.xsd
{quote}

I tried successfully:

{quote}
http\://www.springframework.org/schema/web-services/web-services-1.5.xsd=/org/springframework/ws/config/web-services-1.5.xsd
http\://www.springframework.org/schema/web-services/web-services-2.0.xsd=/org/springframework/ws/config/web-services-2.0.xsd
http\://www.springframework.org/schema/web-services/web-services.xsd=/org/springframework/ws/config/web-services-2.0.xsd
{quote}

YMMV",Windows / JDK 1.6.0_23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-01-04 03:34:05.406,1437,true,gregturn(gregturn),,,,"0|i00lx3:",3596,4986,http://forum.springframework.org/showthread.php?p=337267,,,,,,,"04/Jan/11 3:34 AM;arjen.poutsma;Fixed! Thanks for spotting this...","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#776|https://github.com/spring-projects/spring-ws/issues/776]. ",,,,,,,,,,,,,,,
XwssSecurityInterceptor in combination with <sws:interceptors>,SWS-675,35661,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,03/Jan/11 3:03 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,05/Jan/11 7:05 AM,2.0 RC2,,,,,,2.0 GA,,Core,,,,,0,,,,,,,"The following config:

{code:xml}

<sws:interceptors>
<bean id=""wsSecurityInterceptor"" class=""org.springframework.ws.soap.security.xwss.X wsSecurityInterceptor"">
<description>
This interceptor validates incoming messages according to the policy defined in
'securityPolicy.xml'.
The policy defines that all incoming requests must have a UsernameToken with a password digest
in it.
The actual authentication is performed by the Spring callback handler.
</description>
<property name=""secureResponse"" value=""false""/>
<property name=""policyConfiguration""
value=""/WEB-INF/spring/securityPolicy.xml""/>
<property name=""callbackHandlers"">
<list>
<bean class=""org.springframework.ws.soap.security.xwss.c allback.SpringDigestPasswordValidationCallbackHand ler"">
<property name=""userDetailsService"" ref=""securityService""/>
<property name=""userCache"" ref=""userCache""/>
</bean>
<bean class=""com.xifin.security.UserValidationCallbackHa ndler"">
<property name=""userCache"" ref=""userCache""/>
</bean>
</list>
</property>
</bean>

</sws:interceptors>
{code}

results in the following exception:



{noformat}
2010-12-30 16:35:37,699 DEBUG SoapMessageDispatcher[handleHeaders() line 120] - Handling MustUnderstand header {http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}Security
2010-12-30 16:35:37,702 WARN SoapMessageDispatcher[createMustUnderstandFault() line 162] - Could not handle mustUnderstand headers: {http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd}Security. Returning fault
2010-12-30 16:35:37,704 DEBUG sent[receive() line 181] - Sent response [SaajSoapMessage http://schemas.xmlsoap.org/soap/envelope/}Fault] for request [SaajSoapM
{noformat}",,";06/Jan/11 5:05 AM;arjen.poutsma;12960",,,,0,12960,,,0,12960,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:47:04.813,1439,true,gregturn(gregturn),,,,"0|i00lxj:",3598,4988,http://forum.springsource.org/showpost.php?p=336815&postcount=7,,,,,,,"05/Jan/11 7:05 AM;arjen.poutsma;Fixed!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#774|https://github.com/spring-projects/spring-ws/issues/774]. ",,,,,,,,,,,,,,,
Stacktrace in response instead of soap fault,SWS-671,35474,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,arjen.poutsma,sylvestris,sylvestris,17/Dec/10 2:10 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,18/Mar/14 3:57 AM,1.5.9,,,,,,2.0.4,,Core,,,,,6,,,,,,,The webservice responds with a stacktrace instead of a soap fault if malformed xml is sent.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-12-20 08:02:40.456,1443,true,gregturn(gregturn),,,,"0|i00lyf:",3602,4992,http://forum.springsource.org/showthread.php?t=93626,,,,,,,"20/Dec/10 8:02 AM;walnutmon;We currently have SOAP services in production that still provide a stack-trace when malformed XML is sent to them - this is a very difficult bug to deal with and there is currently no work-around","03/Feb/11 10:10 PM;johntylerbush;This ruined a better part of my day.  The endpoint resolvers are pretty useless.  This really needs to be fixed.  I had to extend the servlet to get around this, feels totally hacky, but can't sort out any other way.","18/May/11 4:30 PM;tedpennings;John, not sure if it's too late to help, but you could create a servlet filter and wrap the chain.doFilter() method in a try-catch block for NestedServletException. You can look at the cause to see if it's an invalid XML related issue, and take action that way. It's slightly better than having to extend the MessageDispatcherServlet, but really not by much. It would be nice to see this issue resolved.","26/Sep/13 1:13 AM;slsh;What I have done is to define a custom MessageReceiverHandlerAdapter that is used by the default spring-ws MessageDispatcherServlet. That works and I think is the way to handle this by design. I can provide the code if needed.","18/Mar/14 3:57 AM;arjen.poutsma;As of version, Spring-WS throws a InvalidXmlException when dealing with invalid XML. By default, this exception results in a 400 status code, but it can be changed by overriding WebServiceMessageReceiverHandlerAdapter.handleInvalidXmlException,","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#770|https://github.com/spring-projects/spring-ws/issues/770]. ",,,,,,,,,,,,
airline mvn build failure,SWS-665,35339,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,sylvestris,sylvestris,09/Dec/10 5:14 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,10/Dec/10 1:21 AM,1.5.9,,,,,,,,Samples,,,,,0,,,,,,,"This problem might well be just about my ignorance of Maven2, but when I enter the following

[...] springsource\spring-ws-1.5.9\samples\airline>mvn

The error message says

[...]
Caused by: org.apache.maven.project.ProjectBuildingException: Cannot find parent: org.springframework.ws:spring-ws-samples for project: null:airline:war:null for project null:airline:war:null
[...]
org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFileInternal(DefaultMavenProjectBuilder.java:508)
[...]
Caused by: org.apache.maven.project.ProjectBuildingException: POM 'org.springframework.ws:spring-ws-samples' not found in repository: Unable to download the artifact from any repository

  org.springframework.ws:spring-ws-samples:pom:1.5.9

[...]
from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (http://download.java.net/maven/1/),
  spring-ext (https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/)

As far as I can see, there is no spring-ws-samples at those urls.

If this is problem is only because of my own configuration, please delete this issue.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-12-10 01:21:16.28,1449,true,gregturn(gregturn),,,,"0|i00lzr:",3608,4998,,,,,,,,"10/Dec/10 1:00 AM;sylvestris;Also, when I run

[...] springsource\spring-ws-1.5.9\samples>mvn install

I get the following


[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) javax.xml.crypto:xmldsig:jar:1.0

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=javax.xml.crypto -DartifactId=xmldsig -Dversion=1.0 -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:
      mvn deploy:deploy-file -DgroupId=javax.xml.crypto -DartifactId=xmldsig -Dversion=1.0 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[

  Path to dependency:
        1) org.springframework.ws:airline:war:1.5.9
        2) org.springframework.ws:spring-ws-security:jar:1.5.9
        3) com.sun.xml.wss:xws-security:jar:2.0-FCS
        4) javax.xml.crypto:xmldsig:jar:1.0

2) javax.jms:jms:jar:1.1

  Try downloading the file manually from:
      http://java.sun.com/products/jms/docs.html

  Then, install it using the command:
      mvn install:install-file -DgroupId=javax.jms -DartifactId=jms -Dversion=1.1 -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:
      mvn deploy:deploy-file -DgroupId=javax.jms -DartifactId=jms -Dversion=1.1 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.springframework.ws:airline:war:1.5.9
        2) javax.jms:jms:jar:1.1

----------
2 required artifacts are missing.

for artifact:
  org.springframework.ws:airline:war:1.5.9

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (http://download.java.net/maven/1/),
  spring-ext (https://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/),
  spring-release (http://maven.springframework.org/release),
  spring-external (http://maven.springframework.org/external),
  spring-milestone (http://s3.amazonaws.com/maven.springframework.org/milestone)
","10/Dec/10 1:21 AM;arjen.poutsma;Because the airline sample has a dependency on the samples project, you will have to run mvn install at the root of the samples directory before you can mvn install airline. That should do the trick.","10/Dec/10 2:20 AM;sylvestris;ok, I've hunted around for the missing bits and pieces and mvn build now runs correctly, so this issue can be closed.

I am not a maven user, but each time I use it I find it very brittle.  I don't know what the solution to this problem is - should springsource continuous integration verify all dependencies on remote repositories on every build ?  Alot of work, but it would save us users a lot of time.

","10/Dec/10 2:23 AM;arjen.poutsma;That sounds like a good idea, I will look into it.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#765|https://github.com/spring-projects/spring-ws/issues/765]. ",,,,,,,,,,,,
Tutorial requires transformWsdlLocations true,SWS-664,35336,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,sylvestris,sylvestris,09/Dec/10 2:25 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,10/Dec/10 2:17 AM,1.5.9,,,,,,2.0 RC2,,Documentation,,,,,0,,,,,,,"Working through the tutorial, section 3.7 ""Publishing the WSDL"" 

<quote>
We use a a relative URI and we instruct the framework to transform it dynamically to an absolute URI.
</quote>

I have found out by trial and error that this only works if the following is set in web.xml

  <init-param>
    <param-name>transformWsdlLocations</param-name>
    <param-value>true</param-value>
  </init-param>

However, this is only mentioned in section 5.3.1.1 later on in the documentation.
",,";10/Dec/10 2:17 AM;arjen.poutsma;540",,,,0,540,,,0,540,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:45.697,1450,true,gregturn(gregturn),,,,"0|i00lzz:",3609,4999,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#764|https://github.com/spring-projects/spring-ws/issues/764]. ",,,,,,,,,,,,,,,,
XwsSecurityInterceptor.processor.handler incorrect and does not match XwsSecurityInterceptor.callbackHandler,SWS-661,35138,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Deferred,tareq,farrukh_najmi,farrukh_najmi,30/Nov/10 9:16 AM,21/Aug/13 1:08 AM,10/Jul/21 8:38 AM,21/Aug/13 1:08 AM,1.5.8,,,,,,,,Security,,,,,0,,,,,,,"In my client I have a Facade class that provides a simplified facade client API to my service.
The Facade class uses a WebServiceTemplate with a XwsSecurityInterceptor to use WSS for basic authentication.
There are multiple instances of the Facade in my client so it can talk to multiple services.
Therefor I use scope=""prototype"" for the beans supporting the Facade class.

At runtime I observe that the wrong handler is being called during authentication sequence. Upon debugging I observe that the XwsSecurityInterceptor.processor.handler is set incorrectly for the XwsSecurityInterceptor and does not match XwsSecurityInterceptor.callbackHandler. Thus authentication fails to behave correctly.

I suspect that multiple beans (due to scope=""prototype"") are somehow tripping some code and mixing up or overwriting the XwsSecurityInterceptor.processor.handler or possibly XwsSecurityInterceptor.processor.

Note the hack in bean config is because there was no way to get the callbackHandler from the XwsSecurityInterceptor in spring-ws-secuurity-1.5.8 so I set it within the constructor of Facade overwriting the handler set in bean configuration. I set the ""real"" handler outside bean config because I could not figure out how to use a ref to the same prototype scoped CallbackHandlerImpl bean in both the facade and the clientSecurityInterceptor (it sets two different instances otherwise).

{code}
    <bean id=""jaxb2Marshaller"" class=""org.springframework.oxm.jaxb.Jaxb2Marshaller"">
      ...
    </bean>
    
    <bean id=""facade"" class=""org.acme.client.Facade"" scope=""prototype"">
        <property name=""webServiceTemplate""  ref=""soapWebServiceTemplate""/>
    </bean>
    
    <bean id=""soapWebServiceTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"" scope=""prototype"">
      <property name=""marshaller"" ref=""jaxb2Marshaller""/>
      <property name=""unmarshaller"" ref=""jaxb2Marshaller""/>
      <property name=""interceptors"" ref=""clientSecurityInterceptor""/>
    </bean>

    <bean id=""clientSecurityInterceptor"" class=""org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor"" scope=""prototype"">
        <property name=""secureResponse"" value=""false""/>
        <property name=""policyConfiguration"" value=""classpath:clientSecurityPolicy.xml""/>

        <!--
        Hack: This handler instance is replaced by handler in FacadeWSImpl and exist only to satisfy assertion in 
        XwsSecurityInterceptor
        -->
        <property name=""callbackHandler"" ref=""callbackHandler""/>
    </bean>

    <bean id=""callbackHandler"" class=""org.acme.client.CallbackHandlerImpl"" scope=""singleton"" />

{code}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,334713600,,,1452,true,arjen.poutsma(arjen.poutsma),,,,"0|i00m0f:",3611,5001,,,,,,,,,,,,,,,,,,,,,,,,,
 ResponseMatcher.payload(Resource payload) should be static,SWS-656,34899,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,dart0,dart0,14/Nov/10 9:34 AM,23/Sep/20 4:47 PM,10/Jul/21 8:38 AM,10/Dec/10 1:45 AM,2.0 RC1,,,,,,2.0 RC2,,Test,,,,,0,,,,,,,ResponseMatchers  public ResponseMatcher payload(Resource payload) should be declared static,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:18.435,1456,true,gregturn(gregturn),,,,"0|i00m1b:",3615,5005,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:47 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#759|https://github.com/spring-projects/spring-ws/issues/759]. ",,,,,,,,,,,,,,,,
PayloadValidatingInterceptor throws IllegalArgumentException when passed a schema collection,SWS-647,34015,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,sah5,sah5,25/Oct/10 3:01 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,25/Jan/12 1:36 AM,1.5.9,,,,,,2.0.4,,,,,,,0,,,,,,,"When I configure the PayloadValidatingInterceptor to refer to a CommonsXsdSchemaCollection, I get the following error when my web service is invoked:

{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatingInterceptor' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
	at javax.servlet.GenericServlet.init(GenericServlet.java:241)
	at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
	at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
	at weblogic.servlet.internal.StubLifecycleHelper.(StubLifecycleHelper.java:48)
	at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1338)
	... 33 more
{noformat}

-------------------------

Here's my spring bean config:

{code:xml}
    <bean id=""validatingInterceptor"" class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
        <property name=""xsdSchemaCollection"" ref=""schemaCollection"" />
        <property name=""validateRequest"" value=""true"" />
        <property name=""validateResponse"" value=""true"" />
    </bean>

    <bean id=""schemaCollection"" class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"">
        <property name=""xsds"">
            <list>
                <value>classpath:schemas/CommonTypes.xsd</value>
                <value>classpath:schemas/TakeService.xsd</value>
            </list>
        </property>
        <property name=""inline"" value=""true"" />
    </bean>
{code}
------------------------

The workaround is to explicit set the ""schemas"" property, thus duplicating the XSD paths in the config (which is not ideal):
{code:xml}
    <bean id=""validatingInterceptor"" class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
        <property name=""schemas"">
            <list>
                <value>classpath:schemas/CommonTypes.xsd</value>
                <value>classpath:schemas/TakeService.xsd</value>
            </list>
        </property>
        <property name=""validateRequest"" value=""true"" />
        <property name=""validateResponse"" value=""true"" />
    </bean>
{code}

",,";25/Jan/12 1:36 AM;arjen.poutsma;720",,,,,720,,,,720,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-10-26 02:38:05.88,1465,true,gregturn(gregturn),,,,"0|i00m3b:",3624,5014,,,,,,,,"26/Oct/10 2:38 AM;arjen.poutsma;Added formatting","26/Oct/10 2:47 AM;arjen.poutsma;Can you provide the full stack trace, please, including all the nested exceptions? I can't see where the exception is thrown from.","26/Oct/10 8:02 AM;sah5;No problem, here it is:

{noformat}
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatingInterceptor' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
        at javax.servlet.GenericServlet.init(GenericServlet.java:241)
        at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
        at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
        at weblogic.servlet.internal.StubLifecycleHelper.<init>(StubLifecycleHelper.java:48)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)

Caused By: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'xsdSchemaCollection' threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1338)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
        at javax.servlet.GenericServlet.init(GenericServlet.java:241)
        at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)
        at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
        at weblogic.servlet.internal.StubLifecycleHelper.<init>(StubLifecycleHelper.java:48)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)
{noformat}
","26/Oct/11 1:05 PM;ayala8424;I was having this problem using glassfish as a server, the error was because glassfish was installed in the following path: 

C:\Documents and Settings\user\My Documents\glassfish

The problem is the space in ""My documents"", to fix this error I change the location of the server for example C:\glassfish.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#750|https://github.com/spring-projects/spring-ws/issues/750]. ",,,,,,,,,,,,
XStreamMarshaller cannot be easily subclassed,SWS-646,33994,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,sgarlatm,sgarlatm,23/Oct/10 10:44 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,25/Oct/10 3:00 AM,,,,,,,,,OXM,,,,,0,,,,,,,"The member variables of XStreamMarshaller are private, so it is difficult to subclass to introduce custom behavior.  Could you please make the member variables protected instead?  In particular, I need to access the streamDriver member variable.

I am trying to create pretty XML output with indentation, the same as the filer for SWS-505.  To do so, I would like to extend SWS-505",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-10-25 03:00:43.907,1466,true,gregturn(gregturn),,,,"0|i00m3j:",3625,5015,,,,,,,,"23/Oct/10 10:45 AM;sgarlatm;Sorry I meant to say I would like to extend XStreamMarshaller, not SWS-505 ;)","25/Oct/10 3:00 AM;arjen.poutsma;You can subclass XStreamMarshaller, and then override the customizeXstream method, see http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/oxm/xstream/XStreamMarshaller.html#customizeXStream(com.thoughtworks.xstream.XStream)","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#749|https://github.com/spring-projects/spring-ws/issues/749]. ",,,,,,,,,,,,,,
"evaluateAsBoolean returns true for node with text content ""false""",SWS-640,33020,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,djudd,djudd,27/Aug/10 3:15 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,01/Sep/10 5:18 AM,1.5.8,,,,,,2.0 RC1,,XML,,,,,0,,,,,,,"The method Jaxp13XPathTemplate.evaluateAsBoolean returns true if the element selected by the expression exists, regardless of its contents. The text contents can be empty, ""false"", or ""WTF"", and evaluateAsBoolean will return true. 

This does not appear to match its Javadoc, which says: ""Evaluates the given expression as a boolean. Returns the boolean evaluation of the expression, or false if it is invalid."" The very similar method evaluateAsDouble has nearly identical Javadoc: ""Evaluates the given expression as a double. Returns the evaluation of the expression, or Double.NaN if it is invalid."" - but evaluateAsDouble returns the actual contents of the text node. If evaluateAsBoolean is really meant to mean, ""doesExpressionSelectAnything"", it should be renamed.

Below is a unit test that demonstrates the problem. The second assert fails.

The problem also occurs when using a WSDL which defines aFlag as type ""xs:boolean"". And, it also occurs with JaxenXPathTemplate. However, I have not seen it using sources other than DOMSource.

{code}
package com.yodle.misc;

import static org.junit.Assert.*;

import javax.xml.transform.dom.DOMSource;

import org.junit.Test;
import org.springframework.ws.server.endpoint.AbstractDomPayloadEndpoint;
import org.springframework.xml.transform.StringSource;
import org.springframework.xml.xpath.Jaxp13XPathTemplate;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class BugDemo {

	final String request =
		""<someRequest> "" +		
		""	<aDouble>123</aDouble> "" +
		""	<aFlag>false</aFlag> "" +
		""</someRequest> "";
	
	private class Endpoint extends AbstractDomPayloadEndpoint {

		@Override
		protected Element invokeInternal(Element requestElement, Document responseDocument) throws Exception {
			Jaxp13XPathTemplate xPathTemplate = new Jaxp13XPathTemplate();
			DOMSource src = new DOMSource(requestElement);
			
			double aDouble = xPathTemplate.evaluateAsDouble(""aDouble"", src);
			assertEquals(123d, aDouble, 0.01);
			
			boolean aFlag = xPathTemplate.evaluateAsBoolean(""aFlag"", src);
			assertFalse(aFlag);
			
			return null;
		}
		
	};
	
	@Test
	public void demonstrateEvaluateAsBooleanStrangeBehavior() throws Exception {
		Endpoint endPoint = new Endpoint();
		endPoint.invoke(new StringSource(request));
	}
	
}
{code}",,";16/Sep/10 5:09 AM;arjen.poutsma;73740",,,,0,73740,,,0,73740,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-09-01 04:39:23.647,1472,true,gregturn(gregturn),,,,"0|i00m4v:",3631,5021,,,,,,,,"01/Sep/10 4:39 AM;arjen.poutsma;Added formatting","01/Sep/10 5:18 AM;arjen.poutsma;The return value of the evaluateAsBoolean method is determined per the boolean() function defined in the XPath specification. This means that an expression that selects zero nodes will return false, while an expression that selects one or more nodes will return true. An expression that returns a string returns false for empty strings and true for all other strings. An expression that returns a number returns false for zero and true for non-zero numbers.

I've cleared up the javadoc to make this clearer.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#745|https://github.com/spring-projects/spring-ws/issues/745]. ",,,,,,,,,,,,,,
Jax-Ws client does not send Mtom attachments - it inlines them instead.,SWS-637,32920,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Complete,arjen.poutsma,ramo,ramo,25/Aug/10 5:58 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,26/Jan/12 3:28 AM,,,,,,,,,Samples,,,,,0,,,,,,,"The actual problem that I have is that I cannot send attachments with Jax-ws -client. It seems like Mtom is disabled.

In order to see soap request i have had an SoapEnvelopeLoggingInterceptor interceptor  to the spring-ws-servlet.xml

{code:xml}
 <bean class=""org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping"">
    <property name=""interceptors"">
      <list>
         <bean class=""org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"">
           <property name=""logResponse"" value=""false""/>
         </bean>         
      </list>
    </property>
  </bean>
{code} 


{code:xml}
<S:Envelope xmlns:S=""http://schemas.xmlsoap.org/soap/envelope/"">
<S:Body>
  <StoreImageRequest xmlns=""http://www.springframework.org/spring-ws/samples/mtom"">
    <name>logo.png</name>
    <image>iVBORw0K(.....)gg==</image>
  </StoreImageRequest></S:Body>
</S:Envelope>
{code} ","Windows XP professional, Jax-ws RI 2.1.1 JDK 6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-08-25 06:08:21.176,1475,true,gregturn(gregturn),,,,"0|i00m5j:",3634,5024,,,,,,,,"25/Aug/10 6:08 AM;arjen.poutsma;I will need a bit more information than that. You have a JAX-WS client sending to a Spring-WS server? And the Spring-WS server does not seem to handle the MTOM attachments?","25/Aug/10 6:41 AM;ramo;Hi, im talking about the jax-ws client include in the Mtom Sample of spring-ws-2.0.0-M2 without any modification. This client is sending to the spring-ws server include too in the mtom sample.


By the way, the generation of the jax-ws artifacts was not possible directly  because of the absence of the wsdl in the directory.Maybe it is a feature.
{code:xml}
<wsdlUrl>file://${project.basedir}/mtom.wsdl</wsdlUrl>
{code} 


I have point it to the one available at localhost after the start of the Mtom server..Maybe it is related to that even if i dont know how.

Only the mtom-spring-ws-client seems to send the file as an attachment according to the interceptor.","30/Aug/10 7:23 AM;ramo;*First*,It was a bug of the jdk. See  the [Issue 489|https://jax-ws.dev.java.net/issues/show_bug.cgi?id=489].
To make it simple, it works since jdk6u14. Maybe a good idea is to warn the user of this issue with the  [Enforcer Version Range Syntax |http://maven.apache.org/enforcer/enforcer-rules/versionRanges.html]. According to an other thread, previous jdk version might work with some appropriate(s) jars.

*Secondly*, just for the information there is still an outofMemoryError with the binding class generated for the ""png expectedContentTypes"" in the server side with a heavy file (i've tried with 8mo). But i seems not related to spring Ws but to the class itself. With ""application/octet-stream"", it works fine. 

*Finally* for the others users like me : i have test with a AxiomSoapMessageFactory (monitored with Jconsole) with jaxb in your sample, it is far better (going down from 17.5 mo to 5mo for the same 8mo-file)


","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#742|https://github.com/spring-projects/spring-ws/issues/742]. ",,,,,,,,,,,,,
"The name """" is not legal for JDOM/XML namespaces exception in Spring-WS",SWS-636,32889,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Works as Designed,arjen.poutsma,rzacz,rzacz,24/Aug/10 5:14 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Aug/13 1:05 AM,1.5.6,1.5.9,,,,,,,,,,,,0,,,,,,,"This problem is similar to the one raised at https://jira.springframework.org/browse/SWS-497. However, I do believe that the issue is caused by Spring, not JDOM. Since I couldn't track the problem down in the Spring-WS source code, my opinion is based on the outcome of a 'trial and error' exercise.

Here is the exception I'm getting:
{noformat}
org.jdom.IllegalNameException: The name """" is not legal for JDOM/XML namespaces: Namespace URIs must be non-null and non-empty Strings.
        at org.jdom.Namespace.getNamespace(Namespace.java:162)
        at org.jdom.input.SAXHandler.startPrefixMapping(SAXHandler.java:498)
        at org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping(XMLFilterImpl.java:490)
        at org.jdom.transform.JDOMResult$DocumentBuilder.startPrefixMapping(JDOMResult.java:529)
        at weblogic.apache.xalan.transformer.TransformerIdentityImpl.startPrefixMapping(TransformerIdentityImpl.java:939)
        at weblogic.apache.xml.utils.TreeWalker.startNode(TreeWalker.java:358)
        at weblogic.apache.xml.utils.TreeWalker.traverse(TreeWalker.java:190)
        at weblogic.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:335)
        at org.springframework.xml.transform.TransformerObjectSupport.transform(TransformerObjectSupport.java:71)
{noformat}

I carried out a number of tests in the Weblogic 10.3 container against a Spring-WS SOAP service. I initially thought that the problem is caused by the javax.xml.soap.MessageFactory setting in JVM. However, I couldn't get satisfactory results after experimenting with various implementation.

Fortunately, I discovered that the problem can be fixed by declaring the following Spring bean amongst the others in my application:

{code:xml}
<bean id=""messageFactory"" class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory"">
    <property name=""messageFactory"">
        <bean class=""weblogic.xml.saaj.MessageFactoryImpl""/>
    </property>
</bean>
{code}

Moreover, when I swap the configuration with an alternative one, for example:

{code:xml}
<bean id=""messageFactory"" class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory"">
    <property name=""messageFactory"">
        <bean class=""com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl""/>
    </property>
</bean>
{code}

... the problem is apparent again. It is happening regardless of having JVM started with -Djavax.xml.soap.MessageFactory=weblogic.xml.saaj.MessageFactoryImpl. Changing the javax.xml.transform.TransformerFactory JVM setting doesn't help either.


The evidence I presented above clearly indicates that Spring is doing something under the hood that somehow affects the JDOM functionality.

I replicated the problem in Spring-WS 1.5.6 and 1.5.9 and haven't tested the versions in between.","Unix, Windows, JVM 1.6.x, Weblogic 10.3",,,,,,,,,,,,,,,SWS-497,,,,,,,,,,,,,,,,,,,,,24969600,,2010-08-24 05:22:45.676,1476,true,gregturn(gregturn),,,,"0|i00m5r:",3635,5025,,,,,,,,"24/Aug/10 5:22 AM;arjen.poutsma;Added formatting","24/Aug/10 5:30 AM;arjen.poutsma;Thanks for your investigation!

If I understand correctly, the exception no longer occurs when you use the WebLogic SAAJ MessageFactory. Thus, I would argue that that indicates that Spring is doing nothing under the hood that affects JDOM, but rather it seems to be a problem that occurs when using the SUN SAAJ implementation and JDOM.

As I've shown in SWS-497, it is possible to get this exception when using plain JDOM and SAAJ APIs. To me, that still shows that it's either a JDOM bug, a SUN SAAJ bug, or possibly both.

I would love to solve this issue, but I'm afraid there isn't much I can do about it.","24/Aug/10 5:52 AM;rzacz;But how would you explain the fact the probelm is also present if I start JVM with -Djavax.xml.soap.MessageFactory=weblogic.xml.saaj.MessageFactoryImpl and without declaring the messageFactory bean in my application?

Since -D option affects the whole JVM, I wouldn't point at SUN implementation in this case.","25/Aug/10 12:45 PM;rzacz;I managed to track the problem down and found the cause.

When Spring bean initialisation takes place via org.springframework.web.servlet.FrameworkServlet#initServletBean -> org.springframework.ws.transport.http.MessageDispatcherServlet#initFrameworkServlet, which then uses org.springframework.ws.support.DefaultStrategiesHelper in order to initialise a default org.springframework.ws.soap.saaj.SaajSoapMessageFactory bean, the ‘afterPropertiesSet’ method is called on the SaajSoapMessageFactory.

In this default initialisation, the first IF statement of the ‘afterPropertiesSer()’ method is executed:

{code}
                if (SaajUtils.getSaajVersion() >= SaajUtils.SAAJ_13) {
                    if (!StringUtils.hasLength(messageFactoryProtocol)) {
                        messageFactoryProtocol = SOAPConstants.SOAP_1_1_PROTOCOL;
                    }
                    if (logger.isInfoEnabled()) {
                        logger.info(""Creating SAAJ 1.3 MessageFactory with "" + messageFactoryProtocol);
                    }
                    messageFactory = MessageFactory.newInstance(messageFactoryProtocol);
                }
                else if (SaajUtils.getSaajVersion() == SaajUtils.SAAJ_12) {
                    logger.info(""Creating SAAJ 1.2 MessageFactory"");
                    messageFactory = MessageFactory.newInstance();
                }
                else if (SaajUtils.getSaajVersion() == SaajUtils.SAAJ_11) {
                    logger.info(""Creating SAAJ 1.1 MessageFactory"");
                    messageFactory = MessageFactory.newInstance();
                }
                else {
                    throw new IllegalStateException(
                            ""SaajSoapMessageFactory requires SAAJ 1.1, which was not found on the classpath"");
                }
{code}

Since the ‘messageFactoryProtocol’ class property hasn’t been set, it defaults to SOAPConstants.SOAP_1_1_PROTOCOL. When the MessageFactory.newInstance(messageFactoryProtocol) is called, it internally uses javax.xml.soap.SAAJMetaFactory to create an instance of a new MessageFactory object as opposed to the MessageFactory.newInstance() method without any parameters which uses FactoryFinder.find(MESSAGE_FACTORY_PROPERTY) instead.

Therefore, because I set only -Djavax.xml.soap.MessageFactory in the WL start-up script, Spring does not actually use it because the first IF statement is satisfied. But if I add -Djavax.xml.soap.MetaFactory=weblogic.xml.saaj.SAAJMetaFactoryImpl everything works fine.

I also realised that the saaj-impl.jar file (version 1.3) was deployed inside my application’s WAR file. The file contains the ‘META-INF/services’ folder with declared implementations of javax.xml.soap.MetaFactory and javax.xml.soap.MessageFactory. After excluding the file from the WAR file and leaving only -Djavax.xml.soap.MessageFactory=weblogic.xml.saaj.MessageFactoryImpl for JVM, there was no need to define the ‘messageFactory’ Spring bean anymore. However, I would advice to keep both options to ensure the right implementations are used as the final outcome depends on which ‘newInstance’ method of the MessageFactory is called.

Although the problem is solved now, I still don’t understand why JDOM was complaining as it doesn’t seem to have a dependency on SAAJ. Probably it wasn’t happy with the input data it was provided with.

I’ve got only one more question to Arjen: Why does the above code set messageFactoryProtocol to SOAP 1.1 instead of 1.2 when SAAJ 1.3 is found in the first IF statement and the value hasn’t been set before?
","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#741|https://github.com/spring-projects/spring-ws/issues/741]. ",,,,,,,,,,,,,
"Signature validation fails for SOAP messages with attachments, using x509 signature validation",SWS-630,32290,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Works as Designed,tareq,khooke_jira,khooke_jira,19/Jul/10 12:01 PM,21/Aug/13 1:04 AM,10/Jul/21 8:38 AM,21/Aug/13 1:04 AM,2.0 M2,,,,,,,,Security,,,,,1,,,,,,,"Signature validation fails when incoming SOAP request contains a SOAP attachment. Same security config does works for endpoints that do not require attachment in the request and validates successfully. Tested the webservice using SOAPUI 2.0.2 and 3.5 - same result with both.

Log output:
{noformat}
[org.apache.xml.security.signature.Reference] - Expected Digest: xvSaPiwgdejpdynvawsoa0JsaJA=
[org.apache.xml.security.signature.Reference] - Actual Digest: K99cVI6UbMK6Cwa9hs/b9xI1xVs=
[org.apache.xml.security.signature.Manifest] - The Reference has Type 
[org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor] - Could not validate request: The signature or decryption was invalid; nested exception is org.apache.ws.security.WSSecurityException: The signature or decryption was invalid
{noformat}

Message Factory config:
{code:xml}
	<bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"">
	  <property name=""payloadCaching"" value=""true""></property>
        </bean>

Wss4j config:
	<bean id=""x509SecurityInterceptor"" class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
		<property name=""validationActions"" value=""UsernameToken Signature""/>
	    <property name=""validationSignatureCrypto"">
	      <bean class=""org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean"">
	        <property name=""keyStorePassword"" value=""example""/>
	        <property name=""keyStoreLocation"" value=""classpath:keystore-default.jks"" />
	      </bean>
	    </property>
		<property name=""validationCallbackHandler"">
	    	<ref bean=""wss4jUsernameTokenHandler"" />
	    </property>
	</bean>
{code}


XSD for endpoint includes element defined with:
type=""base64Binary""
xmime:expectedContentType=""application/pdf""

{code:xml}
	<complexType name=""Content"">
		<sequence>
			<element name=""Content"" type=""base64Binary"" xmime:expectedContentTypes=""application/pdf""/>
		</sequence>
	</complexType>
{code}

","Spring 3.0.1, Spring Security 3.0.1, Spring WS 2.0.0M2, WSS4J 1.5.8, XMLSec 1.4.3, Weblogic 10.3.3, JRockit 1.6.0_17_r28",,,,,,,,,,,,,,,,,,,,,,,"20/Jul/10 3:36 AM;khooke_jira;signature failure_example.txt;https://jira.spring.io/secure/attachment/16910/signature+failure_example.txt","20/Jul/10 3:35 AM;khooke_jira;signature success for other ws_example.txt;https://jira.spring.io/secure/attachment/16909/signature+success+for+other+ws_example.txt",,,,,,,,,,,,344131200,,2010-07-19 18:57:05.965,1480,true,arjen.poutsma(arjen.poutsma),,,,"0|i01p2f:",9938,9954,http://forum.springsource.org/showthread.php?t=90989,,,,,,,"19/Jul/10 6:57 PM;arjen.poutsma;Added formatting","20/Jul/10 3:35 AM;khooke_jira;Example log4j output for a WS endpoint not using SOAP attachments, but same security config","20/Jul/10 3:36 AM;khooke_jira;Example log4j output for WS endpoint using SOAP attachmments, same security config, but failing when called with SOAPUI 2.0.2 or SOAP 3.5 test client","20/Jul/10 3:37 AM;khooke_jira;I attached 2 snippets of log4j output:
1. calling WS endpoint that does not use SOAP attachments
2. calling WS endpoint using SOAP attachments.

Same security config is used for both - without attachments validates successfully, with attachments fails","01/Aug/10 1:49 PM;iloncar;Prior to signing binary data should be converted to base64 text and inserted into the soap message that is being signed.
Otherwise we're signing the SOAP message without actual content.","12/Aug/10 3:15 PM;khooke_jira;Ivica - is your comment relating to how the Spring Security code should be working internally? I'm assuming this isn't a suggestion for something different we need to be doing in our application code?","14/Aug/10 4:23 AM;iloncar;@Kevin: I believe it's a responsibility of a web service framework. As an end user you should just have a way to configure it.

That said, have you tried XwsSecurityInterceptor?

",,,,,,,,,,,
Spring WS is returning Null Response object from UUM service,SWS-629,32241,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,krapolu,krapolu,15/Jul/10 2:31 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Aug/13 1:02 AM,1.5.8,,,,,,,,,,,,,0,,,,,,,"HOST application is making a web service call to UUM Service. UUM is sending a response message back but the app is receiving null response object... Spring WS is not binding the result to response object correctly. We interecepted the soap message using tcpmon, we can see response in the tcpmon, but the response object in the app is always null. 

Please see the attached project interchange file... ",Websphere,,,,,,,,,,,,,,,,,,,,,,,"15/Jul/10 2:31 AM;krapolu;HOST-Stublesscall-POC.zip;https://jira.spring.io/secure/attachment/16892/HOST-Stublesscall-POC.zip",,,,,,,,,,,,,24969600,,2020-09-23 16:46:55.866,1481,true,gregturn(gregturn),,,,"0|i03bq7:",19442,19917,,,,,,,,"23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#739|https://github.com/spring-projects/spring-ws/issues/739]. ",,,,,,,,,,,,,,,,,
Nullpointer exception in JAXB2 marshaller,SWS-621,31527,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,hsn,hsn,27/May/10 7:30 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,27/May/10 7:36 PM,1.5.8,,,,,,,,Documentation,OXM,,,,0,,,,,,,"I am using Jaxb2 marshaller in groovy. It fails with NPE in marshelsendandreceive if no setClassesToBeBound or setContextPath is called. According to official springws documentation both settings are optional and it should not fail with NPE or at least it should provide some text message what is wrong.
 
def marshaller = new org.springframework.oxm.jaxb.Jaxb2Marshaller()
/*
marshaller.setClassesToBeBound([com.foois.ws.whois.Ipinfo.class,com.foois.ws.whois.Ipinforequest.class] as Class[])
*/
template.setMarshaller(marshaller)
template.setUnmarshaller(marshaller)
			
def ipinfo = new com.foois.ws.whois.Ipinforequest()
ipinfo.setIp(ip.ip)
com.foois.ws.whois.Ipinfo result1 = template.marshalSendAndReceive(""http://127.0.0.1:4344/axis2/services/whois/ipinfo"",ipinfo)

",Grails 1.2.2 + springws plugin 0.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-05-27 19:36:13.674,1487,true,gregturn(gregturn),,,,"0|i01mkv:",9535,9572,,,,,,,,"27/May/10 7:36 PM;arjen.poutsma;The Jaxb2Marshaller does show throw a IllegalArgumentException when afterPropertiesSet() is called (which happens by default when the marshaller is wired up in a Spring context).

In other words, make sure you call afterProperiesSet() when instantiating a marshaller in code. Not just because of this message, but also because it does other initialization.","27/May/10 8:05 PM;hsn;You are right, calling afterProperiesSet() throws IllegalArgumentException. but it should be mentioned in http://static.springsource.org/spring-ws/sites/1.5/reference/html/oxm.html section 8.5.2. Jaxb2Marshaller more clearly what configuration is required.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#733|https://github.com/spring-projects/spring-ws/issues/733]. ",,,,,,,,,,,,,,
Unable to configure DefaultEndpoint,SWS-617,31024,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Invalid,arjen.poutsma,gflood,gflood,14/Apr/10 9:14 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,14/Apr/10 9:25 PM,1.5.4,,,,,,,,Core,,,,,0,,,,,,,"The following configuration appears to be correct for using a DefaultEndpoint but I receive a message which appears to be wrong or at best misleading :-

{code:xml}
<bean class=""org.springframework.ws.server.endpoint.mapp ing.PayloadRootAnnotationMethodEndpointMapping"">
  <property name=""defaultEndpoint"" ref=""defaultEndpoint""/>
</bean>

<bean class=""org.springframework.ws.server.endpoint.adap ter.GenericMarshallingMethodEndpointAdapter"">
  <constructor-arg ref=""marshaller"" />
</bean>

<oxm:xmlbeans-marshaller id=""marshaller"" />

<bean id=""defaultEndpoint"" class=""gf.MyDefaultEndpoint"">
</bean>
{code}

and MyDefaultEndpoint :-

{code}
public class MyDefaultEndpoint implements PayloadEndpoint {

public Source invoke(Source arg0) throws Exception {
...
}
}
{code}

When I run this I recieve the error :-

org.springframework.ws.soap.client.SoapFaultClient Exception: No adapter for endpoint [com.bskyb.common.communication.interaction.endpoin t.DefaultEndpoint@7a5a7a5a]: Does your endpoint implement a supported interface like MessageHandler or PayloadEndpoint?

As you can see my class does implement PayloadEndpoint. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-04-14 21:23:06.01,7516,true,gregturn(gregturn),,,,"0|i03brb:",19447,19923,http://forum.springsource.org/showthread.php?t=55561,,,,,,,"14/Apr/10 9:23 PM;arjen.poutsma;Added formatting.","14/Apr/10 9:25 PM;arjen.poutsma;By adding the GenericMarshallingMethodEndpointAdapter, you effectively override all the default EndpointAdapters, which results in the endpoint not being recognized as supported.

You can add support for the PayloadEndpoint by adding a org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapter to your spring context, then it should work.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#732|https://github.com/spring-projects/spring-ws/issues/732]. ",,,,,,,,,,,,,,
WebServiceTemplate has a bad way to createConnection,SWS-616,30922,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,arjen.poutsma,charile,charile,07/Apr/10 3:34 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,08/Apr/10 1:47 AM,,,,,,,,,Core,,,,,0,,,,,,,"When using WebServiceTemplate to send soapmessage to a same uri,every time it creates a new WebServiceConnection .
So if i send 10000 times soap message to a same uri 'http://localhost:8080/echo/echoService',the method createConnection() is invoked 10000 times.
But i want it just invokes the method createConnection() one time ,not 10000 times.
Is this the WebServiceTemplate bug ?

the WebServiceTemplate code is :
connection = createConnection(URI.create(uriString));


Code:

	public Object sendAndReceive(String uriString, WebServiceMessageCallback requestCallback,
			WebServiceMessageExtractor responseExtractor) {
		Assert.notNull(responseExtractor, ""'responseExtractor' must not be null"");
		Assert.hasLength(uriString, ""'uri' must not be empty"");
		TransportContext previousTransportContext = TransportContextHolder.getTransportContext();
		WebServiceConnection connection = null;
		try {
			connection = createConnection(URI.create(uriString));// <--- this is here
			TransportContextHolder.setTransportContext(new DefaultTransportContext(connection));
			MessageContext messageContext = new DefaultMessageContext(getMessageFactory());
			
			return doSendAndReceive(messageContext, connection, requestCallback, responseExtractor);
		} catch (TransportException ex) {
			throw new WebServiceTransportException(""Could not use transport: "" + ex.getMessage(), ex);
		} catch (IOException ex) {
			throw new WebServiceIOException(""I/O error: "" + ex.getMessage(), ex);
		} finally {
			TransportUtils.closeConnection(connection);
			TransportContextHolder.setTransportContext(previousTransportContext);
		}
	}

","spring webservice 1.5.9
jdk 1.5.1
tomcate 6.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-04-08 01:47:58.527,7517,true,gregturn(gregturn),,,,"0|i03bsv:",19454,19924,http://forum.springsource.org/showthread.php?t=87349,,,,,,,"08/Apr/10 1:47 AM;arjen.poutsma;the createConnection method doesn't necessarily open a new socket every time it's called. It just returns a WebServiceConnection object, which might or might not (depending on the transport) reuse the original socket.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#731|https://github.com/spring-projects/spring-ws/issues/731]. ",,,,,,,,,,,,,,,
Missing contentId reference to attachments in main part of the response usin SAAJ,SWS-615,30806,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Invalid,arjen.poutsma,gvasquez,gvasquez,30/Mar/10 2:57 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,06/Oct/11 1:49 AM,1.5.7,1.5.9,,,,,,,,,,,,0,,,,,,,"I'm not getting the reference contentID on the response's root part, it's only in the attachment part, so it can't be referenced.

Sample response and java code could be found at http://forum.springsource.org/showthread.php?t=86985","Tested on Windows 7 and Red Hat Enterprise Linux Server release 5 (Tikanga), both in JBoss 4.2 and IBM WAS 6.1
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2011-10-06 01:49:59.878,7518,true,gregturn(gregturn),,,,"0|i03bk7:",19415,19925,,,,,,,,"06/Oct/11 1:49 AM;arjen.poutsma;SAAJ does not create references to the content-ID by default, you will have to do so yourself. The spec indicates how:

http://www.w3.org/TR/SOAP-attachments#SOAPReferenceToAttachements","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#730|https://github.com/spring-projects/spring-ws/issues/730]. ",,,,,,,,,,,,,,,
Jaxp13XPathTemplate uses thread-unsafe XPathFactory as field,SWS-613,30743,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ajvanerp,ajvanerp,25/Mar/10 2:31 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,11/May/10 8:10 PM,1.5.9,,,,,,1.5.10,2.0 M2,XML,,,,,0,,,,,,,"The XPathFactory provided by Sun in the JDK mentions it's not threadsafe, see: http://java.sun.com/javase/6/docs/api/javax/xml/xpath/XPathFactory.html. Though it is not clear from documentation nor code which of the methods is not threadsafe. It can either be:
a) The XPathFactory.newInstance(...) method: In which case Jaxp13XPathTemplate should clearly document that it should only be constructed once for an entire application to prvent concurrency bugs
b) Any of the other instance methods: In which case Jaxp13XPathTemplate should not use XPathFactory as a field if it wants to be threadsafe.

This means that at the moment the Jaxp13XPathTemplate deviates from other Spring templates, such as JdbcTemplate etc, as these are all threadsafe.",,";11/May/10 8:09 PM;arjen.poutsma;1140",,,,0,1140,,,0,1140,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-05-11 20:10:08.054,7520,true,gregturn(gregturn),,,,"0|i01ogv:",9841,9868,,,,,,,,"11/May/10 8:10 PM;arjen.poutsma;Fixed in 2.0 and 1.5 branches.","15/Apr/11 1:11 AM;edh;Arjen, can this bug be the cause for http://forum.springsource.org/showthread.php?t=107721 ?","15/Apr/11 1:17 AM;edh;In addition to my previous content ? How can I get a hold (using Maven) of the 1.5.10 release ?","13/Apr/12 9:37 AM;edh;Is this really fixed in the 2.0 branch because in 2.0.x Jaxp13XPathTemplate still has XPathFactory as a field: ""private XPathFactory xpathFactory"".

","01/May/12 4:03 AM;arjen.poutsma;@Edwin: Note that the createXPath() method is synchronized, and that's the only place the field is used. So yes, it is fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#728|https://github.com/spring-projects/spring-ws/issues/728]. ",,,,,,,,,,,
Custom Soap Headers do not get passed to/from ws-client ,SWS-612,30715,Bug,Resolved,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Works as Designed,arjen.poutsma,rstaubit,rstaubit,23/Mar/10 7:50 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Aug/13 1:02 AM,1.5.3,2.0 M1,,,,,,,,,,,,0,,,,,,,".Net clients work fine without any extra coding and Java NetBeans clients using JAX-WS 2.0 work fine if you issue a SetOutboundHeaders() call on the WSBindingProvider interface ...very simple.

Spring-Ws seems to have an enormous amount of capabilities but I can't get this simple task completed. 

Is there a way to inspect the raw result from a call which is supposed to return a custom header so I can inject to other functions which require InBound headers ? Or some similar call like Jax-WS has. 

I've tried 1.5.3 and latest 2.0 Spring-Ws version. 

The ASP.NET C# Web Server is using this pattern : 
http://books.google.com/books?id=-K8SBW_WRpUC&pg=PA1191&lpg=PA1191&dq=asp.net++SoapHeader+ticket&source=bl&ots=htjbda9Ubi&sig=rtcH99zIokrTgQQ6HQjpH3yaFhY&hl=en&ei=QRqpS67ABoeXtgeXysC6AQ&sa=X&oi=book_result&ct=result&resnum=4&ved=0CBIQ6AEwAw#v=onepage&q=asp.net%20%20SoapHeader%20ticket&f=false

From client you issue a Login() call, get back Ticket Header then automatically pass to other functions while port is still open. 
Thanks very much for any help you can provide !",Spring-ws client using AxiomSoapMessageFactory seems to drop incoming Soap Header from ASP.NET 3.5 C# Web Service running on Win 2003 R2 Server.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-05-30 19:23:15.798,7521,true,gregturn(gregturn),,,,"0|i03bzj:",19484,19927,http://static.springsource.org/spring-ws/sites/1.5/,,,,,,,"30/May/10 7:23 PM;arjen.poutsma;I think you're looking for the ClientInterceptor interface. You can plug it into the WebServiceTemplate, and get access to the whole response Soap message.","23/Jun/11 8:12 AM;cpilsworth;@Arjen, I am using the MockWebServiceClient for testing, is there any way of setting headers or using a such a ClientInterceptor in this scenario?","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#727|https://github.com/spring-projects/spring-ws/issues/727]. ",,,,,,,,,,,,,,,
NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.,SWS-607,30524,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Complete,arjen.poutsma,rixsyn,rixsyn,10/Mar/10 6:33 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,30/May/10 7:05 PM,,,,,,,,,,,,,,0,,,,,,,"I am facing the following exception when tring to call webservice and clien is using spring ws
'NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.'
org.springframework.ws.client.WebServiceTransformerException: Transformation error: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.; nested exception is javax.xml.transform.TransformerException: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:572)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:388)
	at com.syngenta.toolbox.kde.service.KdeClientImpl.doWebServiceCall(KdeClientImpl.java:147)
	at com.syngenta.toolbox.kde.service.KdeClientImpl.execute(KdeClientImpl.java:67)
	at com.syngenta.genie.core.blast.service.Impl.KdeBlastServiceImpl.blastSearch(KdeBlastServiceImpl.java:45)
	at com.syngenta.genie.core.blast.service.Impl.BlastServiceImpl.blastSearch(BlastServiceImpl.java:58)
	at com.syngenta.genie.core.blast.controller.BlastController.blastSearchSubmit(BlastController.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.servlet.mvc.multiaction.MultiActionController.invokeNamedMethod(MultiActionController.java:473)
	at org.springframework.web.servlet.mvc.multiaction.MultiActionController.handleRequestInternal(MultiActionController.java:410)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:269)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:264)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:107)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:72)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:110)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:125)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:217)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:229)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.securechannel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:138)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:148)
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:98)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:172)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:174)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:875)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)
	at java.lang.Thread.run(Unknown Source)
Caused by: javax.xml.transform.TransformerException: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(Unknown Source)
	at org.springframework.ws.client.core.WebServiceTemplate$5.doWithMessage(WebServiceTemplate.java:459)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:535)
	... 55 more
Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
	at com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.checkNamespaceWF(Unknown Source)
	at com.sun.org.apache.xerces.internal.dom.AttrNSImpl.setName(Unknown Source)
	at com.sun.org.apache.xerces.internal.dom.AttrNSImpl.<init>(Unknown Source)
	at com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.createAttributeNS(Unknown Source)
	at com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl.createAttributeNS(SOAPDocumentImpl.java:161)
	at com.sun.org.apache.xerces.internal.dom.ElementImpl.setAttributeNS(Unknown Source)
	at com.sun.xml.messaging.saaj.soap.impl.ElementImpl.setAttributeNS(ElementImpl.java:1213)
	at com.sun.org.apache.xalan.internal.xsltc.trax.SAX2DOM.startElement(Unknown Source)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(Unknown Source)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.characters(Unknown Source)
	at org.jdom.output.SAXOutputter.characters(SAXOutputter.java:1155)
	at org.jdom.output.SAXOutputter.elementContent(SAXOutputter.java:1100)
	at org.jdom.output.SAXOutputter.elementContent(SAXOutputter.java:1067)
	at org.jdom.output.SAXOutputter.element(SAXOutputter.java:897)
	at org.jdom.output.SAXOutputter.elementContent(SAXOutputter.java:1093)
	at org.jdom.output.SAXOutputter.elementContent(SAXOutputter.java:1067)
	at org.jdom.output.SAXOutputter.element(SAXOutputter.java:897)
	at org.jdom.output.SAXOutputter.output(SAXOutputter.java:621)
	at org.jdom.transform.JDOMSource$DocumentReader.parse(JDOMSource.java:476)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(Unknown Source)
Please help ASAP","java1.5
spring ws
tomcat 5.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-05-30 19:05:22.685,7525,true,gregturn(gregturn),,,,"0|i03bt3:",19455,19930,,,,,,,,"30/May/10 7:05 PM;arjen.poutsma;These kind of errors are typically due to outdated versions of Xerces and or Xalan being used. In your case, you use the Xerces/Xalan bundled with  part of JDK 1.5: you might want to try updating them.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#723|https://github.com/spring-projects/spring-ws/issues/723]. ",,,,,,,,,,,,,,,
SpringPlainTextPasswordValidationCallbackHandler should import from Spring 3.0 packages,SWS-606,30488,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,olo,olo,08/Mar/10 12:10 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,08/Mar/10 12:25 AM,2.0 M2,,,,,,,,Security,,,,,0,,,,,,,"The current trunk version of SpringPlainTextPasswordValidationCallbackHandler looks like this: https://fisheye.springsource.org/browse/spring-ws/trunk/security/src/main/java/org/springframework/ws/soap/security/wss4j/callback/SpringPlainTextPasswordValidationCallbackHandler.java?r2=1570&u=3&r1=1570

Its imports haven't been updated for Spring 3.0 and still list old, Spring 2.5 packages. Some of those imports:

{code}
26	import org.springframework.security.Authentication;
27	import org.springframework.security.AuthenticationException;
28	import org.springframework.security.AuthenticationManager;
{code}

They should be org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException, org.springframework.security.authentication.AuthenticationManager etc.


In general, most imports in this class need updating.",,,,,,,,,,,,,,,,SWS-559,,,,,,,,,,,,,,,,,,,,,24969600,,2010-03-08 00:25:01.909,7526,true,gregturn(gregturn),,,,"0|i01p2v:",9940,9956,,,,,,,,"08/Mar/10 12:25 AM;arjen.poutsma;These aren't Spring 3.0 packages, but Spring Security packages. The upgrade to Spring Security 3 is planned for 2.0 M1, see SWS-559.","21/May/10 3:05 AM;steveburke;This issues still exists in 2.0.0.M1","21/May/10 4:58 AM;arjen.poutsma;Correct, as we didn't upgrade as part of M1, but will in M2, coming next week.","24/May/10 8:34 AM;drakeron;Arjen,  We need this capability and are in a holding pattern.  Are you still on course to deliver this week?  Do you have a specific release date yet?  thank you.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#722|https://github.com/spring-projects/spring-ws/issues/722]. ",,,,,,,,,,,,
XsdBasedSoap11Wsdl4jDefinitionBuilder throws BeanCreationException while generating wsdl,SWS-601,30000,Defect,Open,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,,arjen.poutsma,regulaprasad,regulaprasad,08/Feb/10 9:11 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,,1.5.8,,,,,,,,,,,,,0,,,,,,,"While I was trying to generate it is throwing an exception. I am pasting the exception below 

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'echo' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Cannot create inner bean 'org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder#1498436' of type [org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder] while setting bean property 'builder'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder#1498436' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Invocation of init method failed; nested exception is org.xml.sax.SAXParseException: The processing instruction target matching ""[xX][mM][lL]"" is not allowed.   

The bean definition in my servlet is as below
  <bean id=""echo"" class=""org.springframework.ws.wsdl.wsdl11.DynamicWsdl11Definition"">  
        <property name=""builder"">  
            <bean  
                class=""org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder""> //Error at this line  
                <property name=""schema"" value=""/WEB-INF/echo.xsd""/>  
                <property name=""portTypeName"" value=""Echo""/>  
                <property name=""locationUri"" value=""http://localhost:8080/echoservice/""/>  
            </bean>  
        </property>  
    </bean> 

","Windows, NetBeans",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-06-30 21:22:33.859,7531,true,gregturn(gregturn),,,,"0|i03btz:",19459,18965,,,,,,,,"30/Jun/10 9:22 PM;olo;Are you using unmodified WEB-INF/echo.xsd from the samples? Or did you change something in it?

Is it possible that there are any characters before the XML prolog (the ""<?xml version=""1.0"" encoding=""UTF-8""?>"")?

E.g. some UTF-8 editors insert a BOM character at the beginning of the file - use a hex editor to see the actual byte content, the file should start with bytes: 3c 3f 78 6d 6c, which correspond to ""<?xml"".
","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#717|https://github.com/spring-projects/spring-ws/issues/717]. Please visit the GitHub issue to view further activity, add comments, or subscribe to receive notifications.",,,,,,,,,,,,,,,,
SoapUtils.setActionInContentType incorrectly replaces existing actions,SWS-595,29648,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,tareq,tareq,13/Jan/10 7:40 AM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,13/Jan/10 7:48 AM,1.5.8,,,,,,1.5.9,,Core,,,,,0,,,,,,,"If a SOAP action already exists, the new action is set without the leading ""action="".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,2012-05-04 07:03:31.395,7537,false,arjen.poutsma(arjen.poutsma),,,,"0|i0409r:",23418,19937,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,,,,,
"SchemaCollection issue when XSD files are in the classpath, in different JAR artifacts",SWS-594,29604,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,obillard,obillard,11/Jan/10 8:40 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,11/Jan/10 8:55 PM,1.5.8,,,,,,1.5.9,,XML,,,,,0,,,,,,,"Problem described in issue SWS-413 has partially been fixed.

Given XSD-A importing XSD-B, both in the classpath, the fix works if XSD-A and XSD-B are in the same classpath location (both in WEB-INF/classes, or in the same JAR file), but it does not work if the XSD files are located in different JAR files, for example.

The provided patch fixes this : if the imported XSD could not be resolved with the same base URI, we must keep searching in the classpath, (last statements should not be in an else block).","Spring WS 1.5.8, WAR file deployed in either Tomcat or Jetty.",";11/Jan/10 8:54 PM;arjen.poutsma;120",,,,0,120,,,0,120,,,,,,,,,,,,,"11/Jan/10 8:42 PM;obillard;CommonsXsdSchemaCollection.diff;https://jira.spring.io/secure/attachment/16083/CommonsXsdSchemaCollection.diff",,,,,,,,,,,,,24969600,,2010-01-11 20:55:11.231,7538,true,gregturn(gregturn),,,,"0|i01ohb:",9843,9870,,,,,,,,"11/Jan/10 8:42 PM;obillard;Patch fixing this issue in a simple way.","11/Jan/10 8:55 PM;arjen.poutsma;Applied the patch, thanks!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#711|https://github.com/spring-projects/spring-ws/issues/711]. ",,,,,,,,,,,,,,
EOFException in HttpInvoker based web services,SWS-593,29452,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Invalid,arjen.poutsma,dtrprasad,dtrprasad,29/Dec/09 11:24 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,03/Jan/10 6:16 PM,2.0 GA,,,,,,,,,,,,,0,,,,,,,"I had deployed a simple service details are given

SimpleIf.java
{code}
package com.htc.spring25.webs.httpinvoking;
public interface SimpleIf {    
 public String getDetails(String person, String hno);
}
{code}

implementation
{code}
package com.htc.spring25.webs.httpinvoking;
import java.rmi.RemoteException;
import java.util.Map;
import java.util.HashMap;
public class HttpInvokerService implements SimpleIf {
  Map<String, String> persons;
    
  public HttpInvokerService() {
    super(); 
    persons = new HashMap<String, String>();
    addDetails(""santosh"",""21b"",""Works in TNPL as supervisor"");
    addDetails(""velavan"",""34s"",""Manages a xerox shop in Chromepet"");
    addDetails(""vetrivel"",""42h"",""Manages a STD booth in Pallavaram"");
    addDetails(""murugan"",""6w"",""Works in TNPL as Officer"");
    addDetails(""Madivanan"",""26b"",""Works in TN secretariat in Home ministry dept"");
    addDetails(""thirunavakarasu"",""18u"",""Works in TCS as developer"");
    addDetails(""Muthu kumar"",""22J"",""manages a net cafe at Guindy"");
    addDetails(""vaigai sarala"",""64f"",""Works as officer in SBI in poonamalee"");
    
  }

private  void addDetails(String name, String hno,String profession) {
    String key = name.toLowerCase()+""_""+hno.toLowerCase();
    persons.put(key, profession);
  }    
  @Override
  public String getDetails(String person, String hno)  {
    String ret = ""not available"";
    String key = person.toLowerCase()+""_""+hno.toLowerCase();
    if(persons.containsKey(key)) {
     ret = persons.get(key);  
  }
    return ret;
 }
}
{code}

web.xml
{code:xml}
<web-app xmlns=""http://java.sun.com/xml/ns/javaee""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
   version=""2.5"">
   <context-param>
     <param-name>contextConfigLocation</param-name>
     <param-value>      

classpath*:com/htc/spring25/webs/httpinvoking/applicationContext.xml 

/WEB-INF/simpService-servlet.xml
     </param-value>
   </context-param>   
  <listener>
   <listener-class>
org.springframework.web.context.ContextLoaderListener
</listener-class>
  	</listener>
   <servlet>
      <servlet-name>simpService</servlet-name>
      <servlet-class>
        org.springframework.web.servlet.DispatcherServlet
      </servlet-class>
      <load-on-startup>2</load-on-startup>
   </servlet>
    <servlet-mapping>
        <servlet-name>simpService</servlet-name>
        <url-pattern>/http/*</url-pattern>
    </servlet-mapping>
</web-app>
{code}

applicationContext.xml
{code:xml}
<beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xmlns:aop=""http://www.springframework.org/schema/aop""
xmlns:lang=""http://www.springframework.org/schema/lang""
xmlns:tx=""http://www.springframework.org/schema/tx""
xmlns:util=""http://www.springframework.org/schema/util""
xsi:schemaLocation=""
http://www.springframework.org/schema/lang 
http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">
  <bean id=""invokerService""
     class=""com.htc.spring25.webs.httpinvoking.HttpInvokerService"" />     
</beans>
{code}

simpService-servlet.html
{code:xml}
<beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xmlns:aop=""http://www.springframework.org/schema/aop""
xmlns:lang=""http://www.springframework.org/schema/lang""
xmlns:tx=""http://www.springframework.org/schema/tx""
xmlns:util=""http://www.springframework.org/schema/util""
xmlns:context=""http://www.springframework.org/schema/context""
xsi:schemaLocation=""
http://www.springframework.org/schema/lang 
http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">

<bean name=""/simpService""
class=""org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter"">
  <property name=""service"" ref=""invokerService"" />
  <property name=""serviceInterface""
     value=""com.htc.spring25.webs.httpinvoking.SimpleIf"" />     
 </bean>
</beans>
{code}

i configured the context in tomcat and when i looked for
http://localhost:10080/sprex/http/simpService?WSDL
or
http://localhost:10080/sprex/http/simpService

the browser is showing an error
exception

{noformat}
java.io.EOFException
	java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2281)
	java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2750)
	java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:780)
	java.io.ObjectInputStream.<init>(ObjectInputStream.java:280)
	org.springframework.core.ConfigurableObjectInputStream.<init>(ConfigurableObjectInputStream.java:47)
	org.springframework.remoting.rmi.CodebaseAwareObjectInputStream.<init>(CodebaseAwareObjectInputStream.java:81)
	org.springframework.remoting.rmi.RemoteInvocationSerializingExporter.createObjectInputStream(RemoteInvocationSerializingExporter.java:105)
	org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter.readRemoteInvocation(HttpInvokerServiceExporter.java:115)
	org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter.readRemoteInvocation(HttpInvokerServiceExporter.java:96)
	org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter.handleRequest(HttpInvokerServiceExporter.java:73)
	org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:49)
	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
{noformat}

will anyone tell where the error is?","windows Vista/XP,tomcat6.0.20",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-01-03 18:12:56.223,7539,true,gregturn(gregturn),,,,"0|i03bs7:",19451,19938,,,,,,,,"03/Jan/10 6:12 PM;arjen.poutsma;Added formatting.","03/Jan/10 6:16 PM;arjen.poutsma;You are trying to retrieve the WSDL of a HttpInvoker service, or performing an HTTP GET on it at least. This is not the way the HTTP invokers work; they use a POST with serialized data, and certainly don't support WSDLs.

See http://static.springsource.org/spring/docs/3.0.x/reference/html/remoting.html#remoting-httpinvoker","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#710|https://github.com/spring-projects/spring-ws/issues/710]. ",,,,,,,,,,,,,,
Version not specified for build and reporting plugins,SWS-592,29331,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,sslavic,sslavic,19/Dec/09 9:29 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,05/Jan/10 10:33 PM,1.5.8,,,,,,1.5.9,,,,,,,0,,,,,,,"Several build and reporting plugins used in SWS POMs do not have version specified, which makes builds to be not reproducible. Future Maven versions might no longer support building such malformed project.",,";05/Jan/10 10:33 PM;arjen.poutsma;1080",,,,0,1080,,,0,1080,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:28.104,7540,true,gregturn(gregturn),,,,"0|i0409z:",23419,19939,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#709|https://github.com/spring-projects/spring-ws/issues/709]. ",,,,,,,,,,,,,,,,
"debug logging will hide parsing error on non well formed xml, and continue processing with incomplete xml",SWS-588,29221,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,woltere,woltere,13/Dec/09 2:07 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,06/Jan/10 1:34 AM,1.5.7,,,,,,1.5.9,,XML,,,,,0,,,,,,,"logResponse will call toString() on the message, this will trigger the parsing of the xml, parsing exceptions are suppressed by toString. However the message (SaajSoapMessage) will be partially filled.
When getEnvelope() is called the incomplete message will be returned without any error or exception.
","java version ""1.6.0_07""
Windows & Linux",";06/Jan/10 1:34 AM;arjen.poutsma;840",,,,0,840,,,0,840,,,,,,,,,,,,,"13/Dec/09 2:09 PM;woltere;MessageLazyLoadTest.java;https://jira.spring.io/secure/attachment/15999/MessageLazyLoadTest.java",,,,,,,,,,,,,24969600,,2010-01-06 01:34:07.385,7544,true,gregturn(gregturn),,,,"0|i01ohj:",9844,9871,,,,,,,,"13/Dec/09 2:09 PM;woltere;unit test showing the issue.","06/Jan/10 1:34 AM;arjen.poutsma;This issue does not seem to exist anymore in the current 1.5.9 SVN codebase. I get the following exception when the message is loaded:

{noformat}
org.springframework.ws.soap.saaj.SaajSoapMessageException: Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source: 
{noformat}","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#704|https://github.com/spring-projects/spring-ws/issues/704]. ",,,,,,,,,,,,,,
POMs of Spring-WS artifacts at maven central repo wrongfuly contain references to external repositories,SWS-585,29014,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,sslavic,sslavic,29/Nov/09 7:00 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,04/Jan/11 3:46 AM,1.5.8,,,,,,2.0 GA,,,,,,,0,,,,,,,"POMs like [spring-ws-security-1.5.8.pom|http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-security/1.5.8/spring-ws-security-1.5.8.pom] and [spring-ws-parent-1.5.8.pom|http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-parent/1.5.8/spring-ws-parent-1.5.8.pom] contain references to external (non maven central) repositories, so they do not adhere to the rules for deploying artifacts to maven central repository (see ""FAQ and common mistakes"" in official [""Guide to uploading artifacts to the Central Repository""|http://maven.apache.org/guides/mini/guide-central-repository-upload.html]).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-01-04 21:26:22.521,7546,true,gregturn(gregturn),,,,"0|i040a7:",23420,19942,,,,,,,,"04/Jan/10 9:26 PM;arjen.poutsma;I know that this does not adhere to the rules of Maven Central, but I don't really like the alternatives either.

I'd rather have a POM that works out-of-the-box and does not adhere to the rules than one which does adhere to it, but requires a lot of manual downloading and maven install-file foo.

That said, we'll take a look at this for 2.0.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#609|https://github.com/spring-projects/spring-ws/issues/609]. ",,,,,,,,,,,,,,,
Wss4jSecurityInterceptor loosing action from HTTP ContentType header for SOAP V1.2,SWS-582,28695,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,tareq,oldyella,oldyella,12/Nov/09 10:08 AM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,13/Jan/10 11:20 PM,1.5.8,,,,,,1.5.9,,Security,,,,,0,,,,,,,"This is very similar to SWS-416 

While that fixed it for SOAP V1.1, where there is a separate HTTP for SOAPAction, for SOAP V1.2 the action is included in the HTTP Header ContentType

Here's the ContentType Header without the interceptor:

Content-Type: application/soap+xml; charset=utf-8; action=""MySoapAction""

Here's the ContentType Header with the interceptor:

Content-Type: application/soap+xml; charset=utf-8

I'm using the SaajSoapMessageFactory
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,2010-01-12 03:42:47.107,7548,false,arjen.poutsma(arjen.poutsma),,,,"0|i01p33:",9941,9957,,,,,,,,"16/Nov/09 3:24 PM;oldyella;I tried using AxiomSoapMessageFactory and the SOAP Action comes through OK, so it looks related to SaajSoapMessageFactory

It seems to only occur using SOAP V1.2
","12/Jan/10 3:42 AM;tareq;I'm not able to reproduce the issue. I'll commit the corresponding unit tests later (some refactoring is needed). Meanwhile, can you tell me which Saaj provider/version are you using?","12/Jan/10 4:19 AM;oldyella;I'm using it via Maven.

Here's the dependency:

<dependency>
	<groupId>com.sun.xml.messaging.saaj</groupId>
	<artifactId>saaj-impl</artifactId>
	<version>1.3.2</version>
</dependency>

","13/Jan/10 8:03 AM;tareq;I'm still not able to reproduce the issue but:
* I've just fixed a SOAP action related issue (SWS-595). Can you try a recent snapshot to see if it got any better?
* Also, you can take a look at the unit tests that I've added trying to reproduce the issue to compare.

Thanks,
Tareq","13/Jan/10 1:52 PM;oldyella;I tried it with the latest snapshot and got the same result

I looked at your unit tests. I'm invoking the set SoapUtils.setActionInContentType indirectly via SaajSoapMessage.setSoapAction.

Here's what works and doesn't work:

SOAP 1.1, Saaj, wss4j interceptor - works
SOAP 1.2, Saaj, wss4j interceptor - doesn't work
SOAP 1.2, Saaj, xwss interceptor - works
SOAP 1.2, Axiom, wss4j interceptor - works
","13/Jan/10 2:09 PM;tareq;The tests I was referring to are in Wss4jMessageInterceptorSoapActionTestCase.java. Can you take a look to compare to your use case?","13/Jan/10 2:29 PM;oldyella;The main difference I see is that I am using X.509 token rather than username token

Here's the config for my interceptor bean:

	<bean id=""securityInterceptor"" class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
		<property name=""securementActions"" value=""Timestamp Signature""/>
		<property name=""timeToLive"" value=""10""/>
		<property name=""securementSignatureKeyIdentifier"" value=""DirectReference"" />
	</bean>	
","13/Jan/10 11:20 PM;tareq;I'm resolving this as ""cannot reproduce"" for the moment. Feel free to add comments here or to attach test cases and I'll be glad to reopen the issue if necessary.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,
AxiomSoapMessageFactory does not parse application/xop+xml Content-Type properly,SWS-579,28421,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,artbristol,artbristol,22/Oct/09 3:35 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 1:07 AM,1.5.8,,,,,,1.5.9,,,,,,,0,,,,,,,"AxiomSoapMessageFactory#getCharSetEncoding(), when given the following HTTP Content-Type header (which I assume is valid),

application/xop+xml;type=""text/xml; charset=utf-8""

returns a CharSet of 'utf-8""' instead of 'utf-8' (i.e. there is an erroneous double quote at the end of the string).
",Weblogic 10.3,";10/Nov/09 1:07 AM;arjen.poutsma;780",,,,0,780,,,0,780,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-11-10 01:03:52.232,7551,true,gregturn(gregturn),,,,"0|i040an:",23422,19944,,,,,,,,"10/Nov/09 1:03 AM;arjen.poutsma;According to the HTTP spec, that Content-Type header would be incorrect (http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7).  Which particular SOAP stack is creating that header?

At any rate, we we will fix it nonetheless.","10/Nov/09 1:07 AM;arjen.poutsma;Fixed.","11/Nov/09 11:39 PM;artbristol;Thanks for the fix. Both ends of the web service are running Spring-WS SOAP stacks.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#698|https://github.com/spring-projects/spring-ws/issues/698]. ",,,,,,,,,,,,,
Fix manifest to disallow usage of org.springframework.oxm version 3.0.0,SWS-578,28403,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ericeberry,ericeberry,21/Oct/09 4:02 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,05/Jan/10 10:10 PM,1.5.8,,,,,,1.5.9,,Core,,,,,0,,,,,,,"The manifests of bundles org.springframework.ws and org.springframework.ws.java allow the use of org.springframework.oxm;version=""[1.5.8,3.1.0)"".  Since Spring-ws 1.5.8 is incompatible with the OXM library in Spring 3.0, this is incorrect.  The manifest needs to be modified to org.springframework.oxm;version=""[1.5.8,2.0.0)"".","Spring-WS 1.5.8.A, from the EBR (http://www.springsource.com/repository/app/bundle/version/detail?name=org.springframework.ws&version=1.5.8.A)",";05/Jan/10 10:11 PM;arjen.poutsma;5520",,,,0,5520,,,0,5520,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-01-05 22:10:14.268,7552,true,gregturn(gregturn),,,,"0|i02m3z:",15291,14529,,,,,,,,"22/Oct/09 4:23 AM;ericeberry;Just so you catch everything:

org.springframework.ws imports
    org.springframework.oxm;version=""[1.5.8.A, 3.1.0)""
    org.springframework.oxm.mime;version=""[1.5.8.A, 3.1.0)""

org.springframework.ws.java5 imports
    org.springframework.oxm;version=""[1.5.8.A, 3.1.0)""","05/Jan/10 10:10 PM;arjen.poutsma;Should be fixed now, thanks for providing a solution!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#697|https://github.com/spring-projects/spring-ws/issues/697]. ",,,,,,,,,,,,,,
sentMessageTracingLogger  skips request message headerer content ,SWS-576,28334,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,miluch,miluch,13/Oct/09 8:40 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 9:02 PM,1.5.3,1.5.8,,,,,1.5.9,,Core,,,,,0,,,,,,,"In org.springframework.ws.server.MessageDispatcher class sentMessageTracingLogger with trace level does not log the same request message as the one being logged by receivedMessageTracingLogger.
I've noticed that request message having <SOAP-ENV:Header> with wss4j stuff is properly logged by receivedMessageTracingLogger on trace level:

{noformat}
Received request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
<SOAP-ENV:Header>
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" SOAP-ENV:mustUnderstand=""1"">
<wsse:UsernameToken xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" wsu:Id=""UsernameToken-21398464"">
<wsse:Username>876543</wsse:Username>
<wsse:Password Type=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"">a701050a4e03ef54319c319c9a06a895</wsse:Password>
</wsse:UsernameToken>
</wsse:Security>
</SOAP-ENV:Header>
<SOAP-ENV:Body>....</SOAP-ENV:Body></SOAP-ENV:Envelope>] 
{noformat}

Unfortunately sentMessageTracingLogger strips out content of <SOAP-ENV:Header> when logging request message:
{noformat}
Sent response [------=_Part_18_463346590.1255441172093
Content-Type: application/xop+xml; type=""text/xml""; charset=utf-8

<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
<SOAP-ENV:Header/>
<SOAP-ENV:Body>...</SOAP-ENV:Body></SOAP-ENV:Envelope>
------=_Part_18_463346590.1255441172093--] for request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/""><SOAP-ENV:Header>
</SOAP-ENV:Header><SOAP-ENV:Body>...</SOAP-ENV:Body></SOAP-ENV:Envelope>
{noformat}

It seems that wss4j headers are processed by WSS4j Interceptor and then somehow removed from requestMessage. Actually had no time to dig it further and check if custom headres are also stripped out.
Anyway i think that sentMessageTracingLogger  should log original client request message.
I am attaching patch version of MessageDispatcher","Widnows XP, Websphere 6.1.0.19, SAAJ 1.3 (sun implementation), MTOM enabled JAXB2 marshaller.
",";10/Nov/09 9:02 PM;arjen.poutsma;1080",,,,0,1080,,,0,1080,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-11-10 20:32:42.122,7554,true,gregturn(gregturn),,,,"0|i040av:",23423,19945,,,,,,,,"10/Nov/09 8:32 PM;arjen.poutsma;Formatting","10/Nov/09 9:04 PM;arjen.poutsma;Indeed, the WSS4J interceptors change the request content, getting rid of security headers. This conforms to the SOAP spec, which says that a processing node should remove the headers that belong to it after processing.

That said, this issue should be fixed now: we keep a reference to the request content as it came in.","19/Nov/09 9:39 PM;arjen.poutsma;@Jakub,

I think you forgot to attach your patch to this issue. We have some issues with our JIRA installation a few weeks ago, perhaps we lost your patch in the process. But let me know if the solution currently in svn is not working for you. A shame we didn't get to chat at Devoxx.

Cheers,

Arjen","23/Nov/09 3:56 AM;miluch;I am quite sure i successfully attached patch but it does not matter now since it is nearly identical to yours.
I believe your code works as expected but I haven't tried it, since I am still using SWS 1.5.5 ( with my original patch applied).
It is all because of https://jira.springsource.org/browse/SWS-374 and Websphere. Actually i haven't checked myself if newer (above 1.5.5) versions of SWS work on Websphere but according to comments by Sebastien Dubois these do not work. I am planning to check it myself this week.
Back to devoxx: really ashame we had no time to chat but actually i have not seen you at all in Antwerp! I had a chat with Peter Meijer on Tuesday and have seen him quite regularly till Thursday afternoon at SpringSource booth but I haven't seen you at all during whole conference! During one of launch breaks I have met Tareq and have just asked him a couple of SWS related questions. I hope we will have a chat/beer during next SpringOne/geecon.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#696|https://github.com/spring-projects/spring-ws/issues/696]. ",,,,,,,,,,,,
CommonsXsdSchemaCollection: Combination of xs:includes and xs:imports in a schema result in incorrect/overcomplete schema in wsdl generated by DefaultWsdl11Definition,SWS-575,28312,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,gizit,gizit,12/Oct/09 7:53 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Jan/10 8:12 PM,1.5.8,,,,,,1.5.9,,XML,,,,,0,,,,,,,"When using a DefaultWsdl11Definition for wsdl generation I used a CommonsXsdSchemaCollection to combine a set of xsd's. I found out that when a schema uses a mix of xs:imports and xs:includes, the inline schema in the generated wsdl (inside <wsdl:types>) contains an error. Both xs:imports and xs:includes are 'expanded' inline in the generated wsdl, but the xs:include lines are not removed from the inline schema, causing test tools like SOAPUI to fail (included schema's cannot be retrieved).","Not relevant, issue reproduced on both windows/jboss4.3 and Mac OS X 10.5.8/tomcat 6.0.18",";10/Jan/10 8:11 PM;arjen.poutsma;6180",,,7200,1020,6180,85%,7200,1020,6180,,,,,,,,,,,,,"25/Nov/09 4:59 AM;gizit;holidayService.zip;https://jira.spring.io/secure/attachment/15964/holidayService.zip",,,,,,,,,,,,,24969600,,2010-01-10 19:18:51.662,7555,true,gregturn(gregturn),,,,"0|i01ohz:",9846,9873,,,,,,,,"25/Nov/09 4:59 AM;gizit;holidayservice showing the issue","10/Jan/10 7:18 PM;arjen.poutsma;It seems that if I put the include before the import in hr.xsd, all works well.","10/Jan/10 8:12 PM;arjen.poutsma;this should be fixed now.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#695|https://github.com/spring-projects/spring-ws/issues/695]. ",,,,,,,,,,,,,
PayloadValidatingInterceptor with xsdSchemaCollection has incorrect behavior,SWS-573,28044,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Won't Fix,arjen.poutsma,daquan198163,daquan198163,24/Sep/09 1:08 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,04/Jan/10 9:53 PM,1.5.8,,,,,,,,Core,,,,,0,,,,,,,"if config PayloadValidatingInterceptor with xsdSchemaCollection like this:
{code:xml}
<bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
	<property name=""xsdSchemaCollection"" ref=""schemaCollection"" />
        <property name=""validateRequest"" value=""true"" />
	<property name=""validateResponse"" value=""true"" />
</bean>
{code}

will get:ERROR [PayloadValidatingInterceptor] handleResponseValidationErrors (line:238) XML validation error on response: cvc-elt.1: Cannot find the declaration of element 'tns:directquery-response'.

But ,if config  like this:
{code:xml}
<bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
	<property name=""schema"" value=""/WEB-INF/xsds/direct_query_request.xsd"" />
	<property name=""validateRequest"" value=""true"" />
	<property name=""validateResponse"" value=""false"" />
</bean>
<bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
	<property name=""schema"" value=""/WEB-INF/xsds/direct_query_response.xsd"" />
	<property name=""validateRequest"" value=""false"" />
	<property name=""validateResponse"" value=""true"" />
</bean>
{code}
It works well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2010-01-04 21:29:38.866,7556,true,gregturn(gregturn),,,,"0|i03btr:",19458,19946,,,,,,,,"04/Jan/10 9:29 PM;arjen.poutsma;Added formatting.","04/Jan/10 9:53 PM;arjen.poutsma;The reason for this is that a schema collection is effectively loaded in accordance with [http://java.sun.com/javase/6/docs/api/javax/xml/validation/SchemaFactory.html#newSchema(javax.xml.transform.Source\[\])]. Please refer to that link to read the exact semantics as to how W3C schemas are merged into one.","09/Jun/10 11:39 PM;edh;Isn't that a severe limitation, that the factory isn't threadsafe ?
Does this imply that when multiple web service requests arrive simultaneously they all have to synchronize ?
Doesn't that affect performance ?
Any workarounds ?","10/Jun/10 12:32 AM;arjen.poutsma;@Edwin: I don't understand your comment. This issue has nothing to do with thread safety.","10/Jun/10 1:19 AM;edh;I followed the link you've posted and it stated: ""The SchemaFactory class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a SchemaFactory object at any given moment. Implementations are encouraged to mark methods as synchronized to protect themselves from broken clients. ""

Am I confusing things ?
Thanks, Edwin","10/Jun/10 7:27 PM;arjen.poutsma;I fixed the link, it was broken before. 

Yes, the SchemaFactory is not thread safe, but in Spring-WS we create one instance per thread, so there is no issue.","11/Jun/10 2:31 AM;edh;Thanks for clarifying this. 
Thread-safety isn't a problem indeed if in Spring-WS one factory per thread is created. However, isn't creating a factory an expensive operation, or is it very lightweight ?
Is that the only schemafactory we can use, or are there other implementations that are threadsafe, so Spring-WS wouldn't have to create once instance per thread ?","14/Apr/11 10:50 PM;edh;I'm coming back on this issue.
I'm facing a problem which might be related ... or not.
The problem is described in the following post: http://forum.springsource.org/showthread.php?t=107721
Do you think the problem I'm facing is related.
Could you please advice ?
Thanks,
EDH","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#693|https://github.com/spring-projects/spring-ws/issues/693]. ",,,,,,,,
The default encoding is not set to UTF-8 for JibxMarshaller,SWS-572,28035,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,alex.arica@gmail.com,alex.arica@gmail.com,23/Sep/09 7:48 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 8:29 PM,1.5.8,,,,,,1.5.9,,OXM,,,,,0,,,,,,,"In the class ""org.springframework.oxm.jibx.JibxMarshaller"" the default encoding is not set to UTF-8 as specified in the Java-Doc of the method 'setEncoding()'.

Therefore, when we marshal an object with ""org.springframework.oxm.jibx.JibxMarshaller"", the output XML does not contain the encoding attribute:

<?xml version=""1.0""?>

instead of

<?xml version=""1.0"" encoding=""UTF-8""?>",,";10/Nov/09 8:29 PM;arjen.poutsma;60",,,600,540,60,10%,600,540,60,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-09-23 20:36:54.994,7557,true,gregturn(gregturn),,,,"0|i01mlb:",9537,9574,,,,,,,,"23/Sep/09 8:36 PM;arjen.poutsma;I am not sure what you mean. The default encoding for XML is UTF-8 (unless otherwise specified with a BOM), so

{code:xml}
<?xml version=""1.0""?>
{code}

is typically identical to 

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
{code}
","23/Sep/09 8:48 PM;alex.arica@gmail.com;Hi Arjen,

Well basically in the code of ""JibxMarshaller"" the private member ""private String encoding;"" is not explicitly set to UTF-8. 
If I set it specifically to UTF-8 using the setter 'setEncoding()' then the generated XML document contains: encoding=""UTF-8"" otherwise it does not. 
The default behaviour ""JibxMarshaller"" is therefore not what we expect.

Cheers
","23/Sep/09 9:43 PM;alex.arica@gmail.com;For example, in the class ""org.springframework.oxm.castor.CastorMarshaller"", the default encoding is explicitly set to UTF-8 by default. 


","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#692|https://github.com/spring-projects/spring-ws/issues/692]. ",,,,,,,,,,,,,
"Illegal SoapAction header: """,SWS-571,28013,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,janssk1,janssk1,21/Sep/09 2:53 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Sep/09 9:16 PM,1.5.8,,,,,,1.5.9,,Core,,,,,0,,,,,,,"It seems that spring ws generates an illegal soapaction if no explicit soapaction is provided: an unmatched double quote. 

A quick look at the SoapUtils class shows the problem:

{code}
 public static String escapeAction(String soapAction) {
        if (soapAction == null) {
            soapAction = """";
        }
        if (!soapAction.startsWith(""\"""")) {
            soapAction = ""\"""" + soapAction;
        }
        if (!soapAction.endsWith(""\"""")) {
            soapAction = soapAction + ""\"""";
        }
        return soapAction;
    }
{code}

If you pass null as argument, it will return "" instead of """"
",,";21/Sep/09 9:16 PM;arjen.poutsma;600",,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:44.711,7558,true,gregturn(gregturn),,,,"0|i040b3:",23424,19947,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#691|https://github.com/spring-projects/spring-ws/issues/691]. ",,,,,,,,,,,,,,,,
Incorrect certificate check in xwss ,SWS-570,27987,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Deferred,tareq,blackbird,blackbird,18/Sep/09 1:25 AM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,26/Jan/12 3:23 AM,1.5.8,,,,,,,,Security,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,2009-11-10 20:53:20.637,7559,false,arjen.poutsma(arjen.poutsma),,,,"0|i01p3r:",9944,9960,,,,,,,,"18/Sep/09 1:29 AM;blackbird;Incorrect certificate check in xwss in KeyStoreCallbackHandler

in method getCertificateFromTrustStore(issuerName, serialNumber) for in parameters (C=MyC,ST=MyST,L=MyL,O=MyO,OU=MyOU,CN=MyCN, 123) and certificate in trustStore (CN=MyCN,OU=MyOU,O=MyO,L=MyL,ST=MyST,C=MyC, 123)

C=MyC,ST=MyST,L=MyL,O=MyO,OU=MyOU,CN=MyCN don't equal CN=MyCN,OU=MyOU,O=MyO,L=MyL,ST=MyST,C=MyC

","10/Nov/09 8:53 PM;tareq;Hi,

If you're still having the same problem, can you provide some details about your configuration and what you're trying to do?
Thanks.
","11/Nov/09 11:05 PM;blackbird;Sorry for my English 

I tried to understand and find the cause

On the server, the keys are stored in the KeyStore type JKS, and the client key lies in the p12 file (PKCS#12) and as
security provider is used BouncyCastle.


For example, I created the keys with the same parameters CN, OU, O, L, ST, C, and placed them in different containers JKS and PKCS#12.
Then I read the certificates from keyStore and brought them to the screen

{code}
X509Certificate certificate = ((X509Certificate) keyStore.getCertificate(alias));
IssuerDN           : certificate.getIssuerDN().getName()
IssuerX500Principal: certificate.getIssuerX500Principal()
{code}

{noformat}
JKS
IssuerDN           : CN=CN, OU=OU, O=O, L=L, ST=ST, C=RU
IssuerX500Principal: CN=CN, OU=OU, O=O, L=L, ST=ST, C=RU

PKCS12
IssuerDN           : C=RU,ST=ST,L=L,O=O,OU=OU,CN=CN
IssuerX500Principal: CN=CN, OU=OU, O=O, L=L, ST=ST, C=RU
{noformat}

As seen from the example IssuerDN for certificates stored in the JKS and PKCS12 different. 

Then I looked in the file of SignatureProcessor xwss
{code:java}
if (referenceType.equals(MessageConstants.X509_ISSUER_TYPE)){
	X509Certificate xCert = certInfo.getX509Certificate();
	X509IssuerSerial xis = new X509IssuerSerial(secureMessage.getSOAPPart(), xCert.getIssuerDN().getName(),xCert.getSerialNumber());
	...
}
{code}

As you can see he takes IssuerDN, but it is different for certificates stored in the JKS and PKCS12 


All this leads to the fact that in the method X509Certificate getCertificateFromTrustStore (String issuerName, BigInteger serialNumber) class KeyStoreCallbackHandler
checking for issuerName does not pass, with equal serial numbers of certificates
","11/Nov/09 11:15 PM;tareq;Thanks for the details. I'll look into it.","06/Jan/10 7:09 AM;tareq;The issue seems to be in how XWSS handles digital certificates and I'm not sure we can do anything about it, unless you have a suggestion?","10/Jan/10 7:54 PM;blackbird;1. To describe this behavior in the faq for other users' spring-ws
2. As a variation XWSS KeyStoreCallbackHandler add the following workaround

{code:java}

    private String[] dnNameParts = new String[]{""CN"", ""OU"", ""O"", ""L"", ""ST"", ""C""};

    @Override
    protected X509Certificate getCertificateFromTrustStore(String issuerName, BigInteger serialNumber) throws IOException {
        try {
            Field field = ReflectionUtils.findField(KeyStoreCallbackHandler.class, ""trustStore"");
            ReflectionUtils.makeAccessible(field);

            KeyStore trustStore = (KeyStore) ReflectionUtils.getField(field, this);

            String[] checkedIssuer = getDNParts(issuerName);
            String[] trustedIssuer;

            Enumeration aliases = trustStore.aliases();
            while (aliases.hasMoreElements()) {
                String alias = (String) aliases.nextElement();

                Certificate certificate = trustStore.getCertificate(alias);
                if (certificate == null || !""X.509"".equals(certificate.getType())) {
                    continue;
                }

                X509Certificate x509Certificate = (X509Certificate) certificate;
                trustedIssuer = getDNParts(x509Certificate.getIssuerDN().getName());

                BigInteger thisSerialNumber = x509Certificate.getSerialNumber();

                if (thisSerialNumber.equals(serialNumber) && testDN(checkedIssuer, trustedIssuer)) {
                    return x509Certificate;
                }
            }
        } catch (KeyStoreException e) {
            throw new IOException(e.getMessage(), e);
        }

        return null;
    }


    public String[] getDNParts(String issuerName) {
        String[] data = new String[dnNameParts.length];

        String[] issuerNameParts = StringUtils.splitByWholeSeparator(issuerName, "","");
        for (String issuerNamePart : issuerNameParts) {
            String[] temp = StringUtils.splitByWholeSeparator(issuerNamePart, ""="");

            for (int i = 0; i < dnNameParts.length; i++) {
                if (dnNameParts[i].equalsIgnoreCase(temp[0].trim())) {
                    data[i] = temp[1];
                    break;
                }
            }
        }

        return data;
    }

    private boolean testDN(String[] issuer1DN, String[] issuer2DN) {
        for (int i = 0; i < dnNameParts.length; i++) {
            if (StringUtils.isNotEmpty(issuer1DN[i])) {
                boolean success = issuer1DN[i].equalsIgnoreCase(issuer2DN[i]);
                if (!success) {
                    return false;
                }
            }
        }
        return true;
    }

{code}

","26/Jan/10 6:33 PM;tareq;I'll have another look at this when we move to SWS 2.0 to check whether XWSS 3 resolves the issue.","28/Mar/11 3:31 AM;blackbird;you may want to look at the implementation of this test  in  wss4j 1.5.10
org.apache.ws.security.components.crypto.CryptoBase method getAliasForX509Cert (issuer, serialNumber)

and my sample

{code:java}

//import org.bouncycastle.asn1.x509.X509Name;
//import javax.security.auth.x500.X500Principal;


        X500Principal issuerX500Principal = new X500Principal(issuer);

        X509Name issuerX509Name = new 509Name(issuerX500Principal.getName());
        X509Name issuerX509NameRfc2253 = new X509Name(issuer);

        ...


                if (x509Certificate.getSerialNumber().compareTo(serialNumber) == 0) {
                    X509Name certX509Name;

                    certX509Name = new X509Name(x509Certificate.getIssuerX500Principal().getName(X500Principal.RFC1779));
                    if (issuerX509Name.equals(certX509Name)) {
                        return alias;
                    }

                    certX509Name = new X509Name(x509Certificate.getIssuerX500Principal().getName(X500Principal.RFC2253));
                    if (issuerX509NameRfc2253.equals(certX509Name)) {
                        return alias;
                    }
                }


{code}","26/Jan/12 3:23 AM;arjen.poutsma;Closing as Deferred for now, as it's not entirely clear if this issue is still prevalent. We might reopen later.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,
Refactored SaajSoapMessage getImplementation() method hides root cause problems,SWS-569,27969,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,skaffman,skaffman,16/Sep/09 4:31 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 12:52 AM,1.5.8,,,,,,1.5.9,,,,,,,1,,,,,,,"Under 1.5.7, I have a problematic web service that causes the following exception to be thrown from WebServiceTemplate (stack trace edited for brevity):
org.springframework.ws.soap.saaj.SaajSoapEnvelopeException: Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source: 
  at org.springframework.ws.soap.saaj.SaajSoapMessage.getEnvelope(SaajSoapMessage.java:107)
Caused by: javax.xml.transform.TransformerException: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
  at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:449)
  at com.sun.xml.messaging.saaj.util.transform.EfficientStreamingTransformer.transform(EfficientStreamingTransformer.java:411)
  at com.sun.xml.messaging.saaj.soap.EnvelopeFactory.createEnvelope(EnvelopeFactory.java:113)
  ... 35 more
Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
  at org.apache.xml.utils.DOMBuilder.startElement(DOMBuilder.java:322)
  at org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1020)


This exception, while annoying, contains enough information to get on with.

Under 1.5.8, however, the changes to SaajSoapMessage mean that all I get is:

java.lang.IllegalStateException: Could not find SAAJ on the classpath
  at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
  at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:84)
  at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:70)
  at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:168)

This is a weird side-effect, since several prior web service calls have been made without a problem. It's very difficult to reproduce reliably since 1.5.8 is hiding a lot behid the scenes when building this message.",,,,,,,,,,,,,,,,SWS-560,,,,,,,,,,,,,,,,,,,,,24969600,,2009-09-16 05:01:18.624,7560,true,gregturn(gregturn),,,,"0|i040bb:",23425,19948,,,,,,,,"16/Sep/09 5:01 AM;arjen.poutsma;That is unfortunate, we will try and fix this for 1.5.9.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#690|https://github.com/spring-projects/spring-ws/issues/690]. ",,,,,,,,,,,,,,,
DelegatingSoapEndpointMapping produce NPE,SWS-566,27955,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,blackbird,blackbird,14/Sep/09 11:38 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 12:50 AM,1.5.8,,,,,,1.5.9,,Core,,,,,0,,,,,,,"{code:java}
    public EndpointInvocationChain getEndpoint(MessageContext messageContext) throws Exception {
        EndpointInvocationChain delegateChain = delegate.getEndpoint(messageContext);
        return new SoapEndpointInvocationChain(delegateChain.getEndpoint(), delegateChain.getInterceptors(),
                actorsOrRoles, isUltimateReceiver);
    }
{code}

delegate.getEndpoint() can return null ",,";10/Nov/09 12:50 AM;arjen.poutsma;60",,,,0,60,,,0,60,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-11-10 00:50:30.447,7562,true,gregturn(gregturn),,,,"0|i040bj:",23426,19949,,,,,,,,"10/Nov/09 12:50 AM;arjen.poutsma;Fixed. Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#687|https://github.com/spring-projects/spring-ws/issues/687]. ",,,,,,,,,,,,,,,
Payload unmarshalling fails when soap body element attribute references namespace declared in envelope,SWS-565,27945,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,sslavic,sslavic,14/Sep/09 2:21 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Sep/09 6:27 PM,1.5.7,,,,,,,,,,,,,0,,,,,,,"Unmarshalling of a message like [1] fails. A payload source reference, which in SaajSoapMessage case is DOMSource of soap body, is given to unmarshaller. Since attribute namespace is declared in soap envelope, unmarshaller, in my case CastorMarshaller, it seems can not find attribute namespace declaration by just using Source nodes. Not sure if it is spring-ws-core or spring-oxm / CastorMarshaller issue, or if it is spring-ws issue at all (could be Castor 1.2 issue).

Oddly enough unmarshalling of message like [2] works well. Both messages are valid XML documents, and in both cases body content is not a valid XML document, but with difference that in case [1] unmarshalling fails, while in [2] it is successful.


[1] example of message for which unmarshalling fails
{code:xml}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ns1=""http://www.foo.com/bar/ns1/"" xmlns:ns2=""http://www.foo.com/bar/ns2/"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns1:DoSomethingRequest ns2:anAttribute=""attributeValue"" />
   </soapenv:Body>
</soapenv:Envelope>
{code}

[2] example of message for which unmarshalling is successful
{code:xml}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ns1=""http://www.foo.com/bar/ns1/"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns1:DoSomethingRequest />
   </soapenv:Body>
</soapenv:Envelope>
{code}","Sun's SAAJ 1.3 implementation
Java SE 1.5",,,,,,,,,,,,,,,,,,,SWS-523,,,,,,,,,,,,,,,,,24969600,,2009-09-16 18:16:18.997,7563,true,gregturn(gregturn),,,,"0|i03bwv:",19472,19950,,,,,,,,"16/Sep/09 6:16 PM;arjen.poutsma;Added formatting.","16/Sep/09 6:27 PM;arjen.poutsma;This is a Castor issue, I think. As you said, the SaajSoapMessage simple returns a DOMSource wrapping the original SAAJ SOAPElement. In the CastorMarshaller, we simply something like:

{code}
Unmarshaller castorMarshaller = ...
Node node = ((DOMSource)source).getNode();
castorMarshaller.unmarshal(node);
{code}

As stated in SWS-523, a related issue, we don't manipulate the DOM tree at all for getPayloadSource(), since that would result in a lot of overhead which is mostly unnecessary: all the necessary namespace information can be retrieved through querying the DOM tree. The problem described here is that Castor does not seem to do that, while JAXB2 for instance does.
","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#686|https://github.com/spring-projects/spring-ws/issues/686]. ",,,,,,,,,,,,,,
CommonsHttpMessageSender no longer properly shuts down MultiThreadedHttpConnectionManager,SWS-564,27909,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,nblair,nblair,09/Sep/09 3:22 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 12:47 AM,,,,,,,1.5.9,,,,,,,0,,,,,,,"As of revision 1414 of  CommonsHttpMessageSender, the MultiThreadedHttpConnectionManager never gets it's shutdown method invoked.

It appears that the prior revision of CommonsHttpMessageSender implemented DisposableBean, and invoked this properly.
SWS-482 removed the destroy method to cope with a problem report, but the result is worse.

If you use MultiThreadedHttpConnectionManager, you have to call it's shutdown method, or it will block application exit.
For example, I have a class with a main method that uses WebServiceTemplate along with CommonsHttpMessageSender that is invoked via an ant task. The main method will complete, but the JVM cannot exit.

Lets revisit SWS-482 and come up with a means for resolving the issue appropriately.
The reporter of that issue mentions that:
""it happens it is always after we redeploy our application (weblogic 9.2MP2)"".
",,";10/Nov/09 12:44 AM;arjen.poutsma;14700",,,,0,14700,,,0,14700,,,,,,,,,SWS-482,,,,,,,,,,,,,,,,,24969600,,2009-09-10 18:59:19.2,7564,true,gregturn(gregturn),,,,"0|i040br:",23427,19951,,,,,,,,"09/Sep/09 3:33 AM;nblair;The problem reported in SWS-482 is likely due to the following sequence of events (with the prior revision of CommonsHttpMessageSender):

1. Customer tries to redeploy application using WebServiceTemplate and CommonsHttpMessageSender.
2. redeploy results in first stopping application, which shuts down Spring application context.
3. destroy in WebServiceTemplate results in CommonsHttpMessageSender#destroy
4. CommonsHttpMessageSender destroy results in MultiThreadedHttpConnectionManager#shutdown
5. Application shutdown, now started again by the container.

I think the actual solution here isn't to remove DisposableBean (and the MultiThreadedHttpConnectionManager#shutdown) implementation on CommonsHttpMessageSender.

One option might be to alter CommonsHttpMessageSender's afterPropertiesSet method - it should instantiate a new MultiThreadedHttpConnectionManager and supply it to the internal HttpClient.","10/Sep/09 6:59 PM;arjen.poutsma;Good suggestions, I will take a further look at this for 1.5.9.

Thanks!","10/Nov/09 12:47 AM;arjen.poutsma;I reintroduced the shutdown() call, and also solved the problem reported in SWS-482. 

The underlying problem (in SWS-482) was that a connection was retrieved from the CommonsHttpMessageSender, the app context was closed resulting in a the connection pool shutdown, and then the connection was used, resulting in the IllegalStateException. Now, we create a new, single-use connection pool for that connection. Not pretty, but it works.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#685|https://github.com/spring-projects/spring-ws/issues/685]. ",,,,,,,,,,,,,
IllegalStateException: Could not find SAAJ on the classpath after upgrading from 1.5.7 to 1.5.8,SWS-560,27755,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,sslavic,sslavic,27/Aug/09 6:39 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,09/Nov/09 8:33 PM,1.5.8,,,,,,1.5.9,,Core,,,,,1,,,,,,,"Seems there is something wrong in fix for SWS-525 (r1427 on svn), saaj version doesn't get resolved well in case where a SOAP message's envelope has a body with elements that reference a non-declared namespace/prefix like in following:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Header/>
   <soapenv:Body>
      <ndns:DoSomethingRequest/>
   </soapenv:Body>
</soapenv:Envelope>

Such messages would previously (with SWS 1.5.7) result in SOAP Fault with Server faultcode and faultstring:

{{Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.internal.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source:}}


while now (with SWS 1.5.8) a HTTP error 500 is returned with following stack trace:

java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.&lt;init>(SaajSoapMessage.java:70)
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:168)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:387)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)

even though saaj api and impl 1.3 are on the path.",saaj 1.3,";09/Nov/09 8:29 PM;arjen.poutsma;5940",,,,0,5940,,,0,5940,,,,,,,,,,,,,"29/Aug/09 11:01 AM;sslavic;org.springframework.ws.spring-ws-core_SWS-560_fix.patch;https://jira.spring.io/secure/attachment/15651/org.springframework.ws.spring-ws-core_SWS-560_fix.patch","29/Aug/09 3:13 AM;sslavic;org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch;https://jira.spring.io/secure/attachment/15650/org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch",,,,,,,,,,,,24969600,,2009-08-27 18:51:50.006,7567,true,gregturn(gregturn),,,,"0|i040c7:",23429,19953,,,,,,,,"27/Aug/09 6:51 PM;arjen.poutsma;Darn, we should fix this asap.","29/Aug/09 3:13 AM;sslavic;Attaching partial fix (org.springframework.ws.spring-ws-core_SWS-560_partial-fix.patch), which makes SaajSoapMessageException to be thrown, with appropriate error message, from SaajUtils.getSaajVersion(SOAPMessage soapMessage) method if envelope could not be accessed. Unit test included.

Still missing is part where instead of HTTP 500 error a SOAPFault should be returned - couldn't yet find which change made the difference.

In between the 1.5.7 and 1.5.8 versions AbstractWsSecurityInterceptor got new EndpointExceptionResolver exceptionResolver property (as part of resolving SWS-549 issue). Not sure if that change is related to this issue, but shouldn't AbstractWsSecurityInterceptor have some sort of a collection with all exception resolvers instead of just one (like in org.springframework.ws.server.MessageDispatcher), to give all the exception resolvers chance to try to resolve the exception in order they were configured? Similarly to MessagesDispatcher these exception resolvers should probably be automatically picked up ( @Autowired anyone :) ).","29/Aug/09 11:01 AM;sslavic;Here's another more complete patch ( org.springframework.ws.spring-ws-core_SWS-560_fix.patch ) which fixes changes made to AbstractWsSecurityInterceptor in SWS-549 (only single endpointExceptionResolver could be bound, and it had to be manually injected to AbstractWSSecurityInterceptor implementation, and there wasn't a way to have simple validation exception handling get triggered at all (resulting in HTTP 500 instead of SOAPFault in case when sole injected endpoint exception resolver didn't resolve exception and in case there was no endpoint exception resolver configured to the AbstractWSSecurityInterceptor).

To be backward compatible with pre SWS-549 behavior, additional parameter useEndpointExceptionResolvers has been added to AbstractWsSecurityInterceptor which defaults to false, thus by default using simple validation exception handling, but allowing use of endpoint exception resolvers to be configured - all endpoint exception resolvers are ""autowired"" to AbstractWSSecurityInterceptor, but different ones can be injected manually through configuration.

To solve issue where invalid message results in HTTP 500 instead of SOAPFault, I've adjusted WebServiceMessageReceiverObjectSupport.handleConnection method - if any unhandled exception is thrown during handling connection reception (like SaajSoapMessageException when trying to construct SaajSoapMessage), that exception would previously not get handled and only a HTTP 500 error would get returned; now with the patch soap fault with client/sender code is returned, and exception's message is used as fault string (just like in resolving validation exception). This part of the patch should probably be redone better.

Patch includes some javadoc comment typo fixes as well.","16/Sep/09 6:57 PM;arjen.poutsma;Thanks for the patches! Most appreciated!

I'm not entirely sure whether autodetection of exception resolvers for the security interceptor is such a good idea. The main reason for putting that behavior in the MessageDispatcher(Servlet) is that you typically don't configure the dispatcher explicitly, and hence they need to be detected. The interceptor, on the other hand, is always configured explicitly, so I see no harm in configuring the resolvers for it manually. Getting rid of the autodetection also removes the need of the ""useEndpointExceptionResolvers"" property, if I understand correctly.

Do you see my point? And if so, could you change your patch? I could do it too, of course, but I want to make sure you agree first :).

","24/Sep/09 11:26 AM;rmilstead;I tried 1.5.9-SNAPSHOT today and still have a problem similar to this.  The interesting thing is that it works fine when I deploy to a tomcat on my development box, but when I check the same project into svn and it gets built and deployed by hudson, the stack trace below is generated on the server.  Let me know if I can provide additional information, log files, configuration files, etc that may help you.

Note that I am using  <property name=""validationActions"" value=""Signature Timestamp Encrypt"" />   I do have the complete round trip working in my development environment.  This stack trace is masking whatever my real problem is in the alternate deployment environment.

I am also including a bit of my log showing the message sent from the same client to the deployment that works, so you can see the soap header.
{code:title=stack trace|borderStyle=solid}
2009-09-24 17:28:51,897 DEBUG (WebServiceMessageReceiverObjectSupport.java:114) - Accepting incoming [org.springframework.ws.transport.http.HttpServletConnection@2abd079e] to [http://desmond.hrworx.com:8380/formworx-ws/processService]
2009-09-24 17:28:51,923 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Envelope1_1Impl] implements SAAJ 1.3
2009-09-24 17:28:51,927 DEBUG (FrameworkServlet.java:588) - Could not complete request
java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:70)
	at org.springframework.ws.soap.saaj.SaajSoapMessageFactory.createWebServiceMessage(SaajSoapMessageFactory.java:168)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:86)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:86)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
{code}
{code:title=log|borderStyle=solid}
2009-09-24 16:29:28,123 TRACE (MessageDispatcher.java:163) - 
Received request [<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#"">
<SOAP-ENV:Header xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsse:Security xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"">
<wsse:BinarySecurityToken EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" 
ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""8978AAD679C263ABE212538313676254"" 
xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">

...

</xenc:CipherValue></xenc:CipherData></xenc:EncryptedData></SOAP-ENV:Body></SOAP-ENV:Envelope>]
2009-09-24 16:29:28,193 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Header1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:28,230 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.HeaderElement1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:28,234 DEBUG (AbstractAddressingEndpointMapping.java:177) - Request [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData] uses [WS-Addressing 1.0]
2009-09-24 16:29:28,284 DEBUG (AbstractActionEndpointMapping.java:95) - Looking up endpoint for action [http://hrworx.com/TaskList]
2009-09-24 16:29:28,289 DEBUG (MessageDispatcher.java:251) - Endpoint mapping [org.springframework.ws.soap.addressing.server.SimpleActionEndpointMapping@6a0ee670] maps request to endpoint [com.hrworx.formworx.ws.endpoint.TaskListEndpoint@15e3752b]
2009-09-24 16:29:28,290 DEBUG (SoapMessageDispatcher.java:119) - Handling MustUnderstand header {http://www.w3.org/2005/08/addressing}To
2009-09-24 16:29:28,291 DEBUG (Wss4jSecurityInterceptor.java:500) - Validating message [SaajSoapMessage {http://www.w3.org/2001/04/xmlenc#}EncryptedData] with actions [Signature Timestamp Encrypt]
2009-09-24 16:29:29,944 TRACE (SaajUtils.java:189) - SOAPElement [com.sun.xml.internal.messaging.saaj.soap.ver1_1.Body1_1Impl] implements SAAJ 1.3
2009-09-24 16:29:29,945 DEBUG (AbstractLoggingInterceptor.java:160) - 
Request: <xml-fragment xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"" xmlns:xenc=""http://www.w3.org/2001/04/xmlenc#""/>
{code}
","09/Nov/09 8:33 PM;arjen.poutsma;Applied the patch, thanks! Also kudos for finding and fixing those typos in the code and javadoc.

I did not apply the change to WebServiceMessageReceiverObjectSupport, since that would have made the transport layer SOAP-specific, which it currently isn't. I also did not apply the detection of EndpointExceptionResolvers to  AbstractWsSecurityInterceptor, for reasons explained above.  ","17/Nov/09 5:39 PM;rhax;I noticed that this error emanated from a trivial typo on my part.
I had declared an element in my xsd with spaces in the beginning of its name attribute declaration.
like : <element name= "" annoyingElement""  type=""string""/>

and then got exactly the same error,

....SEVERE: Servlet.service() for servlet spring-ws threw exception
java.lang.IllegalStateException: Could not find SAAJ on the classpath
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getImplementation(SaajSoapMessage.java:261)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:84)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.<init>(SaajSoapMessage.java:70)............


 and thereafter landed on this page through search engine.
I've verified and replicated the error so i'm sure abt it now.","17/Nov/09 10:30 PM;arjen.poutsma;@Rahul:

Could you try a recent [snapshot|http://static.springsource.org/spring-ws/sites/1.5/downloads/snapshots.html] and see if that works better?","25/Nov/09 9:40 PM;rhax;Sorry for the delay.
I did try the snapshot.It now has a better error reporting.
Replicating the faulty namespace declaration and making the service call throws a clearer error description :

...SEVERE: Servlet.service() for servlet spring-ws threw exception
org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1231)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:333).......
","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#683|https://github.com/spring-projects/spring-ws/issues/683]. ",,,,,,,
Check User's status in SpringDigestPasswordValidationCallbackHandler ,SWS-555,27696,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,tareq,tareq,23/Aug/09 10:53 AM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,23/Aug/09 9:51 PM,,,,,,,1.5.8,,Security,,,,,0,,,,,,,"SpringDigestPasswordValidationCallbackHandler relies on a UserDetailsService, which simply loads a User and does not verify its status. A check should be added on the combination of isCredentialsNonExpired(), isEnabled(), isAccountNonExpired() and isAccountNonLocked() to reject invalid users. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,2012-05-04 07:03:42.858,7572,false,arjen.poutsma(arjen.poutsma),,,,"0|i01p47:",9946,9962,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,,,,,
Jaxb2Marshaller.createJaxbContext() doesn't respect provided classloader when checking JAXB version,SWS-550,27584,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,miguel,miguel,11/Aug/09 6:31 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Aug/09 10:33 PM,1.5.7,,,,,,1.5.8,,OXM,,,,,0,,,,,,,"Jaxb2Marshaller.createJaxbContext() checks the JAXB version using JaxbUtils

        if (JaxbUtils.getJaxbVersion() < JaxbUtils.JAXB_2) {
            throw new IllegalStateException(
                    ""Cannot use Jaxb2Marshaller in combination with JAXB 1.0. Use Jaxb1Marshaller instead."");
        }

But this is incorrect because JaxbUtils is checking the version by seeing if it can load javax.xml.bind.Binder using the ClassUtils' getDefaultClassLoader. Instead it should use the supplied classloader set via setBeanClassLoader in Jaxb2Marshaller.",,";12/Aug/09 10:33 PM;arjen.poutsma;300",,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:23.463,7577,true,gregturn(gregturn),,,,"0|i01mm7:",9541,9578,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#674|https://github.com/spring-projects/spring-ws/issues/674]. ",,,,,,,,,,,,,,,,
7.3.6.1. Decryption,SWS-546,27485,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,tareq,daquan198163,daquan198163,29/Jul/09 3:10 PM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,03/Aug/09 10:39 PM,,,,,,,1.5.8,,Documentation,,,,,0,,,,,,,"7.3.6.1. Decryption
Decryption of incoming SOAP messages requires Encrypt action be added to the <b>securementActions</b> property.

I think ,it should be:
Decryption of incoming SOAP messages requires Encrypt action be added to the <b>validationActions</b> property.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289785600,,2009-08-03 22:39:42.094,7581,false,arjen.poutsma(arjen.poutsma),,,,"0|i01q2f:",10100,10096,,,,,,,,"03/Aug/09 10:39 PM;tareq;Fixed. Thanks for spotting that.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,,,,
IllegalArgumentException on AxiomSoap11Body.addFault,SWS-545,27459,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jeremyhare,jeremyhare,27/Jul/09 5:11 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,02/Aug/09 7:05 PM,1.5.7,,,,,,1.5.8,,Core,,,,,0,,,,,,,"I have created a custom ExceptionResolver below:

{code:title=MyExceptionResolver .java}
public class MyExceptionResolver  extends AbstractSoapFaultDefinitionExceptionResolver {
	@Override
protected SoapFaultDefinition getFaultDefinition(Object endpoint,
		Exception ex) {		
	QName messageDeliveryFaultQName = new QName(INVOKER_NS_URI, ""MessageDeliveryFault"", ""invoker"");
	QName messageDeliveryFaultQNameNOPREFIX = new QName(INVOKER_NS_URI, ""MessageDeliveryFault"");

	if (ex instanceof WebServiceTransportException) {
		SoapFaultDefinition soapFaultDefinition = new SoapFaultDefinition();
		soapFaultDefinition.setFaultCode(messageDeliveryFaultQNameNOPREFIX );
			
		soapFaultDefinition.setFaultStringOrReason(ex.getMessage());	
		return soapFaultDefinition;
	}
	return null;
}
}
{code}
	
if I use the messageDeliveryFaultQNameNOPREFIX Qname as the fault code I get:

{code}
java.lang.IllegalArgumentException: Could not resolve namespace of code [{urn:www.thiess.com.au:services:eProcurement:QuadremInvoker:v1}MessageDeliveryFault]
	at org.springframework.ws.soap.axiom.AxiomSoap11Body.setValueText(AxiomSoap11Body.java:117)
	at org.springframework.ws.soap.axiom.AxiomSoap11Body.addFault(AxiomSoap11Body.java:92)
	at org.springframework.ws.soap.server.endpoint.AbstractSoapFaultDefinitionExceptionResolver.resolveExceptionInternal(AbstractSoapFaultDefinitionExceptionResolver.java:89)
	at org.springframework.ws.server.endpoint.AbstractEndpointExceptionResolver.resolveException(AbstractEndpointExceptionResolver.java:106)
	at org.springframework.ws.server.MessageDispatcher.processEndpointException(MessageDispatcher.java:311)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:235)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:168)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:230)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:523)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:463)
{code}

The other  Qname with a prefix works fine.","OC4J 10.1.3.3
spring ws 1.5.7
axiom 1.2.8
Java HotSpot(TM) Server VM (build 1.5.0_06-b05, mixed mode)",";02/Aug/09 7:05 PM;arjen.poutsma;780",,,,0,780,,,0,780,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:46.254,7582,true,gregturn(gregturn),,,,"0|i040db:",23434,19959,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#671|https://github.com/spring-projects/spring-ws/issues/671]. ",,,,,,,,,,,,,,,,
http connection thread not released after web service call,SWS-533,27018,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,bqiu,bqiu,22/Jun/09 2:21 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,23/Jun/09 1:48 AM,1.5.7,,,,,,,,,,,,,0,,,,,,,"Hi Spring Web Service team,

We're using Spring Web Service framework to successfully implement one of our own web services. But in the load testing stage, one of our QAs found out one problem, I would like to bring it to your attention. Basically, what he found out is that after load testing, all the http connection threads initiated for serving the web service call will stay unreleased in the Jboss server forever. I tested the sample code from the Spring Web Service, same issue exists there.

We are using JAXB as the marshaller.

When we trace the thread in the jconsole, we information as below:

Name: http-127.0.0.1-8080-1
State: WAITING on org.apache.tomcat.util.net.JIoEndpoint$Worker@f2ad 66
Total blocked: 31 Total waited: 10

Stack trace:
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:474)
org.apache.tomcat.util.net.JIoEndpoint$Worker.awai t(JIoEndpoint.java:415)
org.apache.tomcat.util.net.JIoEndpoint$Worker.run( JIoEndpoint.java:441)
java.lang.Thread.run(Thread.java:595) ","windows xp, JBoss app server",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-06-22 22:07:33.94,7594,true,gregturn(gregturn),,,,"0|i03bon:",19435,19969,http://forum.springsource.org/showthread.php?t=73784,,,,,,,"22/Jun/09 10:07 PM;arjen.poutsma;I can reproduce this on Tomcat 6.0.20 under MacOS X and Windows. However, The stack trace seems to indicate that this is JVM error.

I will investigate it further.","23/Jun/09 1:48 AM;arjen.poutsma;I've just had a chat with Filip Hanik, one of the Tomcat committers, and he assures me that:

{quote}
Those threads are ""idle"" threads waiting for requests. When using the maxThreads attribute in the <Connector> element, the thread pool never 
shrinks, and will keep growing until you hit max.

Depending on version of ab, this could grow the threads cause the closures haven't happened when the next request happens.
*What you are seeing on the Tomcat side is normal.*

In Tomcat 6, you can do something like this instead

<Executor name=""threadpool"" maxThreads=""200"" minSpareThreads=""25"" prefix=""tomcat-thread-""/>
<Connector port=""8080"" executor=""threadpool""/>

And now you have an auto scaling thread pool, it will shrink down to 25
{quote}

Thusly, I'm closing as Invalid.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#659|https://github.com/spring-projects/spring-ws/issues/659]. ",,,,,,,,,,,,,,
CLONE -Namespace prefix in attribute value not resolved correctly,SWS-523,26781,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,dart0,dart0,01/Jun/09 11:25 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,24/Aug/09 8:14 PM,1.5.6,1.5.7,,,,,1.5.8,,Core,,,,,1,,,,,,,"I have following SOAP request. 

{noformat} 
<soapenv:Envelope  xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} 

When umarshalling is called only the payload is passed to the unmarshaller. So DOM equivalent of following is used

{noformat} 
<ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
</ns:getRights>
{noformat} 

Please note that namespace prefix ns is not defined. Usually this is not a problem since in DOM namespaces are already resolved. There is one exception - attribute value. When XmlBeans try to unmarshall the element, they are not able to resolve the namespace and do not work correctly. I assume that Spring-WS should somehow take this situation into account. 

If following request is used (the only difference is position of ns prefix declaration) everything works fine

{noformat} 
<soapenv:Envelope  xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0""> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} ",,";20/Aug/09 9:06 PM;arjen.poutsma;9180",";24/Aug/09 8:15 PM;arjen.poutsma;115200",";21/Sep/09 9:15 PM;arjen.poutsma;23880",,0,148260,,,0,148260,,,,,,,,,SWS-509,,,,"01/Jun/09 11:58 PM;dart0;test-ws-1.0-SNAPSHOT-src.zip;https://jira.spring.io/secure/attachment/15441/test-ws-1.0-SNAPSHOT-src.zip","01/Jun/09 11:28 PM;dart0;test-ws-1.0-SNAPSHOT-src.zip;https://jira.spring.io/secure/attachment/15440/test-ws-1.0-SNAPSHOT-src.zip",,,,,,,,,,,,24969600,,2009-06-18 19:50:55.202,7604,true,gregturn(gregturn),,,,"0|i03idb:",20518,17687,http://forum.springsource.org/showthread.php?t=71673,,,,,,,"01/Jun/09 11:26 PM;dart0;Clone of SWS-509 which in my opinion was not resolved in 1.5.7","01/Jun/09 11:28 PM;dart0;Project with tests. Two valid equivalent SOAP request, one fails, the other one succeeds.","01/Jun/09 11:58 PM;dart0;Test project fixed","18/Jun/09 7:50 PM;janssk1;Another strange effect. If the namespace is defined in both the envelope and the body, the namespace is not passed to the marshaller. 

So: 

<soapenv:Envelope  xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0""> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>

Does not work either. Apparantly, the namespace is automatically removed from the body if it is already define in the envelope.","20/Jul/09 9:13 PM;dart0;JAXB marshaller works in both cases","24/Aug/09 8:14 PM;arjen.poutsma;I've been hacking this for a couple of days now, but I can't find a satisfactory solution. So I'm closing as Won't Fix for now.

The problem here seems to be that XMLBeans will not query the DOM tree for the resolution of the namespace of the attribute value. In the end, what we're doing in the SAAJ message to return the payload source simply comes down to:

{code}
SOAPMessage saajMessage = ...
Element element = saajMessage.getSoapBody();
return new DOMSource(element);
{code}

We don't manipulate the DOM tree at all for getPayloadSource(), since that would result in a lot of overhead which is mostly unnecessary: all the necessary namespace information can be retrieved through querying the DOM tree. The problem described here is that XMLBeans does not do that, which is more a XMLBeans issue than a Spring-WS one.

","04/Jan/10 9:07 PM;dart0;Issue created in XMLBeans project JIRA https://issues.apache.org/jira/browse/XMLBEANS-427","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#649|https://github.com/spring-projects/spring-ws/issues/649]. ",,,,,,,,,
UnsupportedOperationException During Validation After Upgrade From 1.5.6 to 1.5.7,SWS-521,26719,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jrduncans,jrduncans,27/May/09 7:03 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 2:39 AM,1.5.7,,,,,,1.5.9,,,,,,,1,,,,,,,"After upgrading from 1.5.6 to 1.5.7, a test where I have client-side validation turned on failed with the following stack trace.  Reverting to 1.5.6 made the problem disappear:

java.lang.UnsupportedOperationException
        at java.util.AbstractList.add(AbstractList.java:131)
        at java.util.AbstractList.add(AbstractList.java:91)
        at org.springframework.xml.namespace.SimpleNamespaceContext.bindNamespaceUri(SimpleNamespaceContext.java:108)
        at org.springframework.xml.stream.StaxStreamXmlReader.startPrefixMapping(StaxStreamXmlReader.java:171)
        at org.springframework.xml.stream.StaxStreamXmlReader.handleStartElement(StaxStreamXmlReader.java:145)
        at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:80)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
        at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
        at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
        at javax.xml.validation.Validator.validate(Validator.java:127)
        at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
        at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.handleRequest(AbstractValidatingInterceptor.java:171)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:542)
        at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:394)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:384)
",,";30/Jul/09 8:02 PM;arjen.poutsma;300",,,,0,300,,,0,300,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-07-30 19:45:08.67,7606,true,gregturn(gregturn),,,,"0|i040en:",23440,19976,,,,,,,,"30/Jul/09 7:45 PM;arjen.poutsma;Can you supply me with a sample XML payload which triggers this behavior? That would make it a lot easier to solve.","30/Jul/09 8:02 PM;arjen.poutsma;I think I fixed it. Can you try a recent snapshot and see if it works now?","27/Aug/09 1:48 AM;jrduncans;I'm sorry I wasn't able to get around to testing with a snapshot before the 1.5.8 release.  I just tried with the 1.5.8 release and got the same stack trace (with a few line numbers changed in some classes):

java.lang.UnsupportedOperationException
        at java.util.AbstractList.add(AbstractList.java:131)
        at java.util.AbstractList.add(AbstractList.java:91)
        at org.springframework.xml.namespace.SimpleNamespaceContext.bindNamespaceUri(SimpleNamespaceContext.java:115)
        at org.springframework.xml.stream.StaxStreamXmlReader.startPrefixMapping(StaxStreamXmlReader.java:171)
        at org.springframework.xml.stream.StaxStreamXmlReader.handleStartElement(StaxStreamXmlReader.java:145)
        at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:80)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
        at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
        at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
        at javax.xml.validation.Validator.validate(Validator.java:127)
        at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
        at org.springframework.ws.client.support.interceptor.AbstractValidatingInterceptor.handleRequest(AbstractValidatingInterceptor.java:171)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:542)
        at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
        at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:457)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:403)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:394)
        at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:384)
","27/Aug/09 1:50 AM;arjen.poutsma;Can you supply me with a sample XML payload which triggers this behavior? That would make it a lot easier to solve.","27/Aug/09 2:16 AM;jrduncans;The following string triggers the exception:

""<r:GetAllRuleSetsRequest xmlns='http://cid.cormineid.com/service/rules' xmlns:r='http://cid.cormineid.com/service/rules'/>""

The following modification does not:

""<GetAllRuleSetsRequest xmlns='http://cid.cormineid.com/service/rules' />""

So, it looks like it's when there's the same namespace bound to multiple names.  Please let me know if you're able to reproduce, as I plan on just fixing up the XML in these tests to avoid the problem...","10/Nov/09 2:39 AM;arjen.poutsma;Really fixed this time. Could you try a recent snapshot and give it a shot?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#647|https://github.com/spring-projects/spring-ws/issues/647]. ",,,,,,,,,,
"HTTP Accept header field contains invalid type, and omits text/xml",SWS-520,26693,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,nigel.charman,nigel.charman,25/May/09 6:32 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,02/Jun/09 1:29 AM,1.5.7,,,,,,1.5.8,,Core,,,,,0,,,,,,,"The Spring-WS client sends an HTTP Accept  request-header field that is invalid according to the HTTP 1.1 spec.

The header that the Spring-WS client sends is:

   Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2


The fourth media-range in this field does not include the mandatory ""/"" and subtype.

The definition of the Accept header in the HTTP 1.1 spec (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) is:

    Accept         = ""Accept"" "":""
                        #( media-range [ accept-params ] )

       media-range    = ( ""*/*""
                        | ( type ""/"" ""*"" )
                        | ( type ""/"" subtype )
                        ) *( "";"" parameter )


I would have also expected the Accept header field to contain ""text/xml"" explicitly (for SOAP 1.1), and not to Accept ""text/html"", ""image/gif"" or ""image/jpeg"". 


My spring-client-context.xml is:

<?xml version=""1.0"" encoding=""UTF-8""?>

<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd"">

  <bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"">
    <property name=""payloadCaching"" value=""false"" />
  </bean>

  <bean id=""webServiceTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"">
    <property name=""marshaller"" ref=""marshaller"" />
    <property name=""unmarshaller"" ref=""marshaller"" />
    <property name=""defaultUri"" value=""http://localhost:8079/jibx-ws-seismic/soap/quake-service"" />
    <property name=""messageFactory"" ref=""messageFactory""/>
  </bean>

  <!-- A JiBX-based payload marshaller/unmarshaller.  -->
  <bean id=""marshaller"" class=""org.springframework.oxm.jibx.JibxMarshaller"">
    <property name=""targetClass"" value=""com.sosnoski.seismic.common.Query"" />
  </bean>
</beans>
","Spring/WS client, ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-25 20:19:16.492,7607,true,gregturn(gregturn),,,,"0|i02vm7:",16832,15838,,,,,,,,"25/May/09 6:36 PM;nigel.charman;Oops, some of the text got a bit mangled.  The Accept header field sent by Spring-WS client is:

{noformat}
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2

{noformat}

and the text from the HTTP spec should read:

{noformat}
       Accept         = ""Accept"" "":""
                        #( media-range [ accept-params ] )

       media-range    = ( ""*/*""
                        | ( type ""/"" ""*"" )
                        | ( type ""/"" subtype )
                        ) *( "";"" parameter )

{noformat}","25/May/09 8:19 PM;arjen.poutsma;The Accept header is actually set by the JDK HttpURLConnection, so as a workaround you can inject the CommonsHttpMessageSender into the template, instead of the default HttpUrlConnectionMessageSender. 

I'll see whether we can fix this header in 1.5.8","25/May/09 9:48 PM;nigel.charman;The CommonsHttpMessageSender does provide a workaround since it omits the Accept header field .  The spec says ""If no Accept header field is present, then it is assumed that the client accepts all media types."".   I'd suggest that this isn't strictly true, and you may want to consider explicitly setting the Accept types for all the MessageSender implementations.

Thanks for your help.","02/Jun/09 1:29 AM;arjen.poutsma;This is now fixed for Axiom; SAAJ already set the Accept header itself.","08/Nov/09 1:03 PM;nigel.charman;The fix works for me.  Thanks :-)","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#646|https://github.com/spring-projects/spring-ws/issues/646]. ",,,,,,,,,,,
Echo sample application fails to build due to missing dependency,SWS-518,26672,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,dussab,dussab,22/May/09 1:04 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,30/Jul/09 7:42 PM,1.5.7,,,,,,1.5.8,,Samples,,,,,0,,,,,,,"When building the samples applications i receive the following error:

--------------------------------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.springframework.ws:echo
POM Location: C:\downloads\spring-ws-1.5.7\samples\echo\pom.xml
Validation Messages:

    [0]  'dependencies.dependency.version' is missing for stax:stax-api


Reason: Failed to validate POM for project org.springframework.ws:echo at C:\dow
nloads\spring-ws-1.5.7\samples\echo\pom.xml
-----------------------------------------------------------------------------------
The workaround was to add the following entry to the spring-ws-parent-1.5.7.pom

<dependency>
	<groupId>stax</groupId>
	<artifactId>stax-api</artifactId>
	<version>1.0.1</version>
</dependency>
            ","Windows XP, Sun JDK 1.5",";30/Jul/09 7:42 PM;arjen.poutsma;240",,,,0,240,,,0,240,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:29.697,7609,true,gregturn(gregturn),,,,"0|i01n2f:",9614,9651,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#644|https://github.com/spring-projects/spring-ws/issues/644]. ",,,,,,,,,,,,,,,,
Soap response validation errors after update to 1.5.7,SWS-517,26670,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,couzteau,couzteau,22/May/09 10:15 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/Aug/09 9:52 PM,1.5.7,,,,,,1.5.8,,OXM,XML,,,,0,,,,,,,"Upgrade from SpringWS 1.5.6 to 1.5.7 and update.  - No code changes. 
After upgrade error ""java.lang.ArrayIndexOutOfBoundsException: -1"" was thrown during validation. Turning validation off works as a workaround.

my Soap API has 130 calls. Most respones were working fine, not all were tested. I wonder if It might have something to do with the size of the response, all other tested responses were pretty small,  see forum post for bean configurations, errors and response sample.


","Mac OSX 10.5.6, Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b06-284), JBoss 4.2.2GA, Spring 2.5.6, hibernate 3.3.1GA, Maven version: 2.0.9, 

",";12/Aug/09 10:27 PM;arjen.poutsma;14280",";12/Aug/09 10:55 PM;arjen.poutsma;18000",";13/Aug/09 9:52 PM;arjen.poutsma;4020",,0,36300,,,0,36300,,,,,,,,,,,,,"13/Aug/09 3:40 AM;couzteau;GMK-Response.xml;https://jira.spring.io/secure/attachment/15609/GMK-Response.xml","22/May/09 10:16 AM;couzteau;GetMetaDataKeysResonse.xml;https://jira.spring.io/secure/attachment/15407/GetMetaDataKeysResonse.xml","06/Aug/09 6:15 AM;couzteau;codexws.xsd;https://jira.spring.io/secure/attachment/15594/codexws.xsd",,,,,,,,,,,24969600,,2009-08-03 20:01:49.152,7610,true,gregturn(gregturn),,,,"0|i01mmn:",9543,9580,http://forum.springsource.org/showthread.php?p=242464#post242464,,,,,,,"22/May/09 10:16 AM;couzteau;Full response.","03/Aug/09 8:01 PM;arjen.poutsma;I tried to reproduce this locally, but it works for me. 

Could you try a recent snapshot (http://static.springsource.org/spring-ws/sites/1.5/downloads/snapshots.html) and see if this still occurs?

If it does, please attach your XSD schema. I cannot reproduce it fully without the schema...","06/Aug/09 6:14 AM;couzteau;Thanks Arjen - I did try with the latest snapshot and can still reprom, attaching wsdl","06/Aug/09 6:16 AM;couzteau;schema added (not the wsdl).","12/Aug/09 11:01 PM;arjen.poutsma;Thanks for the schema. Even with that, I still can't reproduce it: the GetMetaDataKeysResonse.xml you attached validates fine. See the method testAxiom in 

https://fisheye.springsource.org/browse/spring-ws/trunk/core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadValidatingInterceptorTest.java?r=1435

DId you replace both the XML and the Core module with snapshots? I did some fixes to the XML module which are related...","13/Aug/09 3:32 AM;couzteau;yes, I used the 1.5.8-SNAPSHOT for all of the following maven artefacts:
spring-xml, 
spring-ws-core, 
spring-ws-core-tiger, 
spring-oxm, 
spring-oxm-tiger, 
spring-ws-security.","13/Aug/09 3:40 AM;couzteau;Here is the full response that I logged using Spring-WS 1.5.6 - The previous response was shortened.","13/Aug/09 3:51 AM;couzteau;Tried again - just to make sure - still seeing ArrayIndexOutOfBoundsException: -1 in 

	at com.sun.org.apache.xerces.internal.util.NamespaceSupport.popContext(NamespaceSupport.java:184)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorHandlerImpl.endPrefixMapping(ValidatorHandlerImpl.java:373)
	at org.springframework.xml.stream.StaxStreamXmlReader.handleEndElement(StaxStreamXmlReader.java:186)
	at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:85)
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.process(ValidatorImpl.java:192)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:147)
        .....

I assume that in PayloadValidatingInterceptorTest  you can set    
 private static final String VALID_MESSAGE = ""GMK-Response.xml""; 
to my attached response and then run testAxiom();

Which should repro the problem unless my app is still doing something else - I'd be happy to give you more info - but I don't know what to look for.
","13/Aug/09 8:55 AM;couzteau;FYi: I have run my test suite against the app that uses the 1.5.8-SNAPSHOT of spring web services. There are no other calls that have this problem. ","13/Aug/09 8:58 PM;arjen.poutsma;I can finally reproduce it. It seems to be related to Xerces in the JDK: the test runs fine when using JDK 1.6, but under 1.5, it fails.

As a workaround, you can try upgrading to a recent version of Xerces (thus overriding the com.sun.org.apache.xerces that's built in the JDK). 

I will also investigate further, and see if I can fix this.","13/Aug/09 9:53 PM;arjen.poutsma;I think I've fixed it. Can you try a recent snapshot (as of tonight) and try again?","14/Aug/09 5:22 AM;couzteau;verified fix with latest 1.5.8 Snapshot. (Yay!)

Thank you! much appreciated.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#643|https://github.com/spring-projects/spring-ws/issues/643]. ",,,,
SpringPlainTextPasswordValidationCallbackHandler doesn't override handleUsernameToken,SWS-514,26605,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,craigday,craigday,17/May/09 2:01 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/May/09 10:49 PM,1.5.6,,,,,,1.5.7,,Security,,,,,0,,,,,,,"SpringPlainTextPasswordValidationCallbackHandler overrides handleUsernameTokenUnknown() with code that looks like it should be in handleUsernameToken(),. i.e. the code that actually delegates to Spring Security's AuthenticationManager. 

The result is that the class doesn't work at all, throwing an UnsupportedCallbackException for all authentication attempts. Moving the relevant code to handleUsernameToken() fixes things and all works as expected.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-17 22:07:39.477,7613,true,gregturn(gregturn),,,,"0|i01p67:",9955,9971,,,,,,,,"17/May/09 10:07 PM;tareq;Hi Craig,

Could you share some more details to help understanding the issue? What application context configuration are you using? A sample code would be ideal :)

Thanks,

Tareq","18/May/09 1:46 AM;arjen.poutsma;I think Craig was suggesting that the WSS4J SpringPlainTextPasswordValidationCallbackHandler also override the method handleUsernameToken(). At this point, it only override handleUsernameTokenUnknown. I don't know why this is, can you shine a little light on this, Tareq?","18/May/09 7:14 AM;tareq;Craig,

SpringPlainTextPasswordValidationCallbackHandler's handleUsernameTokenUnknown is called to handle plain text username tokens solely(yes, wss4j's choice of name is a bit unfortunate here).
I suspect you're configuring your security interceptor with a SpringPlainTextPasswordValidationCallbackHandler while the username tokens you're receiving contain _digest_ passwords, in which case you should use SpringDigestPasswordValidationCallbackHandlerTest.

Tareq","19/May/09 10:49 PM;arjen.poutsma;Closing as invalid for now, we can always reopen for 1.5.8","25/May/09 7:45 PM;craigday;Hi Arjen, Tareq,

Ive had a chance to have another look at this and Tareq is correct. I am using plaintext passwords, but at the time my test client must have been generating hashed/digest requests. The auth requests now end up on the very poorly named handleUsernameTokenUnknown() method :) - Thanks for your time.

Cheers
Craig
","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#642|https://github.com/spring-projects/spring-ws/issues/642]. ",,,,,,,,,,,
Namespace prefix in attribute value not resolved correctly,SWS-509,26560,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,dart0,dart0,13/May/09 1:38 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/May/09 10:47 PM,1.5.6,,,,,,1.5.7,,Core,,,,,0,,,,,,,"I have following SOAP request. 

{noformat} 
<soapenv:Envelope  xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} 

When umarshalling is called only the payload is passed to the unmarshaller. So DOM equivalent of following is used

{noformat} 
<ns:getRights> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
</ns:getRights>
{noformat} 

Please note that namespace prefix ns is not defined. Usually this is not a problem since in DOM namespaces are already resolved. There is one exception - attribute value. When XmlBeans try to unmarshall the element, they are not able to resolve the namespace and do not work correctly. I assume that Spring-WS should somehow take this situation into account. 

If following request is used (the only difference is position of ns prefix declaration) everything works fine

{noformat} 
<soapenv:Envelope  xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:getRights xmlns:ns=""http://schemas.qqq.com/wsdl/spi/profile/1.0""> 
            <ns:customerCredential xsi:type=""ns:CustomerCredentialMsisdn"">
               <ns:msisdn>420123456789</ns:msisdn>
            </ns:customerCredential>
      </ns:getRights>
   </soapenv:Body>
</soapenv:Envelope>
{noformat} ",,,,,,,,,,,,,,,,SWS-502,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-19 22:47:20.279,7616,true,gregturn(gregturn),,,,"0|i040ev:",23441,19977,http://forum.springsource.org/showthread.php?t=71673,,,,,,,"19/May/09 10:47 PM;arjen.poutsma;This should be fixed, as it seems to be a duplicate of SWS-502","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#639|https://github.com/spring-projects/spring-ws/issues/639]. ",,,,,,,,,,,,,,,
All-in-one jar contains different namespace in spring.handlers than the module jars,SWS-506,26489,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,novotnyr,novotnyr,05/May/09 9:02 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/May/09 10:37 PM,1.5.6,,,,,,1.5.7,,OXM,,,,,0,,,,,,,"There is an inconsistency between spring.handlers from the all-in-one JAR and the spring-oxm-1.5.6.jar. Using the all-in-one-jar causes the {{Unable to locate Spring NamespaceHandler for XML schema namespace [http://www.springframework.org/schema/oxm]}} exception.

spring-oxm-1.5.6.jar contains the following spring.handlers:
{noformat}
http\://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler
{noformat}

The spring-ws-1.5.6-all.jar contains the spring.handlers:
{noformat}
http://www.springframework.org/spring-ws/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler
http://www.springframework.org/spring-ws/schema/sws=org.springframework.ws.config.WebServicesNamespaceHandler
{noformat}

Note the difference between namespaces (spring-ws/schema/oxm vs schema/oxm). 

Since the documentation emphasizes the first namespace, the all-in-one jar is thus useless without patching the spring.handlers or using the specific namespace in the Spring context XML file.

A workaround is tou use the module JARs instead of all-in-one.

An evident solution is to unify the spring.handlers.",not important,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-12 22:37:46.179,7619,true,gregturn(gregturn),,,,"0|i01mmv:",9544,9581,,,,,,,,"12/May/09 10:37 PM;arjen.poutsma;Oops! Thanks for spotting this, fixed now.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#636|https://github.com/spring-projects/spring-ws/issues/636]. ",,,,,,,,,,,,,,,
Soap envelope rpc-encoded namespace issue ,SWS-502,26404,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,lucacavanna,lucacavanna,23/Apr/09 9:12 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,18/May/09 8:24 PM,1.5.6,,,,,,1.5.7,,Core,XML,,,,0,,,,,,,"I have an rpc-encoded soap envelope containing the declarations of soapenv (xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"") and xsi (xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"") namespaces. 
The first element of the soap body references soapenv in one of his attributes (soapenv:encodingStyle=""http://schemas.xmlsoap.org/soap/encoding/""). Some xml elements in the soap body reference the xsi namespace (xsi:type=""soapenc:string"") as well.
When I try to parse the soap body (extracted from the soap envelope) using JDOM or DOM4J I get a SaxParseException because the soapenv and xsi namespaces are not bound:
org.xml.sax.SAXParseException: The prefix ""soapenv"" for attribute ""soapenv:encodingStyle"" associated with an element type ""ns1:sendMessage"" is not bound.
The issue seems to be creating a org.springframework.xml.transform.StaxSource using XMLStreamReader from Axiom payload element and transforming it to a StreamResult.
I have found a workaround transforming the StaxSource in a JDOMResult instead of a StreamResult.
The problem is the same as using javax.xml.transform.stax.StAXSource; some Axiom developers have suggested me to use OMSource from a snapshot version (https://issues.apache.org/jira/browse/WSCOMMONS-459) instead of StAXSource.
The problem is in org.springframework.ws.soap.axiom.Payload#getSource() that uses XMLStreamReader class: namespace declarations is ok if I use OMSource from the snapshot version of axiom (the abstract method getStreamReader() is never used in this solution).",,,,,,,,,,,,,,,,,,,,,,,,"18/May/09 10:33 PM;lucacavanna;AxiomSoap11MessageFactoryTest.java;https://jira.spring.io/secure/attachment/15398/AxiomSoap11MessageFactoryTest.java","23/Apr/09 9:15 PM;lucacavanna;Payload.java;https://jira.spring.io/secure/attachment/15341/Payload.java","23/Apr/09 9:14 PM;lucacavanna;SpringWsAxiomTestCase.java;https://jira.spring.io/secure/attachment/15339/SpringWsAxiomTestCase.java","23/Apr/09 9:14 PM;lucacavanna;soapresponse.xml;https://jira.spring.io/secure/attachment/15340/soapresponse.xml",,,,,,,,,,24969600,,2009-05-18 01:30:05.572,7621,true,gregturn(gregturn),,,,"0|i01oi7:",9847,9874,,,,,,,,"23/Apr/09 9:14 PM;lucacavanna;Testcase and soap rpc-encoded.","23/Apr/09 9:15 PM;lucacavanna;Solution using OMSource from axiom snapshot instead of StaxSource.","18/May/09 1:30 AM;arjen.poutsma;Unfortunately, using the OMSource is not an option for us, since it always expands the OM tree. As a result, it always caches read elements, and breaks the behavior of AxiomSoapMessageFactories whose with payloadcaching set to false.

I will try to look for another solution.","18/May/09 1:43 AM;arjen.poutsma;I am afraid I can't reproduce this.

Based on the attachments you created, I've added [this test case|https://fisheye.springsource.org/browse/spring-ws/trunk/core/src/test/java/org/springframework/ws/soap/axiom/AxiomSoap11MessageFactoryTest.java?r=1405#l89], using [this test file|https://fisheye.springframework.org/browse/spring-ws/trunk/core/src/test/resources/org/springframework/ws/soap/axiom/SWS-502.xml?r=1405#l13]. The test case works for me, so I am closing this as 'Cannot Reproduce'.

Please, let me know if I am missing something.","18/May/09 5:40 PM;lucacavanna;In your testcase you transform message.getEnvelope().getSource() to a StringResult; since the result contains the whole soap envelope, the namespace declarations are ok.
In my testcase I want to tranform the payload (and not the whole soap envelope) to a StringResult calling message.getPayloadSource(); the result (using version 1.5.6) contains only the soap body. 
Consequently namespace declarations aren't ok and the soap body is not parseable as xml because the soapenv namespace is not bound.
You have to replace message.getEnvelope().getSource() with message.getPayloadSource() to reproduce my issue.

Thanks in advance.","18/May/09 7:34 PM;arjen.poutsma;Thanks, changing to getPayloadSource() did the trick: the test fails now. I will investigate further.","18/May/09 8:24 PM;arjen.poutsma;Fixed! Thanks for spotting this, and providing help in the process.","18/May/09 10:33 PM;lucacavanna;Great! Thank you very much!
I have tested it with new StaxStreamXmlReader and it's ok.

I have another little suggestion: in the method testSWS502 of testcase I would differentiate the payload in the initial envelope from the payload expected as the result of the transformation. In the first one you can omit the declaration of the soapenv namespace because it's already present in the envelope, while the second one  must contain that declaration. In this way the test shows that the declarations not bounded in body are automatically copied from the envelope to the body.

I attach my version of the testcase.

","18/May/09 11:52 PM;arjen.poutsma;Thanks, I've updated the test accordingly.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#634|https://github.com/spring-projects/spring-ws/issues/634]. ",,,,,,,
Maven dependency for oxm 1.5.5.A non-existent version of Spring,SWS-501,26359,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Complete,arjen.poutsma,david_syer,david_syer,19/Apr/09 5:59 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,25/Feb/10 6:12 PM,1.5.5,,,,,,2.0 M1,,,,,,,0,,,,,,,"Maven dependency for oxm 1.5.5.A non-existent version of Spring.  The pom says it depends on org.springframework:org.springframework.beans:2.5.6, but only 2.5.6.A is available in the S2EBR.",,,,,0,0,,0%,0,0,,,,,,SWS-451,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-12 21:26:40.309,7622,true,gregturn(gregturn),,,,"0|i040f3:",23442,19979,,,,,,,,"12/May/09 9:26 PM;arjen.poutsma;Spring-WS does not use the S2EBR yet. This is planned for the next major version, as it introduces backwards compatibility issues.","24/May/09 11:46 PM;david_syer;If it doesn't use S2EBR why does it have a dependency on an S2EBR artifact?  This is really a bug in the artifact that is deployed in S2EBR itself (which by definition has to depend on other artifacts in the same repository).  Can you not just modify the deployed artifract?","24/May/09 11:56 PM;arjen.poutsma;Spring-WS does not have a dependency on a S2EBR artifact. Perhaps the S2EBR version does, I don't know too much about that.","25/May/09 12:33 AM;david_syer;You have no control over EBR artifacts?  I raised an issue there (https://issuetracker.springsource.com/browse/EBR-385).","25/May/09 12:49 AM;sandrews;Both Spring Beans 2.5.6 and 2.5.6.A exist in the EBR.  Can you provide more detail about the issue?","25/May/09 1:14 AM;david_syer;Hmm.  I can see those jars too.  But it still fails the Batch build every night: https://build.springframework.org/browse/BATCH-NIGHTLYSITE/latest.  Maybe that's because the maven-meta-data.xml is wrong (only lists 2.5.6.SEC01).","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#633|https://github.com/spring-projects/spring-ws/issues/633]. ",,,,,,,,,,
remove amazonaws repository urls from spring-ws-parent pom,SWS-500,26317,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,wouterv,wouterv,13/Apr/09 7:28 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/May/09 10:09 PM,1.5.6,,,,,,1.5.7,,Core,,,,,0,,,,,,,"When running mvn site on my project, the build hang on the following lines:

[INFO] Generating ""Dependencies"" report.
[WARNING] The repository url 'http://s3.amazonaws.com/maven.springframework.org/external' is invalid - Repository 'spring-external' will be blacklisted.
[WARNING] The repository url 'http://s3.amazonaws.com/maven.springframework.org/release' is invalid - Repository 'spring-release' will be blacklisted.

Doing a grep on my .m2 directory there was only file containing these repository urls:

~/.m2$ grep -r 'amazonaws' *
repository/org/springframework/ws/spring-ws-parent/1.5.5/spring-ws-parent-1.5.5.pom:            <url>http://s3.amazonaws.com/maven.springframework.org/release</url>
repository/org/springframework/ws/spring-ws-parent/1.5.5/spring-ws-parent-1.5.5.pom:            <url>http://s3.amazonaws.com/maven.springframework.org/external</url>

I think these are outdated and should be removed.or at least replaced by something that works.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-05-13 21:26:41.999,7623,true,gregturn(gregturn),,,,"0|i032av:",17915,17313,,,,,,,,"13/May/09 9:26 PM;arjen.poutsma;Quite frankly, I have no idea what's causing this. I can duplicate the warnings, but the build does not hang for me.

I think it might be due to Amazon S3 returning non-standard HTTP headers or bodies, which isn't something I can fix.","13/May/09 9:53 PM;wouterv;My point was that the amazonaws repositories aren't used anywhere in Spring anymore, but for this parent pom. My suggestion is removing this repository, as it's not valid anymore","13/May/09 10:04 PM;arjen.poutsma;You are right: other projects use maven.springframework.org/external or maven.springframework.org/release, but these resolve to the same Amazon S3 host/directory as the ones presently there. I will fix.","13/May/09 10:09 PM;arjen.poutsma;I replaced the s3.amazonaws.com URLS with maven.springframework.org ones.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#547|https://github.com/spring-projects/spring-ws/issues/547]. ",,,,,,,,,,,,
JDOM exception when parsing odd SOAP message with SaajSoapMessageFactor,SWS-497,26161,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,tommack,tommack,26/Mar/09 6:28 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/May/09 12:29 AM,1.5.6,,,,,,1.5.7,,,,,,,1,,,,,,,"I'm trying to accept a SOAP message that has the following format:

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
    <SOAP-ENV:Body>
        <ns0:programStatusRequest version=""1.0""
            xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/""
            xmlns:ns0=""http://mynamespace"">
            <ns0:programName
                xmlns:ns0=""http://mynamespace"">Residential LCR Cooling 50% Contract</ns0:programName>
        </ns0:programStatusRequest>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>  
{code}

The strange part of this message is that the xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"" is redefined on the payload element (I'm not sure, I assume it is auto generated this way).

I am not able to accept this message using the org.springframework.ws.soap.saaj.SaajSoapMessageFactory. However, using org.springframework.ws.soap.axiom.AxiomSoapMessageFactory allows this message to be parsed successfully.

To better demostrate this, I've created the following:

{code}
String messageFactoryProtocol = SOAPConstants.SOAP_1_1_PROTOCOL;
MessageFactory messageFactory = MessageFactory.newInstance(messageFactoryProtocol);
MimeHeaders mimeHeaders = new MimeHeaders();
SOAPMessage message = messageFactory.createMessage(mimeHeaders, file.toURI().toURL().openStream()); // where file contains the above XML
SaajSoapMessage saajSoapMessage = new SaajSoapMessage(message);
result = new JDOMResult();
// result = new StringResult(); // using the Spring StringResult works just fine
newTransformer.transform(saajSoapMessage.getPayloadSource(), result); // this line throws the exception
{code}

Running this code produces:

{noformat}
org.jdom.IllegalNameException: The name """" is not legal for JDOM/XML namespaces: Namespace URIs must be non-null and non-empty Strings.
	at org.jdom.Namespace.getNamespace(Namespace.java:166)
	at org.jdom.input.SAXHandler.startPrefixMapping(SAXHandler.java:498)
	at org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping(XMLFilterImpl.java:490)
	at org.jdom.transform.JDOMResult$DocumentBuilder.startPrefixMapping(JDOMResult.java:529)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.startPrefixMapping(ToXMLSAXHandler.java:362)
	at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.namespaceAfterStartElement(ToXMLSAXHandler.java:569)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:167)
	at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:90)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:662)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:708)
	at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
{noformat}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-03-26 23:59:45.585,7626,true,gregturn(gregturn),,,,"0|i040fb:",23443,19980,,,,,,,,"26/Mar/09 11:59 PM;arjen.poutsma;Added formatting to make the issue readable.","27/Mar/09 12:02 AM;arjen.poutsma;On first glance, this seems to be more a JDOM issue than a Spring-WS issue. Not sure what we can do about it...","07/Apr/09 4:44 AM;tommack;I don't believe this is a JDOM issue because it really is called with a """" namespace even though the input document does not contain any namespaces declared as """". The """" is stored in the saajSoapMessage object and doesn't appear to pose any problem until the result transform step.

Although that isn't to say that it isn't a SAAJ problem--when I was stepping through it, I wasn't able to determine if the problem was in Spring-WS code or SAAJ code.
","28/Apr/09 12:45 PM;tunaranch;I think this is a related problem. On a spring web service endpoint, with Saaj and Jaxb, I'm getting faults that return:
{code}<env:Envelope xmlns:env=""http://schemas.xmlsoap.org/soap/envelope/"">
  <env:Header/>
  <env:Body>
  	<env:Fault>
  		<faultcode xmlns="""">env:Server</faultcode>
  		<faultstring xmlns="""">Message goes here</faultstring>
  		<detail xmlns="""">
  			...
  		</detail>
  	</env:Fault>
  </env:Body>
</env:Envelope>{code}","28/Apr/09 3:00 PM;tunaranch;Actually, my problem seems to be more like this: http://www.stevideter.com/2009/02/18/of-exceptionresolvers-and-xmlbeans/, except I'm using jaxb.

I don't seem to have saxon in my classpath, mvn dependency:tree gives me:
{code}[INFO] +- backport-util-concurrent:backport-util-concurrent:jar:3.1:compile
[INFO] +- log4j:log4j:jar:1.2.15:compile
[INFO] +- org.springframework.ws:spring-oxm:jar:1.5.5:compile
[INFO] |  +- org.springframework.ws:spring-xml:jar:1.5.5:compile
[INFO] |  +- org.springframework:spring-context:jar:2.5.6:compile
[INFO] |  |  \- aopalliance:aopalliance:jar:1.0:compile
[INFO] |  +- commons-logging:commons-logging:jar:1.1.1:compile
[INFO] |  +- org.springframework:spring-core:jar:2.5.6:compile
[INFO] |  \- org.springframework:spring-beans:jar:2.5.6:compile
[INFO] +- org.springframework.ws:spring-ws-core:jar:1.5.5:compile
[INFO] |  +- org.springframework:spring-aop:jar:2.5.6:compile
[INFO] |  +- org.springframework:spring-web:jar:2.5.6:compile
[INFO] |  +- org.springframework:spring-webmvc:jar:2.5.6:compile
[INFO] |  |  \- org.springframework:spring-context-support:jar:2.5.6:compile
[INFO] |  \- wsdl4j:wsdl4j:jar:1.6.1:compile
[INFO] +- stax:stax-api:jar:1.0.1:compile
[INFO] +- xml-apis:xml-apis:jar:1.3.04:compile
[INFO] +- org.springframework:spring:jar:2.5.6:compile
[INFO] +- org.springframework.ws:spring-ws-core-tiger:jar:1.5.5:compile
[INFO] +- org.springframework.ws:spring-oxm-tiger:jar:1.5.5:compile
[INFO] +- javax.xml.bind:jaxb-api:jar:2.1:compile
[INFO] +- com.sun.xml.bind:jaxb-impl:jar:2.1.3:compile
[INFO] +- com.oracle:ojdbc14:jar:10.2.0.3.0:provided
[INFO] +- xerces:xercesImpl:jar:2.8.1:compile
[INFO] +- xalan:xalan:jar:2.7.0:compile

[INFO] |  \- commons-lang:commons-lang:jar:2.3:compile

[INFO] |  \- org.springframework:spring-jdbc:jar:2.5.6:compile
[INFO] |     \- org.springframework:spring-tx:jar:2.5.6:compile


[INFO] +- org.hamcrest:hamcrest-all:jar:1.1:test (scope not updated to compile)
[INFO] +- org.easymock:easymockclassextension:jar:2.3:test
[INFO] |  +- org.easymock:easymock:jar:2.3:test
[INFO] |  \- cglib:cglib-nodep:jar:2.1_3:test
[INFO] +- xmlunit:xmlunit:jar:1.2:test
[INFO] +- junit:junit:jar:4.4:test
[INFO] +- org.apache.ws.commons.schema:XmlSchema:jar:1.4.2:compile
[INFO] +- org.springframework:spring-test:jar:2.5.6:test
[INFO] \- au.edu.qut.qutvirtual.unitservice:unitservice-testhelpers:jar:1.2.2-SNAPSHOT:test
[INFO]    \- org.testng:testng:jar:jdk15:5.8:test
{code}","13/May/09 12:28 AM;arjen.poutsma;As I suspected, this is a JDOM or SAAJ bug, as I was able to reproduce it without using any Spring-WS code:

{code}String messageFactoryProtocol = SOAPConstants.SOAP_1_1_PROTOCOL;
MessageFactory messageFactory = MessageFactory.newInstance(messageFactoryProtocol);
MimeHeaders mimeHeaders = new MimeHeaders();
SOAPMessage message = messageFactory.createMessage(mimeHeaders, file.toURI().toURL().openStream()); // where file contains the above XML
SOAPBody body = message.getSOAPBody();
SOAPElement payload = null;
for (Iterator iterator = body.getChildElements(); iterator.hasNext();) {
    Object child = iterator.next();
    if (child instanceof SOAPElement) {
        payload = (SOAPElement) child;
        break;
    }
}
Source source = new DOMSource(payload);
Result result = new JDOMResult();
// result = new StringResult(); // using the Spring StringResult works just fine
newTransformer.transform(saajSoapMessage.getPayloadSource(), result); // this line throws the exception{code}

My bet would be that JDOM is the culprit. I did upgrade to JDOM 1.1 from 1.0, but that didn't help either. You could try using dom4j or xom instead.","13/May/09 12:29 AM;arjen.poutsma;Resolving as won't fix, because we can't fix.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#630|https://github.com/spring-projects/spring-ws/issues/630]. ",,,,,,,,,
SpringWS client does not send Mtom attachments - it inlines them instead.,SWS-496,26119,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,sanderkerel,sanderkerel,24/Mar/09 1:35 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,17/May/09 9:19 PM,1.5.6,,,,,,1.5.7,,,,,,,0,,,,,,,"The actual problem that I have is that I cannot send large attachments with SpringWS-client.

I suspect the cause is that MTOM encoding in Spring does not work, even though mtomEnabled in org.springframework.oxm.jaxb.Jaxb2Marshaller is set to true. Without MTOM encoding the whole attachment is inlined, in memory, and then OutOfMemoryErrors can quickly occur.

With a Tcp monitor you can see that MTOM does in not work, while it does work with Axis. I demonstrate this in an Eclipse project, that I will try to attach to this issue.

Because of this, we are now forced to use Axis in our otherwise Spring-dominated project. This is quite unsatisfying.","Vista, JDK6, Tomcat 5.5.27, Axiom 1.2.8.",,,,,,,,,,,,,,,,,,,,,,,"24/Mar/09 1:41 AM;sanderkerel;mtomtest.zip;https://jira.spring.io/secure/attachment/15249/mtomtest.zip","17/Apr/09 9:19 PM;tareq;spring-ws_mtom_client.patch;https://jira.spring.io/secure/attachment/15323/spring-ws_mtom_client.patch",,,,,,,,,,,,24969600,,2009-04-03 01:04:32.477,7627,true,gregturn(gregturn),,,,"0|i040fj:",23444,19981,http://forum.springframework.org/showthread.php?t=67669,,,,,,,"24/Mar/09 1:41 AM;sanderkerel;Introduction
------------
mtomtest is an Eclipse project, created with the purpose of demonstrating problems with mtom on SpringWS-client. It contains a SpringWS server, and tests for both a SpringWS cient and an Axis client.
The project contains a pom which can build a war file. You have to deploy that yourself, because the project is not an Eclipse Dynamic Web Project. You do need the Maven-Eclipse plugin.
I have removed the output directory, so first build it with Eclipse so you can run the tests.

File locations
--------------
application context and SpringWS configuration is in src/main/webapp/WEB-INF/mtomtest-servlet-config.xml

Tests are in:
src\test\java\mtomtest\test\TestWithSpringWsClient.java
src\test\java\mtomtest\test\TestWithAxisClient.java

Warning about tcp monitoring
----------------------------
If you want to monitor sending big requests, you should use apache's TCPMon, as Eclipse's monitor slows the big upload down too much.

Environment
-----------
Tested with JDK6, Eclipse 3.4.1 (M20080911-1700), Tomcat 5.5.27","03/Apr/09 1:04 AM;jkuipers;This is a test: I just spend half an hour typing a comment on my findings for this issue and lost them all when I pressed 'Add', as JIRA gave me an error that the issue didn't exist anymore...
I'll try again if this comes through OK.","03/Apr/09 1:21 AM;jkuipers;I did some investigation and found the following issues:
1) Spring-WS's Jaxb2Marshaller$Jaxb2AttachmentMarshaller.isXOPPackage() should probably call mimeContainer.isXopPackage(), but is implemented to call mimeContainer.convertToXopPackage() instead. This always returns false, so JAXB2's XMLSerializer.startDocument won't use an instance of MTOMXmlOutput to wrap the SAXOutput.
2) When this is fixed, AxiomSoapMessage.isXopPackage still returns false b/o an expected bug in Axis2. This should be true for proper MTOM encoding
3) When this is hacked to always return true, a message is sent to the server. However, AxiomSoapMessage.getAttachment won't find the attachment for the given contentId, which is something like ""a71fde6d-fa85-4194-b734-97ad0f484750@ilovespringws"". It looks like this is not written out to the request properly.
4) When switching to SAAJ on the client but leaving the classpath intact, you get an error like this:
org.w3c.dom.DOMException: HIERARCHY_REQUEST_ERR: An attempt was made to insert a node where it is not permitted. 
	at org.apache.axiom.om.impl.dom.NodeImpl.insertBefore(NodeImpl.java:261)
	at org.apache.axiom.om.impl.dom.NodeImpl.appendChild(NodeImpl.java:240)
	at com.sun.xml.bind.marshaller.SAX2DOMEx.startElement(SAX2DOMEx.java:176)
	at com.sun.xml.bind.v2.runtime.output.SAXOutput.endStartTag(SAXOutput.java:124)
	at com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput.endStartTag(MTOMXmlOutput.java:101)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.endAttributes(XMLSerializer.java:302)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsSoleContent(XMLSerializer.java:588)
	at com.sun.xml.bind.v2.runtime.ClassBeanInfoImpl.serializeRoot(ClassBeanInfoImpl.java:312)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsRoot(XMLSerializer.java:490)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.write(MarshallerImpl.java:328)
	at com.sun.xml.bind.v2.runtime.MarshallerImpl.marshal(MarshallerImpl.java:257)
	at org.springframework.oxm.jaxb.Jaxb2Marshaller.marshal(Jaxb2Marshaller.java:379)
	at org.springframework.ws.support.MarshallingUtils.marshal(MarshallingUtils.java:81)
	at org.springframework.ws.client.core.WebServiceTemplate$2.doWithMessage(WebServiceTemplate.java:360)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:535)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:502)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:351)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:341)
	at mtomtest.test.TestWithSpringWsClient.sendFileAtPath(TestWithSpringWsClient.java:41)
    ...

5) When removing the Axis-SAAJ jars from the classpath, a request is sent but its Content-Type headers doesn't contain application/xop+xml, just text/xml


This doesn't solve the issue yet, but it should certainly help the next person who works on the issue.","17/Apr/09 9:19 PM;tareq;I created a spring-ws client for the included mtom sample. To run the client: ant run. 
It works correctly with Saaj but not with Axiom.","17/May/09 9:19 PM;arjen.poutsma;I've added Tareq's SAAJ client, and also an Atom client that uses the native API. See [AxiomMtomClient|https://fisheye.springframework.org/browse/spring-ws/trunk/samples/mtom/client/spring-ws/src/org/springframework/ws/samples/mtom/client/sws/AxiomMtomClient.java?r=1403#l105]. It's not pretty, but it works, and is faster than SAAJ too!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#629|https://github.com/spring-projects/spring-ws/issues/629]. ",,,,,,,,,,,
AbstractHttpSenderConnection  getErrorMessage() ,SWS-494,25965,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,pakopako,pakopako,12/Mar/09 11:52 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/May/09 10:27 PM,1.5.6,,,,,,1.5.7,,Core,,,,,0,,,,,,,"I have situation where *AbstractHttpSenderConnection.getResponseMessage()* returns *null* which results in NullPointerException at *AbstractHttpSenderConnection.getErrorMessage()* due to the construcor of StringBuffer  ( when passed String to the StringBuffer it tries to get it's length ) I can't imagine why null is not casted to ""null"" 

StringBuffer buffer = new StringBuffer(getResponseMessage()); ","winXP sp3, jdk1.5.0_14, tomcat 6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:45.631,7629,true,gregturn(gregturn),,,,"0|i040fr:",23445,19983,,,,,,,,"12/Mar/09 11:59 PM;pakopako;And I think the problem with the NULL response message comes from here :

{code:title=HttpURLConnection.java|borderStyle=solid}
public String getResponseMessage() throws IOException {
	getResponseCode();
	return responseMessage;
    }
{code} 
getResponseCode is 404 but responseMessage is null 

hope this helps ;)


Cheers,

Pavlin","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#626|https://github.com/spring-projects/spring-ws/issues/626]. ",,,,,,,,,,,,,,,
"CLONE -xml:lang=""en"" attribute in <faultstring> element is not compliant to SOAP/1.1 schema",SWS-487,25689,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,al0,al0,17/Feb/09 7:37 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,17/Feb/09 8:45 PM,1.5.1,,,,,,,,,,,,,0,,,,,,,"There is xml:lang=""en"" attribute in <faultstring> element although SOAP/1.1 schema doesn't provide it.
Yes, it may be suppressed if set faultStringOrReasonLocale property for all affected endpoints to null,
set empty language for each and every exception mapping in SoapFaultMappingExceptionResolver (BTW, it is not
very well documented how to do it), set to null faultStringOrReasonLocale for message dispatcher,
oh did I forget something? 

Probably, it may as well be avoided by subclassing of each of above mentioned classes (and likely some others),
but then each developer need to use them. 

See as well http://www.eviware.com/component/option,com_smf/Itemid,53/topic,1044.0

IMHO, or it should comply with schema by default, or, in the worst case, it should exist some global setting 
""be compliant"".

Kind regards,
Oleksandr


",,,,,,,,,,,,,,,,SWS-485,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:41.21,7635,true,gregturn(gregturn),,,,"0|i03bo7:",19433,19985,http://forum.springframework.org/showthread.php?t=65135,,,,,,,"17/Feb/09 7:42 PM;al0;Event if you do not want to provide global switch (I realize that it may be quite cumbersome to implement), it at least deserves to be mentioned in the reference documentation.that default fault does not conform to w3c standard, but conforms to  WS-I standard.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#620|https://github.com/spring-projects/spring-ws/issues/620]. ",,,,,,,,,,,,,,,
SaajSoap11Body.getFault() does not conforms to interface specification - if no fault is present IllegalArgumentException is thrown instead of returning null.,SWS-486,25688,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,al0,al0,17/Feb/09 7:31 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/May/09 9:02 PM,1.5.1,1.5.2,1.5.3,1.5.4,1.5.5,1.5.6,1.5.7,,,,,,,1,,,,,,,"Hi, 

the call 

  SoapFault bodyFault = body == null ? null : body.getFault();

returns following exception (line numbers are from Spring-WS 1.5.1, but relevant code is the same in 1.5.6 as well).

java.lang.IllegalArgumentException: element must not be null
	at org.springframework.util.Assert.notNull(Assert.java:112)
	at org.springframework.ws.soap.saaj.SaajSoapElement.<init>(SaajSoapElement.java:40)
	at org.springframework.ws.soap.saaj.SaajSoapFault.<init>(SaajSoapFault.java:36)
	at org.springframework.ws.soap.saaj.SaajSoap11Fault.<init>(SaajSoap11Fault.java:34)
	at org.springframework.ws.soap.saaj.SaajSoap11Body.getFault(SaajSoap11Body.java:45)
	at com.navteq.ncs.common.core.utils.aop.EndpointInvokeInterceptor.checkResult(EndpointInvokeInterceptor.java:46)

while SoapBody interface Javadoc states for this method:
Returns:
the SoapFault, or null if none is present

The {{getFault()}} method in the class SaajSoap11Body may be modified as follows 


    public SoapFault getFault() {
        SOAPFault fault = getImplementation().getFault(getSaajBody());
        return fault==null ? null : new SaajSoap11Fault(fault);
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:22.923,7116,true,gregturn(gregturn),,,,"0|i040fz:",23446,19986,,,,,,,,"17/Feb/09 7:36 PM;al0;Hi,

SaajSoap12Body is affected as well, while AxiomSoapBody is Ok.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#619|https://github.com/spring-projects/spring-ws/issues/619]. ",,,,,,,,,,,,,,,
Missing version qualifiers on Export-Package entries,SWS-484,25611,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,dciarlet,dciarlet,11/Feb/09 12:37 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,20/May/09 12:15 AM,1.5.6,,,,,,1.5.7,,Core,OXM,Security,XML,,0,,,,,,,"The packages exported by the the spring-ws v1.5.6 modules do not contain the version qualifier so the osgi framework recognizes their version as ""0.0.0"". This caused the import-package for the oxm packages in the spring-integration bundles to fail because they are looking for version range [1.5.5.A,2.0.0).",Java 1.5 + Equinox OSGi + Spring + Spring-dm + Spring-WS + Spring-Integration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:48.508,7637,true,gregturn(gregturn),,,,"0|i01mnr:",9548,9585,http://forum.springframework.org/showthread.php?t=67269,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#617|https://github.com/spring-projects/spring-ws/issues/617]. ",,,,,,,,,,,,,,,,
Wss4j 1.5.5 stripping custom SOAP headers after 1.5.6 upgrade,SWS-483,25606,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,pdotsenko,pdotsenko,10/Feb/09 4:11 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/May/09 10:29 PM,1.5.6,,,,,,1.5.7,,,,,,,0,,,,,,,"I upgraded an existing spring-ws app from 1.5.5 to 1.5.6, and also upgraded dependencies bundled in the with-dependencies release, specifically upgraded wss4j jar from 1.5.4 to 1.5.5 and xmlsec from 1.4.0 to 1.4.2. Now wss4j 1.5.5 somehow strips out my custom SOAP headers on the client side from the request message. Both client and server use spring-ws, I am using Axiom soap message factory (payloadCaching=true), Wss4j for ws-security, running the application in Tomcat 6 with Sun Java 5 jvm. 

Rolling back wss4j libs to wss4j-1.5.4.jar and xmlsec-1.4.0.jar fixes the problem (keeping the other spring-ws 1.5.6 release jars), therefore I suspect this is a Wss4j-1.5.5 bug, but other causes are possible (see other observations below).  Proposed solution: roll back the bundled Wss4j jars to wss4j 1.5.4 and xmlsec 1.4.0.  

Other observations: 
1. Sending the SOAP request using soapUI instead of the spring-ws client fixes the problem, proving that the headers are stripped by the spring-ws client.
2. Removing Wss4j security interceptor fixes the problem. 
3. Switching to SaajSoapMessageFactory fixes the problem.
4. Spring-ws client trace logger logs the sent SOAP message WITH the custom soap headers intact, so the headers are stripped after the logging code is executed. 

Attached is a sample that reproduces the problem.  The sample is a slightly modified echo spring-ws sample pre-configured as an Eclipse project folder.  The echo sample was modified to use Wss4j security interceptor, Axiom Soap message factory and I added the code to add custom Soap headers.  To reproduce, import the sample into an Eclipse 3.* workspace, deploy spring-ws-echo war to a servlet container, and run org.echo.client.sws.EchoClient as Java applicatio. The logged Soap request on the client contains the ""customSoapHeader"" header element, but on the server side the same request Soap message is missing this header. ","Spring-ws 1.5.6, spring-2.5.6, Axiom soap message factory, Wss4j 1.5.5 security interceptor, Java 5, Tomcat 6.0.16",,,,,,,,,,,,,,,,,,,,,,,"12/May/09 10:30 PM;tareq;483-test.patch;https://jira.spring.io/secure/attachment/15385/483-test.patch","10/Feb/09 4:22 AM;pdotsenko;spring-ws-echo.zip;https://jira.spring.io/secure/attachment/15126/spring-ws-echo.zip",,,,,,,,,,,,24969600,,2009-03-23 23:27:42.595,7638,true,gregturn(gregturn),,,,"0|i040gf:",23448,19988,http://forum.springframework.org/showthread.php?p=225931#post225931,,,,,,,"10/Feb/09 4:22 AM;pdotsenko;In order to keep the zip file under 10mb I removed the spring-2.5.6 jar file from the project, add it to the WebContent/WEB-INF/lib folder before building.","23/Mar/09 11:27 PM;tareq;Thanks for helpful the sample. I was able to reproduce the problem in a unit test as well. Investigating the cause now...","12/May/09 10:30 PM;tareq;Here's a unit test that _should_ reproduce that issue even though it seemed to pass or fail under different circumstances. ","19/May/09 2:21 AM;arjen.poutsma;I've found that, using WSS4J 1.5.7, the following log4 config does send the custom SOAP header:

{noformat}
log4j.logger.org.springframework.ws.client.MessageTracing=INFO
{noformat}

while the following do not:

{noformat}
log4j.logger.org.springframework.ws.client.MessageTracing=DEBUG
log4j.logger.org.springframework.ws.client.MessageTracing=TRACE
{noformat}

Clearly, the error lies in the MessageTracing logging code. The funny thing is that the log4j output *does* show the header, it's just not sent over the wire.
","19/May/09 8:37 PM;arjen.poutsma;I've been able to create a unit tests that reproduces this behavior consistently. The first time {{message.writeTo()}} or {{message.toString()}} is called, the custom header is there, but the second time it's gone. Since the MessageTracing logging also invokes either of these methods. 

So, as a workaround until we fix this, you can disable message tracing logging.","19/May/09 10:21 PM;arjen.poutsma;Fixed!

I now make sure the Axiom DOM tree is correctly build by calling envelope.serialize() when creating a new Axiom SOAPEnvelope from the WSS4J DOM Document.","19/May/09 11:47 PM;pdotsenko;Arjen and Tareq - thanks for your work and fixing this!  It was enlightening to follow your comments.  ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#616|https://github.com/spring-projects/spring-ws/issues/616]. ",,,,,,,,,
java.lang.IllegalStateException: Connection factory has been shutdown,SWS-482,25603,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,heymjo,heymjo,09/Feb/09 8:20 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/May/09 10:36 PM,1.5.5,,,,,,1.5.7,,Core,,,,,0,,,,,,,"spring-ws does not seem to correctly reinitialize the httpclient connection manager under certain circumstances

{code}
Caused by: java.lang.IllegalStateException: Connection factory has been shutdown.
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.doGetConnection(MultiThreadedHttpConnectionManager.java:456)
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.getConnectionWithTimeout(MultiThreadedHttpConnectionManager.java:394)
	at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:152)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:396)
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:324)
	at org.springframework.ws.transport.http.CommonsHttpConnection.onSendAfterWrite(CommonsHttpConnection.java:100)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:44)
	at org.springframework.ws.client.core.WebServiceTemplate.sendRequest(WebServiceTemplate.java:585)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:548)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:501)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:456)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:402)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:393)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate
{code}

i cannot come up with a reproducible testcase for the moment, but when it happens it is always after we redeploy our application (weblogic 9.2MP2). It is quite an impacting annoyance because we have to restart the server to get things back in line.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:37.678,7639,true,gregturn(gregturn),,,,"0|i040gn:",23449,19989,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#615|https://github.com/spring-projects/spring-ws/issues/615]. ",,,,,,,,,,,,,,,,
PayloadValidatingInterceptor cannot handle more than one schema ,SWS-481,25593,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,duffymo,duffymo,09/Feb/09 5:35 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,09/Feb/09 8:38 PM,1.5.4,,,,,,,,XML,,,,,0,,,,,,,"A WAR file has two Spring annotated web services (Foo and Bar), each with their own separate XSD files (foo.xsd and bar.xsd) describing request and response streams.  Logging and validation interceptors are configured.

If the PayloadRootAnnotationMethodEndpointMapping does not use the validation interceptor, both web services accept request XML streams from a SOAP UI client and return the correct response XML. This leads me to conclude that the code and configuration for both Foo and Bar services is correct and fully operational.

If the PayloadRootAnnotationMethodEndpointMapping uses the validation interceptor, which in turn points to a CommonsXsdSchemaCollection instance, the success or failure of the web service depends on the order in which the XSD appears in the CommonsXsdSchemaCollection.  If foo.xsd appears first, the Foo service client returns the correct response XML.  The Bar service returns a validation error: 

            <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-elt.1: Cannot find the declaration of element 'pmt:PatternRequest'.</spring-ws:ValidationError>

If the order of the schemas is reversed in the CommonsXsdSchemaCollection, then the Bar service returns the correct response XML and the Foo service returns the validation error stream.","Windows XP SP2, Sun JDK 1.5.0_11, Spring 2.5.5, Spring web services 1.5.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-02-09 20:38:58.231,7640,true,gregturn(gregturn),,,,"0|i01oif:",9848,9875,http://forum.springframework.org/showthread.php?t=26685,,,,,,,"09/Feb/09 8:38 PM;arjen.poutsma;The problem here is that the schema validation relies on the functionality available in the JDK, specifically {{javax.xml.validation.Schema}}. There are some rules when using multiple schema files with this class, see http://java.sun.com/j2se/1.5.0/docs/api/javax/xml/validation/SchemaFactory.html#newSchema(javax.xml.transform.Source[])

I admit that these rules are far from ideal, but there is very little we can do about it.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#614|https://github.com/spring-projects/spring-ws/issues/614]. ",,,,,,,,,,,,,,,
"JmsSenderConnection does not commit transaction after send, leading to messages never being sent if sessionTransacted is true",SWS-473,25288,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jdenly,jdenly,07/Jan/09 12:53 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Jan/09 9:57 PM,1.5.3,1.5.4,1.5.5,,,,1.5.6,,Core,,,,,0,,,,,,,"When sending a JMS message using a org.springframework.ws.transport.jms.JmsMessageSender with sessionTransacted set to true, the org.springframework.ws.transport.jms.JmsSenderConnection.onSendAfterWrite method doesn't commit the transaction.  This leads to the transaction being rolled back when the connection is closed so the message is never sent.  JMSUtils.commitIfNecessary should be called before closing the message producer.

An example of how this is done in JmsTemplate:

{code:title=JmsTemplate.java}
protected void doSend(Session session, Destination destination, MessageCreator messageCreator)
			throws JMSException {

		Assert.notNull(messageCreator, ""MessageCreator must not be null"");
		MessageProducer producer = createProducer(session, destination);
		try {
			Message message = messageCreator.createMessage(session);
			if (logger.isDebugEnabled()) {
				logger.debug(""Sending created message: "" + message);
			}
			doSend(producer, message);
			// Check commit - avoid commit call within a JTA transaction.
			if (session.getTransacted() && isSessionLocallyTransacted(session)) {
				// Transacted session created by this template -> commit.
				JmsUtils.commitIfNecessary(session);
			}
		}
		finally {
			JmsUtils.closeMessageProducer(producer);
		}
	}
{code}

Similarly, the following should be done in JmsSenderConnection:

{code:title=JmsSenderConnection.java}
protected void onSendAfterWrite(WebServiceMessage message) throws IOException {
        MessageProducer messageProducer = null;
        try {
            messageProducer = session.createProducer(requestDestination);
            messageProducer.setDeliveryMode(deliveryMode);
            messageProducer.setTimeToLive(timeToLive);
            messageProducer.setPriority(priority);
            if (responseDestination == null) {
                responseDestination = session.createTemporaryQueue();
            }
            requestMessage.setJMSReplyTo(responseDestination);
            connection.start();
            messageProducer.send(requestMessage);
            if (session.getTransacted()) {
               JmsUtils.commitIfNecessary(session);
            }
        }
        catch (JMSException ex) {
            throw new JmsTransportException(ex);
        }
        finally {
            JmsUtils.closeMessageProducer(messageProducer);
        }
    }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-01-07 19:23:49.141,7647,true,gregturn(gregturn),,,,"0|i040hb:",23452,19994,,,,,,,,"07/Jan/09 7:23 PM;arjen.poutsma;Thanks for spotting this, it will be fixed in 1.5.6","12/Jan/09 9:57 PM;arjen.poutsma;Fixed. Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#610|https://github.com/spring-projects/spring-ws/issues/610]. ",,,,,,,,,,,,,,
"Invalid xml in SoapFaultMappingExceptionResolver example, section 5.6.1",SWS-471,25190,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,bhendricks,bhendricks,24/Dec/08 4:47 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Jan/09 10:05 PM,1.5.5,,,,,,1.5.6,,Documentation,,,,,0,,,,,,,"Section 5.6.1 has invalid xml for its example of how to configure the exceptionMappers for SoapFaultMappingExceptionResolver:

{code:xml}
<beans>
    <bean id=""exceptionResolver""
        class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
        <property name=""defaultFault"" value=""SERVER"">
        </property>
        <property name=""exceptionMappings"">
            org.springframework.oxm.ValidationFailureException=CLIENT,Invalid request
        </property>
    </bean>
</beans>
{code}

Should be

{code:xml}
<beans>
    <bean id=""exceptionResolver""
        class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
        <property name=""defaultFault"" value=""SERVER"">
        </property>
        <property name=""exceptionMappings"">
          <value>
            org.springframework.oxm.ValidationFailureException=CLIENT,Invalid request
          </value>
        </property>
    </bean>
</beans>
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-01-12 21:59:44.018,7648,true,gregturn(gregturn),,,,"0|i01q3j:",10105,10101,,,,,,,,"24/Dec/08 4:51 AM;bhendricks;Eh, maybe ""Major"" isn't the best priority for this.","12/Jan/09 9:59 PM;arjen.poutsma;Used wiki formatting","12/Jan/09 10:05 PM;arjen.poutsma;Thanks for spotting this, it's fixed now. 

In the future, could you please add a little note telling me what part changed? It took me 5 minutes and the help of Tareq, to spot the diff between the first and second snippet :).","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#608|https://github.com/spring-projects/spring-ws/issues/608]. ",,,,,,,,,,,,,
"Content type not set accouring to Http specification, RFC 2616",SWS-469,25188,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,pieni,pieni,23/Dec/08 9:38 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,25/Jan/09 8:42 PM,1.5.5,,,,,,1.5.6,,Core,,,,,0,,,,,,,"the AxiomSoapMessage and the SaajSoapMessage set the content-type  character-set incorrectly. 
The character set is surrounded by double quotes i.e ""ISO-8859-1"". the specification however states, $14.17 and $3.7 clearly state that this is not allowed. Although most servers do not complain about it, the one i use does ;-)

Since the implementation is not confirming to specifications, i would say it's a bug.

Pieter",Sender IBM WebSphere 6.1 reciever Oracle 10.1.3.4,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/09 7:23 AM;tareq;SWS-469.patch;https://jira.spring.io/secure/attachment/15070/SWS-469.patch",,,,,,,,,,,,,24969600,,2009-01-17 21:42:50.155,7650,true,gregturn(gregturn),,,,"0|i040hr:",23454,19996,,,,,,,,"17/Jan/09 9:42 PM;tareq;Hi Pieter,

Thanks for detecting this issue. I fixed it for AxiomSoapMessages as Spring-WS is responsible for generating the Content-type header in this case.
For SaajSoapMessages it's a different matter; Spring-WS delegates header generation to the underlying implementation. I tested with sun's 1.3 implementation and Axis 1.4 and was not able to reproduce the problem. Both implementations seem to generate the Content-type header correctly.
Could you please share more details on how you encountered the problem with SaajSoapMessage?
Thanks.","22/Jan/09 5:54 PM;pieni;Tareg,

I'll grab the latest snapshot beginning next week and validate to see if the issue is solved. I didnot notice that the SaajSoapMessage creation was delegated, i just scanned the code quickly ;-)

Keep you posted.

Pieter","22/Jan/09 6:27 PM;tareq;Hi Peiter,

You won't find the fix in the latest snapshot because I haven't submitted it yet! I was hoping for a confirmation as I was not able to reproduce the issue for SaajSoapMessage, using Sun's RI 1.3 and Axis 1.4.
Can you share more details on the Saaj implementation you're using to send your messages?

Thanks!
Tareq
","22/Jan/09 7:36 PM;pieni;Tareq,

Oops, Did get that one, To be honest I did not test if the Saaj message introduces the problem.  I browsed through the code and saw that for the Axiom message the "" are added. I assumed that the Saaj implemenation did the same. But if you cant reproduce I would say that the problem aint there. It will take quite some effort for me to modify the application to see if i can reproduce it with the Saaj implementation since that one causes some issues with WAS 6.1. And i'm running into a deadline to deliver the application.

Regards,

Pieter



","25/Jan/09 8:42 PM;arjen.poutsma;Pieter, thanks for spotting this!
Tareq, thanks for the patch!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#606|https://github.com/spring-projects/spring-ws/issues/606]. ",,,,,,,,,,,
Issues while generating of WSDL using SpringWS1.5 and spring-core2.0,SWS-467,25165,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Duplicate,arjen.poutsma,amerish_kesar,amerish_kesar,19/Dec/08 1:29 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/Dec/08 1:32 AM,1.5.1,,,,,,1.5.6,,Core,,,,,0,,,,,,,"Hi,

We are trying to generate the WSDL from XSD using DynamicWSDL of springws1.5 with Spring2.0. We are getting the following error: 
java.lang.NoSuchMethodError: getURI Caused by: org.springframework.beans.factory.BeanCreationException
defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: getURI Caused by: java.lang.NoSuchMethodError: getURI at org.springframework.xml.sax.SaxUtils.getSystemId(Lorg.springframework.core.io.Resource;)Ljava.lang.String;(SaxUtils.java:52)
at org.springframework.xml.sax.SaxUtils.createInputSource(Lorg.springframework.core.io.Resource;)Lorg.xml.sax.InputSource;(SaxUtils.java:45)
at org.springframework.xml.xsd.SimpleXsdSchema.loadSchema(Ljavax.xml.parsers.DocumentBuilder;)V(SimpleXsdSchema.java:113)
at org.springframework.xml.xsd.SimpleXsdSchema.afterPropertiesSet()V(SimpleXsdSchema.java:109)

It will be great if you let us know a way to generate the WSDL within Spring2.0 and SpringWS1.5?

Thanks and Regards
Amerish

",,,,,,,,,,,,,,,,SWS-459,,,,,,,,,,,,,,,,,,,,,24969600,,2008-12-19 01:32:53.993,7652,true,gregturn(gregturn),,,,"0|i040i7:",23456,19998,,,,,,,,"19/Dec/08 1:32 AM;arjen.poutsma;Already fixed in SVN! :)","20/Dec/08 10:53 PM;amerish_kesar;Hi Arjen,

When can we use this subversion? 

We tried using 1.5.6 jars (spring-ws-1.5.6-SNAPSHOT-all.jar and spring-ws-core-1.5.6-20081219.020020-20.jar). Is there any other jar which we need to place.

I want this to be done urgently. 

Thanks and Regards
Amerish","21/Dec/08 7:31 AM;tareq;There was an [issue|http://forum.springframework.org/showthread.php?t=65190] with the snapshot builds. Now that the issue is fixed, would you please try a [recent snapshot|http://s3.amazonaws.com/maven.springframework.org/snapshot/org/springframework/ws/spring-ws/1.5.6-SNAPSHOT/spring-ws-1.5.6-20081221.210851-22-minimal.zip] to see if this fixes the issue for you?","22/Dec/08 6:56 AM;amerish_kesar;This has not fixed the issue. Now I am getting different error as java.lang.NoSuchMethodError: toURI 

I have very less time to resolve this. Please help us since our functionality is completely dependent on this.


Regards
Amerish","22/Dec/08 6:57 AM;amerish_kesar;here is the detailed error message:-

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hmc' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Cannot create inner bean 'org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder#65b1b0' while setting bean property 'builder'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder#65b1b0' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: toURI Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder#65b1b0' defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Invocation of init method failed; nested exception is java.lang.NoSuchMethodError: toURI Caused by: java.lang.NoSuchMethodError: toURI at org.springframework.xml.sax.SaxUtils.getSystemId(Lorg.springframework.core.io.Resource;)Ljava.lang.String;(SaxUtils.java:53)
at org.springframework.xml.sax.SaxUtils.createInputSource(Lorg.springframework.core.io.Resource;)Lorg.xml.sax.InputSource;(SaxUtils.java:46)
at org.springframework.ws.wsdl.wsdl11.builder.XsdSchemaHelper.(Lorg.springframework.core.io.Resource;)V(XsdSchemaHelper.java:79)
at org.springframework.ws.wsdl.wsdl11.builder.XsdBasedSoap11Wsdl4jDefinitionBuilder.afterPropertiesSet()V(XsdBasedSoap11Wsdl4jDefinitionBuilder.java:213)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(Ljava.lang.String;Ljava.lang.Object;Lorg.springframework.beans.factory.support.RootBeanDefinition;)V(AbstractAutowireCapableBeanFactory.java:1062)
","22/Dec/08 7:19 AM;tareq;Could you post the exact version of Spring and the Jdk you are using. I think your issue is related to using Jdk 1.4... ","22/Dec/08 7:28 AM;amerish_kesar;yah, I guess so..

We are using Spring-core2.0, Spring-ws1.5.6 and Java1.4

Please suggest, is there a way to solve this?

Regards
Amerish","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#604|https://github.com/spring-projects/spring-ws/issues/604]. ",,,,,,,,,
Annotation driven transaction doesn't seems to work in EndPointInterceptors,SWS-466,25164,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,eulbobo,eulbobo,19/Dec/08 12:06 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,26/Jan/09 10:08 PM,1.5.5,,,,,,,,,,,,,0,,,,,,,"I have the following components

Services : Annotated as @Transactional
EndPoint : does some actions and calls services to access database
EndPointInterceptor : does some check and need to access database

An advice pointcut is used to check which method is transactional

Issue : 
Services methods called from the EndPoint are correctly encapsulated in transactions
Same method beeing called from the EndPointInterceptor are NOT encapsulated in transactions (debugs show that while called, we don't go through SpringTransactionAnnotationParser.parseTransactionAnnotation)","Windows XP, Tomcat 5.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-01-26 22:08:38.4,7653,true,gregturn(gregturn),,,,"0|i03bmn:",19426,19999,,,,,,,,"26/Jan/09 10:08 PM;arjen.poutsma;I tried to reproduce this in the airline sample, by adding a simple EndpointInterceptor that invoked the transactional getFlights() method on the AirlineServiceImpl. Then, in this method, I added the following:

{code}
logger.info(""Transaction: "" + TransactionSynchronizationManager.isActualTransactionActive());
{code}

And this printed ""true"", both when invoked from the endpoint and the interceptor.

I am resolving this issue as Cannot Reproduce right now, but I can reopen if you attach a project that reproduces this issue.

","28/Jan/09 8:06 PM;eulbobo;In my case, this prints false when called from the EndPointInterceptor.

I'll try to look for it a little more comparing with sample project. And I'll try to provide a sample project with the issue after.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#603|https://github.com/spring-projects/spring-ws/issues/603]. ",,,,,,,,,,,,,,
Optional WS-Addressing request headers being treated as mandatory,SWS-465,25163,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,wabrit,wabrit,18/Dec/08 11:23 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,25/Jan/09 10:53 PM,1.5.5,,,,,,1.5.6,,Core,,,,,0,,,,,,,"Using SimpleActionEndpointMapping results in wsa:MessageAddressingHeaderRequired errors being returned from a request unless that request specifies
a wsa:To and wsa:MessageID header. According to the WS-Addressing standard, only the wsa:Action header is mandatory.

The problem appears to lie in the  hasRequiredProperties() method of org.springframework.ws.soap.addressing.MessageAddressingProperties. This method insists on

 1. wsa:To being present
 2. wsa:MessageID being present if either ReplyTo or FaultTo have been specified. 

In the case of (2) above I was able to trigger the fault by omitting all of the MessageID, ReplyTo and FaultTo headers in my request, so it may be that the server-side stack has inserted a default ""anonymous endpoint"" value into one or both of the latter and that is triggering the error.","Windows XP, JDK 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2009-01-25 21:36:39.461,7654,true,gregturn(gregturn),,,,"0|i040if:",23457,20000,,,,,,,,"25/Jan/09 9:36 PM;arjen.poutsma;Unfortunately, the required elements of the Message Addressing Properties are version-dependent. For instance, the [http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810] version of the spec *does* require Action and To. So I guess i'll move the hasRequiredProperties() code over to AddressingVersion.","25/Jan/09 10:48 PM;arjen.poutsma;With regard to the ReplyTo header, I believe that it defaults to ""anonymous"" when not given (in WS-Addressing 1.0, see http://www.w3.org/TR/ws-addr-core/#formreplymsg). So even when no ReplyTo or FaultTo is given in the request, a MessageID header is still required. The only way around this is to specify a ""none"" ReplyTo header.","25/Jan/09 10:53 PM;arjen.poutsma;I believe this issue has been fixed. Could you please try a [recent snapshot|http://static.springframework.org/spring-ws/sites/1.5/downloads/snapshots.html] as of tomorrow, and see if it works for you?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#602|https://github.com/spring-projects/spring-ws/issues/602]. ",,,,,,,,,,,,,
The use of WS Addressing results in malformed SOAP messages,SWS-464,25108,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,olegk,olegk,15/Dec/08 1:52 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Dec/08 8:15 PM,1.5.5,,,,,,1.5.6,,Core,,,,,0,,,,,,,When WS Addressing is being used the Axiom message factory appears to produce malformed SOAP messages (details to follow)  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-12-15 22:52:18.78,7655,true,gregturn(gregturn),,,,"0|i03nrz:",21394,17940,,,,,,,,"15/Dec/08 2:01 AM;olegk;Axiom message factory appears to produce malformed messages. For instance, the problem can be triggered by the use of Web Addressing (see example below). The wsa name space declaration is missing in wsa:Action and wsa:MessageID header elements. Moreover, ideally the wsa namespace should be declared in the soapenv:Header. Please note at the same time the fault body seems sane.
---
<?xml version=""1.0"" encoding=""UTF-8""?>
<soapenv:Envelope xmlns:soapenv=""http://www.w3.org/2003/05/soap-envelope"">
	<soapenv:Header>
		<wsa:To xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"" soapenv:mustUnderstand=""true"">xxxxxxxxxx</wsa:To>
		<wsa:Action>xxxxxxxxxxxxxxxxxxxxxxxxx</wsa:Action>
		<wsa:MessageID>urn:uuid:cf9f8e79-9226-4237-b014-bf431778ddab</wsa:MessageID>
	</soapenv:Header>
	<soapenv:Body>
		<soapenv:Fault xmlns:wsa=""http://schemas.xmlsoap.org/ws/2004/08/addressing"">
			<soapenv:Code>
				<soapenv:Value>soapenv:Sender</soapenv:Value>
				<soapenv:Subcode>
					<soapenv:Value>wsa:MessageInformationHeaderRequired</soapenv:Value>
				</soapenv:Subcode>
			</soapenv:Code>
			<soapenv:Reason>
				<soapenv:Text xmlns:lang=""en"">A required message information header, To, MessageID, or Action, is not present.</soapenv:Text>
			</soapenv:Reason>
		</soapenv:Fault>
	</soapenv:Body>
</soapenv:Envelope>
---","15/Dec/08 2:08 AM;olegk;While admittedly this does look like a bug in Axiom, I think AxiomSoapHeader#addHeaderElement should register the namespace of the name passed as a parameter the same way the AxiomSoap12Fault#setText does.

I managed to work the problem around by replacing the code of AxiomSoapHeader#addHeaderElement method with the follwing one
---
    public SoapHeaderElement addHeaderElement(QName name) {
        try {
            OMNamespace namespace = null;
            String prefix = QNameUtils.getPrefix(name);
            if (StringUtils.hasLength(name.getNamespaceURI()) && StringUtils.hasLength(prefix)) {
                namespace = getAxiomHeader().findNamespaceURI(prefix);
            } else if (StringUtils.hasLength(name.getNamespaceURI())) {
                namespace = getAxiomHeader().findNamespace(name.getNamespaceURI(), null);
                if (namespace == null) {
                    throw new IllegalArgumentException(""Could not resolve namespace of code ["" + name + ""]"");
                }
                name = QNameUtils.createQName(name.getNamespaceURI(), name.getLocalPart(), namespace.getPrefix());
            }
            if (namespace == null) {
                namespace = getAxiomHeader().declareNamespace(name.getNamespaceURI(), QNameUtils.getPrefix(name));
            }
            SOAPHeaderBlock axiomHeaderBlock = getAxiomHeader().addHeaderBlock(name.getLocalPart(), namespace);
            return new AxiomSoapHeaderElement(axiomHeaderBlock, getAxiomFactory());
        }
        catch (OMException ex) {
            throw new AxiomSoapHeaderException(ex);
        }
    }
---","15/Dec/08 10:52 PM;arjen.poutsma;I am not so sure about your proposed fix. For one thing, the following code fails with an IllegalArgumentException:

String namespace = ""http://springframework.org/spring-ws"";
QName headerName1 = new QName(namespace, ""header1"");
QName headerName2 = new QName(namespace, ""header2"");

SoapHeaderElement headerElement1 = soapHeader.addHeaderElement(headerName1);
SoapHeaderElement headerElement2 = soapHeader.addHeaderElement(headerName2);

I am working on another fix.","16/Dec/08 2:27 AM;arjen.poutsma;I'm afraid I can't reproduce this. The following, which is what WS-Addressing does internally:

{code}
SoapMessageFactory messageFactory = new AxiomSoapMessageFactory();
SoapMessage message = (SoapMessage) messageFactory.createWebServiceMessage();

AddressingVersion version = new Addressing10();

MessageAddressingProperties map = new MessageAddressingProperties(new URI(""http://springframework/to""),
        new EndpointReference(new URI(""http://springframework/from"")),
        new EndpointReference(new URI(""http://springframework/replyTo"")),
        new EndpointReference(new URI(""http://springframework/faultTo"")),
        new URI(""http://springframework/action""),
        new URI(""http://springframework/messageId""));
version.addAddressingHeaders(message, map);

message.writeTo(System.out);
{code}

ends up with:

{code:xml}
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
<soapenv:Header>
<wsa:To xmlns:wsa=""http://www.w3.org/2005/08/addressing"" soapenv:mustUnderstand=""1"">http://springframework/to
</wsa:To>
<wsa:From xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsa:Address>http://springframework/from</wsa:Address>
</wsa:From>
<wsa:ReplyTo xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsa:Address>http://springframework/replyTo</wsa:Address>
</wsa:ReplyTo>
<wsa:FaultTo xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
<wsa:Address>http://springframework/faultTo</wsa:Address>
</wsa:FaultTo>
<wsa:Action xmlns:wsa=""http://www.w3.org/2005/08/addressing"">http://springframework/action</wsa:Action>
<wsa:MessageID xmlns:wsa=""http://www.w3.org/2005/08/addressing"">http://springframework/messageId</wsa:MessageID>
</soapenv:Header>
<soapenv:Body/>
</soapenv:Envelope>
{code}

What version of Axiom are you on? I'm using 1.2.7.

","16/Dec/08 5:24 AM;olegk;Arjen,

With all due respect I think you were too hasty in dismissing the issue. I am using Axiom 1.2.8, which explains the difference in behaviour. And yes, the problem is still there.

(1) Spring WS is unusable with the latest release of Axiom, which, as I said, is likely to be the Axiom's fault in the first place, but it does not really change the fact.
(2) Spring WS produces SOAP messages that are unnecessarily verbose. What is the point of declaring WSA namespace five times instead of one?
(3) Spring WS's behaviour is inconsistent. It registers namespaces at the fault level (soapenv:Fault), but for some reason does not do the same at header level (soapenv:Header)

Moreover there is no way to customize the way Spring WS generates SOAP messages except for a wholesale fork of the entire AxiomSoap* class hierarchy.

Please consider re-opening the issue

Oleg","16/Dec/08 6:19 AM;arjen.poutsma;??With all due respect I think you were too hasty in dismissing the issue. I am using Axiom 1.2.8, which explains the difference in behaviour. And yes, the problem is still there.??

Ok, I've reopened the issue.

??(1) Spring WS is unusable with the latest release of Axiom, which, as I said, is likely to be the Axiom's fault in the first place, but it does not really change the fact.??

The latest release I can find is 1.2.7 (http://repo2.maven.org/maven2/org/apache/ws/commons/axiom/axiom-api/), I am not sure where to get 1.2.8.

Could you try Axiom 1.2.7 and see if that works any better for you?

??(2) Spring WS produces SOAP messages that are unnecessarily verbose. What is the point of declaring WSA namespace five times instead of one??

True. I will fix it, and consider that the fix of this issue, if that's OK with you.

??(3) Spring WS's behaviour is inconsistent. It registers namespaces at the fault level (soapenv:Fault), but for some reason does not do the same at header level (soapenv:Header)??

This is actually Axiom doing it's thing. Whenever you call createSOAPFaultCode() on an Axiom SOAPFactory, it adds the namespace of the code at the fault level.

??Moreover there is no way to customize the way Spring WS generates SOAP messages except for a wholesale fork of the entire AxiomSoap* class hierarchy.??

You can always obtain a reference to the raw Axiom SOAPMessage object using getAxiomMessage(). You can manipulate that in any way you want to. I kept Spring-WS's the AxiomSoap* classes package private, because I cannot guarantee that the API will stay backwards compatible over time. In fact, changes in Axiom code already forced me to change the class hierarchy in the past.
","16/Dec/08 7:38 AM;arjen.poutsma;The duplicate namespace declarations are now gone. I've added a 'addNamespaceDeclaration()' method to SoapElement.","16/Dec/08 7:59 PM;olegk;Arjen,

I apologize for being such a mess. Of course, the version Axiom I am using is 1.2.7, not 1.2.8. Stupid me. It turned out I was also unable to reproduce the problem when running the test snippet locally. The problem is perfectly reproducible, though, when code is executed inside the WebLogic Server 9.2 MP1 container. In fact, the following bit is pretty sufficient for triggering the problem.
---
        AxiomSoapMessageFactory messageFactory = new AxiomSoapMessageFactory();
        SoapMessage message = (SoapMessage) messageFactory.createWebServiceMessage();
        
        QName n1 = new QName(""http://schemas.xmlsoap.org/ws/2004/08/addressing"", ""To"", ""wsa"");
        QName n2 = new QName(""http://schemas.xmlsoap.org/ws/2004/08/addressing"", ""Action"", ""wsa"");
        
        SoapHeaderElement he1 = message.getEnvelope().getHeader().addHeaderElement(n1);
        he1.setText(""whatever"");
        SoapHeaderElement h2 = message.getEnvelope().getHeader().addHeaderElement(n2);
        h2.setText(""whatever"");

        message.writeTo(System.out);        
---

I am no longer sure whether this is an Axiom issue at all, or Axiom simply ends up picking up a different implementation of some standard API when run inside an WLS container.

Anyways, this issue has no longer anything to do with Spring WS

> True. I will fix it, and consider that the fix of this issue, if that's OK with you.

That would be perfectly fine with me.

>  This is actually Axiom doing it's thing. Whenever you call createSOAPFaultCode() on an Axiom SOAPFactory, it adds the namespace 
> of the code at the fault level

I believe there is also an explicit call to SOAPFault#declareNamespace in the AxiomSoap12Fault#setValueText. I think AxiomSoapHeader#addHeaderElement ought to behave similarly.

Thank you so much

Oleg","16/Dec/08 8:14 PM;arjen.poutsma;One thing you could try is to swap the StAX implementation provided by BEA with Woodstox. This probably requires setting classloading to parent-last...

FYI: the WS-Addressing module currently spits out:

{code:xml}
<?xml version='1.0' encoding='UTF-8'?>
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
    <soapenv:Header xmlns:wsa=""http://www.w3.org/2005/08/addressing"">
        <wsa:To soapenv:mustUnderstand=""1"">http://springframework/to</wsa:To>
        <wsa:From>
            <wsa:Address>http://springframework/from</wsa:Address>
        </wsa:From>
        <wsa:ReplyTo>
            <wsa:Address>http://springframework/replyTo</wsa:Address>
        </wsa:ReplyTo>
        <wsa:FaultTo>
            <wsa:Address>http://springframework/faultTo</wsa:Address>
        </wsa:FaultTo>
        <wsa:Action>http://springframework/action</wsa:Action>
        <wsa:MessageID>http://springframework/messageId</wsa:MessageID>
    </soapenv:Header>
    <soapenv:Body/>
</soapenv:Envelope>
{code}","16/Dec/08 8:15 PM;arjen.poutsma;Resolving as fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#601|https://github.com/spring-projects/spring-ws/issues/601]. ",,,,,,
AxiomSoapMessageFactory payloadCaching=false causes org.springframework.ws.soap.axiom.AxiomSoapEnvelope.getBody()  to fail,SWS-457,25017,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,nikkeri,nikkeri,08/Dec/08 6:30 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Dec/08 9:40 PM,1.5.5,,,,,,1.5.6,,Core,,,,,0,,,,,,,"http://forum.springframework.org/showthread.php?t=64350

Hello,

I have problem with AxiomSoapMessageFactory payloadCaching=false.

Spring config is simple as this:

{code:xml}
<bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"">
  <property name=""payloadCaching"" value=""false""/>
</bean>

<bean class=""org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMapping"">
  <property name=""mappings"">
    <props>
      <prop key=""SoapAction1"">endpoint1</prop>
    </props>
  </property>
</bean>

<bean id=""wsdl"" class=""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"">
  <property name=""schema"" ref=""schema"" />
  <property name=""portTypeName"" value=""resource1"" />
  <property name=""locationUri"" value=""/service1/"" />
  <property name=""targetNamespace"" value=""my.service"" />
  <property name=""soapActions"">
    <props>
      <prop key=""UploadAddressMaterial"">SoapAction1</prop>
    </props>
  </property>
</bean>

<bean id=""schema"" class=""org.springframework.xml.xsd.SimpleXsdSchema "">
  <property name=""xsd"" value=""/WEB-INF/schema.xsd"" />
</bean>
{code}

I'm not using any kind of interceptors.

Actual ws end point extends AbstractStaxStreamPayloadEndpoint but the request doesn't get that far.

I get exception ""com.sun.jdi.InvocationException occurred invoking method."" when trying to invoke the web service in method org.springframework.ws.soap.axiom.AxiomSoapEnvelope.getBody().

Line 59 SOAPBody axiomBody = getAxiomEnvelope().getBody(); fails some how and the OMException on line 71 is catched. This leads to:

""Nested in org.springframework.ws.soap.axiom.AxiomSoapMessage Exception: Could not write message to OutputStream: problem accessing the parser. Parser already accessed!; nested exception is javax.xml.stream.XMLStreamException: problem accessing the parser. Parser already accessed!:
java.lang.IllegalStateException: Parser already accessed! ""



I am running spring ws v.1.5.5 and spring core 2.5.6.

Everything works fine if payloadCaching is true.

Is this a bug? There is a resolved Jira that looks much the same: id SWS-359 ","Spring 2.5.6, Windows xp, Jetty 6.1.11, apache.axiom 1.2.7, Soap UI, saaj-api and saaj-impl 1.3, jaxen 1.1",,,,,,,,,,,,,,,,,,,,,,,"19/Dec/08 12:04 AM;arjen.poutsma;echo.zip;https://jira.spring.io/secure/attachment/14976/echo.zip","19/Dec/08 3:36 AM;nikkeri;nikkeri_echo.zip;https://jira.spring.io/secure/attachment/14977/nikkeri_echo.zip","19/Dec/08 6:49 PM;nikkeri;screenshot-1.jpg;https://jira.spring.io/secure/attachment/14978/screenshot-1.jpg","21/Dec/08 4:30 PM;nikkeri;screenshot-2.jpg;https://jira.spring.io/secure/attachment/14980/screenshot-2.jpg",,,,,,,,,,24969600,,2008-12-09 03:03:10.535,3664,true,gregturn(gregturn),,,,"0|i040iv:",23459,20003,,,,,,,,"09/Dec/08 3:03 AM;arjen.poutsma;Can you supply the complete stack trace, please? As attachment or comment?","16/Dec/08 10:38 PM;nikkeri;I commented out all MessageTracing from log4j.properties and stream reading works now. 
Allso the org.springframework debuging must be turned off because the MessageDispatcher logs the incoming request and that ruins everything.

My log4j.properties file is now like this.

# Spring ws
#log4j.logger.org.springframework.ws.client.Messag eTracing.sent=DEBUG
#log4j.logger.org.springframework.ws.client.Messag eTracing.received=DEBUG
#log4j.logger.org.springframework.ws.server.Messag eTracing=DEBUG

# Spring
log4j.logger.org.springframework=INFO

Stream reading started to work but the sream writing still didn't work. My reply from this service was allmost empty like this:

{code:xml}
<soapenv:Envelope xmlns:soapenv=""shemaUrl"">
<soapenv:Body/>
</soapenv:Envelope>
{code}

When payloadCache is false the streamWriter is made like this: TraxUtils.getXMLStreamWriter(result);
When payloadCache is true   the streamWriter is made like this: getOutputFactory().createXMLStreamWriter(result);

So i changed the AbstractStaxStreamPayloadEndpoint getStreamWriter method to this:

{code}
    private XMLStreamWriter getStreamWriter(Result result) {
        XMLStreamWriter streamWriter = null;
        /*if (TraxUtils.isStaxResult(result)) {
            streamWriter = TraxUtils.getXMLStreamWriter(result);
        }*/
        //if (streamWriter == null) {
            try {
                streamWriter = getOutputFactory().createXMLStreamWriter(result);
            }
            catch (XMLStreamException ex) {
                // ignore
            }
        //}
        return streamWriter;
    }
{code}

And this solved the problem... The response is not empty anymore.

In which case should this TraxUtils.getXMLStreamWriter(result) method work and could this AbstractStaxStreamPayloadEndpoint operate like in code above?
is this a bug in spring-ws source?
Should the log4j debug work with spring-ws when payloadCache is false?

Nikkeri
","16/Dec/08 10:41 PM;nikkeri;Ok, the code is formatted very fuzzy in this jira...

In short this line is used allvays: streamWriter = getOutputFactory().createXMLStreamWriter(result)
this line is used never: streamWriter = TraxUtils.getXMLStreamWriter(result)

Nikkeri","18/Dec/08 7:05 AM;arjen.poutsma;I've improved the workings of the Axiom support. Could you try a recent snapshot (http://static.springframework.org/spring-ws/sites/1.5/downloads/snapshots.html) and see if that works better?","18/Dec/08 5:16 PM;nikkeri;I took spanshot jars from spring-ws-1.5.6-20081219.020020-20-minimal.zip. http://static.springframework.org/spring-ws/downloads/1.5-snapshot-download.php
<url>http://s3.amazonaws.com/maven.springframework.org/snapshot</url> doesn't work with my maven build. No jars with 1.5.6-SNAPSHOT don't know why.

How ever I can't see any progression here. 

1.Incoming request explodes if  there is a log4j config is like log4j.logger.org.springframework.ws.server.MessageTracing=INFO.

2. Reply is still empty. There must be some streamWriter issue. This works well if payloadCachi is true.


 
","19/Dec/08 12:04 AM;arjen.poutsma;That is very strange. I have tested this locally, on a modified echo sample, and everything seems OK for me. I will attach the sample, the changes are in StreamingEchoEndpoint and spring-ws-servlet.xml.

Are you sure you're not running an older version of Spring-WS perhaps? Because I know there were issues with this in the past...","19/Dec/08 3:36 AM;nikkeri;Hello and thank you for your test project.

I tested echo program and it didn't work either. It works exactly like my own programs with spring ws 1.5.5. When payload caching is false the reply is empty. When caching is true everything works fine.

I just couldn't run the echo project as is because my maven didn't accept the pom.xml directly. So I had to did some modifications to pom.xml to get it compiled and run in Jetty. This leads me to conclusion this must be some dependency related problem. If you could please try my version of this project and tell me what is your conclusion. Please let your maven find all the dependecys to make sure that the spring ws version in snapshot repo is the right one. The .classpath file is also included so you can compare it to yours. 

I will attach my version of the echo-program so you will se what dependency causes this problem. 

Thank you very much of your efforts so far.  

Nikkeri

p.s one missing library 'woodstox-core-asl-3.9.9-1.jar' is located in echo/lib folder. Maven can not find this library from common repository. Only sources are available at the moment.
","19/Dec/08 6:49 PM;nikkeri;SoapUI test with empty reply. ","21/Dec/08 7:32 AM;tareq;There was an [issue|http://forum.springframework.org/showthread.php?t=65190] with the snapshot builds. Now that the issue is fixed, would you please try a [recent snapshot|http://s3.amazonaws.com/maven.springframework.org/snapshot/org/springframework/ws/spring-ws/1.5.6-SNAPSHOT/spring-ws-1.5.6-20081221.210851-22-minimal.zip] to see if this fixes the issue for you?","21/Dec/08 4:30 PM;nikkeri;Echo works now!
This is so fantacstic! Thank you guys.

So the problem was I couldn't get the latest version of Spring-ws from the snapshot repository. 

Nikkeri

","21/Dec/08 9:40 PM;arjen.poutsma;Great!

Once again, sorry about the snapshot issue, but it's good that it has been resolved now.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#595|https://github.com/spring-projects/spring-ws/issues/595]. ",,,,,
Wss4jSecurityInterceptor example specifies invalid Validation Action and Securement Action,SWS-456,24944,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mccloud,mccloud,01/Dec/08 11:45 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,14/Dec/08 10:00 PM,1.5.5,,,,,,1.5.6,,Documentation,,,,,0,,,,,,,"In paragraph 7.3.1 of the reference documentation, the example configuration defines ""Decrypt"" as the Validation and Securement Action. According to the JavaDoc of Wss4jSecurityInterceptor, ""Decrypt"" is not a valid action. The example should probably define the ""Encrypt"" action.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-12-14 22:00:09.644,7661,true,gregturn(gregturn),,,,"0|i01q47:",10108,10104,,,,,,,,"14/Dec/08 10:00 PM;arjen.poutsma;Fixed. Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#594|https://github.com/spring-projects/spring-ws/issues/594]. ",,,,,,,,,,,,,,,
Mangled predefined xml 'special character' entities when using AxiomSoapMessageFactory and extending AbstractStaxStreamPayloadEndpoint,SWS-455,24931,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Duplicate,arjen.poutsma,pdotsenko,pdotsenko,01/Dec/08 6:35 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Dec/08 10:01 PM,1.5.5,,,,,,1.5.6,,Core,,,,,1,,,,,,,"Using AxiomSoapMessageFactory and with an endpoint extending AbstractStaxStreamPayloadEndpoint, special character predefined entities like &amp; or &lt; in HTTP response get 'mangled'.  For example, when the endpoint writes  <echo:echoRequest> &lt; </echo:echoRequest> to the XMLStreamWriter (which is correct) what actually gets sent in the resulting AxiomSoapMessage is this: <echo:echoRequest> &<; </echo:echoRequest> (which is incorrect).  I recreated this bug with the echo sample application in 1.5.5 by changing the endpoint to extend AbstractStaxStreamPayloadEndpoint and specifying the AxiomSoapMessageFactory  in the spring-ws-servlet.xml file (documented in this forum thread: http://forum.springframework.org/showthread.php?p=215668)

I was able to correct this behavior by modifying org.springframework.ws.soap.axiom.AxiomHandler - I simply commented out the statements inside startEntity(..) and endEntity(..) functions making them ""unsupported"".  While this did not produce any side-effects during the testing I did for my project, I have not run the full spring-ws test suite.  The change is as follows:

class AxiomHandler implements ContentHandler, LexicalHandler {

...

 public void startEntity(String name) throws SAXException {
        //make unsupported to fix mangling of special character entities        
        //charactersType = XMLStreamConstants.ENTITY_REFERENCE;
    }

    public void endEntity(String name) throws SAXException {
        //make unsupported to fix mangling of special character entities
        //charactersType = XMLStreamConstants.CHARACTERS;
    }

...

}

","Sun jdk 1.5, Spring-ws 1.5.5, Spring 2.5.6, Tomcat 6, AxiomSoapMessageFactory, endpoint extends AbstractStaxStreamPayloadEndpoint",,,,,,,,,,,,,,,SWS-434,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:24.658,7662,true,gregturn(gregturn),,,,"0|i040j3:",23460,20004,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#593|https://github.com/spring-projects/spring-ws/issues/593]. ",,,,,,,,,,,,,,,,
Spelling mistake in documentation,SWS-449,24803,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,arjen.poutsma,paulnewport,paulnewport,19/Nov/08 12:31 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,14/Dec/08 9:27 PM,1.5.5,,,,,,1.5.6,,Documentation,,,,,0,,,,,,,"Follows is spelt as ""folows"" below:

""When the inline property is enabled, it folows all XSD imports and includes, and inlines them in the WSDL. """,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-12-14 21:27:48.953,7667,true,gregturn(gregturn),,,,"0|i01q4f:",10109,10105,,,,,,,,"14/Dec/08 9:27 PM;arjen.poutsma;Fixed, thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#589|https://github.com/spring-projects/spring-ws/issues/589]. ",,,,,,,,,,,,,,,
Wss4jSecurityInterceptor accept messages when <wsse:header> is empty,SWS-448,24766,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,tareq,michelz,michelz,16/Nov/08 1:59 AM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,17/Nov/08 8:02 PM,1.5.5,,,,,,1.5.6,,Security,,,,,0,,,,,,,"http://forum.springframework.org/showthread.php?t=63553

The problem is when Wss4jSecurityInterceptor is used in the server side, to validate username token (or signature).

Everything looks fine except when a <wsse:header> empty is sent. The Interceptor lets the messsage goes and don't
throw any exceptions.

As an attachment, I'm sending a maven project with JUnit tests to prove the case. The project is a very simple web service
based on the tutorial sample. I just configure the wss4j interceptor for validate username token.

The only test thats doesn't pass is the last 'testSendMessageWithEmptyWsseHeader'

Sorry for my english... it isn't my native language. ","UsernameToken profile
X.509 Token Profile ",,,,,,,,,,,,,,,,,,,,,,,"16/Nov/08 6:03 AM;tareq;SWS-448.patch;https://jira.spring.io/secure/attachment/14872/SWS-448.patch","06/May/09 9:10 PM;peterarockiaraj;StudentWS.zip;https://jira.spring.io/secure/attachment/15366/StudentWS.zip","16/Nov/08 1:59 AM;michelz;wss4j-test.zip;https://jira.spring.io/secure/attachment/14871/wss4j-test.zip",,,,,,,,,,,289785600,,2008-11-16 06:03:28.747,7668,false,arjen.poutsma(arjen.poutsma),,,,"0|i01p7b:",9960,9976,,,,,,,,"16/Nov/08 6:03 AM;tareq;Strangely enough, WSHandler.checkReceiverResults doesn't check for this.
Michel, thanks a lot for pointing this out.
","06/May/09 9:10 PM;peterarockiaraj;Even I'm facing same problem. I am using sping-ws-secuirty-1.5.6.jar only for this. Can you please check and update me?","06/May/09 9:38 PM;michelz;Peter,

Check if you're using wss4j 1.5.4+ ... this bug was originally from wss4j:
http://issues.apache.org/jira/browse/WSS-70","06/May/09 9:56 PM;tareq;Hi Peter,

The sample you attached uses 2 endpoint mappings and I'm not sure your security interceptor is attached to the right one. Could you clean up your sample and try again?

Thanks,
 ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,
xmlsec-1.4.1 library upgrade from v. 1.4.0 breaks response encryption with Wss4jSecurityInterceptor in spring-ws 1.5.5 release.,SWS-447,24732,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,pdotsenko,pdotsenko,12/Nov/08 11:45 PM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,27/Jan/09 12:30 AM,1.5.5,,,,,,1.5.6,,Security,,,,,0,,,,,,,"I have an existing Spring-ws web services implementation which secures both client requests and responses using Wss4jSecurityInterceptor with xml encryption and digital signature.  The response is encrypted using the request signature certificate by setting securementEncryptionUser property to ""useReqSigCert"".  After upgrading spring-ws libraries from 1.5.4 to 1.5.5 I also upgraded the bundled apache xmlsec library from 1.4.0 to 1.4.1.   A bug in xmlsec1.4.1 or incompatibility between xmlsec1.4.1 and wss4j-1.5.4 libraries broke response payload content encryption using wss4j interceptor - the calling client receives garbled response xml in which some elements that were supposed to be replaced with encrypted content are left un-encrypted.  In my testing the problem only occurs on response encryption (request encryption on the client side using the same xmlsec1.4.1 jar seems to work fine).

Rolling back to xmlsec1.4.0 on both server and client fixed the problem (while keeping the rest of spring-ws 1.5.5 jars).  I also noticed that the wss4j-1.5.4 binary distribution bundles xmlsec 1.4.0 (not 1.4.1).  To avoid the encryption errors I would suggest rolling back the bundled xmlsec jar to version 1.4.0 in spring-ws releases which depend on wss4j-1.5.4.","spring-ws 1.5.5, spring 2.5.6, Tomcat 6.0.16",,,,,,,,,,,,,,SWS-477,,,,,,,,,,,,,,,,,,,,,,289785600,,2009-01-26 21:32:02.83,7669,false,arjen.poutsma(arjen.poutsma),,,,"0|i01p7j:",9961,9977,,,,,,,,"26/Jan/09 9:32 PM;tareq;Wss4j 1.5.5 depends on xml-sec 1.4.2 which is supposed to fix this issue.","27/Jan/09 12:30 AM;arjen.poutsma;Upgraded to WSS4J 1.5.5","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,,,
CLONE -JibxMarshaller - marshalSaxHandlers,SWS-445,24683,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,mariaaschauer,mariaaschauer,10/Nov/08 9:15 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Nov/08 9:25 PM,1.5.4,,,,,,,,OXM,,,,,0,,,,,,,"JiBX does not support SAX natively, so there is written to a buffer first:

ByteArrayOutputStream os = new ByteArrayOutputStream();
marshalOutputStream(graph, os);
ByteArrayInputStream is = new ByteArrayInputStream(os.toByteArray());

the character < results in &<; and not in &lt; as expected.


http://forum.springframework.org/showthread.php?t=55407&highlight=SAXResult",,,,,,,,,,,,,,,,SWS-434,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:35.96,7670,true,gregturn(gregturn),,,,"0|i01mof:",9551,9588,,,,,,,,"10/Nov/08 9:17 PM;mariaaschauer;I don't think it's a jibx bug because the following code line

marshalOutputStream(graph, os);

writes the correct result to 'os'. later on after the transformation the behavior mentioned above occurs.

Transformer transformer = transformerFactory.newTransformer();
SAXResult saxResult = new SAXResult(contentHandler);
saxResult.setLexicalHandler(lexicalHandler);
transformer.transform(new StreamSource(is), saxResult);

maybe it's a transformation problem? ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#587|https://github.com/spring-projects/spring-ws/issues/587]. ",,,,,,,,,,,,,,,
"Generated WSDL file does not contain xmime attribute ""expectedContentTypes"" present in xsd files.",SWS-442,24528,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,navinbhat,navinbhat,30/Oct/08 6:17 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,18/Dec/08 10:26 PM,1.5.4,,,,,,1.5.6,,,,,,,0,,,,,,,"The attachment contains the following files,
       1)Normal0.xsd-- schema file containing ""xmime:expectedContentTypes"" attribute.
       2)Normal1.xsd-- schema file.
       3)MyService.wsdl-- WSDL file generated using ""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"" class.
       4)spring-ws-servlet.xml-- Servlet config file used for generation of wsdl.

In spring-ws-servlet.xml file, 
    ""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"" bean generates the wsdl file from the schemaCollection bean which uses the ""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"" class.

The Normal0.xsd file,
     uses the xmime:expectedContentTypes=""application/octet-stream"" attribute to specify binary data, but the wsdl generated by ""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"" class does not contain the xmime attribute.The generated wsdl file ""MyService.wsdl"" is attached.

Without xmime attribute in generated wsdl file the client code generation will not have Datahandler class.

It is also observed that when i use ""org.springframework.xml.xsd.SimpleXsdSchema"" class for specifying xsd file, the xmime attribute is reflected in wsdl file.But this class cannot be used for multiple xsd files.

Kindly let me know if more info is required,

Thanks in advance ,
Navin Bhat 

","Spring Web Services 1.5.4
Apache Maven 2.0.9
Eclipse 3.3.2,Windows XP SP2",,,,86400,86400,,0%,86400,86400,,,,,,,,,,,,,,"30/Oct/08 6:17 PM;navinbhat;WSDL and Servlet Config Files.zip;https://jira.spring.io/secure/attachment/14822/WSDL+and+Servlet+Config+Files.zip",,,,,,,,,,,,,24969600,,2008-12-18 08:55:17.674,7673,true,gregturn(gregturn),,,,"0|i02mcv:",15331,14569,,,,,,,,"18/Dec/08 8:55 AM;arjen.poutsma;I am pretty sure this is a Commons Xml Schema bug, though I will investigate further.
","18/Dec/08 10:26 PM;arjen.poutsma;Actually, it wasn't a Commons Xml schema bug, but a SWS bug. 

Could you please try a recent (as of tonight) snapshot and try again?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#585|https://github.com/spring-projects/spring-ws/issues/585]. ",,,,,,,,,,,,,,
WebServiceTemplate still creates a connection even if a ClientInterceptor sets a Response,SWS-440,24436,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,hstoerr,hstoerr,23/Oct/08 8:19 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,27/Jan/09 11:09 PM,1.5.4,,,,,,1.5.6,,Core,,,,,1,,,,,,,"Problem: When a response is set on the messagecontext by a ClientInterceptor.handleRequest, an actual connection to the webservice is still created and the Webservice is actually accessed in hasError or hasFault. I would expect that the WebServiceTemplate would not even create a connection in this case.

Background: I tried to write a ClientInterceptor for the WebServiceTemplate that simulates an actual webservice call during a selftest of the system. ClientInterceptor.hasRequest checks whether this is during a selftest and sets the response on the MessageContext and the other system should never be contacted at all.

Possible Solutions:

- As a quick fix one could extend the first if(messageContext.hasResponse() ) in WebServiceTemplate.doSendAndReceive(MessageContext, ...) to the hasError check, since this check does not make much sense if the response was not sent, does it? 8-)

- Even if this quick fix is done, MessageContext.createConnection is still called, which does not seem appropriate to me. Perhaps this should be done only later, after the interceptors have been called?
",,,,,,,,,,,,,,,,,,,,SWS-263,,,,,,,,,,,,,,,,,24969600,,2008-12-16 22:52:14.651,7675,true,gregturn(gregturn),,,,"0|i040jj:",23462,20009,,,,,,,,"16/Dec/08 10:52 PM;arjen.poutsma;SWS-263 seems related to what you're trying to do.

That said, the connection should not be opened. I will fix.","27/Jan/09 11:09 PM;arjen.poutsma;I tried fixing this without breaking backwards compatibility and also make sure that all the various other transports and callbacks kept working, but couldn't. So I am resolving this as Won't Fix, unfortunately.

Overall, taking the route of a Mock Transport (SWS-263) for doing integration tests on web services would have my preference for the scenario you describe.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#583|https://github.com/spring-projects/spring-ws/issues/583]. ",,,,,,,,,,,,,,
"Reference guide, chapter 5.3.1.1., contains typo",SWS-439,24342,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,novotnyr,novotnyr,17/Oct/08 12:43 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,20/Oct/08 3:13 AM,,,,,,,1.5.5,,Documentation,,,,,0,,,,,,,"Reference guide, chapter 5.3.1.1 contains typo in the sentence:

All WsdlDefinition bean definitions are exposed by the MessageDispatcherServlet under their _____bean id (or bean id)_____ with the suffix .wsdl.

I suppose that it should read ""under their bean name (or bean id) with the suffix .wsdl"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:31.967,7676,true,gregturn(gregturn),,,,"0|i01q4v:",10111,10107,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#582|https://github.com/spring-projects/spring-ws/issues/582]. ",,,,,,,,,,,,,,,,
Method addOmittedFields in XStreamMarshaller should access XStream instance via getter.,SWS-437,24220,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,novotnyr,novotnyr,07/Oct/08 4:16 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,07/Oct/08 8:18 PM,,,,,,,1.5.5,,OXM,,,,,0,,,,,,,"XStreamMarshaller consistently accesses to the XStream instance via getters. However the method addOmittedFields() contains the direct access to the XStream instance.
Original code:
    public void addOmittedField(Class type, String fieldName) {
        xstream.omitField(type, fieldName);
    }

This is inconsistent with the rest of the code in the class and prevents the subclasses of XStreamMarshaller to provide their own implementation of XStream.","Spring WS 1.5.4, JDK 5",,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:45.476,7678,true,gregturn(gregturn),,,,"0|i01mon:",9552,9589,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#580|https://github.com/spring-projects/spring-ws/issues/580]. ",,,,,,,,,,,,,,,,
JibxMarshaller - marshalSaxHandlers,SWS-434,24154,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,mariaaschauer,mariaaschauer,01/Oct/08 7:48 PM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,12/Dec/08 9:59 PM,1.5.4,,,,,,1.5.6,,OXM,,,,,0,,,,,,,"JiBX does not support SAX natively, so there is written to a buffer first:

ByteArrayOutputStream os = new ByteArrayOutputStream();
marshalOutputStream(graph, os);
ByteArrayInputStream is = new ByteArrayInputStream(os.toByteArray());

the character < results in &<; and not in &lt; as expected.


http://forum.springframework.org/showthread.php?t=55407&highlight=SAXResult",,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/08 6:57 PM;tareq;SWS-434.patch;https://jira.spring.io/secure/attachment/14952/SWS-434.patch",,,,,,,,,,,,,289785600,,2008-10-03 22:26:39.57,7681,false,arjen.poutsma(arjen.poutsma),,,,"0|i01mov:",9553,9590,,,,,,,,"03/Oct/08 10:26 PM;arjen.poutsma;Sadly, this seems to be a JiBX bug, and there is very little I can do about it.","06/Oct/08 1:13 AM;mariaaschauer;I don't think it's a jibx bug because the following code line

marshalOutputStream(graph, os); 

writes the correct result to 'os'. later on after the transformation the behavior mentioned above occurs. 

Transformer transformer = transformerFactory.newTransformer();
SAXResult saxResult = new SAXResult(contentHandler);
saxResult.setLexicalHandler(lexicalHandler);
transformer.transform(new StreamSource(is), saxResult);

maybe it's a transformation problem?
","12/Dec/08 6:57 PM;tareq;The problem lies in how AxiomHandler processes predefined entity reference. The patch adds a test for those references in the startEntity method. ","12/Dec/08 9:59 PM;arjen.poutsma;Fixed. Thanks for the patch, Tareq!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,
AxiomSoap12Body.getFault() returns object of type AxiomSoap11Fault,SWS-432,24062,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mzingg,mzingg,22/Sep/08 8:20 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,22/Sep/08 8:31 PM,1.5.4,,,,,,1.5.5,,Core,,,,,0,,,,,,,"AxiomSoap12Body.getFault() returns object of type AxiomSoap11Fault

Cause: AxiomSoap12Body does not implement the method getFault. So the getFault() method of the super class AxiomSoapBody is called which returns an object of type AxiomSoap11Fault.

Proposal to solve the issue: Remove the getFault() method from the super class and implement specific methods in the sub classes AxiomSoap11Body respectively AxiomSoap12Body.",not relevant,,,,,,,,,,,,,,,,,,,,,,,"22/Sep/08 8:28 AM;mzingg;patch_SWS-432.zip;https://jira.spring.io/secure/attachment/14703/patch_SWS-432.zip",,,,,,,,,,,,,24969600,,2008-09-22 20:31:55.41,7683,true,gregturn(gregturn),,,,"0|i040jz:",23464,20014,,,,,,,,"22/Sep/08 8:28 AM;mzingg;Attached zip file contains the three classes taken from Spring WS 1.5.4 adapted to the proposed solution which works fine for me.","22/Sep/08 8:31 PM;arjen.poutsma;Fixed. Thanks for the patch!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#577|https://github.com/spring-projects/spring-ws/issues/577]. ",,,,,,,,,,,,,,
WSDL is renedered without resolving dynamic attributes managed using a PropertyPlaceHolderConfigurer object,SWS-430,23971,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,pakin,pakin,14/Sep/08 7:02 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Dec/08 10:40 PM,1.5.4,,,,,,1.5.6,,,,,,,0,,,,,,,"If I define my WSDL publiching bean like this:

     <bean id=""stdWebServiceDefinitionFile"" class=""org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition"">
    	<property name=""schemaCollection"" ref=""stdSchemaCollection""/>
        <property name=""portTypeName"" value=""sendStateTerritoryData""/>
        <property name=""locationUri"" value=""${public.app.url}/shipwreck/sendStateTerritoryDataService/""/>
        <property name=""targetNamespace"" value=""http://environment.gov.au/shipwreck/std/definitions""/>
    </bean>

it won't resolve the property ${public.app.url} when rendering the wsdl file and will render it wrongly, but the service works perfectly.","windows xp 32, JDK 1.6",,,,,,,,,,,,,,,,,,,,,,,"15/Sep/08 10:20 AM;pakin;stdWebServiceDefinitionFile.wsdl;https://jira.spring.io/secure/attachment/14677/stdWebServiceDefinitionFile.wsdl",,,,,,,,,,,,,24969600,,2008-09-14 19:30:11.14,7685,true,gregturn(gregturn),,,,"0|i040k7:",23465,20015,,,,,,,,"14/Sep/08 7:30 PM;arjen.poutsma;Could you please attach the generated wsdl?","15/Sep/08 10:28 AM;pakin;Sure!

There you can find the line #631:
<soap:address location=""${public.app.url}/shipwreck/sendStateTerritoryDataService/""/>

As I told you the problem is just when I render the wsdl file, because internally the service is working with the property value resolved. Maybe this unexpected behavior is also related to the issue SWS-429  that I have lodged.

Thanks.","16/Dec/08 10:40 PM;arjen.poutsma;I just tested this, and afraid that I can't reproduce it. Are you sure you have a 

{code:xml}
<context:property-placeholder location=""classpath:wsdl.properties""/>
{code}

in the *same* application context as the {{DefaultWsdl11Definition}} whose properties you're replacing? Since the PropertyPlaceHolderConfigurer is a BeanPostProcessor, it only acts on the app context is defined in. So if you have a child web app context (containing endpoints, mappings etc) with a parent context (containing services, dao's), putting the configurer in the parent context is not going to change properties in the child context.

","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#575|https://github.com/spring-projects/spring-ws/issues/575]. ",,,,,,,,,,,,,
Spring WS authentication doesn't work when using a PropertyPlaceHolderConfigurer object,SWS-429,23970,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,pakin,pakin,14/Sep/08 6:52 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Dec/08 10:42 PM,1.5.4,,,,,,,,,,,,,0,,,,,,,"Hi.

My web service begins to fail when  I change the SimplePasswordValidationCallbackHandler to get the password from a PropertyPlaceHolderConfigurer  like this:

    <bean id=""simpleTokenValidationHandler""
    	class=""org.springframework.ws.soap.security.xwss.callback.SimplePasswordValidationCallbackHandler"">
    	<property name=""users"">
    		<props>
    			<prop key=""user""><b>${ws.password}</b></prop>
    		</props>
    	</property>
    </bean>

I know that it is resolving its value at start-up but the authentication fails and it shouldn't.","windows 32 bits, JDK 1.6",,,,,,,,,,,,,,,,,,,SWS-430,,,,,,,,,,,,,,,,,24969600,,2008-09-14 19:36:53.797,7686,true,gregturn(gregturn),,,,"0|i03c0n:",19489,20016,,,,,,,,"14/Sep/08 6:54 PM;pakin;Sorry, this is the bean definition that is failing

    <bean id=""simpleTokenValidationHandler""
    	class=""org.springframework.ws.soap.security.xwss.callback.SimplePasswordValidationCallbackHandler"">
    	<property name=""users"">
            <props>
                <prop key=""DATA_HARVEST"">${ws.password}</prop>
            </props>
        </property>
    </bean>","14/Sep/08 7:36 PM;arjen.poutsma;I can't think of a reason why this wouldn't work. Are you sure the properties are replaced at all?

You could try wiring up a simple pojo, wire it up with a property, and print out the property value as soon as injected. Just to be sure.","15/Sep/08 10:55 AM;pakin;Yes, I am completely sure. I think it is comparing against the literal ""${ws.password}"" instead of using the resolved value. I think the issue SWS-430 could be related to this and the way property binding is managed.","16/Dec/08 10:42 PM;arjen.poutsma;I cannot reproduce this. See SWS-430 for a suggested fix.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#574|https://github.com/spring-projects/spring-ws/issues/574]. ",,,,,,,,,,,,
AbstractEndpointExceptionResolver.resolveException() does not let subclasses have full access to the MethodEndpoint that raised an exception,SWS-427,23913,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tunaranch,tunaranch,07/Sep/08 8:18 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/Sep/08 9:03 PM,1.5.2,1.5.3,1.5.4,,,,1.5.5,,Core,,,,,0,,,,,,,"In resolveException(), the MethodEndpoint gets replaced with it's bean name. As a consequence, subclasses can no longer inspect the MethodEndpoint.

Discussion in this thread: http://forum.springframework.org/showthread.php?p=200392.

",,,,,,,,,,,,,,,,,,,,,,,,"11/Sep/08 1:23 AM;tareq;SWS-427.patch;https://jira.spring.io/secure/attachment/14668/SWS-427.patch",,,,,,,,,,,,,24969600,,2008-09-18 11:23:27.566,7688,true,gregturn(gregturn),,,,"0|i040kf:",23466,20017,,,,,,,,"18/Sep/08 10:58 AM;tunaranch;Thanks, guys, for fixing this. Any ideas if we'll see, say, a milestone build or something?

I need to decide whether to:
a) Wait for 1.5.5
b) Start using a nightly
c) Implement a workaround until 1.5.5 comes out.","18/Sep/08 11:23 AM;tareq;Well, I reckon you could use the nightly builds while waiting for the final 1.5.5 release.
You can get the snapshots here:
http://static.springframework.org/spring-ws/downloads/1.5-snapshot-download.php
 ","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#573|https://github.com/spring-projects/spring-ws/issues/573]. ",,,,,,,,,,,,,,
Class AxiomUtils is not java 1.4 compatible,SWS-422,23767,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tareq,tareq,26/Aug/08 10:57 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,01/Sep/08 9:45 PM,1.5.1,1.5.2,1.5.3,1.5.4,,,1.5.5,,Core,,,,,0,,,,,,,"In the class AxiomUtils, the methods toDocument and toEnvelope construct an IllegalArgumentException with a constructor introduced in java 1.5:
public IllegalArgumentException(String message, Throwable cause)
",,,,,,,,,,,,,,,,,,,,,,,,"26/Aug/08 11:53 PM;tareq;SWS-422.patch;https://jira.spring.io/secure/attachment/14601/SWS-422.patch",,,,,,,,,,,,,24969600,,2012-05-04 07:03:40.569,7692,true,gregturn(gregturn),,,,"0|i040kv:",23468,20020,,,,,,,,"26/Aug/08 11:53 PM;tareq;patch.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#570|https://github.com/spring-projects/spring-ws/issues/570]. ",,,,,,,,,,,,,,,
"XSD Root element name with and without suffix ""Request"" generate different WSDL",SWS-421,23758,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,pakin,pakin,25/Aug/08 4:57 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 9:40 AM,1.5.4,,,,,,,,,,,,,0,,,,,,,"Why the following schemas generate quite a lot different WSDL files.

This XSD:
<?xml version=""1.0"" encoding=""UTF-8""?>
<xs:schema 	xmlns:xs=""http://www.w3.org/2001/XMLSchema""
			elementFormDefault=""qualified""
			targetNamespace=""http://environment.gov.au/shipwreck/std/schemas""
			xmlns:std=""http://environment.gov.au/shipwreck/std/schemas"">
	<xs:element name=""StateTerritoryDataRequest"">
		<xs:complexType>
			<xs:sequence>
				<xs:element name=""listRelic"" type=""xs:string""
					minOccurs=""0"" maxOccurs=""1"" />
				<xs:element name=""listShipwreck"" type=""xs:string""
					minOccurs=""0"" maxOccurs=""1"" />
			</xs:sequence>		
		</xs:complexType>
	</xs:element>
</xs:schema>

generates this WSDL:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?><wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:sch=""http://environment.gov.au/shipwreck/std/schemas"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://environment.gov.au/shipwreck/std/definitions"" targetNamespace=""http://environment.gov.au/shipwreck/std/definitions"">
  <wsdl:types>
    <xs:schema xmlns:std=""http://environment.gov.au/shipwreck/std/schemas"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" elementFormDefault=""qualified"" targetNamespace=""http://environment.gov.au/shipwreck/std/schemas"">
	<xs:element name=""StateTerritoryDataRequest"">
		<xs:complexType>
			<xs:sequence>
				<xs:element maxOccurs=""1"" minOccurs=""0"" name=""listRelic"" type=""xs:string""/>
				<xs:element maxOccurs=""1"" minOccurs=""0"" name=""listShipwreck"" type=""xs:string""/>
			</xs:sequence>			
		</xs:complexType>
	</xs:element>
</xs:schema>
  </wsdl:types>
  <wsdl:message name=""StateTerritoryDataRequest"">
    <wsdl:part element=""sch:StateTerritoryDataRequest"" name=""StateTerritoryDataRequest"">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name=""STDPort"">
    <wsdl:operation name=""StateTerritoryData"">
      <wsdl:input message=""tns:StateTerritoryDataRequest"" name=""StateTerritoryDataRequest"">
    </wsdl:input>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name=""STDPortSoap11"" type=""tns:STDPort"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
    <wsdl:operation name=""StateTerritoryData"">
      <soap:operation soapAction=""""/>
      <wsdl:input name=""StateTerritoryDataRequest"">
        <soap:body use=""literal""/>
      </wsdl:input>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name=""STDPortService"">
    <wsdl:port binding=""tns:STDPortSoap11"" name=""STDPortSoap11"">
      <soap:address location=""http://localhost:8080/shwrd_ws/shipwreck/stateTerritoryDataService/""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

and this XSD, which only change the root element name:
<?xml version=""1.0"" encoding=""UTF-8""?>
<xs:schema 	xmlns:xs=""http://www.w3.org/2001/XMLSchema""
			elementFormDefault=""qualified""
			targetNamespace=""http://environment.gov.au/shipwreck/std/schemas""
			xmlns:std=""http://environment.gov.au/shipwreck/std/schemas"">
	<xs:element name=""StateTerritoryData"">
		<xs:complexType>
			<xs:sequence>
				<xs:element name=""listRelic"" type=""xs:string""
					minOccurs=""0"" maxOccurs=""1"" />
				<xs:element name=""listShipwreck"" type=""xs:string""
					minOccurs=""0"" maxOccurs=""1"" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

generates a complete different WSDL file:
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?><wsdl:definitions xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:sch=""http://environment.gov.au/shipwreck/std/schemas"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tns=""http://environment.gov.au/shipwreck/std/definitions"" targetNamespace=""http://environment.gov.au/shipwreck/std/definitions"">
  <wsdl:types>
    <xs:schema xmlns:std=""http://environment.gov.au/shipwreck/std/schemas"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" elementFormDefault=""qualified"" targetNamespace=""http://environment.gov.au/shipwreck/std/schemas"">
	<xs:element name=""StateTerritoryData"">
		<xs:complexType>
			<xs:sequence>
				<xs:element maxOccurs=""1"" minOccurs=""0"" name=""listRelic"" type=""xs:string""/>
				<xs:element maxOccurs=""1"" minOccurs=""0"" name=""listShipwreck"" type=""xs:string""/>
			</xs:sequence>			
		</xs:complexType>
	</xs:element>
</xs:schema>
  </wsdl:types>
  <wsdl:portType name=""STDPort"">
  </wsdl:portType>
  <wsdl:binding name=""STDPortSoap11"" type=""tns:STDPort"">
    <soap:binding style=""document"" transport=""http://schemas.xmlsoap.org/soap/http""/>
  </wsdl:binding>
  <wsdl:service name=""STDPortService"">
    <wsdl:port binding=""tns:STDPortSoap11"" name=""STDPortSoap11"">
      <soap:address location=""http://localhost:8080/shwrd_ws/shipwreck/stateTerritoryDataService/""/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>

How can that be so? I though SpringWS was mature enough to use it. But now I am really scared of going ahead with this.

Cheers.","JDK 1.6, Windows 32bits",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-28 09:40:46.78,7693,true,gregturn(gregturn),,,,"0|i03bxr:",19476,20021,,,,,,,,"27/Aug/08 6:21 PM;pakin;Well it seems that was happen was ignorance. I have just read about the defaults requestSuffix and responseSuffix. Sorry about that.","28/Aug/08 9:40 AM;arjen.poutsma;No problem.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#569|https://github.com/spring-projects/spring-ws/issues/569]. ",,,,,,,,,,,,,,
AxiomSoapMessage + SOAP1.2 SoapAction,SWS-420,23737,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,seschmid,seschmid,24/Aug/08 10:00 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,26/Sep/08 12:48 AM,1.5.4,,,,,,1.5.5,,,,,,,0,,,,,,,"AxiomSoapMessage and SOAP1.2 SoapAction Problem.
I'm not sure, but as far as I read, in SOAP 1.2 the SoapAction parameter now part of Content-Type.
( http://www.w3.org/TR/2003/REC-soap12-part2-20030624/#ietf-action ).
org.springframework.ws.soap.axiom.AxiomSoapMessage.writeTo(OutputStream outputStream) don't extend the content-type header with the action paramater
in case of an soap1.2 message.
independent from the soap version, an SOAPAction header element is created.
",,,,,,,,,,,,,,,,,,,,,,,,"14/Sep/08 12:18 AM;tareq;SWS-420.patch;https://jira.spring.io/secure/attachment/14675/SWS-420.patch",,,,,,,,,,,,,24969600,,2008-09-14 00:18:44.125,7694,true,gregturn(gregturn),,,,"0|i040l3:",23469,20022,,,,,,,,"14/Sep/08 12:18 AM;tareq;patch + unit tests. Support for reading/writing Soap 1.2 action for Saaj and Axiom messages.","26/Sep/08 12:48 AM;arjen.poutsma;Fixed.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#568|https://github.com/spring-projects/spring-ws/issues/568]. ",,,,,,,,,,,,,,
Packaging: Wrong castor version in distribution.,SWS-419,23704,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,stu,stu,20/Aug/08 11:18 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 9:26 AM,1.5.2,1.5.3,1.5.4,,,,1.5.5,,,,,,,0,,,,,,,"I looks like spring-ws-1.5.4 is build against castor-1.2 while the spring-ws-1.5.4-with-dependencies.zip contains castor-1.1.2.jar.
The documentations refers to 1.1.2 as well...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-28 09:26:39.974,7695,true,gregturn(gregturn),,,,"0|i040lb:",23470,20023,,,,,,,,"28/Aug/08 9:26 AM;arjen.poutsma;Fixed! Thanks for spotting this.","02/Sep/08 5:20 AM;rdransfo;Just wanted to note that this issue appears as far back as 1.5.2.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#511|https://github.com/spring-projects/spring-ws/issues/511]. ",,,,,,,,,,,,,,
Castor mappings are added multiple times,SWS-418,23702,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,stu,stu,20/Aug/08 11:11 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 9:23 AM,1.5.4,,,,,,1.5.5,,OXM,,,,,0,,,,,,,"When using multiple mapping files for castor the CastorMarshaller adds each mapping several times.

i.e.
<bean id=""castorMarshaller"" class=""org.springframework.oxm.castor.CastorMarshaller"" >
		<property name=""mappingLocations"">
			<list>                               
				<value>classpath:file1.xml</value>
				<value>classpath:file2.xml</value>                
				<value>classpath:file3.xml</value>
			</list>
		</property>
</bean>

The mappings from file1 are added 3 times because the addMapping() method is called within the loop with the entire mapping.
I think method

    protected XMLContext createXMLContext(Resource[] mappingLocations, Class targetClass)
            throws MappingException, IOException, ResolverException {
        XMLContext context = new XMLContext();
        if (!ObjectUtils.isEmpty(mappingLocations)) {
            Mapping mapping = new Mapping();
            for (int i = 0; i < mappingLocations.length; i++) {
                mapping.loadMapping(SaxUtils.createInputSource(mappingLocations[i]));
                context.addMapping(mapping);
            }
        }
        if (targetClass != null) {
            context.addClass(targetClass);
        }
        return context;
    }

Should actually look like this

    protected XMLContext createXMLContext(Resource[] mappingLocations, Class targetClass)
            throws MappingException, IOException, ResolverException {
        XMLContext context = new XMLContext();
        if (!ObjectUtils.isEmpty(mappingLocations)) {
            Mapping mapping = new Mapping();
            for (int i = 0; i < mappingLocations.length; i++) {
                mapping.loadMapping(SaxUtils.createInputSource(mappingLocations[i]));
            }
            context.addMapping(mapping);
        }
        if (targetClass != null) {
            context.addClass(targetClass);
        }
        return context;
    }


BTW: Adding mappings multiple times will result in strange behavior because Castor tries identify objects by their namespace if it finds multiple entries with the same name and fails because of bad namespace support within castor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-28 09:23:17.752,7696,true,gregturn(gregturn),,,,"0|i01mp3:",9554,9591,,,,,,,,"28/Aug/08 9:23 AM;arjen.poutsma;Fixed! Thanks for spotting this.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#567|https://github.com/spring-projects/spring-ws/issues/567]. ",,,,,,,,,,,,,,,
spring-ws-core-tiger should be declared as an OSGi fragment since it contributes classes to packages from spring-ws-core,SWS-417,23692,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mpilquist,mpilquist,20/Aug/08 9:19 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,22/Sep/08 12:29 AM,1.5.4,,,,,,1.5.5,,Core,,,,,1,,,,,,,"Currently, despite all Spring WS JARs being OSGi bundles, you can't use classes from spring-ws-core-tiger in an OSGi container.  This is due to spring-ws-core-tiger exporting packages that are already exported by spring-ws-core.

The easiest fix for this would be to change spring-ws-core-tiger to a fragment bundle, with its host bundle set to spring-ws-core.  This can be fixed by adding the following manifest entry to spring-ws-core-tiger.

Fragment-Host: org.springframework.bundle.ws.core;version=""[1.5.4, 1.5.4]""

I have not checked if the oxm/oxm-tiger JARs have a similar issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-09-21 19:19:23.807,5520,true,gregturn(gregturn),,,,"0|i040lj:",23471,20024,,,,,,,,"21/Sep/08 7:19 PM;arjen.poutsma;As a temporary workaround, you can use the Bundle Repository bundles, for instance: 

http://www.springsource.com/repository/app/bundle/version/detail?name=org.springframework.oxm.java5&version=1.5.4.A&searchType=bundlesByName&searchQuery=xml","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#566|https://github.com/spring-projects/spring-ws/issues/566]. ",,,,,,,,,,,,,,,
Wss4jSecurityInterceptor loosing SOAPAction header,SWS-416,23632,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,bosakm,bosakm,15/Aug/08 4:52 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 9:43 AM,1.5.3,,,,,,1.5.5,,Security,,,,,0,,,,,,,"When the Wss4jSecurityInterceptor replaces the AxiomMessage in the SoapMessage, if the original SoapMessage already had a SoapAction set, the value is lost.

I believe, in the Wss4jSecurityInterceptor.replaceMessage() method, the following workaround should be done:

// replace the Axiom message
String tempSoapAction = soapMessage.getSoapAction();

axiomMessage.setAxiomMessage(newMessage);

soapMessage.setSoapAction(tempSoapAction);",,,,,,,,,,,,,,,,,,,,,,,,"28/Aug/08 2:54 AM;tareq;SWS-416.patch;https://jira.spring.io/secure/attachment/14609/SWS-416.patch",,,,,,,,,,,,,24969600,,2008-08-28 02:54:37.915,7697,true,gregturn(gregturn),,,,"0|i01p87:",9964,9980,,,,,,,,"28/Aug/08 2:54 AM;tareq;patch + unit test.","28/Aug/08 9:43 AM;arjen.poutsma;Fixed. Thanks!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#565|https://github.com/spring-projects/spring-ws/issues/565]. ",,,,,,,,,,,,,,
Obtaining Source and Result for AbstractSoapMessage,SWS-415,23616,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,mzaalam,mzaalam,14/Aug/08 1:12 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 7:19 AM,1.5.4,,,,,,,,Core,,,,,0,,,,,,,"The WebserviceMessage Interface API has methods for getPayloadSource and getPayloadResult.

The implementation of the AxiomSoapMessage uses the AbstractSoapMessage methods for these.  However, these explicitly work on the SoapBody (getSoapBody().getPayloadResult).  

I believe that either:
a) these methods should return the Result and Source for the WHOLE message (including header), or
b) there should be additional methods in the SoapMessage API that allow the Envelope to be obtained as a Result (getSource is implemented).",All,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-28 07:19:26.921,7698,true,gregturn(gregturn),,,,"0|i03bz3:",19482,20025,,,,,,,,"28/Aug/08 7:19 AM;arjen.poutsma;The choice to make the SOAP envelope readable only is a conscious design choice. It becomes quite difficult to enforce WS-I interoperability when you can manipulate envelopes arbitrarily.

However, you can always get a reference to the wrapped SAAJ or Axiom message via the getSaajMessage() and getAxiomMessage(), respectably.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#564|https://github.com/spring-projects/spring-ws/issues/564]. ",,,,,,,,,,,,,,,
JAR Package spring-oxm-1.5.4.jar is incorrect in distributed zip file and maven central repositories,SWS-414,23611,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Invalid,arjen.poutsma,pakin,pakin,13/Aug/08 4:36 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 7:11 AM,1.5.4,,,,,,,,OXM,,,,,1,,,,,,,"HI.

Just to let you know that the distributed jar file spring-oxm-1.5.4.jar is incorrect, because the code is not the same that the one you can find in the general package file spring-ws-1.5.4.jar
I notice that when trying to use the class ""org.springframework.oxm.jaxb.Jaxb2Marshaller"", which is not present in the spring-oxm-1.5.4.jar but it is in the spring-ws-1.5.4.jar

The problem is in both the distributed zip from the spring ws portal and in the maven repositories.

Hope it helps to find and solve  the error.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-28 07:11:42.682,7699,true,gregturn(gregturn),,,,"0|i01mpb:",9555,9592,,,,,,,,"28/Aug/08 7:11 AM;arjen.poutsma;The Jaxb2Marshaller is contained in the spring-oxm-tiger jar, which is available here: http://repo1.maven.org/maven2/org/springframework/ws/spring-oxm-tiger/1.5.4/","28/Aug/08 10:29 AM;pakin;Thanks","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#563|https://github.com/spring-projects/spring-ws/issues/563]. ",,,,,,,,,,,,,,
PayloadTransformingInterceptor does not work with a DomPoxMessage - the transformation clears the document,SWS-412,23563,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mengugu,mengugu,10/Aug/08 8:59 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,02/Sep/08 2:38 AM,1.5.4,,,,,,1.5.5,,Core,,,,,2,,,,,,,"This bug is related to SWS-248

Emptying the Document in the method getPayloadResult() of the DomPoxMessage makes the transformation in the PayloadTransformingInterceptor  impossible.

PayloadTransformingInterceptor  source code 1.5.4

80      public boolean handleRequest(MessageContext messageContext, Object endpoint) throws Exception {
81          if (requestTemplates != null) {
82              WebServiceMessage request = messageContext.getRequest();
83              Transformer transformer = requestTemplates.newTransformer();
84              transformer.transform(request.getPayloadSource(), request.getPayloadResult());
85              logger.debug(""Request message transformed"");
86          }
87          return true;
88      }

Line 84, before the transform() method is called, the 2nd argument evaluation clears the document inside the DomPoxMessage, so the DOMSource created by calling the 1st argument wraps now an empty document, the transformation returns always an empty XML.

See my small test :
	public static void main(String[] args) throws IOException, TransformerFactoryConfigurationError, TransformerException {
	
		
		String content = ""<element xmlns=\""http://www.springframework.org/spring-ws\"" />"";
		byte[] bytes = content.getBytes(""UTF-8"");
	    InputStream input = new ByteArrayInputStream(bytes);
		
		DomPoxMessageFactory factory = new DomPoxMessageFactory();
		DomPoxMessage domPoxMsg = (DomPoxMessage) factory.createWebServiceMessage(input);
		
		
		Result result = new StreamResult(System.out);
		Transformer t = TransformerFactory.newInstance().newTransformer();
		System.out.println(""1. Transformation to System.out :"");
		t.transform(domPoxMsg.getPayloadSource(), result);
		
		System.out.println(""\n\n"");
		System.out.println(""2. Transformation to message itself as Result (=interceptor)"");
		t.transform(domPoxMsg.getPayloadSource(), domPoxMsg.getPayloadResult());
		
		System.out.println(""\n\n"");
		System.out.println(""3. Transformation to System.out :"");
		t.transform(domPoxMsg.getPayloadSource(), result);
		
		
	}

The solution may be to add an intermediate transformation ( a simple StreamResult) but as it is working for other WebServiceMessage implementation ( SOAP ) it could be too heavy ...

Note also that a testPayLoadInterceptor() could be added in DomPoxMessageTest 
","Weblogic 9.2.2, Java 1.5_10",,,,,,,,,,,,,,,,,,,SWS-248,,,,,,,,,,,,,,,,,24969600,,2008-09-02 02:38:42.289,7701,true,gregturn(gregturn),,,,"0|i040lr:",23472,20026,,,,,,,,"02/Sep/08 2:38 AM;arjen.poutsma;Done, transforming to a intermediate buffer now. This might be slower, but at least it works for all WebServiceMessage implementations.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#562|https://github.com/spring-projects/spring-ws/issues/562]. ",,,,,,,,,,,,,,,
"When using permanent replyTo queues, their JNDI names can't start with jms/ in the defaultUri property of the WebServiceGateway",SWS-411,23460,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,miha,miha,06/Aug/08 6:26 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/Aug/08 5:27 AM,1.5.3,,,,,,1.5.5,,Core,,,,,0,,,,,,,"We are using permanent queues defined as JNDI resources in a WAS 6.1. Their JNDI names start with jms/, for instance jms/RESPONSE_QUEUE.
We have a client which is configured like this, along side with a jndiDestinationResolver and a jndiTemplate:
[code]
<bean id=""serviceGateway"" class=""net.croz.client.ServiceGatewayImpl"">
        <property name=""defaultUri"" value=""jms:jms/REQUEST_QUEUE?replyToName=jms/REPLY_QUEUE"" />
        <property name=""messageSenders"">
            <bean class=""org.springframework.ws.transport.jms.JmsMessageSender"">
                <property name=""connectionFactory"" ref=""mqConnectionFactory"" />
                <property name=""pubSubDomain"" value=""false"" />
                <property name=""destinationResolver"" ref=""jndiDestinationResolver""></property>
                <property name=""receiveTimeout"" value=""10000""></property>
            </bean>
        </property>
</bean>

<bean id=""jndiTemplate""
        class=""org.springframework.jndi.JndiTemplate"">
        <property name=""environment"">
          <props>
            <prop key=""java.naming.factory.initial"">com.ibm.websphere.naming.WsnInitialContextFactory</prop>
            <prop key=""java.naming.provider.url"">iiop://localhost:2810</prop>
          </props>
        </property>
</bean>

<bean id=""jndiDestinationResolver"" class=""org.springframework.jms.support.destination.JndiDestinationResolver"">
        <property name=""jndiTemplate"" ref=""jndiTemplate""></property>
</bean>
[code/]

When invoking a fully functional web service (under our control), the request ends up in the REQUEST_QUEUE, but when the client tries to find the RESPONSE_QUEUE via its JNDI name (jms/REPLY_QUEUE) it fails with:
[code]
Destination [jms] not found in JNDI; nested exception is org.springframework.jndi.TypeMismatchNamingException: Object of type [class com.ibm.ws.naming.jndicos.CNContextImpl] available at JNDI location [jms] is not assignable to [javax.jms.Destination]
[/code]

Observe the ""..available at JNDI location [jms]..."" part in particular... This led me to investigate the code responsible for parsing the defaultUri property of the WebServiceGateway. What I've found is that the regular expression responsible for the parsing of the replyToName part of the defaultUri:
[code]
public abstract class JmsTransportUtils {
.......    
     private static final Pattern REPLY_TO_NAME_PATTERN = Pattern.compile(""replyToName=(\\w+)"");
.......
}
[/code]
strips everything behind the ""jms"" part of the JNDI name.

To do a quick fix, I've externalized the JmsTransportUtils class and changed the REPLY_TO_NAME_PATTERN to be similar to the DESTINATION_NAME_PATTERN:
[code]
public abstract class JmsTransportUtils {
.......    
     private static final Pattern REPLY_TO_NAME_PATTERN = Pattern.compile(""replyToName=([^\\?]+)"");
.......
}
[/code]  ",Websphere AppSrv 6.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:35.642,7702,true,gregturn(gregturn),,,,"0|i040lz:",23473,20027,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#561|https://github.com/spring-projects/spring-ws/issues/561]. ",,,,,,,,,,,,,,,,
AxiomSoapMessage does not work fine in Spring-WS with CastorMarshaller,SWS-410,23456,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Cannot Reproduce,arjen.poutsma,atohoun,atohoun,06/Aug/08 11:35 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,22/Sep/08 1:45 AM,1.5.4,,,,,,1.5.5,,Core,,,,,0,,,,,,,"When i use AxiomSoapMessageFactory ( in order to benefit to STAX ), with CastorMarshaller in Spring-WS, i notice that the WebServiceMessage request is sent very well, but its response is not sent back. I receive nothing. But if i use SaajSoapMessageFactory instead of Axiom, every thing is fine.

May be one has to modify the MessageContext given as parameter to the method :  public final void invoke(MessageContext messageContext) in the AbstractMarshallingPayloadEndpoint class. Because of that if i look into the messageContext object at runtime, all of its request and response objects are SaajSoapMessage.

But how to change this MessageContext ? or are there any solutions to work with Axiom or that is really a bug to be fixed ?


Please give me an idea on this...

","Spring-WS 1.5.4, Axiom 1.2.7, Castor 1.2",,,,,,,,,,,,,,,,,,,,,,,"20/Aug/08 9:51 AM;atohoun;digit-client-servlet.xml.txt;https://jira.spring.io/secure/attachment/14573/digit-client-servlet.xml.txt","22/Sep/08 1:44 AM;arjen.poutsma;echo-castor.zip;https://jira.spring.io/secure/attachment/14702/echo-castor.zip","29/Aug/08 12:43 AM;atohoun;myEndpoint.java;https://jira.spring.io/secure/attachment/14619/myEndpoint.java","29/Aug/08 12:41 AM;atohoun;mySeverSideContextConfiguration.xml;https://jira.spring.io/secure/attachment/14618/mySeverSideContextConfiguration.xml",,,,,,,,,,24969600,,2008-08-20 03:56:43.979,7703,true,gregturn(gregturn),,,,"0|i040m7:",23474,20028,,,,,,,,"20/Aug/08 3:56 AM;arjen.poutsma;The MessageContext does not have to be modified in order to use Axiom, it should work. 

I suspect it is a issue of configuration. Can you share your application context and attach it to this issue?","20/Aug/08 9:51 AM;atohoun;Here is my application context configuration.","20/Aug/08 9:56 AM;atohoun;My application context content is : 

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">


    <bean id=""messageSource"" class=""org.springframework.context.support.ResourceBundleMessageSource"">
        <property name=""basename"" value=""messages""/>
    </bean>
	
    <bean name=""/ws.eq"" class=""digit.controller.WebServiceController"">
        <property name=""webServiceClient"" ref=""webServiceClient""/>
    </bean>
    
    <bean id=""webServiceClient"" class=""digit.ws.WebServiceClientImpl"">
        <property name=""messageFactory"">
		<bean class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory"">
		</bean>
	</property>
	<property name=""marshaller"" ref=""marshaller"" />
	<property name=""unmarshaller"" ref=""marshaller"" />
	<property name=""defaultUri"" value=""http://localhost:8080/digitservice/services""/>
    </bean>
      
    <bean id=""marshaller"" class=""digit.ws.MyCastorMarshaller""/>
    
    <bean id=""viewResolver"" class=""org.springframework.web.servlet.view.InternalResourceViewResolver"">
        <property name=""viewClass"" value=""org.springframework.web.servlet.view.JstlView""/>
        <property name=""prefix"" value=""/WEB-INF/jsp/""/>
        <property name=""suffix"" value="".jsp""/>
    </bean>

</beans>","28/Aug/08 9:18 AM;arjen.poutsma;Is this issue related to SWS-407 in any way? Is it a duplicate?","29/Aug/08 12:40 AM;atohoun;Yes this issue is related to the SWS-407 one. The above context configuration is my client side configuration.
Check my server side configuration in attachment, and also my endpoint class. Please tell me what can be wrong within them...","29/Aug/08 12:41 AM;atohoun;My server side context","29/Aug/08 12:43 AM;atohoun;My endpoint class","22/Sep/08 1:45 AM;arjen.poutsma;I've just tested the combination of castor and axiom, and it works fine for me. See the attached echo-castor project.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#508|https://github.com/spring-projects/spring-ws/issues/508]. ",,,,,,,,
Incorrect URL to Bamboo in pom,SWS-408,23427,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,ulsa,ulsa,05/Aug/08 12:32 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,18/Aug/08 12:23 PM,,,,,,,1.5.5,,,,,,,0,,,,,,,"Bamboo URL in ciManagement wrong:

http://build.springframework.org:8085/bamboo/

Should be:

http://build.springframework.org/

or possibly:

http://build.springframework.org/browse/SWS",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:34.903,7705,true,gregturn(gregturn),,,,"0|i040mf:",23475,20029,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#559|https://github.com/spring-projects/spring-ws/issues/559]. ",,,,,,,,,,,,,,,,
Spring-WS application using AxiomSoapMessageFactory and CastorMarshaller,SWS-407,23416,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,atohoun,atohoun,04/Aug/08 3:19 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Nov/09 8:31 PM,1.5.4,,,,,,,,,,,,,1,,,,,,,"Hello,

It seem that this issue is allready fixed, but i still encounter it. My webservice application is developped following the Spring-WS 1.5.4  and using Axiom 1.2.7 with CastorMarshaller 1.2.
The problem is when i call my web service server through a web client, the request is sent very well and treated. But the response is not sent back as i expected. I receive nothing in return.

Can somebody help me, thanks in advance.","Windows Vista, Java SE 5, Maven",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-08-18 12:16:34.372,7706,true,gregturn(gregturn),,,,"0|i03bw7:",19469,20030,,,,,,,,"18/Aug/08 12:16 PM;arjen.poutsma;I am afraid I am going to need some more information than this. What does your endpoint look like and how is it configured?","18/Aug/08 8:42 PM;atohoun;My End point looks like this :

package digit.endpoint;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.ws.context.MessageContext;
import org.springframework.ws.server.endpoint.AbstractMarshallingPayloadEndpoint;

import digit.schema.Equipment;
import digit.schema.GetEquipmentsRequest;
import digit.schema.GetEquipmentsResponse;
import digit.service.DigitService;
import digit.utils.ObjectUtil;

public class DigitEndpoint extends AbstractMarshallingPayloadEndpoint {
	
	private static Logger logger = Logger.getLogger(DigitEndpoint.class);
	
	private DigitService digitService;
	
	

	public DigitService getDigitService() {
		return digitService;
	}

	public void setDigitService(DigitService digitService) {
		this.digitService = digitService;
	}

	@Override
	protected Object invokeInternal(Object arg0) throws Exception {
		logger.info("" ---------------- Begin of invokeInternal -------------------------"");
		if(arg0 == null){
			logger.fatal("" The request object is null"");
			throw new NullPointerException("" The request object is null "");
		}
		
		// get the request object ( i can verify that this is get very well ) 
		GetEquipmentsRequest request = (GetEquipmentsRequest)arg0;
		String idEq = request.getId();		
		
		// call of my service implementation ( i can verify that this is fine)
		List<Equipment> listEq = digitService.getEquipments();		
		Equipment[] equipments = new Equipment[listEq.size()];
		
		// supplying the response (the problem with Axiom occurs here. The return object is built but nothing is not sent back.)
		// I precise that this problem does not occur with SAAJ
		GetEquipmentsResponse response = new GetEquipmentsResponse();
		response.setEquipment(listEq.toArray(equipments));		
		logger.info("" ---------------- End of invokeInternal -------------------------"");
		return response;
	}
}


And its configuration is :

<bean id=""digitEndpoint"" class=""digit.endpoint.DigitEndpoint"">
		<property name=""marshaller"" ref=""marshaller"" />
		<property name=""unmarshaller"" ref=""marshaller"" />
		<property name=""digitService""><ref bean=""digitServiceImpl""/></property>
</bean>
	
<bean id=""marshaller"" class=""org.springframework.oxm.castor.CastorMarshaller"">
		<property name=""mappingLocation"" value=""classpath:mapping.xml"" />
</bean>
	
<bean id=""digitServiceImpl"" class=""digit.service.DigitServiceImpl"">
		<property name=""digitManager""><ref bean=""equipementManager""/></property>
</bean>

","28/Aug/08 9:20 AM;arjen.poutsma;It seems like you don't have an AxiomSoapMessageFactory defined in that configuration. Try adding the following: 

<bean id=""messageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoapMessageFactory""/>

in your config. Also, see http://static.springframework.org/spring-ws/sites/1.5/reference/html/common.html#d0e1248

","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#558|https://github.com/spring-projects/spring-ws/issues/558]. ",,,,,,,,,,,,,
Constructor in example for AbstractMarshallingPayloadEndpoint is wrong,SWS-406,23380,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ejvyas,ejvyas,31/Jul/08 6:53 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,31/Jul/08 9:07 PM,,,,,,,1.5.4,,Documentation,,,,,0,,,,,,,The constructor in example for 5.4.2. AbstractMarshallingPayloadEndpoint is wrongly named as SampleMarshallingEndpoint when the class name is MarshallingOrderEndpoint. The constructor name should be corrected to MarshallingOrderEndpoint . Here is the link : http://static.springframework.org/spring-ws/sites/1.5/reference/html/server.html#d0e2239,Any!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-07-31 21:07:27.932,7707,true,gregturn(gregturn),,,,"0|i01q5b:",10113,10109,,,,,,,,"31/Jul/08 9:07 PM;arjen.poutsma;Fixed, thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#557|https://github.com/spring-projects/spring-ws/issues/557]. ",,,,,,,,,,,,,,,
Spring-ws-archetype -DarchetypeVersion=1.5.3 but pom 1.5.2,SWS-405,23374,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tareq,tareq,31/Jul/08 12:55 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,26/Sep/08 7:16 AM,1.5.3,,,,,,1.5.5,,,,,,,0,,,,,,,"see http://forum.springframework.org/showthread.php?t=58113
",,,,,,,,,,,,,,,,,,,,,,,,"27/Aug/08 11:26 AM;buzz3791;maven_1.5.3_better_example.txt;https://jira.spring.io/secure/attachment/14603/maven_1.5.3_better_example.txt","27/Aug/08 11:29 AM;buzz3791;maven_1.5.4_better_example.txt;https://jira.spring.io/secure/attachment/14604/maven_1.5.4_better_example.txt","04/Aug/08 2:01 AM;buzz3791;mvn_1.5.3_artifact.txt;https://jira.spring.io/secure/attachment/14499/mvn_1.5.3_artifact.txt","04/Aug/08 2:00 AM;buzz3791;mvn_1.5.4_artifact.txt;https://jira.spring.io/secure/attachment/14498/mvn_1.5.4_artifact.txt",,,,,,,,,,24969600,,2008-08-04 02:00:14.987,7708,true,gregturn(gregturn),,,,"0|i040mn:",23476,20031,,,,,,,,"04/Aug/08 2:00 AM;buzz3791;maven2 results of a 1.5.4 artifact.","04/Aug/08 2:01 AM;buzz3791;maven2 results of a 1.5.3 artifact","04/Aug/08 2:03 AM;buzz3791;Thanks for the quick response to my forum posting.

I'm still having trouble.  I just tried a 1.5.4 artifact and got a 1.5.3 pom.xml.  I also tried a 1.5.3 artifact and got a 1.5.2 pom.  Are these results expected?","18/Aug/08 12:10 PM;arjen.poutsma;Yes, I can reproduce this. Honestly, I don't know why this happened again.

Hopefully, this will be fixed in 1.5.5","27/Aug/08 11:26 AM;buzz3791;The original 1.5.3 attachment lacked the pom.xml output., which is really the crux of the issue.","27/Aug/08 11:29 AM;buzz3791;The original 1.5.4 attachment, lacked the pom.xml which is really the heart of the problem.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#556|https://github.com/spring-projects/spring-ws/issues/556]. ",,,,,,,,,,
unable to use maven2 to use version above 1.0.4 due to missing jar: bouncycastle:bcprov-jdk15:jar:132,SWS-401,23209,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,gharp,gharp,18/Jul/08 7:52 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,21/Jul/08 8:09 PM,1.5.1,1.5.2,1.5.3,,,,1.5.4,,Security,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-07-21 20:09:16.768,7712,true,gregturn(gregturn),,,,"0|i01p8f:",9965,9981,,,,,,,,"21/Jul/08 8:09 PM;arjen.poutsma;I cannot reproduce this: bouncycastle:bcprov-jdk15:jar:132 is not a required library on my box. Are you using JDK 1.6 to build?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#552|https://github.com/spring-projects/spring-ws/issues/552]. ",,,,,,,,,,,,,,,
@Endpoint with method having any other annotation then @PayloadRoot is not mapped,SWS-396,23091,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,anthavio,anthavio,11/Jul/08 1:49 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,17/Jul/08 10:49 PM,1.5.3,,,,,,1.5.4,,Core,,,,,0,,,,,,,"I've got @PayloadRoot annotated methods of @Endpoint and some methods also has @RolesAllowed from spring security. Today after upgrading from spring-ws 1.5.2 PayloadRootAnnotationMethodEndpointMapping stopped to processed this endpoint. I've also tried another (my custom @Log AOP annotation) annotation with same (bad) result. 
So now after last test, when any @Endpoint method has any other annotation then @PayloadRoot, it is not mapped.","spring 2.5.5, spring-ws 1.5.3, spring-security 2.0.3",,,,,,,,,,,,,,,,,,,,,,,"16/Jul/08 1:45 AM;anthavio;spring-ws-mapping.zip;https://jira.spring.io/secure/attachment/14393/spring-ws-mapping.zip",,,,,,,,,,,,,24969600,,2008-07-13 23:52:14.92,7717,true,gregturn(gregturn),,,,"0|i040nz:",23482,20037,,,,,,,,"13/Jul/08 11:52 PM;arjen.poutsma;I am having issues trying to reproduce this

Could you please attach an application context that reproduces this issue, or (better yet) a test case?

Thanks","14/Jul/08 1:49 AM;anthavio;Got it. It is because AOP.
When Endpoint method is like:
	@Log
	@PayloadRoot(localPart = ""controlBatch"", namespace = ""http://www.komix.cz/sis/nssis/internal/types"")
	public ControlBatchResponse controlBatch(ControlBatch in) {
		System.err.println(""controlBatch "" + in);
		return new ControlBatchResponse();
	}
and spring configuration contains
	<aop:aspectj-autoproxy/>
	<aop:config>
	
		<aop:aspect ref=""Log4jAspect"">
		<aop:pointcut id=""loggedMethodPointcut"" expression=""@annotation(test.Log) and @annotation(log)""/>
			<aop:around pointcut-ref=""loggedMethodPointcut"" method=""log""/>
		</aop:aspect>

	</aop:config>
	<bean id=""Log4jAspect"" class=""test.Log4jAspect""/>

then mapping works in 1.5.2 but not in 1.5.3. 
When I comment out aop configuration or remove @Log annotation from method, it works in both versions.","14/Jul/08 2:32 AM;arjen.poutsma;Ok, thanks for that. This information really helps :).","14/Jul/08 9:55 PM;arjen.poutsma;I still can't reproduce this bug. I've created a sample logging aspect as part of the PayloadRootAnnotationMethodEndpointMappingTest, and all works fine. You can find it here: 
https://springframework.svn.sourceforge.net/svnroot/springframework/spring-ws/trunk/core-tiger/src/test/java/org/springframework/ws/server/endpoint/mapping/
https://springframework.svn.sourceforge.net/svnroot/springframework/spring-ws/trunk/core-tiger/src/test/resources/org/springframework/ws/server/endpoint/mapping/

Could you please check out the source of Spring-WS (see http://static.springframework.org/spring-ws/sites/1.5/source-repository.html), and look at the tests of the core-tiger module, to see what I'm missing?","16/Jul/08 1:45 AM;anthavio;I've dig out little bit lame test case (XyzEndpoint is main class)","17/Jul/08 10:49 PM;arjen.poutsma;Fixed. 

This was related to CGLIB subclasses being created by Spring AOP, which do not have the @Endpoint or @PayloadRoot annotations. The current implementation is consistent with Spring MVC's @Controller and @RequestMapping logic, which seems to solve this bug.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#546|https://github.com/spring-projects/spring-ws/issues/546]. ",,,,,,,,,,
Spring-WS support manifest has wrong version of spring xml import,SWS-395,23086,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,10/Jul/08 8:56 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,10/Jul/08 9:08 PM,1.5.2,1.5.3,,,,,1.5.4,,,,,,,0,,,,,,,See https://issuetracker.springsource.com/browse/BRITS-108,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:46:11.241,7718,true,gregturn(gregturn),,,,"0|i040o7:",23483,20038,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#545|https://github.com/spring-projects/spring-ws/issues/545]. ",,,,,,,,,,,,,,,,
Incoming message with with UTF-8 BOM is failing,SWS-393,23080,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,nhajratw,nhajratw,10/Jul/08 6:00 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,15/Jul/08 12:02 AM,1.5.3,,,,,,1.5.4,,XML,,,,,0,,,,,,,"When submitting a SOAP request that contains a UTF BOM http://unicode.org/faq/utf_bom.html#22, the following fault string is returned: ""Could not access envelope: Unable to create envelope from given source:""

After removing the offending BOM, and not manipulating the XML in any other way, the message is is delivered to the defined Endpoint successfully.

Per http://unicode.org/faq/utf_bom.html#29 , Spring-WS should be able to transparently ignore the BOM on UTF-8 files.",Reproduced on Windows & Solaris/AMD,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/08 12:30 AM;nhajratw;STARExportSigned_no_BOM.xml;https://jira.spring.io/secure/attachment/14350/STARExportSigned_no_BOM.xml","11/Jul/08 12:28 AM;nhajratw;STARExportSigned_with_BOM.xml;https://jira.spring.io/secure/attachment/14349/STARExportSigned_with_BOM.xml",,,,,,,,,,,,24969600,,2008-07-10 20:18:21.453,7720,true,gregturn(gregturn),,,,"0|i01oj3:",9851,9878,,,,,,,,"10/Jul/08 8:18 PM;arjen.poutsma;Could you please give some more information: are you using SAAJ or Axiom? 
Could you please supply the stacktrace (as attachment)?","10/Jul/08 10:45 PM;nhajratw;I'm using SAAJ -- I will attach a stacktrace & sample file later today, once i reach the office.","11/Jul/08 12:26 AM;nhajratw;Here is the error message in the log:

Jul 11, 2008 9:22:01 AM com.sun.xml.messaging.saaj.soap.EnvelopeFactory createEnvelope
SEVERE: SAAJ0511: Unable to create envelope from given source


So, perhaps it is a problem in SAAJ?  I'm using the SAAJ that is distributed with jwsdp1.3, and can't upgrade since we are on JDK 1.4 ..

If it is a problem with this SAAJ, maybe Spring-WS can strip off the BOM.

I've attached a file with and without a BOM as examples.
","11/Jul/08 12:26 AM;nhajratw;Here is the SOAP Fault that is returned:

<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/""><SOAP-ENV:Header/><SOAP-ENV:Body><SOAP-ENV:Fault><faultcode>SOAP-ENV:Server</faultcode><faultstring xml:lang=""en"">Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source: </faultstring></SOAP-ENV:Fault></SOAP-ENV:Body></SOAP-ENV:Envelope>
","11/Jul/08 12:28 AM;nhajratw;This is a UTF-8 SOAP message with a BOM","11/Jul/08 12:30 AM;nhajratw;This is a UTF-8 SOAP Message with no BOM","11/Jul/08 9:12 AM;arjen.poutsma;Ok, thanks for the additional info. I will take a look at this for 1.5.4.","14/Jul/08 10:56 PM;arjen.poutsma;I can reproduce this locally, using SAAJ 1.3. So whatever it is, they haven't solved it yet. I will ask the SAAJ mailing list about this, and probably write some workaround for Spring-WS.

Note that as a workaround, you can use Axiom rather than SAAJ. Axiom works fine with UTF-8 BOMs.","15/Jul/08 12:02 AM;arjen.poutsma;Fixed in SVN.","16/Jul/08 10:15 PM;arjen.poutsma;This is a known bug in SAAJ, see https://saaj.dev.java.net/servlets/ReadMsg?list=users&msgNo=89. SPring-WS now has a workaround for this.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#543|https://github.com/spring-projects/spring-ws/issues/543]. ",,,,,,
AbstractMarshallingPayloadEndpoint and XStreamMarshaller produces malformed response body,SWS-392,23070,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,novotnyr,novotnyr,09/Jul/08 6:28 PM,04/May/12 7:03 AM,10/Jul/21 8:38 AM,21/Jul/08 10:04 PM,1.5.2,,,,,,1.5.4,,OXM,,,,,0,,,,,,,"Marshalling and unmarshalling of objects to XML payloads using AbstractMarshallingPayloadEndpoint and XStreamMarshaller seems to generated malformed SOAP Message when using XStream 1.2.1 or newer (XStream 1.2 works without problems).

The fundamental method of my endpoint looks like this:
Code:

  protected Object invokeInternal(Object object) throws Exception {

    MovieReservation movieReservationRequest = (MovieReservation) object;

    ReservationConfirmation confirmation = new ReservationConfirmation();
    confirmation.setId(new Date().getDate());
    confirmation.setSeatIds(new int[] {1, 2, 3, 4});
    
    return confirmation;
  }

The SOAP response, which is malformed, looks as follows:
Code:

<SOAP-ENV:Envelope xmlns:SOAP-ENV=""..../"">
  <SOAP-ENV:Header/>
  <SOAP-ENV:Body/>
  <ReservationConfirmation>
    <id>23</id>
    <seatIds>
      <int>1</int>
      <int>2</int>
      <int>3</int>
      <int>4</int>
    </seatIds>
  </ReservationConfirmation>
</SOAP-ENV:Envelope>

Notice the empty header and empty body and the ReservationConfirmation element following the body element (which is incorrect, since this element should be within the body).

I suspect the Spring org.s.x.oxm.XStreamWriter and its method marshalDomDone which contains the following lines
Code:

        else if (node instanceof Element) {
            streamWriter = new DomWriter((Element) node);
        }

However, sometimes between XStream 1.2 and XStream 1.3 the functionality of DomWriter has changed. This is described on the XStream mailing list in the ""DOMWriter uses root element for marshalling instead of specified element"" topic [1]

The suggested change is described in that post:""To write into an arbitrary node you have to use the constructor DomWriter(Element, Document, XmlFriendlyReplacer).""

Shouldn't the XStreamMarshall use the suggested three-param constructor instead of the default?

[1] http://www.nabble.com/DOMWriter-uses-root-element-for-marshalling-instead-of-specified-element-td16088975.html#a16088975","Windows XP,. Jetty 5, XStream 1.3",,,,,,,,,,,,,,,,,,,,,,,"15/Jul/08 9:08 PM;tareq;SWS-392.patch;https://jira.spring.io/secure/attachment/14392/SWS-392.patch",,,,,,,,,,,,,289785600,,2008-07-15 21:08:24.019,7721,false,arjen.poutsma(arjen.poutsma),,,,"0|i01mpz:",9558,9595,,,,,,,,"15/Jul/08 9:08 PM;tareq;Patch + unit test.
Robert, thanks for the detailed description.","21/Jul/08 10:04 PM;arjen.poutsma;Fixed. Thanks, both of you.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues",,,,,,,,,,,,,,,
problem with DomContentHandler,SWS-389,23048,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ph4te,ph4te,08/Jul/08 2:07 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/Jul/08 8:20 PM,1.5.3,,,,,,1.5.4,,XML,,,,,0,,,,,,,"Everytime the function appendChild on a Node is used , the return value should be set to the original node (the one passed as argument). This must be done as Jboss create it's own element and use it as a wrapper around the one has been passed in the function.
So , for example, the code in the function startElement(..) should be changed from:
        
        Node parent = getParent();
        Element element = document.createElementNS(uri, qName);
        ...........(more code here)
        parent.appendChild(element);
        elements.add(element);

to

        Node parent = getParent();
        Element element = document.createElementNS(uri, qName);
        ...........(more code here)
        element = parent.appendChild(element);
        elements.add(element);

And so on everywhere appendChild is used.
","Fedora 9, Jboss  4.2.2 GA, Jboss-ws 3.0.2.GA",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:45.999,7724,true,gregturn(gregturn),,,,"0|i01ojb:",9852,9879,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#541|https://github.com/spring-projects/spring-ws/issues/541]. ",,,,,,,,,,,,,,,,
DefaultWsdl11Definition.setFaultSuffix : responseSuffix overwritten,SWS-386,23020,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,a.spiegelhauer@gmx.de,a.spiegelhauer@gmx.de,06/Jul/08 4:35 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,13/Jul/08 8:22 PM,1.5.3,,,,,,1.5.4,,Core,,,,,0,,,,,,,"There is a bug in DefaultWsdl11Definition.setFaultSuffix

It should be

    /** Sets the suffix used to detect fault elements in the schema. */
    public void setFaultSuffix(String faultSuffix) {
        portTypesProvider.setFaultSuffix(faultSuffix);
        //messagesProvider.setResponseSuffix(faultSuffix);
        messagesProvider.setFaultSuffix(faultSuffix);
    }

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-07-13 20:22:00.323,7727,true,gregturn(gregturn),,,,"0|i040on:",23485,20042,,,,,,,,"13/Jul/08 8:22 PM;arjen.poutsma;Oops! Thanks for spotting this!","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#538|https://github.com/spring-projects/spring-ws/issues/538]. ",,,,,,,,,,,,,,,
Exceptions thrown using WS-Addressing result in Assert failure in Addressing10.addAddressingHeaders,SWS-385,22788,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,bhendricks,bhendricks,24/Jun/08 10:54 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,02/Jul/08 1:23 AM,1.5.1,1.5.2,,,,,1.5.3,,Core,,,,,0,,,,,,,"When using WS-Addressing if any interceptor or endpoint throws an Exception the implicit interceptor created by AbstractAddressingEndpointMapping will cause an Assertion failure because it has a null faultAction URI.  When this happens no response is sent to the client.

Exposing a faultActionURI to the user in AbstractAddressingEndpointMapping to be used to create the interceptor would fix the problem.  If the user is implementing something that uses WS-BaseFaults this would be required anyhow, and the default behavior could be to use the responseAction if the faultAction is not set.",,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,"24/Jun/08 10:56 PM;bhendricks;patch.txt;https://jira.spring.io/secure/attachment/14250/patch.txt",,,,,,,,,,,,,24969600,,2008-07-02 01:23:48.348,7728,true,gregturn(gregturn),,,,"0|i040ov:",23486,20043,,,,,,,,"24/Jun/08 10:56 PM;bhendricks;I have attached a patch that exposes a URI to be used for the faultAction, defaulting to responseAction if not set.","02/Jul/08 1:23 AM;arjen.poutsma;I've implemented this, though in a more flexible way than the patch. 

The AbstractAddressingEndpointMapping now has a getFaultAction. By default, this returns the same action as the request, with the suffix Fault, but this can be overridden by subclassing or by using the fault() element on the @Action annotation.","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#537|https://github.com/spring-projects/spring-ws/issues/537]. ",,,,,,,,,,,,,,
spring 2.0 vs spring 2.5 beans declaration regression,SWS-384,22689,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,jieryn,jieryn,19/Jun/08 4:15 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,19/Jun/08 9:26 PM,1.5.2,,,,,,,,XML,,,,,0,,,,,,,"I'm seeing an apparent regression when converting my spring-ws WEB-INF/services-servlet.xml file from a 2.0 (used in all examples) to a 2.5 declaration..  I have spring-2.5.3 and spring-ws-1.5.3 jars in my WEB-INF/lib dir; here is the relevant xml :

<!-- this fails -->
<xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:aop=""http://www.springframework.org/schema/aop""
  xmlns:context=""http://www.springframework.org/schema/context"" xmlns:p=""http://www.springframework.org/schema/p""
  xmlns:tx=""http://www.springframework.org/schema/tx"" xmlns:util=""http://www.springframework.org/schema/util""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/tx/spring-util-2.5.xsd""
  default-autowire=""byName"">
  <bean id=""schema"" class=""org.springframework.xml.xsd.SimpleXsdSchema"">
    <description>
            This bean definition contains the XSD schema.
        </description>
    <property name=""xsd"" value=""/WEB-INF/echo.xsd"" />
  </bean>
  <bean id=""validatingInterceptor""
    class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
    <description> This interceptor validates both incoming and outgoing message
    contents according to the 'echo.xsd' XML Schema file. </description>
    <property name=""xsdSchema"" ref=""schema"" />
    <property name=""validateRequest"" value=""true"" />
    <property name=""validateResponse"" value=""true"" />
  </bean>

  <!-- ...... -->

<!--  this works  -->
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"">

  <!-- ....same as above for schema and validatingInterceptor .... -->

------------------------------

And here is the error when I start Tomcat:

ERROR org.springframework.ws.transport.http.MessageDispatcherServlet Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'validatingInterceptor' defined in ServletContext resource [/WEB-INF/services-servlet.xml]: 
Initialization of bean failed; nested exception is org.springframework.beans.TypeMismatchException: Failed to convert property value of type 
[org.springframework.xml.xsd.SimpleXsdSchema] to required type [org.springframework.core.io.Resource] for property 'schema'; nested exception is java.lang.IllegalArgumentException: 
Cannot convert value of type [org.springframework.xml.xsd.SimpleXsdSchema] to required type [org.springframework.core.io.Resource] for property 'schema': no matching editors or 
conversion strategy found
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:478)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:354)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:292)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:262)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
	at javax.servlet.GenericServlet.init(GenericServlet.java:212)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1161)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:981)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4058)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4364)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:516)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:578)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)
Caused by: org.springframework.beans.TypeMismatchException: Failed to convert property value of type [org.springframework.xml.xsd.SimpleXsdSchema] to required type 
[org.springframework.core.io.Resource] for property 'schema'; nested exception is java.lang.IllegalArgumentException: Cannot convert value of type 
[org.springframework.xml.xsd.SimpleXsdSchema] to required type [org.springframework.core.io.Resource] for property 'schema': no matching editors or conversion strategy found
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:391)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)
	... 33 more
Caused by: java.lang.IllegalArgumentException: Cannot convert value of type [org.springframework.xml.xsd.SimpleXsdSchema] to required type [org.springframework.core.io.Resource] for 
property 'schema': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:238)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:138)
	at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:386)
	... 37 more
","linux-2.6.25, eclipse-3.4, tomcat-6.0.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-06-19 21:26:15.776,7729,true,gregturn(gregturn),,,,"0|i01ojj:",9853,9880,,,,,,,,"19/Jun/08 9:26 PM;arjen.poutsma;I've tried to reproduce this, by upgrading the beans schema URL of the echo sample to 2.5, and this error does not occur for me.

The weird thing is that the exception you're getting mentions setting a property schema on the validatingInterceptor, but there is no such propery mentioned in your app context. Possibly, it is related to having an old app being deployed; tomcat didn't pick up the changes of a new version","20/Jun/08 1:25 AM;jieryn;Yes, I cleaned everything out and even reincarnated the Tomcat configuration in Eclipse and I no longer see the error. Some stale garbage left over somehow.

Sorry, Arjen, and thanks! :)","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#536|https://github.com/spring-projects/spring-ws/issues/536]. ",,,,,,,,,,,,,,
"Incorrect soap:address location=""http://localhost:8080/holidayService/ for samples/tutorial - resource (/holidayService/) is not available",SWS-380,22638,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,tareq,buzz3791,buzz3791,17/Jun/08 10:09 AM,21/Jul/08 10:07 PM,10/Jul/21 8:38 AM,29/Jun/08 10:55 PM,1.5.2,,,,,,1.5.3,,Samples,,,,,0,,,,,,,"The soap:address location=""http://localhost:8080/holidayService/ for samples/tutorial is incorrect.

spring-ws-servlet.xml should contain

        bad: <property name=""locationUri"" value=""http://localhost:8080/tutorial/holidayService/""/>

instead of 

        good: <property name=""locationUri"" value=""http://localhost:8080/holidayService/""/>

A SoapUi test with the bad location results in the error

Tue Jun 17 19:06:38 EDT 2008:WARN:Failed to prettyPrint xml [<html><head><title>Apache Tomcat/6.0.16 - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 404 - /holidayService/</h1><HR size=""1"" noshade=""noshade""><p><b>type</b> Status report</p><p><b>message</b> <u>/holidayService/</u></p><p><b>description</b> <u>The requested resource (/holidayService/) is not available.</u></p><HR size=""1"" noshade=""noshade""><h3>Apache Tomcat/6.0.16</h3></body></html>]: org.apache.xmlbeans.XmlException: error: </body> does not close tag <HR>.
","Tomcat 6.0.16
Windows XP
java version ""1.6.0_02""
Java(TM) SE Runtime Environment (build 1.6.0_02-b05)
Java HotSpot(TM) Client VM (build 1.6.0_02-b05, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,"23/Jun/08 3:17 AM;tareq;holiday-sample.patch;https://jira.spring.io/secure/attachment/14219/holiday-sample.patch","23/Jun/08 3:19 AM;tareq;tutorial-doc.patch;https://jira.spring.io/secure/attachment/14220/tutorial-doc.patch",,,,,,,,,,,,409190400,,2008-06-23 03:17:51.038,7732,false,arjen.poutsma(arjen.poutsma),,,,"0|i01n2v:",9616,9653,,,,,,,,"17/Jun/08 11:42 AM;buzz3791;I just realized that I had the bad and good markers backwards... the description should be changed to read

spring-ws-servlet.xml should contain

        good: <property name=""locationUri"" value=""http://localhost:8080/tutorial/holidayService/""/>

instead of

        bad: <property name=""locationUri"" value=""http://localhost:8080/holidayService/""/> 

The bad lacks the 'tutorial' portion of the URL.","23/Jun/08 3:17 AM;tareq;The proposed patch uses the location transformation feature relieving the users from rewriting the uri according to the deployment context.","23/Jun/08 3:19 AM;tareq;An update of the tutorial.","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3",,,,,,,,,,,,,,
Wrong links on website,SWS-379,22636,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,ejvyas,ejvyas,17/Jun/08 7:23 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,17/Jun/08 8:39 AM,,,,,,,,,,,,,,0,,,,,,,"The links of the website are broken:

http://static.springframework.org/spring-ws/site/faq.html#why-contract-first

Click the ""a separate page"" link which is http://static.springframework.org/spring-ws/site/why-contract-first.html

This link is broken",NA,,,,1800,1800,,0%,1800,1800,,,,,,SWS-373,,,,,,,,,,,,,,,,,,,,,24969600,,2008-06-17 08:39:54.846,7733,true,gregturn(gregturn),,,,"0|i03bpj:",19439,20046,,,,,,,,"17/Jun/08 8:39 AM;arjen.poutsma;Already fixed in svn, will be deployed when next release comes out (1.5.3).","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#532|https://github.com/spring-projects/spring-ws/issues/532]. ",,,,,,,,,,,,,,,
Wss4jSecurityInterceptor.toDocument(..) causes decryption to fail when using SaajSoapMessageFactory,SWS-378,22634,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,pdotsenko,pdotsenko,17/Jun/08 3:50 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,18/Jun/08 11:34 PM,1.5.2,,,,,,1.5.3,,Security,,,,,0,,,,,,,"Wss4jSecurityInterceptor.toDocument(..) contains a bug that prevents Wss4jSecurityInterceptor.validateMessage() from replacing encrypted SOAP message parts with decrypted parts when using SaajSoapMessageFactory.  Specifically, when the org.w3c.dom.Document returned by toDocument() is modified with decrypted parts, the changes aren't reflected in the original SaajSoapMessage inside MessageContext.

Test case to reproduce the bug uses ws-tutorial sample application. 
1. Modify HolidayRequestClient constructor to get wsTemplate bean from Application Context configured inside SpringConfig.xml:
	/**
	 * Default class constructor
	 */
	public HolidayRequestClient() {
		hrNs = Namespace.getNamespace(""hr"", ""http://mycompany.com/hr/schemas"");
		fmt = new SimpleDateFormat(""yyyy-MM-dd"");
	      ApplicationContext ac = null;

	      try
	      {
	         ac = new ClassPathXmlApplicationContext(
	               new String[] { ""SpringConfig.xml"" });
	      }
	      catch (BeansException e)
	      {
	         e.printStackTrace();
	         ac = new FileSystemXmlApplicationContext(""SpringConfig.xml"");

	      }
	      wsTemplate = (WebServiceTemplate) ac
	            .getBean(""wsTemplate"");
		
	}

2. Use the following client SpringConfig.xml to encrypt outgoing HolidayRequest element content using wss4j:

<?xml version=""1.0"" encoding=""UTF-8""?>

<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">
    
    <bean id=""wsTemplate"" 
        class=""org.springframework.ws.client.core.WebServiceTemplate"">
        <constructor-arg>
            <bean class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory""/>
        </constructor-arg>
        <property name=""interceptors"">
            <list>
                <ref local=""wsEncryptSecurityInterceptor"" />
            </list>
        </property>        
    </bean>

    <bean id=""wsEncryptSecurityInterceptor"" 
        class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
        <property name=""securementActions"" value=""Encrypt"" />
         
        <property name=""securementEncryptionParts""
            value=""{Content}{http://mycompany.com/hr/schemas}HolidayRequest""/>
        
        <property name=""securementEncryptionUser"" value=""alias"" />
        <property name=""securementEncryptionCrypto"">
            <bean
                class=""org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean"">
                <property name=""keyStorePassword"" value=""storepass"" />
                <property name=""keyStoreLocation"" value=""classpath:/clientKeystore.jks"" />
            </bean>
        </property>
    </bean>
   
</beans>

3. Configure server security interceptor bean wsEncryptSecurityInterceptor inside spring-ws-servlet.xml for decrypting HollidayRequest element content:
...
    <bean class=""org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping"">
        <property name=""mappings"">
            <props>
                <prop key=""{http://mycompany.com/hr/schemas}HolidayRequest"">holidayEndpoint</prop>
            </props>
        </property>
        <property name=""interceptors"">
            <list>
                <ref local=""wsEncryptSecurityInterceptor""/>
                <bean class=""org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor""/>
            </list>
        </property>
    </bean>
    
    <bean id=""wsEncryptSecurityInterceptor""
        class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
        <property name=""validationActions"" value=""Encrypt"" />
        <property name=""securementEncryptionParts""
            value=""{Content}{http://mycompany.com/hr/schemas}HolidayRequest"" />
        <property name=""validationDecryptionCrypto"">
            <bean
                class=""org.springframework.ws.soap.security.wss4j.support.CryptoFactoryBean"">
                <property name=""keyStorePassword"" value=""storepass"" />
                <property name=""keyStoreLocation""
                    value=""classpath:/serverKeystore.jks"" />
            </bean>
        </property>
        <property name=""validationCallbackHandler"">
            <bean
                class=""org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler"">
                <property name=""privateKeyPassword"" value=""keypass"" />
            </bean>
        </property>
    </bean>
...

4.  Generate server and client keystore files using these commands and place the generated files on the classpath: 
   create server keystore: 
        keytool -v -genkey -alias alias -keypass keypass -keystore serverKeystore.jks -storepass storepass -keyalg RSA -sigalg SHA1withRSA
   export PEM file for client keystore:
        keytool -export -alias alias -file alias.pem -sigalg SHA1withRSA -keystore serverKeystore.jks -storepass storepass -rfc
   import PEM into client store: 
        keytool -v -import -trustcacerts -alias alias -file alias.pem -keystore clientKeystore.jks -keypass storepass -noprompt        

5.  Run com.mycompany.hr.client.Main as Java Application, and see SoapFault response as logged by the client since the server was unable to decrypt the encrypted parts:

2008-06-17 11:36:55,625 DEBUG [org.springframework.ws.client.core.WebServiceTemplate] - Received Fault message for request [SaajSoapMessage {http://mycompany.com/hr/schemas}HolidayRequest]
Exception in thread ""main"" org.springframework.ws.soap.client.SoapFaultClientException: Unparseable date: """"
	at org.springframework.ws.soap.client.core.SoapFaultMessageResolver.resolveFault(SoapFaultMessageResolver.java:37)
	at org.springframework.ws.client.core.WebServiceTemplate.handleFault(WebServiceTemplate.java:699)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:527)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:465)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:420)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:366)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:351)
	at com.mycompany.hr.client.HolidayRequestClient.bookHoliday(HolidayRequestClient.java:63)
	at com.mycompany.hr.client.Main.main(Main.java:18)

------------------------------
Proposed fix is to modify Wss4jSecurityInterceptor.toDocument(..) as follows, essentially rolling back an earlier fix for SWS-345:

    /** Converts the given {@link SoapMessage} into a {@link Document}. */
    private Document toDocument(SoapMessage soapMessage, MessageContext messageContext) {
        if (soapMessage instanceof SaajSoapMessage) {
            SaajSoapMessage saajSoapMessage = (SaajSoapMessage) soapMessage;
            return saajSoapMessage.getSaajMessage().getSOAPPart();// works now since SWS-345 is fixed 
        }
        else if (soapMessage instanceof AxiomSoapMessage) {
            AxiomSoapMessage axiomMessage = (AxiomSoapMessage) soapMessage;
            return AxiomUtils.toDocument(axiomMessage.getAxiomMessage().getSOAPEnvelope());
        }
        else {
            throw new IllegalArgumentException(""Message type not supported ["" + soapMessage + ""]"");
        }
    }
","jdk1.5.0_15, Tomcat 6.0.14, Spring-WS 1.5.2, SaajSoapMessageFactory, message encryption/decryption using Wss4j",,,,,,,,,,,,,,,,,,,SWS-376,,,,"17/Jun/08 3:58 AM;pdotsenko;SWS-378-patch.txt;https://jira.spring.io/secure/attachment/14191/SWS-378-patch.txt",,,,,,,,,,,,,24969600,,2008-06-17 18:00:01.348,7734,true,gregturn(gregturn),,,,"0|i01p8n:",9966,9982,,,,,,,,"17/Jun/08 3:58 AM;pdotsenko;This is a patch file I created for the proposed fix for this bug.","17/Jun/08 6:00 PM;tareq;Thanks for the detailed description Paul. 
Regarding the proposed fix, I'm afraid it's not the best way to do it since it will break the signature generation. What should be done probably is to replace the Saaj message as it is done for Axiom messages.","18/Jun/08 11:28 AM;pdotsenko;Tareq,

Thanks for pointing this out.  Looks like Arjen's fixes for SWS-376 also fixed the problem that this issue was supposed to fix!  After I saw your comment I got latest SaajMessageFactory  from trunk and ran the test case I described in this issue, and decryption worked.  So like you suggested this is fixed in the Saaj message now. 


","18/Jun/08 8:49 PM;arjen.poutsma;Ok, so this issue can be resolved?","18/Jun/08 11:28 PM;pdotsenko;Yes, I would call this issue resolved by fixes for SWS-376.  Thanks.","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#531|https://github.com/spring-projects/spring-ws/issues/531]. ",,,,,,,,,,,
SaajSoapMessage.setSaajMessage() and AxiomSoapMessage.setAxiomMessage() should clear cached fields,SWS-376,22626,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,16/Jun/08 9:51 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Jun/08 10:02 PM,1.5.2,,,,,,1.5.3,,Core,,,,,0,,,,,,,The cached envelope fields in SaajSoapMessage and AxiomSoapMessage should be set to null when setSaajMessage or setAxiomMessage is called.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:46:07.737,7736,true,gregturn(gregturn),,,,"0|i040pr:",23490,20048,,,,,,,,"21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#529|https://github.com/spring-projects/spring-ws/issues/529]. ",,,,,,,,,,,,,,,,
DefaultURIResolver with witespaces,SWS-374,22610,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,miluch,miluch,16/Jun/08 12:56 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Jun/08 3:06 AM,1.5.1,1.5.2,,,,,1.5.3,,XML,,,,,0,,,,,,,"Hi

The following bean definition:

<bean id=""schemaCollection"" class=""org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"" lazy-init=""true"">
        <property name=""xsds"" value=""dl-messages.xsd""/>
        <property name=""inline"" value=""true""/>

throws exception in my logs with a stack trace (part of stack trace)

at org.apache.ws.commons.schema.resolver.DefaultURIResolver.resolveEntity(DefaultURIResolver.java:64)
	at org.apache.ws.commons.schema.SchemaBuilder.resolveXmlSchema(SchemaBuilder.java:1872)
	at org.apache.ws.commons.schema.SchemaBuilder.handleImport(SchemaBuilder.java:1620)
	at org.apache.ws.commons.schema.SchemaBuilder.handleXmlSchemaElement(SchemaBuilder.java:175)
	at org.apache.ws.commons.schema.SchemaBuilder.build(SchemaBuilder.java:82)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:359)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:304)
	at org.apache.ws.commons.schema.XmlSchemaCollection.read(XmlSchemaCollection.java:315)
	at org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection.afterPropertiesSet(CommonsXsdSchemaCollection.java:109)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)
	... 55 more
Caused by: java.net.URISyntaxException: Illegal character in path at index 16: file:/D:/Program Files/IBM/SDP70/runtimes/base_v61/profiles/prof/installedApps/linNode01Cell/ear-dl.ear/web-ws.war/dl-messages.xsd
	at java.net.URI$Parser.fail(URI.java:2821)
	at java.net.URI$Parser.checkChars(URI.java:2994)
	at java.net.URI$Parser.parseHierarchical(URI.java:3078)
	at java.net.URI$Parser.parse(URI.java:3026)
	at java.net.URI.<init>(URI.java:590)
	at org.apache.ws.commons.schema.resolver.DefaultURIResolver.resolveEntity(DefaultURIResolver.java:58)
	... 65 more

After a little investigation I found that the main problem is that URI constructor used in DefaultURIResolver.resolveEntity method can not parse expression:
""file:/D:/Program Files/IBM/SDP70/runtimes/base_v61/profiles/prof/installedApps/linNode01Cell/ear-dl.ear/web-ws.war/dl-messages.xsd""

and it is because of white space in 'Program Files' folder.
To make URI constructor happy i would have to provide %20 instead of ' ' So to have it look like: ""file:/D:/Program%20Files/IBM/SDP70/...""

I' ve made some tests and for me it seems like a problem with org.springframework.core.io.Resource.getURL() call on websphere that does not conform to URI specification OR  problem with org.springframework.SaxUtils class that use getURL() instead of getURI.

1) Problem in Resource.getURL()

Calling getURL() on ClassPathResource or ServletContextResource in Websphere returns value that is proper URL but its string value (toString() value) contains whitespaces

A little example:

String sss = appContext.getResource(""/WEB-INF/web.xml"").getURL().toString();
System.out.println(sss);
        
String sss2 = appContext.getResource(""/WEB-INF/web.xml"").getURI().toString();
System.out.println(sss2);

produces:

file:/D:/Program
Files/IBM/SDP70/runtimes/base_v61/profiles/Wb/installedApps/liseksnNode01Cell/TestClassLoader.ear/TestClassLoaderWeb.war/WEB-INF/web.xml

file:/D:/Program%20Files/IBM/SDP70/runtimes/base_v61/profiles/Wb/installedApps/liseksnNode01Cell/TestClassLoader.ear/TestClassLoaderWeb.war/WEB-INF/web.xml

The analogous output you can get with ClassPathResource.

In comment on http://jira.springframework.org/browse/SPR-3900 by Juergen Hoeller
you can read

""Resource URLs always allow conversion to URIs now""

It doesn't look as it is always true on Websphere...
 
2) Problem lies in SaxUtils class

Method getSystemId() on org.springframework.xml.sax.SaxUtils returns resource.getURI() instead of getURL().

I took a look at documentation (javadoc) of setSystemId(String systemId) method in org.xml.sax.InputSource class where you can read:

""If the system ID is a URL, it must be fully resolved""


Summary:
i hope that i explained you the source and potential solution for a problem.
I am just not 100 % if the problem lies in Spring webservices or core spring framework.


",Websphere 6.1.0.13 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-06-16 03:06:37.125,7738,true,gregturn(gregturn),,,,"0|i01ojr:",9854,9881,,,,,,,,"16/Jun/08 3:06 AM;arjen.poutsma;I could not reproduce this, but I think I fixed it anyway, by changing the toURL() call to toURI() in SaxUtils.","16/Jun/08 4:52 AM;miluch;Tomorrows i will take a look at the patches, but i do not expect it not to work :).
Thanks very much and waiting for version 1.5.3 to come out.
","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","05/Sep/08 2:16 AM;poshhamster;This change mean that problems occur when creating a CastorMarshaller to inject onto a WebServiceTemplate, e.g.

<bean id=""abc"" class=""org.springframework.oxm.castor.CastorMarshaller"">
  <property name=""mappingLocation"" value=""classpath:a/b/c/mapping.xml"" />
</bean>

The mappingLocation property value is instantiated as a ClassPathResource.  As ClassPathResource does not implement getURI() then a NoSuchMethodException is thrown (from AbstractResource superclass) when SAXUtils.getSystemId() is invoked from the CastorMarshaller.afterPropertiesSet() method.

spring-xml-1.5.2 works as it uses has getURL(), yet spring 1.5.3 does not.
","05/Sep/08 2:19 AM;poshhamster;Sorry, correction for above comment:

The mappingLocation property value is instantiated as a ClassPathResource. As ClassPathResource does not implement getURI() then a NoSuchMethodException is thrown (from AbstractResource superclass) when **SAXUtils.createInputSource()** is invoked from the **CastorMarshaller.createXMLContext()** method. 
","05/Sep/08 3:58 AM;miluch;Hi Ed

I hope you are not angry with me :)

ClassPathResource implements org.springframework.core.io.Resouce  interface.
Method getURI() in Resouce  was introduced in Spring 2.1 which was then promoted do Spring 2.5.

I am quite sure that  the main reason of a problem lies in classLoader.getResource(""path"")  implementation on websphere.
Some time ago I have found a post on IBM forum (will have to search for it again) with explanation about classLoader.getResource(""path"")  returning URL that could contain not escaped whitespaces .
I will have to look at again.


","05/Sep/08 9:14 PM;arjen.poutsma;Yes, Resource.getUri() was introduced in Spring 2.5, so upgrading to that might solve your problem.","07/Sep/08 8:53 PM;poshhamster;Hello Arien, 

Thanks for the response - turns out the versioning is the source of my problem. I thought I was already running on Spring 2.5, but one of my Maven dependencies was pulling in Spring 2 and putting it further up the classpath than 2.5 :-( 

Your fix is fantastic!
","17/Sep/09 10:44 PM;sebastien.dubois;Hello,

I'm currently trying to deploy an application based on Spring WS to a Websphere application server and I just found out that my main problem is the one described in this JIRA issue.

I took a look at FishEye and I see that you switched back from getURI to getURL (https://fisheye.springsource.org/browse/spring-ws/trunk/xml/src/main/java/org/springframework/xml/sax/SaxUtils.java?r1=1240&r2=1366#l1). Unfortunately, the problem is thus still relevant event with spring-xml 1.5.8.

Is there a particular reason for the change back from getURI to getURL?","17/Sep/09 10:48 PM;sebastien.dubois;Sorry, after carefully reading the previous comments I realized why it has been changed back to the way it was before.

I guess I'll have to try and see if another workaround can be found on WebSphere's side.","13/Oct/09 1:36 AM;miluch;Hi 

In my project we are still using Spring WS 1.5.5 and currently we do not plan to migrate to newer version (hopefully!).
Sebastien: 
Have you found any workaround on Webspherere side ? 
Which version of WAS do you use ?","19/Nov/09 9:45 PM;arjen.poutsma;I'm unsure about the status of this issue. Should it be reopened for people running WAS?","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#528|https://github.com/spring-projects/spring-ws/issues/528]. ",,,,,
broken links in FAQ,SWS-373,22576,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jgottschling,jgottschling,12/Jun/08 5:36 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,12/Jun/08 9:13 PM,1.5.2,,,,,,1.5.3,,Documentation,,,,,0,,,,,,,"Look at the question ""why contract first"": <http://static.springframework.org/spring-ws/site/faq.html#why-contract-first>
Both links are broken.",,,,,,,,,,,,,,,,,,,,SWS-369,,,,,,,,,,,,,,,,,24969600,,2008-06-12 21:13:19.392,7739,true,gregturn(gregturn),,,,"0|i01q5z:",10116,10112,,,,,,,,"12/Jun/08 9:13 PM;arjen.poutsma;Fixed in SVN. Changes will be visible when the next version of the site is deployed.","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#527|https://github.com/spring-projects/spring-ws/issues/527]. ",,,,,,,,,,,,,,,
'KeyStoreUtils.loadDefaultKeyStore()' issue,SWS-370,22502,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,arjen.poutsma,michelz,michelz,07/Jun/08 3:42 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,29/Jun/08 10:51 PM,1.5.2,,,,,,1.5.3,,Security,,,,,0,,,,,,,"In the loadDefaultKeyStore method of org.springframework.ws.soap.security.support.KeyStoreUtils class I found this code:

....
String passwordProperty = System.getProperty(""javax.net.ssl.keyStorePassword"");
if (StringUtils.hasLength(passwordProperty)) {
        password = passwordProperty;
    }
    type = System.getProperty(""javax.net.ssl.trustStore"");
}
....

In the line, System.getProperty(""javax.net.ssl.trustStore""), the String parameter should be ""javax.net.ssl.keyStoreType"", right?

",,,,,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-06-29 22:49:33.913,7741,true,gregturn(gregturn),,,,"0|i01p8v:",9967,9983,,,,,,,,"07/Jun/08 4:29 AM;michelz;It is possible to move the package 'org.springframework.ws.soap.security.support' to another component? Maybe the spring-ws-core or spring-ws-support. 

I need this package to easy configure SSL and i don't want spring-ws-security component and this dependencies. The package is not related ONLY with ws-security, but with security in general. Even better, for me, if this classes would be in the springframework.","29/Jun/08 10:49 PM;arjen.poutsma;As for moving the class to Spring Core, that would be hard, since Spring-WS depends on this package name, and has to be backwards compatible with earlier versions.","29/Jun/08 10:51 PM;arjen.poutsma;Resolved, thanks for pointing this out!","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#524|https://github.com/spring-projects/spring-ws/issues/524]. ",,,,,,,,,,,,,
Website links broken,SWS-368,22464,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,ejvyas,ejvyas,04/Jun/08 12:15 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,04/Jun/08 12:24 AM,,,,,,,,,,,,,,0,,,,,,,The top level links Spring webservices 1.0 and Spring web services 1.5 are broken,Doesnt matter,,,,,,,,,,,,,,,SWS-369,,,,,,,,,,,,,,,,,,,,,24969600,,2012-05-04 07:03:19.503,7743,true,gregturn(gregturn),,,,"0|i03bkn:",19417,20050,,,,,,,,"04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#522|https://github.com/spring-projects/spring-ws/issues/522]. ",,,,,,,,,,,,,,,,
SOAP over JMS (BEA Weblogic 9.2) - empty body in SOAP responses with a jms TextMessage,SWS-367,22433,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mengugu,mengugu,02/Jun/08 4:10 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,05/Jun/08 12:41 AM,1.5.2,,,,,,1.5.3,,XML,,,,,0,,,,,,,"A SOAP request is sent over JMS, the JMSReplyTo is set manually to an internal jms Queue.
Both for normal responses and for soap faults, the produced response (TextMessage) has an empty soap body.

The problem is coming from the following method in org.springframework.ws.transport.jms.JmsReceiverConnection

    protected OutputStream getResponseOutputStream() throws IOException {
        if (responseMessage instanceof BytesMessage) {
            return new BytesMessageOutputStream((BytesMessage) responseMessage);
        }
        else if (responseMessage instanceof TextMessage) {
        	
            return new ByteArrayOutputStream() {

                public void close() throws IOException {
                    String text = new String(toByteArray(), textMessageEncoding);
                    try {
                        ((TextMessage) responseMessage).setText(text);
                    }
                    catch (JMSException ex) {
                        throw new JmsTransportException(ex);
                    }
                }
            };
        }
        else {
            throw new IllegalStateException(""Unknown request message type ["" + responseMessage + ""]"");
        }
    }

The close() on the private class set the text property of the TextMessage, but  the close() is called AFTER the message has been sent by the JMS message producer :

See this method in the ancestor AbstractWebServiceConnection
    public final void send(WebServiceMessage message) throws IOException {
        onSendBeforeWrite(message);
        tos = createTransportOutputStream();
        if (tos == null) {
            return;
        }
        message.writeTo(tos);
        tos.flush();
        onSendAfterWrite(message);
    }

For a TextMessage the line : message.writeTo(tos) did not set yet the text property of the TextMessage, then the onSendAfterWrite(message) is called, which sends the JMS message to the destination ( see in JmsReceiverConnection).  
Finally, a close() is performed in the caller bean ( a message listener) via a TransportUtils.closeConnection(connection) which closes also the private ByteArrayOutputStream, but a bit too late ...

The JMS Specification says : 

3.9 Access to Sent Messages
After sending a message, a client may retain and modify it without affecting
the message that has been sent. The same message object may be sent multiple
times.

I have triggered the 'set' of the text property with the flush() method instead of the close(). It solved the problem but it's not very proper because the flush() may be called multiple times when writing in a OutputStream



","Spring core 2.5.4, Spring-ws 1.5.2 Weblogic 9.2 - jdk 1.5.10",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-07-21 22:07:15.75,7744,true,gregturn(gregturn),,,,"0|i01ojz:",9855,9882,,,,,,,,"21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#521|https://github.com/spring-projects/spring-ws/issues/521]. ",,,,,,,,,,,,,,,,
Dynamic AOP proxies for @Endpoints result in IllegalArgumentExceptions,SWS-366,22415,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,mdiskin,mdiskin,30/May/08 11:33 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,16/Jun/08 2:47 AM,1.5.2,,,,,,1.5.3,,Core,,,,,0,,,,,,,"When using AspectJ advices on Endpoint classes will causes a ""java.lang.IllegalArgumentException: object is not an instance of declaring class"" exception.

See these forum posts for the stack and examples.

http://forum.springframework.org/showthread.php?t=54665
http://forum.springframework.org/showthread.php?t=50284

Thanks
Mark",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-06-13 00:17:46.876,7745,true,gregturn(gregturn),,,,"0|i040q7:",23492,20051,,,,,,,,"13/Jun/08 12:17 AM;arjen.poutsma;I am working on solving this, but as a workaround, you can use CGLIB-based proxies, rather than dynamic proxies.","16/Jun/08 2:47 AM;arjen.poutsma;I've decided not to fix this issue, because fixing it would break backwards compatibility with older releases. 

So the workaround described earlier (using CGLIB proxies by specifying proxy-target-class=""true"" on the aop:aspectj-autoproxy or aop:config element) is the recommended fix.

I did change the exception thrown, so you now get a nice message, suggesting CGLIB, rather than the IllegalArgumentException thrown from deep in the JDK.

","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#520|https://github.com/spring-projects/spring-ws/issues/520]. ",,,,,,,,,,,,,,
wss4j-1.5.4.jar not in repository,SWS-365,22406,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,nhajratw,nhajratw,30/May/08 3:49 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,06/Jun/08 2:33 AM,1.5.2,,,,,,1.5.3,,,,,,,0,,,,,,,"The Spring-WS project:

http://repo1.maven.org/maven2/org/springframework/ws/spring-ws-parent/1.5.2/spring-ws-parent-1.5.2.pom

has a reference to wss4j-1.5.4.jar

This jar doesn't exist in the maven repo's. The only way i've found to get it is from the manual ""all dependencies"" download of spring-ws.",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-30 08:39:06.575,7746,true,gregturn(gregturn),,,,"0|i040qf:",23493,20052,,,,,,,,"30/May/08 8:39 AM;arjen.poutsma;It used to be available at http://dist.wso2.org/maven2/org/apache/ws/security/wss4j/, but it seems like WSO2 pulled it.","02/Jun/08 12:03 AM;fbascheper;Well, that's understandable since the vote on release 1.5.4 has passed this week. 

See http://mail-archives.apache.org/mod_mbox/ws-wss4j-dev/200806.mbox/browser .","05/Jun/08 12:46 AM;arjen.poutsma;Downgraded to WSS4J 1.5.3.2, since 1.5.3.3 has issues.","05/Jun/08 7:55 PM;fbascheper;Well, 1.5.4 has now been released and can be found here: 
http://repo1.maven.org/maven2/org/apache/ws/security/wss4j/1.5.4/
","06/Jun/08 12:15 AM;arjen.poutsma;Jeez, this wss4j release process is driving me nuts! First they put 1.5.4 up at WSO2's repo, then they pull it, then they publish it again, but it fails our unit tests. So apparently, this new 1.5.4 is not the same as the old 1.5.4. Sigh.
","06/Jun/08 2:33 AM;arjen.poutsma;Upgraded, and fixed an issue with UsernameToken usernames not showing up, in Wss4jHandler. No idea why this wasn't showing up earlier.","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#518|https://github.com/spring-projects/spring-ws/issues/518]. ",,,,,,,,,,
AcegiPlainTextPasswordValidationCallbackHandler doesn't implement InitializingBean,SWS-363,22347,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,abuijze,abuijze,27/May/08 5:50 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,28/May/08 9:03 AM,1.5.2,,,,,,1.5.3,,Security,,,,,0,,,,,,,"The AcegiPlainTextPasswordValidationCallbackHandler (both in xwss and wss4j packages) does provide an afterPropertiesSet method, but it is never called suring context setup, since it doesn't implement the InitializingBean interface.

A workaround is to set it as ""init-method"" in the context.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-28 09:03:57.405,7748,true,gregturn(gregturn),,,,"0|i01p93:",9968,9984,,,,,,,,"28/May/08 9:03 AM;arjen.poutsma;Fixed. Thanks for pointing this out!","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#516|https://github.com/spring-projects/spring-ws/issues/516]. ",,,,,,,,,,,,,,,
Using Axiom with payload caching off sometimes creates empty soap bodies,SWS-359,22242,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jim,jim,21/May/08 10:17 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,06/Jun/08 2:56 AM,1.5.2,,,,,,1.5.3,,Core,,,,,0,,,,,,,"It appears that if you're using Castor to marshal your responses, and you're using Axiom without payload caching, that the SOAP response comes back with an empty Soap Body.  I did not try this with other Marshalling technologies like JAXB, etc, so I'm not sure if it is restricted to Castor only or not.

It looks like NonCachingPayload.DelegatingStreamWriter.writeEndDocument() never gets called at least when marshalling with Castor.  Castor by default does not fire an endDocument SAX event (or close or flush for that matter).  But if you call setMarshalAsDocument(true) on a castor marshaller it does call endDocument().

I just now worked around this with Castor by creating a simple subclass of CastorMarshaller like this below:
    public class MyCastorMarshaller extends CastorMarshaller {
        protected void customizeMarshaller(Marshaller marshaller) {
            super.customizeMarshaller(marshaller);
            marshaller.setMarshalAsDocument(true);
        }
    }

See this forum thread for additional details: http://forum.springframework.org/showthread.php?p=181732&posted=1#post181732",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-21 10:41:39.373,7752,true,gregturn(gregturn),,,,"0|i040qv:",23495,20054,,,,,,,,"21/May/08 10:41 AM;arjen.poutsma;I could expose that property on the CastorMarshaller, so you can configure it in Spring config.

I'm open for nicer solutions, though.","21/May/08 12:56 PM;chrisborrill;I am using org.springframework.ws.soap.axiom.AxiomSoapMessageFactory and org.springframework.oxm.jibx.JibxMarshaller.  If I set the payloadCaching property of the AxiomSoapMessageFactory to false the SOAP body is empty, but if I set payloadCaching to true (the default) everthing works correctly.","21/May/08 3:24 PM;jim;I wonder if maybe NonCachingPayload.DelegatingStreamWriter could more proactively detect the end of the payload element by watching the writeStartElement(), writeEndElement() and writeEmptyElement() events so that it would not need the writeEndDocument() to get called.  It would probably need to support the possibility of nested elements in the payload having the same name as the root payload element, but it might could be done with a counter of starts vs ends for the root ele name.  Dunno - just a thought.","21/May/08 8:20 PM;arjen.poutsma;I had the same idea (counting elements) last night in bed. Great minds...","22/May/08 9:51 AM;jim;Arjen - another related thing with this.  I was working with a stax-based endpoint and saw similar issues with the empty body.  I was able to temporarily work around that, but I noticed that when using StAX marshalling I also needed to call writeStartDocument() on my XMLStreamWriter.  The DelegatingStreamWriter doesn't default the encoding to anything, and this was causing a NPE in ByteArrayDataSource.getXMLBytes() deep in axiom code during the msg.writeTo() call.

Could you default the encoding in case writeStartDocument() isn't called either?  Thanks!","06/Jun/08 2:55 AM;arjen.poutsma;I will add element depth counting. I don't think counting the writeEmptyElement() events is necessary, though, because that's just elementDepth + 1 -1. Also fixed the encoding bug, now defaults to UTF-8, like all XML should.

Could you check a recent snapshot (as of tomorrow) to check if things work now?","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","21/Aug/08 10:42 AM;chrisborrill;Make sure you have no active interceptors if payload caching is set to false, since these will consume the message, as described here:

http://static.springframework.org/spring-ws/sites/1.5/apidocs/org/springframework/ws/soap/axiom/AxiomSoapMessageFactory.html

Good luck,
Chris","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#510|https://github.com/spring-projects/spring-ws/issues/510]. ",,,,,,,,,
NPE in JmsSenderConnection.onReceiveBeforeRead() when the received Message is null,SWS-358,22236,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,tareq,tareq,20/May/08 11:30 PM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,20/May/08 11:34 PM,1.5.2,,,,,,1.5.3,,Core,,,,,0,,,,,,,"We should test whether the Message returned by messageConsumer.receive is null (case of time out for instance) or else a NPE is thrown:

Message message = receiveTimeout >= 0 ? messageConsumer.receive(receiveTimeout) : messageConsumer.receive();",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-07-21 22:07:15.205,7753,true,gregturn(gregturn),,,,"0|i040r3:",23496,20055,,,,,,,,"21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#507|https://github.com/spring-projects/spring-ws/issues/507]. ",,,,,,,,,,,,,,,,
Axiom does not support SwA attachments ,SWS-357,22206,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,barsimp47,barsimp47,20/May/08 1:53 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,04/Jul/08 12:22 AM,1.5.2,,,,,,1.5.3,,Core,,,,,1,,,,,,,"Incoming SOAP messages with attachments are parsed correctly, but outgoing messages with attachments are missing attachment parts and all part boundaries, even though the overall HTTP content-type is ""multipart/related"" with a boundary value specified.

Given this message sending scenario:
{code}
WebServiceMessageCallback requestCallback = new WebServiceMessageCallback() {
  public void doWithMessage(WebServiceMessage message)
      throws IOException, TransformerException {
    
    SoapMessage soapMessage = (SoapMessage) message;
      
    soapMessage.addAttachment(
        generateContentId(), // generates a unique Content-ID String
        new ByteArrayResource(attachmentData),   // Data
        ""application/octet-stream"");        // Content-Type
  }
}; 

// ...create response extractor ....

serviceTemplate.sendAndReceive(
  ""https://foo.bar.com/SendSubmissionReceipts"", 
  requestCallback, responseExtractor);
{code}

I get an HTTP message like this:

{code}
Accept-Encoding: gzip
Content-Type: multipart/related; boundary=MIMEBoundaryurn_uuid_3D927F4433B32F68641210953465313; type=""text/xml""; start=""0.urn:uuid:3D927F4433B32F68641210953465314@apache.org""; charset=""UTF-8""
SOAPAction: ""SendSubmissionReceipts""
User-Agent: Jakarta Commons-HttpClient/3.1
Host: foo.bar.com
Cookie: $Version=0; JSESSIONID=0001JGVZICF0ATPGIDRKW5J1LHY:11p9fo6l7; $Path=/
Content-Length: 3978

<?xml version='1.0' encoding='UTF-8'?><soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""><soapenv:Header>[contents intentionally omitted]</soapenv:Header><soapenv:Body>[contents intentionally omitted]</soapenv:Body></soapenv:Envelope>
{code}

Correct overall content-type and boundary value, but no attachment parts and no boundaries.

The problem may be in CommonsHttpConnection.onSendAfterWrite() where a ByteArrayRequestEntity is always used instead of the MultipartRequestEntity that the Commons HttpClient API says should be used for requests with attachments

{code}
protected void onSendAfterWrite(WebServiceMessage message) throws IOException {
  postMethod.setRequestEntity(new ByteArrayRequestEntity(requestBuffer.toByteArray()));
  requestBuffer = null;
  httpClient.executeMethod(postMethod);
}
{code}

It would seem to me that onSendAfterWrite() should be checking the WebServiceMessage to see if there are any attachments, and if there are, creating the necessary xml message and attachment Parts and passing them to a MultipartRequestEntity instead of sending the entire request to a ByteArrayRequestEntity.
","WinXP, Java 1.5, Axiom 1.2.7, HttpClient 3.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-20 08:00:33.515,7754,true,gregturn(gregturn),,,,"0|i040rb:",23497,20056,,,,,,,,"20/May/08 8:00 AM;arjen.poutsma;I don't think a MultipartRequestEntity is applicable for SOAP attachments, because that sets the content type to ""multipart/form-data"", while SOAP needs ""multipart/related"". 

I will investigate this bug for 1.5.3.","20/May/08 8:54 AM;barsimp47;I've tried creating a workaround using MultipartRequestEntity, and it does unfortunately set the message parts' content-types to ""multipart/form-data"", even though I specifically told it to use a different content-type using Part.setContentType() on each Part. (""text/xml"" for the actual SOAP message, and ""application/octet-stream"" for my attachment, which happens to be a zip archive. ""application/octet-stream"" is what the service is expecting for some reason.)

The overall HTTP message's Content-Type header is correctly set to ""multipart/related"", but I don't want the individual parts to be ""multipart/related"". I want the parts to be what I tell them to be with Part.setContentType().
","20/May/08 10:27 AM;arjen.poutsma;Interesting. 

Could you also try to use the HttpUrlConnectionMessageSender? I would like to know if this is a Commons Http Client specific bug or not.","21/May/08 1:12 AM;barsimp47;Doesn't seem to be working with HttpUrlConnectionMessageSender either, though I can't see the exact HTTP messages because I don't know how to make the HttpUrlConnection log its requests and responses like I can with Commons HttpClient.

I'm getting the same error response from the service I'm trying to access, so I'm assuming the HTTP message is still being packaged incorrectly.
","21/May/08 1:14 AM;barsimp47;But that's without my custom MessageSender workaround code which tries to add the attachment parts. So I suppose I'll check into that next: how to add attachments to HttpUrlConnection POST messages.","21/May/08 2:50 AM;arjen.poutsma;I've written a test, and it fails for Axiom, but not for SAAJ. So as a (temporary) workaround, you can use SAAJ.","21/May/08 5:25 AM;barsimp47;Yes, it is working for me with SAAJ too. Thanks.","03/Jul/08 7:22 AM;arjen.poutsma;Unfortunately, Axiom's SwA attachment support seems broken. I've written a mail about this to the Axiom dev list, so we'll see what happens.","04/Jul/08 12:22 AM;arjen.poutsma;Turns out this wasn't an issue in Axiom, but rather in the combination of using Axiom and SAAJ in the same JVM. See https://saaj.dev.java.net/servlets/ReadMsg?list=users&msgNo=83.

At any rate, I fixed it, so it works now.","17/Jul/08 4:04 AM;montebove;With 1.5.3 I still have a java.io.IOException: Invalid content type ""text/xml; charset=UTF-8"" for XmlDCH
using Axiom and SwA when in the same JVM I call a Spring Web Service using SAAJ and MTOM. 
The Axiom /SwA service works fine until I call the SAAJ/MTOM service then stop working .","17/Jul/08 7:14 AM;arjen.poutsma;When I said ""I fixed it"", I meant that Axiom SwA support now works. However, that bug in the XmlDCH is not something I can solve, I has to be solved in SAAJ. The current SAAJ CVS contains my fix, but I have no idea when this will be out.

However, see that saaj mailing list thread for a workaround.","17/Jul/08 8:20 AM;montebove;Thanks, your workaround:
CommandMap.setDefaultCommandMap(new MailcapCommandMap());
before adding an attachment with Axiom seems to work.
But as in tje last night build of Metro 1.3 they released the patched SAAJ as stated here https://saaj.dev.java.net/issues/show_bug.cgi?id=32
I extracted the new SAAJ from there and used it with Java 5 and surprise they solved an exception but there was another behind the corner, now I get this exception(if I comment out your workaround code line):

23:09:25,187 ERROR [STDERR] Caused by: java.io.IOException: Unable to run the JAXP transformer on a stream java.lang.String
23:09:25,187 ERROR [STDERR]     at com.sun.xml.messaging.saaj.soap.XmlDataContentHandler.writeTo(XmlDataContentHandler.java:151)
23:09:25,187 ERROR [STDERR]     at javax.activation.ObjectDataContentHandler.writeTo(DataHandler.java:897)
23:09:25,187 ERROR [STDERR]     at javax.activation.DataHandler.writeTo(DataHandler.java:330)
23:09:25,187 ERROR [STDERR]     at javax.mail.internet.MimeBodyPart.writeTo(MimeBodyPart.java:1403)
23:09:25,187 ERROR [STDERR]     at javax.mail.internet.MimeBodyPart.writeTo(MimeBodyPart.java:874)
23:09:25,187 ERROR [STDERR]     at org.apache.axiom.om.impl.MIMEOutputUtils.writeBodyPart(MIMEOutputUtils.java:245)
23:09:25,187 ERROR [STDERR]     at org.apache.axiom.om.impl.MIMEOutputUtils.writeSOAPWithAttachmentsMessage(MIMEOutputUtils.java:283)","17/Jul/08 8:33 AM;arjen.poutsma;I would suggest that you mention that on the SAAJ mailing list.","17/Jul/08 11:44 PM;montebove;Done with a possible patch:
https://saaj.dev.java.net/servlets/ReadMsg?list=users&msgNo=90



","21/Jul/08 1:39 AM;montebove;My fix was incorporated in last SAAJ build:
https://saaj.dev.java.net/servlets/ReadMsg?list=users&msgNo=93
https://saaj.dev.java.net/servlets/ProjectDocumentList

I tested with my Spring Web Services applications using both Axiom and SAAJ in the same JVM (Java 5) and all works fine now.","21/Jul/08 1:44 AM;arjen.poutsma;Great. Open source works!","21/Jul/08 10:07 PM;arjen.poutsma;Closing issues in 1.5.3","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#413|https://github.com/spring-projects/spring-ws/issues/413]. "
mistakes in the Spring webservices online tutorial,SWS-355,22087,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,ejvyas,ejvyas,12/May/08 12:06 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,15/May/08 10:33 PM,,,,,,,1.5.2,,Documentation,Samples,,,,0,,,,,,,"The tutorial http://static.springframework.org/spring-ws/site/reference/html/tutorial.html is a total show-stopper for the new users. There are many mistakes some of which are listed below:-

1. The example of POM has wrong end tag for </dependencies> 

2. activation.jar is needed for the tutorial to work. Hence the following code should be added to pom.xml
<dependency>
    <groupId>javax.activation</groupId>
    <artifactId>activation</artifactId>
    <version>1.1</version>
</dependency> 

3. The tutorial should be perfect and simple. We should try to make it simpler with minimal features and calculations. I still feel we should put more effort in this. 

PS: I have never got the tutorial to work!!",N/A,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-15 22:33:22.742,7756,true,gregturn(gregturn),,,,"0|i01n33:",9617,9654,,,,,,,,"15/May/08 10:33 PM;arjen.poutsma;1. I've fixed the </dependencies> tag, thanks for spotting this!

2. That dependency should be automatically resolved via maven. The dep graph is saaj-api->saaj-impl->activation.See http://repo1.maven.org/maven2/javax/xml/soap/saaj-api/1.3/saaj-api-1.3.pom

3. I am open for suggestions here.","16/May/08 12:03 AM;ejvyas;Hi Arjen,

I do not believe anything should be left to ""automatic"". Maven can be another new tool for the developer and hence nothing should be assumed. I am working on a simpler tutorial. If and when I have it working I will let you know

Thanks,
Vs","21/Jul/08 10:06 PM;arjen.poutsma;Closing issues in 1.5.2","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#506|https://github.com/spring-projects/spring-ws/issues/506]. ",,,,,,,,,,,,,,
Schema inlining results in duplicate inlining of files referenced from multiple files,SWS-353,22043,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,olivergierke,olivergierke,08/May/08 3:33 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,08/May/08 10:13 PM,1.5.1,,,,,,1.5.2,,Core,,,,,0,,,,,,,"Suppose you have two files foo-response.xsd and bar-response.xsd referenceing a common domain.xsd the Dynamic WSDL creation will cause the domain.xsd to be inlined twice in the WSDL.

This causes trouble to JAX-WS wsimport utility as elements appera twice in the same namespace.",Any,,,,,,,,,,,,,,,,,,,,,,,"08/May/08 5:26 AM;olivergierke;CommonsXsdSchemaCollection.java;https://jira.spring.io/secure/attachment/14040/CommonsXsdSchemaCollection.java",,,,,,,,,,,,,24969600,,2008-05-08 22:13:14.207,2405,true,gregturn(gregturn),,,,"0|i00xlb:",5487,6781,,,,,,,,"08/May/08 5:26 AM;olivergierke;Added patched version of CommonsXsdSchemaCollection that does not include or import external XSDs twice. ","08/May/08 10:13 PM;arjen.poutsma;Fixed, thanks for the patch!","10/May/08 1:12 AM;arjen.poutsma;One more thing, Oliver. Since you stripped the Apache preamble from the patch, I have to ask you explicitly: 

Do you agree to share the attached patch under the terms of the Apache License, version 2?","10/May/08 1:31 AM;olivergierke;Excuse me, Arjen. Of course I do. I tried to fix the issue by subclassing at first for the project i needed the functionality for but ended up copyng the entire class as extending it didn't work as well as expected. By copying the entire code I seem to have missed the license declaration.

Regards,
Ollie","21/Jul/08 10:06 PM;arjen.poutsma;Closing issues in 1.5.2","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#504|https://github.com/spring-projects/spring-ws/issues/504]. ",,,,,,,,,,,,
Error using AxiomSoapMessageFactory with comments in request,SWS-347,21972,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,jrduncans,jrduncans,02/May/08 1:18 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,02/May/08 9:00 AM,1.5,,,,,,1.5.1,,,,,,,0,,,,,,,"While attempting to test my webservice using Soap UI, I sent a request that included XML comments, and I got the following error:

org.apache.axiom.om.impl.llom.OMCommentImpl cannot be cast to org.apache.axiom.om.OMText",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-02 01:26:34.662,7763,true,gregturn(gregturn),,,,"0|i040rz:",23500,20060,,,,,,,,"02/May/08 1:26 AM;arjen.poutsma;Could you supply the full stack trace?","02/May/08 1:32 AM;jrduncans;As you might guess, this happens when the comment is inside an expected text node; it did not occur when I placed a comment between two elements.  Here is the stack trace:

java.lang.ClassCastException: org.apache.axiom.om.impl.llom.OMCommentImpl cannot be cast to org.apache.axiom.om.OMText
        at org.apache.axiom.om.impl.llom.OMStAXWrapper.getTextCharacters(OMStAXWrapper.java:403)
        at org.springframework.xml.stream.StaxStreamXmlReader.handleComment(StaxStreamXmlReader.java:193)
        at org.springframework.xml.stream.StaxStreamXmlReader.parseInternal(StaxStreamXmlReader.java:103)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:128)
        at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:111)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:637)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:708)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:313)
        at org.springframework.ws.server.endpoint.AbstractLoggingInterceptor.logMessageSource(AbstractLoggingInterceptor.java:125)
        at org.springframework.ws.server.endpoint.AbstractLoggingInterceptor.handleRequest(AbstractLoggingInterceptor.java:89)
        at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:208)
        at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:163)
        at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
        at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
        at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:523)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:463)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:842)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:648)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
","02/May/08 9:00 AM;arjen.poutsma;This is actually a bug in Axiom, not Spring-WS. Calling getTextCharacters() on a comment node is perfectly legal, according to the XMLStreamReader spec (https://java.sun.com/webservices/docs/1.5/api/javax/xml/stream/XMLStreamReader.html).

You can create an Axiom issue here: http://issues.apache.org/jira/browse/WSCOMMONS.","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","25/Sep/08 7:53 AM;candrews;https://issues.apache.org/jira/browse/WSCOMMONS-393","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#408|https://github.com/spring-projects/spring-ws/issues/408]. ",,,,,,,,,,,,
WSS4J interceptor creates creates invalid digest for SAAJ messages,SWS-345,21967,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,01/May/08 10:27 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,05/May/08 3:10 AM,1.5,,,,,,1.5.2,,,,,,,0,,,,,,,"When using SAAJ and WSS4J on for outgoing messages, the digest created is incorrect, which results in signature verification failures. This is due to the fact that  the Document exposed via SOAPMessage.getSOAPPart() is out of sync. Calling SOAPMessage.saveChanges() fixes this.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-04 16:58:03.84,7765,true,gregturn(gregturn),,,,"0|i040sf:",23502,20062,,,,,,,,"01/May/08 10:33 AM;arjen.poutsma;As a workaround, you can use the AxiomSoapMessageFactory.","01/May/08 10:59 AM;arjen.poutsma;Fixed.","04/May/08 4:58 PM;harenp;Arjen, 

  I am still seeing signature verification problems with version 1.5.1 in combination with SaajSoapMessageFactory.
  The AxiomSoapMessageFactory workaround continues to work okay.
  I am using spring-ws-1.5.1.jar from 04 May 2008, 1:47PM.
","04/May/08 9:43 PM;arjen.poutsma;What kind of problems, i.e. what is the exception and/or fault that you get?","04/May/08 11:15 PM;arjen.poutsma;Definitely something weird going on here. The test I wrote for this (testSignAndValidate() in SaajWss4jMessageInterceptorSignTest) works fine, but it does not appear to work in deployed applications. Reopening for 1.5.2.

Let's hope we fix this one for good this time :(.","05/May/08 3:10 AM;arjen.poutsma;Ok, I've given it another shot, with a different approach this time. I've also improved the tests, and tried this approach in a test project. It all works for me.

Patrick, could you try a snapshot tomorrow? See http://static.springframework.org/spring-ws/site/downloads/snapshots.html","05/May/08 6:24 AM;harenp;Arjen, 
  I just tried the snapshot (spring-ws-1.5.2-20080505.174403-1.zip) with a SaajSoapMessageFactory bean. Looks like it is working okay.
  FYI, my test is against a WebSphere 6.1 web-service, using WebSphere's jax-rpc runtime, so the interoperability is looking good!
","05/May/08 7:00 AM;arjen.poutsma;Great! Thanks for checking this out, Patrick.

I guess it makes sense to speed up the release for this fix, so I've set 1.5.2 to be released at the end of next week.","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#497|https://github.com/spring-projects/spring-ws/issues/497]. ",,,,,,,,,
NPE in AbstractAnnotationMethodEndpointMapping  on line 47 during postProcessAfterInitialization,SWS-342,21916,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,serin,serin,26/Apr/08 3:24 AM,23/Sep/20 4:46 PM,10/Jul/21 8:38 AM,27/Apr/08 1:12 AM,1.5,,,,,,1.5.1,,Core,,,,,0,,,,,,,"The stack trace is as follows:

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'personMaintenanceSpringWebServiceEndpoint' defined in class path resource [tanzan-web-context.xml]: Cannot resolve reference to bean 'personMaintenanceService' while setting bean property 'personMaintenanceService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'personMaintenanceService': Post-processing of the FactoryBean's object failed; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:275)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:104)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1008)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:470)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)
	at weblogic.servlet.internal.EventsManager$FireContextListenerAction.run(EventsManager.java:376)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:82)
	at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:1616)
	at weblogic.servlet.internal.WebAppServletContext.start(WebAppServletContext.java:2761)
	at weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:889)
	at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:333)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:204)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:60)
	at weblogic.application.internal.flow.ScopedModuleDriver.start(ScopedModuleDriver.java:200)
	at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:117)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:204)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:60)
	at weblogic.application.internal.flow.StartModulesFlow.activate(StartModulesFlow.java:26)
	at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:635)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26)
	at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:212)
	at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:154)
	at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activate(BasicDeployment.java:181)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activateFromServerLifecycle(BasicDeployment.java:358)
	at weblogic.management.deploy.internal.DeploymentAdapter$1.doActivate(DeploymentAdapter.java:52)
	at weblogic.management.deploy.internal.DeploymentAdapter.activate(DeploymentAdapter.java:186)
	at weblogic.management.deploy.internal.AppTransition$2.transitionApp(AppTransition.java:30)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:233)
	at weblogic.management.deploy.internal.ConfiguredDeployments.activate(ConfiguredDeployments.java:169)
	at weblogic.management.deploy.internal.ConfiguredDeployments.deploy(ConfiguredDeployments.java:123)
	at weblogic.management.deploy.internal.DeploymentServerService.resume(DeploymentServerService.java:173)
	at weblogic.management.deploy.internal.DeploymentServerService.start(DeploymentServerService.java:89)
	at weblogic.t3.srvr.SubsystemRequest.run(SubsystemRequest.java:64)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:209)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:181)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'personMaintenanceService': Post-processing of the FactoryBean's object failed; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:142)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:116)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:91)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1285)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:275)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:269)
	... 56 more
Caused by: java.lang.NullPointerException
	at org.springframework.ws.server.endpoint.mapping.AbstractAnnotationMethodEndpointMapping.postProcessAfterInitialization(AbstractAnnotationMethodEndpointMapping.java:47)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:361)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:1427)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport$1.run(FactoryBeanRegistrySupport.java:139)
	... 64 more


The problem occurs when AbstractAnnotationMethodEndpointMapping#postProcessAfterInitialization calls getEndpointClass(bean) which in turn calls AopUtils.getTargetClass(endpoint).

'bean' in getEndpointClass(bean) is actually a local-slsb as shown by its config here:

    <jee:local-slsb id=""personMaintenanceService""
                    business-interface=""uk.co.serin.tanzan.personmaintenance.facade.PersonMaintenanceService""
                    jndi-name=""ejb/uk.co.serin.tanzan.personmaintenance.facade.PersonMaintenanceLocal""
                    resource-ref=""true""/>

I can see that SWS-222 was raised to address proxies but it does not appear to work with EJBs.

Unfortunatly I cannot easily override the AbstractAnnotationMethodEndpointMapping#postProcessAfterInitialization method because it is final otherwise I could create a quick work around.

Hopefully the above will assist with diagnosis but if any further information would be of assistance just let me know.

","Spring Frameworm v2.5.3, Weblogic v9.2.3, Spring WS v1.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-05 21:21:28.139,7768,true,gregturn(gregturn),,,,"0|i040sv:",23504,20065,,,,,,,,"26/Apr/08 3:26 AM;serin;I forgot to add that the NPE is as a result of AopUtils.getTargetClass(endpoint) returning null","27/Apr/08 5:26 PM;serin;Many thanks for the prompt turnaround Arjen, very much appreciated. I have tested the fix and can confirm that all is now fine!

Wayne.","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:46 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#494|https://github.com/spring-projects/spring-ws/issues/494]. ",,,,,,,,,,,,,,
Wss4jSecurityInterceptor and AcegiDigestPasswordValidationCallbackHandler do not correctly work together to update the Acegi security context.,SWS-341,21904,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,ibutcher,ibutcher,25/Apr/08 1:49 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,30/Apr/08 10:21 PM,1.5,,,,,,1.5.1,,Security,,,,,0,,,,,,,"I am trying to hook up digest password handling and acegi authorization. I have managed to do this successfully with the plain text equivalent. I think I've managed to get close to the problem. When you configure the plain text acegi handler you wire in a ProviderManager. 

<bean id=""acegiHandler""
          class=""org.springframework.ws.soap.security.wss4j.callback.acegi.AcegiPlainTextPasswordValidationCallbackHandler"">
        <property name=""authenticationManager"" ref=""authenticationManager""/>
    </bean>

    <bean id=""authenticationManager"" class=""org.acegisecurity.providers.ProviderManager"">
        <property name=""providers"">
            <bean class=""org.acegisecurity.providers.dao.DaoAuthenticationProvider"">
                <property name=""userDetailsService"" ref=""inMemoryDaoImpl""/>
            </bean>
        </property>
    </bean>


    <bean id=""wsSecurityInterceptor"" class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
        <property name=""validationActions"" value=""UsernameToken""/>
        <property name=""validationCallbackHandler"">
            <!--<ref local=""acegiDigestPasswordHandler""/>-->
            <ref local=""acegiHandler""/>
        </property>
    </bean>

    <bean id=""inMemoryDaoImpl"" class=""org.acegisecurity.userdetails.memory.InMemoryDaoImpl"">
        <property name=""userMap"">
            <value>
                Ernie=Bert,ROLE_SUPERVISOR
            </value>
        </property>
    </bean>


It is the AbstractUserDetailsAuthenticationProvider (called by the AuthenticationManager) which, upon successful authentication, that actually sets the setAuthenticated(true) on the UsernamePasswordAuthenticationToken (see UsernamePasswordAuthenticationToken(principal,  authentication.getCredentials(), user.getAuthorities()); ).



protected Authentication createSuccessAuthentication(Object principal, Authentication authentication,
        UserDetails user) {
        // Ensure we return the original credentials the user supplied,
        // so subsequent attempts are successful even with encoded passwords.
        // Also ensure we return the original getDetails(), so that future
        // authentication events after cache expiry contain the details

// IB this constructor sets 'authenticated' to true
        UsernamePasswordAuthenticationToken result = new UsernamePasswordAuthenticationToken(principal,
                authentication.getCredentials(), user.getAuthorities());
        result.setDetails(authentication.getDetails());

        return result;
    }


In the case of AcegiDigestPasswordValidationCallbackHandler you don't wire in a AuthenticationManager so even thought the credentials are valid it is never set to authentication in acegi SecurityContext. So the authorization fails even though the Principal has the correct GrantedAuthorities.


<bean id=""wsSecurityInterceptor"" class=""org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor"">
        <property name=""validationActions"" value=""UsernameToken""/>
        <property name=""validationCallbackHandler"">
            <ref local=""acegiDigestPasswordHandler""/>
            <!--<ref local=""acegiHandler""/>-->
        </property>
    </bean>

    <bean id=""inMemoryDaoImpl"" class=""org.acegisecurity.userdetails.memory.InMemoryDaoImpl"">
        <property name=""userMap"">
            <value>
                Ernie=Bert,ROLE_SUPERVISOR
            </value>
        </property>
    </bean>

    <bean id=""acegiDigestPasswordHandler""
          class=""org.springframework.ws.soap.security.wss4j.callback.acegi.AcegiDigestPasswordValidationCallbackHandler"">
        <property name=""userDetailsService"">
            <ref local=""inMemoryDaoImpl""/>
        </property>
    </bean>
","Mac OS X 10.5, Java 1.5",,,,,,,,,,,,,,,,,,,,,,,"29/Apr/08 12:14 PM;tareq;AcegiDigestPasswordValidationCallbackHandler.patch;https://jira.spring.io/secure/attachment/14004/AcegiDigestPasswordValidationCallbackHandler.patch","30/Apr/08 10:18 AM;tareq;DigestPasswordValidationCallbackHandlerUnitTests.patch;https://jira.spring.io/secure/attachment/14008/DigestPasswordValidationCallbackHandlerUnitTests.patch",,,,,,,,,,,,24969600,,2008-04-25 02:34:20.815,7769,true,gregturn(gregturn),,,,"0|i01p9j:",9970,9986,,,,,,,,"25/Apr/08 2:34 AM;tareq;Line 81 in UsernamePasswordAuthenticationToken:
UsernamePasswordAuthenticationToken authRequest =
                new UsernamePasswordAuthenticationToken(principal, principal.getPassword());
This constructor sets authenticated to false. 

The following constructor sets authenticated to true but needs GrantedAuthority[] as an argument:
UsernamePasswordAuthenticationToken(Object principal, Object credentials, GrantedAuthority[] authorities)
","29/Apr/08 12:14 PM;tareq;After investigation, I think that setAuthenticated is not the culprit. The problem comes from the way WSS4J handles digest passwords. Unlike with plain text passwords, WSS4J takes the responsibility of validating digest passwords and thus ""steals"" the flow. 
This can be seen in AcegiDigestPasswordValidationCallbackHandler.handleUsernameToken: only the password of the user is passed to the callback whereas the granted authorities are lost. Thus, when UsernamePasswordAuthenticationToken is initialized in handleUsernameTokenPrincipal(), the authorities are not passed.
It seems that the only way to solve the issue is by reloading the user details in handleUsernameTokenPrincipal. The impact on performace can be alleviated by the usage of an appropriate UserCache.

Ian,
I've tested the attached patch with a configuration similar to the one you posted and it seemed to work. It would be great if you could confirm that it solves the issue for you or if you could post the complete acegi configuration you used.","29/Apr/08 12:55 PM;ibutcher;I'll take a look in the next couple of days.   My sample project is 'between configurations'.  I am profiling different autht strategies.   

Thanks,

Ian.","30/Apr/08 3:34 AM;ibutcher;Tareq I have verified this fix on my sample application.   Great work and thanks.","30/Apr/08 10:18 AM;tareq;Unit tests (acegi & spring security).
Ian, thanks for the feedback.","30/Apr/08 10:21 PM;arjen.poutsma;Fixed. Thanks for the patch, Tareq, and thanks for the feedback, Ian!","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#493|https://github.com/spring-projects/spring-ws/issues/493]. ",,,,,,,,,,
XML namespace (http://www.w3.org/XML/1998/namespace) mapped to wrong prefix when building WSDL with inlined schemas,SWS-339,21885,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,jrduncans,jrduncans,23/Apr/08 11:14 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,03/May/08 8:08 AM,1.5,,,,,,1.5.1,,Core,,,,,0,,,,,,,"When using CommonsXsdSchemaCollection with inline=true, and inlining a schema that use the xml namespace, the WSDL cannot be generated due to the following exception:

org.xml.sax.SAXParseException: The prefix ""xml"" cannot be bound to any namespace other than its usual namespace; neither can the namespace for ""xml"" be bound to any prefix other than ""xml"".

InliningXsdSchemaTypesProvider.addTypes should check for the namespace ""http://www.w3.org/XML/1998/namespace"" and always map it to the prefix ""xml""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-03 00:06:41.358,7771,true,gregturn(gregturn),,,,"0|i040tb:",23506,20067,,,,,,,,"03/May/08 12:06 AM;arjen.poutsma;The xml prefix is always implicitly mapped to http://www.w3.org/XML/1998/namespace, there is no need to map it explicitly in your schema. You can do something like this: 

    <xsd:import namespace=""http://www.w3.org/XML/1998/namespace""/>

    <xsd:element name=""GetOrderRequest"">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name=""child"" type=""xsd:string""/>
            </xsd:sequence>
            <xsd:attribute ref=""xml:lang"" use=""required""/>
        </xsd:complexType>
    </xsd:element>

which will result in the following WSDL: 

    <wsdl:types>
        <xsd:schema xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
                    targetNamespace=""http://www.springframework.org/spring-ws/include/schema""
                    xmlns=""http://www.springframework.org/spring-ws/include/schema"" elementFormDefault=""qualified""
                    attributeFormDefault=""unqualified"">

            <xsd:import namespace=""http://www.w3.org/XML/1998/namespace""/>

            <xsd:element name=""GetOrderRequest"">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name=""child"" type=""xsd:string""/>
                    </xsd:sequence>
                    <xsd:attribute ref=""xml:lang"" use=""required""/>
                </xsd:complexType>
            </xsd:element>

        </xsd:schema>
    </wsdl:types>

","03/May/08 1:26 AM;jrduncans;My problem, however, is that I use 3rd-party schemas that include a schema location when they import the xml namespace.   Then, when inlining all the schemas, the schema for the xml namespace is included in the WSDL, but with a different prefix.  I think modfying InliningXsdSchemaTypesProvider.addTypes to special-case the handling a schema with a target namespace of http://www.w3.org/XML/1998/namespace would be appropriate, as this is a problem with real-world standard schemas out there.","03/May/08 1:59 AM;arjen.poutsma;I see. This is actually an issue in CommonsXsdSchemaCollection, which should not follow the schemaLocation for the XML namespace.

Will fix.","03/May/08 8:08 AM;arjen.poutsma;Fixed. Imports of the XML namespace (http://www.w3.org/XML/1998/namespace) are no longer followed.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#491|https://github.com/spring-projects/spring-ws/issues/491]. ",,,,,,,,,,,,,
 SaajXmlReader NullPointerException / jboss / mac in interceptors,SWS-335,21765,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,couzteau,couzteau,17/Apr/08 6:58 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,27/Apr/08 1:08 AM,1.5,,,,,,1.5.1,,,,,,,0,,,,,,,"run my app in the jboss environment (JBoss 4.2.2GA) I always fail with nullpointer exceptions in one of my payload interceptors (PayloadLoggingInterceptor, PayloadValidatingInterceptor).
When I have validation turned on, I fail in xerces, if it's off I fail the logger in xalan.

See stacktraces, failure in validator:
Code:

java.lang.NullPointerException
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleText(SaajXmlReader.java:187)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:127)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:115)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:96)
	at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
	at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
	at javax.xml.validation.Validator.validate(Unknown Source)
	at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
	at org.springframework.ws.server.endpoint.interceptor.AbstractValidatingInterceptor.handleResponse(AbstractValidatingInterceptor.java:185)
	at org.springframework.ws.server.MessageDispatcher.triggerHandleResponse(MessageDispatcher.java:341)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:218)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:179)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:84)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:157)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:262)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:446)

failure in logger:
Code:

  
14:57:46,159 INFO  [STDOUT] 2008-04-07 14:57:46,158 WARN [org.springframework.ws.soap.server.SoapMessageDispatcher] - Endpoint invocation resulted in exception - responding with SOAP Fault
java.lang.NullPointerException
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleText(SaajXmlReader.java:187)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:127)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:150)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:115)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:96)
	at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:485)
	at org.springframework.ws.server.endpoint.1.logMessageSource(AbstractLoggingInterceptor.java:102)
	at org.springframework.ws.server.endpoint.AbstractLoggingInterceptor.handleResponse(AbstractLoggingInterceptor.java:81)
	at org.springframework.ws.server.MessageDispatcher.triggerHandleResponse(MessageDispatcher.java:341)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:218)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
	at ... snip


my bean looks like this,
Code:

     <bean class=""org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping"">
        <property name=""interceptors"">
            <list>
                <bean class=""org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor""/>
                <bean class=""org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"">
                    <property name=""schema"" value=""/WEB-INF/xsd/codexws.xsd""/>
                    <property name=""validateRequest"" value=""true""/>
                    <property name=""validateResponse"" value=""true""/>
                </bean>
            </list>
        </property>
        <property name=""order"" value=""1""/>
    </bean>

I have explicitly defined the message factory:
Code:

    <bean id=""messageFactory""
    	class=""org.springframework.ws.soap.saaj.SaajSoapMessageFactory"">
    	<description>
				define default message factory to avoid problems with JBoss' 
				built in factory. See http://static.springframework.org/spring-ws/site/faq.html#saaj-jboss
        </description>
    	<property name=""messageFactory"">
    		<bean
    			class=""com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl"">
    		</bean>
    	</property>
    </bean>

",Mac  OSX 10.5.2 / JBoss 4.2.2 / Java 1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-04-17 22:33:43.751,7775,true,gregturn(gregturn),,,,"0|i02a53:",13352,13095,,,,,,,,"17/Apr/08 10:33 PM;arjen.poutsma;I'm looking at line 187 of SaajXmlReader, but I honestly can see anything that can cause a NPE. Are you sure you're running Spring-WS 1.5.0?
","19/Apr/08 1:20 PM;couzteau;The stack trace was probaly not 1.5, but I cn repro with 1.5: Here is the stacktrace, crashes in 171 now:

 18:49:31,501 INFO  [STDOUT] 2008-04-19 18:49:31,500 DEBUG [org.springframework.ws.soap.server.SoapMessageDispatcher] - Endpoint invocation resulted in exception - responding with Fault
java.lang.NullPointerException
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleText(SaajXmlReader.java:171)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:129)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:152)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:125) 
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:152)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:125)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:152)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:125)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:152)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:125)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:117)
	at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:98)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.process(ValidatorImpl.java:192)
	at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:147)","27/Apr/08 1:08 AM;arjen.poutsma;Fixed in SVN. 

The mystery that remains is that the SaajXmlReader is only supposed to be used under SAAJ 1.1 (See Saaj11Implementation), but the MessageFactory implementation you configure (SOAPMessageFactory1_1Impl) indicates at least SAAJ 1.2. This might be due to having a SAAJ 1.1 API jar on the classpath somewhere.","29/Apr/08 6:00 AM;couzteau;thanks Arjen.","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#401|https://github.com/spring-projects/spring-ws/issues/401]. ",,,,,,,,,,,,
Calls to lifecycleMonitor.notifyAll() in AbstractStandaloneMessageReceiver are superfluous,SWS-334,21721,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,tareq,tareq,15/Apr/08 9:00 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Apr/08 9:45 AM,1.5,,,,,,1.5.1,,,,,,,0,,,,,,,Calls to lifecycleMonitor.notifyAll() in AbstractStandaloneMessageReceiver are superfluous because no threads call wait on that object.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-05 21:21:20.459,7776,true,gregturn(gregturn),,,,"0|i040tz:",23509,20070,,,,,,,,"05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#487|https://github.com/spring-projects/spring-ws/issues/487]. ",,,,,,,,,,,,,,,,
Transport streams not closed in WebServiceConnection,SWS-333,21720,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,tareq,tareq,15/Apr/08 8:57 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Apr/08 9:40 AM,1.5,,,,,,1.5.1,,Core,,,,,0,,,,,,," Currently, in the AbstractWebServiceConnection and subclasses, the TransportOutputStream and TransportInputStream are not closed, mainly because Axis1 SAAJ and Axiom lazy-load messages. 

This is not a major issue for most transports, because the streams are closed in the end (during connection.close()), but closing the streams explicitly can't hurt. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-05-05 21:21:20.343,7777,true,gregturn(gregturn),,,,"0|i040u7:",23510,20071,,,,,,,,"05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#486|https://github.com/spring-projects/spring-ws/issues/486]. ",,,,,,,,,,,,,,,,
WebServiceTemplate hasFaut skips check for fault in response if the connection implements FaultAwareWebServiceConnection,SWS-330,21679,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,pmouawad@ubik-ingenierie.com,pmouawad@ubik-ingenierie.com,14/Apr/08 4:45 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,29/Apr/08 10:37 PM,1.5,,,,,,1.5.1,,Core,,,,,0,,,,,,,"Hello,
I use WebserviceTemplate configured 
	<bean id=""webServiceTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"">
        <constructor-arg ref=""messageFactory""/>
        <property name=""checkConnectionForFault"" value=""true""></property>
    </bean>.

As you can see, my server returns an error 500, but due to the code of hasError:
return !(faultConnection.hasFault() && request instanceof FaultAwareWebServiceMessage);

hasError returns false.
this code seems strange to me, if a 500 is returned the response might not be XML so unmarshalling will fail and it does:
org.springframework.ws.soap.axiom.AxiomSoapMessageCreationException: Unknown content type 'text/html;charset=ISO-8859-1'
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.getSoapEnvelopeNamespace(AxiomSoapMessageFactory.java:262)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createAxiomSoapMessage(AxiomSoapMessageFactory.java:224)
	at org.springframework.ws.soap.axiom.AxiomSoapMessageFactory.createWebServiceMessage(AxiomSoapMessageFactory.java:196)
	at org.springframework.ws.transport.AbstractWebServiceConnection.receive(AbstractWebServiceConnection.java:53)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:491)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:440)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:395)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:341)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:326)
	at com.kingfisher.product.wsclient.TestSpringWSClient.main(TestSpringWSClient.java:100)


Related to http://jira.springframework.org/browse/SWS-137.

Request:
POST /TutorialWS/services/LocalProduct HTTP/1.1
Accept-Encoding: gzip
Content-Type: text/xml; charset=""UTF-8""
SOAPAction: """"
Cache-Control: no-cache
Pragma: no-cache
User-Agent: Java/1.4.2_12
Host: 127.0.0.1:9090
Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
Connection: keep-alive
Content-Length: 486

<?xml version='1.0' encoding='UTF-8'?><soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""><soapenv:Body><v1:getLocatedProducts xmlns:v1=""http://v1.product.ws.store.kingfisher.com"" xmlns:xsd=""http://data.v1.product.ws.store.kingfisher.com/xsd""><v1:param0><xsd:callType>1</xsd:callType><xsd:familyCode>1</xsd:familyCode><xsd:moduleCode>1</xsd:moduleCode><xsd:subFamilyCode>1</xsd:subFamilyCode></v1:param0></v1:getLocatedProducts></soapenv:Body></soapenv:Envelope>


Response:
HTTP/1.1 500 Erreur Interne de Servlet
Server: Apache-Coyote/1.1
Content-Type: text/html;charset=ISO-8859-1
Content-Language: fr-FR
Transfer-Encoding: chunked
Date: Mon, 14 Apr 2008 17:06:47 GMT
Connection: close

<html><head><title>Apache Tomcat/4.1.36-LE-jdk14 - Rapport d'erreur</title><STYLE><!--H1{font-family : sans-serif,Arial,Tahoma;color : white;background-color : #0086b2;} H3{font-family : sans-serif,Arial,Tahoma;color : white;background-color : #0086b2;} BODY{font-family : sans-serif,Arial,Tahoma;color : black;background-color : white;} B{color : white;background-color : #0086b2;} HR{color : #0086b2;} --></STYLE> </head><body><h1>Etat HTTP 500 - </h1><HR size=""1"" noshade=""noshade""><p><b>type</b> Rapport d'exception</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Le serveur a rencontr� une erreur interne () qui l'a emp�ch� de satisfaire la requ�te.</u></p><p><b>exception</b> <pre>org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NoClassDefFoundError: Test
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:535)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:463)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:145)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:210)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:139)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve.java:198)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2460)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:133)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:119)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:545)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:127)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:157)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:685)
	at java.lang.Thread.run(Thread.java:534)
Caused by: java.lang.NoClassDefFoundError: Test
	at com.kingfisher.product.ws.ProductWsMarshallingEndpoint.invokeInternal(ProductWsMarshallingEndpoint.java:58)
	at org.springframework.ws.server.endpoint.AbstractMarshallingPayloadEndpoint.invoke(AbstractMarshallingPayloadEndpoint.java:131)
	at org.springframework.ws.server.endpoint.adapter.MessageEndpointAdapter.invoke(MessageEndpointAdapter.java:41)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:216)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:163)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:523)
	... 37 more
</pre></p><p><b>cause m�re</b> <pre>java.lang.NoClassDefFoundError: Test
	at com.kingfisher.product.ws.ProductWsMarshallingEndpoint.invokeInternal(ProductWsMarshallingEndpoint.java:58)
	at org.springframework.ws.server.endpoint.AbstractMarshallingPayloadEndpoint.invoke(AbstractMarshallingPayloadEndpoint.java:131)
	at org.springframework.ws.server.endpoint.adapter.MessageEndpointAdapter.invoke(MessageEndpointAdapter.java:41)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:216)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:163)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:88)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:523)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:463)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:145)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:210)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:139)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve.java:198)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2460)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:133)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:119)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:545)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:594)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:127)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:596)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:433)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:955)
	at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:157)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:685)
	at java.lang.Thread.run(Thread.java:534)
</pre></p><HR size=""1"" noshade=""noshade""><h3>Apache Tomcat/4.1.36-LE-jdk14</h3></body></html>


",Tomcat 4.1.36 / JDK 1.4_14,,,,,,,,,,,,,,SWS-338,,,,,SWS-308,SWS-137,,,,,,,,,,,,,,,,24969600,,2008-04-27 23:52:56.386,7780,true,gregturn(gregturn),,,,"0|i040uf:",23511,20072,,,,,,,,"27/Apr/08 11:52 PM;arjen.poutsma;Due to the wide variety of WS servers out there, it is quite hard to create a handleError() method that satisfies everybody. (See the linked to issues, for instance). Therefore, I think it's best if the error resolution is made pluggable, similarly to the FaultMessageResolver. That way, you can just plug in your error handling strategy, with a sensible, WS-I compliant default provided.

","29/Apr/08 10:37 PM;arjen.poutsma;Ignore my earlier comment: error resolution is not pluggable.

Instead, I'm now checking the response content-type, so see whether it's XML. I've also added a checkConnectionForError property, which - when set to false - completely ignores any HTTP status codes.","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#484|https://github.com/spring-projects/spring-ws/issues/484]. ",,,,,,,,,,,,,,
Error creating signed message with WSS4J,SWS-328,21624,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,arjen.poutsma,arjen.poutsma,11/Apr/08 9:06 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,11/Apr/08 9:45 AM,1.5,,,,,,1.5.1,,Security,,,,,0,,,,,,,"An exception occurs when attempting sendSourceAndReceiveToResult(source, result). The log indicates the signing method is not correct, but javadoc on setSecurementSignatureAlgorithm() of Wss4jSecurityInterceptor indicates that parameter is igonred. So, perhaps I have a mistake with something else. All unit tests in the attached java file pass, except for the last, which generates the attached log. The first part of the exception text is pasted below.

java.lang.NoClassDefFoundError: org/apache/xml/utils/URI$MalformedURIException
at org.apache.ws.security.message.WSSecSignature.prepare(WSSecSignature.java:358)
at org.apache.ws.security.message.WSSecSignature.build(WSSecSignature.java:721)
at org.apache.ws.security.action.SignatureAction.execute(SignatureAction.java:54)
at org.apache.ws.security.handler.WSHandler.doSenderAction(WSHandler.java:192)
at org.springframework.ws.soap.security.wss4j.Wss4jHandler.doSenderAction(Wss4jHandler.java:162)
at org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor.secureMessage(Wss4jSecurityInterceptor.java:450)
at org.springframework.ws.soap.security.AbstractWsSecurityInterceptor.handleRequest(AbstractWsSecurityInterceptor.java:182)
at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:480)
at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:440)
at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:395)
at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:341)
at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:332)
at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:322) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:56.79,7782,true,gregturn(gregturn),,,,"0|i01p9z:",9972,9988,,,,,,,,"11/Apr/08 9:45 AM;arjen.poutsma;The class not found, mentioned in the stacktrace, is in Xalan 2.7.0. Please make sure Xalan 2.7.0 is on the classpath when using WSS4J.","05/May/08 9:21 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#482|https://github.com/spring-projects/spring-ws/issues/482]. ",,,,,,,,,,,,,,,
Fix xmlsec dependency,SWS-323,21489,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,tareq,tareq,06/Apr/08 9:25 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,13/Apr/08 7:56 PM,1.5,,,,,,1.5.1,,Security,,,,,0,,,,,,,"Now there are 2 dependency  paths to xmlsec:
spring-ws-security -> xmlsec 1.3
spring-ws-security -> wss4j 1.5.4 -> xmlsec 1.4
This results in the inclusion of 2 jars because xmlsec 1.3 and 1.4 have different group ids. We should probably upgrade spring-ws dependency to version 1.4.",,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/08 9:26 AM;tareq;xmlsec.patch;https://jira.spring.io/secure/attachment/13896/xmlsec.patch",,,,,,,,,,,,,24969600,,2008-05-05 21:20:41.309,7787,true,gregturn(gregturn),,,,"0|i01pa7:",9973,9989,,,,,,,,"06/Apr/08 9:26 AM;tareq;patch of parent/pom.xml and security/pom.xml.","05/May/08 9:20 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#477|https://github.com/spring-projects/spring-ws/issues/477]. ",,,,,,,,,,,,,,,
Update artifact version in tutorial,SWS-321,21447,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,arjen.poutsma,arjen.poutsma,02/Apr/08 7:50 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,03/Apr/08 11:19 PM,1.5,,,,,,1.5.1,,,,,,,0,,,,,,,See http://forum.springframework.org/showthread.php?t=51981,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:55.183,7789,true,gregturn(gregturn),,,,"0|i040vb:",23515,20076,,,,,,,,"05/May/08 9:20 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#475|https://github.com/spring-projects/spring-ws/issues/475]. ",,,,,,,,,,,,,,,,
Unresolvable dependency in parent pom,SWS-316,21248,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Cannot Reproduce,arjen.poutsma,david_syer,david_syer,20/Mar/08 10:05 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,26/Mar/08 8:18 AM,1.0.3,,,,,,1.0.4,1.5,Core,,,,,0,,,,,,,"Unresolvable dependency in parent pom.  See here http://tinyurl.com/3aob2t for description of problems this causes.  Extract of important bit:

""The problem seems to be in spring-ws POM
(which is parent of spring-ws-core) which contains artifact spring-ws-doc
in its dependencyManagement section. Maven doesn't find spring-ws-doc.""

Presumably spring-ws-doc is not a jar, so dependening on it is a bad idea?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-03-26 08:18:19.928,5462,true,gregturn(gregturn),,,,"0|i01c1b:",7827,8267,,,,,,,,"26/Mar/08 8:18 AM;arjen.poutsma;There is spring-ws-doc dependency in the parent pom, only one in dependencyManagement.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#471|https://github.com/spring-projects/spring-ws/issues/471]. ",,,,,,,,,,,,,,,
"WebServiceTemplate skips handling fault in response with checkConnectionForFault=""false"" when HTTP status code is not 200 or 500",SWS-308,21034,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,montebove,montebove,10/Mar/08 10:58 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,17/Mar/08 11:35 PM,1.5 RC1,,,,,,1.5 RC2,,Core,,,,,0,,,,,,,"When checkConnectionForFault is set to ""false"" as stated in documentation  we should rely on the message only for determining if a response envelope is a Fault.
This actually works only if HTTP response code is 500 or 200, but as for a service I call the server send an HTTP 400 response code with a response containing a Fault (it's clearly not a WS-I Basic Profile compliant web service) the handleError is called instead of handleFault and I get a WebServiceTransportException instead of the Fault related exception.
This breaks WS-I Basic Profile conformance of Spring Web Services as it states:
""... the Profile requires that they examine the envelope. A Fault is an envelope that has a single child element of the soap:Body element, that element being a soap:Fault element.

R1107 A RECEIVER MUST interpret a SOAP message as a Fault when the soap:Body of the message has a single soap:Fault child.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-03-11 23:17:35.943,7800,true,gregturn(gregturn),,,,"0|i040w7:",23519,20081,,,,,,,,"11/Mar/08 11:17 PM;arjen.poutsma;You are correct. I focussed more on:

R1126 An INSTANCE MUST return a ""500 Internal Server Error"" HTTP status code if the response envelope is a Fault.

But R1107 says that the status code should be taken as a hint only.

","17/Mar/08 11:35 PM;arjen.poutsma;Fixed, also in 1.0 branch.","05/May/08 9:16 PM;arjen.poutsma;Closing issues for 1.5.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#464|https://github.com/spring-projects/spring-ws/issues/464]. ",,,,,,,,,,,,,,
org.springframework.ws.soap.security.wss4j.callback.KeyStoreCallbackHandler uses tiger specific classes,SWS-307,21033,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tareq,tareq,10/Mar/08 10:29 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,12/Mar/08 10:31 PM,1.5 RC1,,,,,,1.5 RC2,,Security,,,,,0,,,,,,,"The code of KeyStoreCallbackHandler.handleKeyName is tiger specific because of the use of KeyStore.PasswordProtection, KeyStore.SecretKeyEntry and KeyStore.getEntry(String alias, KeyStore.ProtectionParameter protParam).  We should probably use KeyStore.getKey(String alias, char[] password) instead.",,,,,,,,,,,,,,,,,,,,,,,,"11/Mar/08 2:34 AM;tareq;KeyStoreCallbackHandler.zip;https://jira.spring.io/secure/attachment/13760/KeyStoreCallbackHandler.zip",,,,,,,,,,,,,24969600,,2008-05-05 21:16:47.698,7801,true,gregturn(gregturn),,,,"0|i01paf:",9974,9990,,,,,,,,"11/Mar/08 2:34 AM;tareq;Patch + unit test","05/May/08 9:16 PM;arjen.poutsma;Closing issues for 1.5.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#463|https://github.com/spring-projects/spring-ws/issues/463]. ",,,,,,,,,,,,,,,
CommonsXsdSchema has issues with schema prefixes,SWS-305,21003,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,08/Mar/08 12:08 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,08/Mar/08 6:01 AM,,,,,,,1.5 RC1,,,,,,,0,,,,,,,"The CommonsXsdSchema has issues with XSD schema's which don't use a xsd prefix. For some strange reason, this only occurs when running web applications, not when running unit tests.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:51.506,7803,true,gregturn(gregturn),,,,"0|i040wn:",23521,20083,,,,,,,,"08/Mar/08 12:48 AM;arjen.poutsma;Adding an import of the targetNamespace seems to do the trick.","08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#461|https://github.com/spring-projects/spring-ws/issues/461]. ",,,,,,,,,,,,,,,
The key used in Wss4j interceptor's Signature tests has expired,SWS-301,20836,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tareq,tareq,28/Feb/08 8:17 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,28/Feb/08 11:31 AM,1.5 M2,,,,,,1.5 RC1,,Security,,,,,0,,,,,,,The key used in Wss4j interceptor's Signature tests has expired. Attaching a new keystore and a new signed-soap.xml,,,,,,,,,,,,,,,,,,,,,,,,"28/Feb/08 8:22 AM;tareq;private.jks;https://jira.spring.io/secure/attachment/13722/private.jks","28/Feb/08 8:23 AM;tareq;signed-soap.xml;https://jira.spring.io/secure/attachment/13723/signed-soap.xml",,,,,,,,,,,,24969600,,2008-03-08 23:23:40.674,7807,true,gregturn(gregturn),,,,"0|i01pan:",9975,9991,,,,,,,,"28/Feb/08 8:22 AM;tareq;command used to generate the keystore:
keytool -genkey -alias ""rsakey"" -keyalg ""RSA"" -validity 9999 -keypass 123456 -keystore private.jks -storetype
jceks -storepass 123456

","28/Feb/08 8:23 AM;tareq;A new signed-soap.xml signed with the new key.","08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#457|https://github.com/spring-projects/spring-ws/issues/457]. ",,,,,,,,,,,,,,
SAAJ0539: Unable to get header stream in saveChanges,SWS-300,20834,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Cannot Reproduce,arjen.poutsma,jsanghav,jsanghav,28/Feb/08 5:07 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,27/Apr/08 11:09 PM,,,,,,,1.5.1,,Core,,,,,0,,,,,,,"
at com.evermind.server.http.ServletRequestDispatcher.invoke(ServletRequestDispatcher.java:824)
        at com.evermind.server.http.ServletRequestDispatcher.forwardInternal(ServletRequestDispatcher.java:330)
        at com.evermind.server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:830)
        at com.evermind.server.http.AJPRequestHandler.run(AJPRequestHandler.java:224)
        at com.evermind.server.http.AJPRequestHandler.run(AJPRequestHandler.java:133)
        at com.evermind.util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:186)
        at java.lang.Thread.run(Thread.java:534)
Caused by: com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to get header stream in saveChanges:
        at com.sun.xml.messaging.saaj.soap.MessageImpl.saveChanges(MessageImpl.java:541)
        at com.sun.xml.messaging.saaj.soap.MessageImpl.writeTo(MessageImpl.java:591)
        at labware.connector.j2c.LIMSSOAPWrapper.createSOAPFromCallDetails(LIMSSOAPWrapper.java:391)
        ... 28 more
Caused by: java.io.IOException
        at com.sun.xml.messaging.saaj.soap.impl.EnvelopeImpl.output(EnvelopeImpl.java:240)
        at com.sun.xml.messaging.saaj.soap.SOAPPartImpl.getContentAsStream(SOAPPartImpl.java:202)
        at com.sun.xml.messaging.saaj.soap.MessageImpl.getHeaderBytes(MessageImpl.java:461)
        at com.sun.xml.messaging.saaj.soap.MessageImpl.saveChanges(MessageImpl.java:538)
        ... 30 more
","Sun SPARC, Oracle AS, Web application (WAR) on OC4J Component",,,,,,,,,,,,,,,,,,,,,,,"28/Feb/08 5:13 AM;jsanghav;log.txt;https://jira.spring.io/secure/attachment/13719/log.txt",,,,,,,,,,,,,24969600,,2008-04-17 21:35:03.269,7808,true,gregturn(gregturn),,,,"0|i040xb:",23524,20086,,,,,,,,"28/Feb/08 5:21 AM;jsanghav;We have deployed a web application on OC4J >> Oracle Application Server. This application runs fine with Tomcat. When we deployed on OAS, it is raising above exception. Please give solution. Thanks","17/Apr/08 9:35 PM;arjen.poutsma;Which version of Spring-WS is this?","27/Apr/08 11:08 PM;arjen.poutsma;I cannot reproduce this. Make sure you have Xerces 2.8.1 and Xalan 2.7.0 on the classpath, and that they override the OC4J versions. That always does the trick for me.","27/Apr/08 11:09 PM;arjen.poutsma;I cannot reproduce this. Make sure you have Xerces 2.8.1 and Xalan 2.7.0 on the classpath, and that they override the OC4J versions. That always does the trick for me.","05/May/08 9:20 PM;arjen.poutsma;Closing issues for 1.5.1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#456|https://github.com/spring-projects/spring-ws/issues/456]. ",,,,,,,,,,,,
WSS4J interceptor lacks a property to set WSHandlerConstants.ENC_KEY_NAME option,SWS-295,20743,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,tareq,tareq,25/Feb/08 7:36 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,27/Feb/08 12:21 AM,1.5 M2,,,,,,1.5 RC1,,Security,,,,,0,,,,,,,"In order to support embedded key name encryption, we need to add a securementEncryptionEmbeddedKeyName property that sets WSHandlerConstants.ENC_KEY_NAME option in the handler. This is necessary to support embedded key name encryption in a declarative fashion. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-03-08 23:23:40.424,7813,true,gregturn(gregturn),,,,"0|i01pav:",9976,9992,,,,,,,,"08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#452|https://github.com/spring-projects/spring-ws/issues/452]. ",,,,,,,,,,,,,,,,
WSS4J interceptor shouldn't verify that validationDecryptionCrypto != null,SWS-294,20733,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Trivial,Fixed,arjen.poutsma,tareq,tareq,25/Feb/08 1:09 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,26/Feb/08 10:25 PM,1.5 M2,,,,,,1.5 RC1,,Security,,,,,0,,,,,,,"WSS4J interceptor verifies now that validationDecryptionCrypto != null when validationActions includes ""Encrypt"". However, validationDecryptionCrypto is not needed if only embeddable key name encryption style is used.
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-03-08 23:23:40.356,7814,true,gregturn(gregturn),,,,"0|i01pb3:",9977,9993,,,,,,,,"08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#451|https://github.com/spring-projects/spring-ws/issues/451]. ",,,,,,,,,,,,,,,,
Response should be cleared in case of exception in WS-Security securement,SWS-293,20689,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,tareq,tareq,21/Feb/08 2:37 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,26/Feb/08 10:15 PM,1.5 M2,,,,,,1.5 RC1,,Security,,,,,0,,,,,,,If an exception occurs while securing an outgoing SOAP message with WS-Security the response is not cleared and an incomplete response is sent sent back to the initiator. The response should be cleared in this case.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-03-08 23:23:40.245,7815,true,gregturn(gregturn),,,,"0|i01pbb:",9978,9994,,,,,,,,"08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#450|https://github.com/spring-projects/spring-ws/issues/450]. ",,,,,,,,,,,,,,,,
Add documentation for SoapFaultAnnotationExceptionResolver,SWS-292,20687,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,luc.neulens,luc.neulens,21/Feb/08 1:57 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,26/Feb/08 9:03 PM,1.0.3,,,,,,,,Documentation,,,,,0,,,,,,,"Annotating an exception like this:

@SoapFault(faultCode = FaultCode.CLIENT)
public class IllegalCharException extends RuntimeException {

shows up in a SOAP Fault like <faultcode>soapenv:Server</faultcode>.
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode>soapenv:Server</faultcode>
         <faultstring xml:lang=""en"">De string [€0202020202020202020] bevat het karakter [€] dat niet geëncodeerd kan worden met codepage [cp500]</faultstring>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>

Using the exception resolver in the Spring ws servlet.xml  like this:
	<bean id=""exceptionResolver""
		class=""org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver"">
		<property name=""defaultFault"" value=""SERVER"" />
		<property name=""exceptionMappings"">
			<value>be.vlaanderen.dho.webservices.interceptors.exception.IllegalCharException=CLIENT, , nl</value>
		</property>
	</bean>

Gives correct soap fault code:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
   <soapenv:Body>
      <soapenv:Fault>
         <faultcode>soapenv:Client</faultcode>
         <faultstring xml:lang=""nl"">De string [€0202020202020202020] bevat het karakter [€] dat niet geëncodeerd kan worden met codepage [cp500]</faultstring>
      </soapenv:Fault>
   </soapenv:Body>
</soapenv:Envelope>","JDK 1.5
Sun One AS 8
Tomcat 5.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-21 02:56:40.174,7816,true,gregturn(gregturn),,,,"0|i01q7j:",10123,10119,,,,,,,,"21/Feb/08 2:56 AM;arjen.poutsma;I am looking at the testResolveExceptionExceptionMessage  test of SoapFaultAnnotationExceptionResolverTest (see http://static.springframework.org/spring-ws/site/xref-test/org/springframework/ws/soap/server/endpoint/SoapFaultAnnotationExceptionResolverTest.html#170), which tests for this, and works fine. 

Perhaps you have multiple exception resolvers, and one overrides the other? You can define the order property to order them.


","24/Feb/08 10:27 PM;luc.neulens;Arjen,



For the first test I was NO exception resolvers. So only annotations were supplied on the exception class. The second test
was using the exception resolvers (which worked).

Or is it not possible to use annotations without exception resolvers? Reference documentation states following:

""Finally, it is also possible to annotate exception classes with the @SoapFault  annotation, to indicate the SOAP Fault that should be returned whenever that exception is thrown"".



greetings","24/Feb/08 10:34 PM;arjen.poutsma;Yes, you need to add the SoapFaultAnnotationExceptionResolver to recognize those annotations. But you're right: the reference documentation needs to state this, and currently doesn't.

I will edit this issue accordingly.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#449|https://github.com/spring-projects/spring-ws/issues/449]. ",,,,,,,,,,,,,
Reference to Maven command in section 3.5 paragraph 1 is incomplete or the Maven command is wrong.,SWS-288,20644,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Won't Fix,arjen.poutsma,tsheehan,tsheehan,18/Feb/08 2:57 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,19/Feb/08 12:11 PM,1.0.3,,,,,,,,Documentation,,,,,0,,,,,,,"The documentation at http://static.springframework.org/spring-ws/site/reference/html/tutorial.html references a Maven script in Section 3.5, paragraph 1.  The Maven script contains three interactive prompts.  It is not at all apparent to the tutorial user how to respond to these prompts.  Either reference to the the Maven command should be removed, the Maven command should be modified to so that it creates conditions described in the tutorial or text should be added to describe how to answer to the prompts such that the tutorial conditions described will be created.","Maven v2.0.8,  Sun Java v1.5.0_12",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-18 21:39:39.091,7820,true,gregturn(gregturn),,,,"0|i01q7r:",10124,10120,,,,,,,,"18/Feb/08 9:39 PM;arjen.poutsma;I cannot reproduce this. What does Maven ask for?","19/Feb/08 7:16 AM;tsheehan;Here is a capture of part of the maven session.   If this is not enough of it, I will try get the whole session.   Toward the  end of this capture, this capture I answered the questions:

Define value for version: : with ""1""
Define value for package: : witr ""dunno""

So, having looked at this some more, a bit of pattern recognition has finally kicked in for me.  It appears there are requirements for ""AppFuse"" that I have not satisfied.  After I have posted this, I will look for time to research what it is that I might need to know about AppFuse.

Partial capture of Maven session follows:

[INFO] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus
.velocity.ContextClassLoaderResourceLoader'.
[INFO] Setting property: velocimacro.messages.on => 'false'.
[INFO] Setting property: resource.loader => 'classpath'.
[INFO] Setting property: resource.manager.logwhenfound => 'false'.
[INFO] [archetype:create]
[WARNING] No archetype repository found.
[WARNING] Specified archetype not found.
Choose archetype:
1: internal -> appfuse-basic-jsf (AppFuse archetype for creating a web applicati
on with Hibernate, Spring and JSF)
2: internal -> appfuse-basic-spring (AppFuse archetype for creating a web applic
ation with Hibernate, Spring and Spring MVC)
3: internal -> appfuse-basic-struts (AppFuse archetype for creating a web applic
ation with Hibernate, Spring and Struts 2)
4: internal -> appfuse-basic-tapestry (AppFuse archetype for creating a web appl
ication with Hibernate, Spring and Tapestry 4)
5: internal -> appfuse-core (AppFuse archetype for creating a jar application wi
th Hibernate and Spring and XFire)
6: internal -> appfuse-modular-jsf (AppFuse archetype for creating a modular app
lication with Hibernate, Spring and JSF)
7: internal -> appfuse-modular-spring (AppFuse archetype for creating a modular
application with Hibernate, Spring and Spring MVC)
8: internal -> appfuse-modular-struts (AppFuse archetype for creating a modular
application with Hibernate, Spring and Struts 2)
9: internal -> appfuse-modular-tapestry (AppFuse archetype for creating a modula
r application with Hibernate, Spring and Tapestry 4)
10: internal -> maven-archetype-j2ee-simple (A simple J2EE Java application)
11: internal -> maven-archetype-marmalade-mojo (A Maven plugin development proje
ct using marmalade)
12: internal -> maven-archetype-mojo (A Maven Java plugin development project)
13: internal -> maven-archetype-portlet (A simple portlet application)
14: internal -> maven-archetype-profiles ()
15: internal -> maven-archetype-quickstart ()
16: internal -> maven-archetype-site-simple (A simple site generation project)
17: internal -> maven-archetype-site (A more complex site project)
18: internal -> maven-archetype-webapp (A simple Java web application)
19: internal -> struts2-archetype-starter (A starter Struts 2 application with S
itemesh, DWR, and Spring)
20: internal -> struts2-archetype-blank (A minimal Struts 2 application)
21: internal -> struts2-archetype-portlet (A minimal Struts 2 application that c
an be deployed as a portlet)
22: internal -> struts2-archetype-dbportlet (A starter Struts 2 portlet that dem
onstrates a simple CRUD interface with db backing)
23: internal -> struts2-archetype-plugin (A Struts 2 plugin)
24: internal -> shale-archetype-blank (A blank Shale web application with JSF)
25: internal -> maven-adf-archetype (Archetype to ease the burden of creating a
new application based with ADF)
26: internal -> data-app (A new Databinder application with sources and resource
s.)
27: internal -> jini-service-archetype (Archetype for Jini service project creat
ion)
28: internal -> softeu-archetype-seam (JSF+Facelets+Seam Archetype)
29: internal -> softeu-archetype-seam-simple (JSF+Facelets+Seam (no persistence)
 Archetype)
30: internal -> softeu-archetype-jsf (JSF+Facelets Archetype)
31: internal -> jpa-maven-archetype (JPA application)
32: internal -> spring-osgi-bundle-archetype (Spring-OSGi archetype)
33: internal -> confluence-plugin-archetype (Atlassian Confluence plugin archety
pe)
34: internal -> maven-archetype-har (Hibernate Archive)
35: internal -> maven-archetype-sar (JBoss Service Archive)
36: internal -> wicket-archetype-quickstart (A simple Apache Wicket project)
Choose a number:  (1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/2
4/25/26/27/28/29/30/31/32/33/34/35/36): 1
Downloading: http://static.appfuse.org/releases/org/appfuse/archetypes/appfuse-b
asic-jsf/2.0/appfuse-basic-jsf-2.0.jar
71K downloaded
Define value for version: :
Define value for version: : 1
Define value for package: : dunno
Confirm properties configuration:
groupId: com.mycompany.hr
artifactId: holidayService
version: 1
package: dunno
 Y: :","19/Feb/08 12:11 PM;arjen.poutsma;This appears to be appfuse issue, not a Spring-WS issue. I just verified locally: a clean maven 2.0.8 installation does not give any prompts. ","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#445|https://github.com/spring-projects/spring-ws/issues/445]. ",,,,,,,,,,,,,,
WSS4J AcegiDigestPasswordValidationCallbackHandler does not set Acegi SecurityContext,SWS-286,20620,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,16/Feb/08 3:40 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,16/Feb/08 3:57 AM,1.5 M2,,,,,,1.5 RC1,,Security,,,,,0,,,,,,,"The AcegiDigestPasswordValidationCallbackHandler does not set any Authentication in the Acegi SecurityContext, which it should.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:47.036,7822,true,gregturn(gregturn),,,,"0|i01pbj:",9979,9995,,,,,,,,"08/Mar/08 11:23 PM;arjen.poutsma;Closing issues in 1.5 RC1.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#443|https://github.com/spring-projects/spring-ws/issues/443]. ",,,,,,,,,,,,,,,,
Clear SecurityContext in Acegi Callbacks,SWS-285,20588,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,14/Feb/08 12:00 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,16/Feb/08 1:33 AM,1.0.3,1.5 M2,,,,,1.0.4,1.5 RC1,Security,,,,,0,,,,,,,We must make sure to clear the Acegi SecurityContext when the request has bee processed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:46.8,7823,true,gregturn(gregturn),,,,"0|i01pbr:",9980,9996,,,,,,,,"16/Feb/08 1:33 AM;arjen.poutsma;Fixed in 1.0 and 1.5 branch.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#442|https://github.com/spring-projects/spring-ws/issues/442]. ",,,,,,,,,,,,,,,
soap request with wsse:security problems,SWS-283,20553,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,luc.neulens,luc.neulens,11/Feb/08 3:30 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,05/May/08 9:11 PM,1.0.3,,,,,,,,Core,,,,,0,,,,,,,"A signed soap request (wsse:security in the soap  header) fails for Sun One but not for Tomcat 5.5. 

Following soap fault is raised:Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source:


StackTrace on Sun one is:

org.springframework.ws.soap.saaj.SaajSoapEnvelopeException: Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.messaging.saaj.SO
 Unable to create envelope from given source:
Caused by: com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source:
        at com.sun.xml.messaging.saaj.soap.EnvelopeFactory.createEnvelope(EnvelopeFactory.java:95)
        at com.sun.xml.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl.createEnvelopeFromSource(SOAPPart1_1Impl.java:34)
        at com.sun.xml.messaging.saaj.soap.SOAPPartImpl.getEnvelope(SOAPPartImpl.java:82)
        at org.springframework.ws.soap.saaj.Saaj12Implementation.getEnvelope(Saaj12Implementation.java:142)
        at org.springframework.ws.soap.saaj.SaajSoapMessage.getEnvelope(SaajSoapMessage.java:86)
        at org.springframework.ws.soap.AbstractSoapMessage.getSoapBody(AbstractSoapMessage.java:36)
        at org.springframework.ws.soap.AbstractSoapMessage.getPayloadSource(AbstractSoapMessage.java:46)
        at org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping.resolveQName(PayloadRootQNameEndpointMapping.java:57)
        at org.springframework.ws.server.endpoint.mapping.AbstractQNameEndpointMapping.getLookupKeyForMessage(AbstractQNameEndpointMapping.java:33)
        at org.springframework.ws.server.endpoint.mapping.AbstractMapBasedEndpointMapping.getEndpointInternal(AbstractMapBasedEndpointMapping.java:106)
        at org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointMapping.java:83)
        at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:242)
        at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:195)
        at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
        at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
        at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
        at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:767)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:860)
        at sun.reflect.GeneratedMethodAccessor494.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:249)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.Subject.doAsPrivileged(Subject.java:517)
        at org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:282)
        at org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:165)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:257)
        at org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:55)
        at org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:161)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:263)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:225)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:173)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:551)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:933)
        at com.sun.enterprise.web.connector.httpservice.HttpServiceProcessor.process(HttpServiceProcessor.java:234)
        at com.sun.enterprise.web.HttpServiceWebContainer.service(HttpServiceWebContainer.java:2160)
Caused by: javax.xml.transform.TransformerException: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:651)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:281)
        at com.sun.xml.messaging.saaj.soap.EnvelopeFactory.createEnvelope(EnvelopeFactory.java:83)
        ... 43 more
Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
        at com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.checkDOMNSErr(CoreDocumentImpl.java:2421)
        at com.sun.org.apache.xerces.internal.dom.AttrNSImpl.setName(AttrNSImpl.java:150)
        at com.sun.org.apache.xerces.internal.dom.AttrNSImpl.<init>(AttrNSImpl.java:111)
        at com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.createAttributeNS(CoreDocumentImpl.java:2012)
        at com.sun.xml.messaging.saaj.soap.SOAPDocumentImpl.createAttributeNS(SOAPDocumentImpl.java:142)
        at com.sun.org.apache.xerces.internal.dom.ElementImpl.setAttributeNS(ElementImpl.java:684)
        at com.sun.org.apache.xalan.internal.xsltc.trax.SAX2DOM.startElement(SAX2DOM.java:134)
        at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.closeStartTag(ToXMLSAXHandler.java:205)
        at com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler.characters(ToXMLSAXHandler.java:524)
        at org.xml.sax.helpers.XMLFilterImpl.characters(XMLFilterImpl.java:564)
        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.characters(AbstractSAXParser.java:570)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanContent(XMLDocumentFragmentScannerImpl.java:1062)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1649)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:368)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)
        at org.xml.sax.helpers.XMLFilterImpl.parse(XMLFilterImpl.java:333)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:588)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:642)
        ... 45 more",Sun One AS 8.102,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-16 12:46:01.996,7825,true,gregturn(gregturn),,,,"0|i03bov:",19436,20093,,,,,,,,"11/Feb/08 3:30 AM;luc.neulens;forgo to mention the version of the JDK: 1.5","16/Feb/08 12:46 PM;arjen.poutsma;Could you give a bit more information? What does the SOAP message that causes this look like?","17/Feb/08 7:11 PM;luc.neulens;Arjen,


Please find below the SOAP Request. 



I was using the SAAJ Message Factory together with XMLBeans for databinding. This causes different behaviour on Tomcat and SunOne AS8 due to the SAAJ implementations. 
For example on Tomcat  5.5 SOAP Faults were represented as a StackTrace, on SunOne they were properly represented as SOAP Faults. And then of course the signed SOAP Message issue: no problem on Tomcat, on Sun One it causes an error. 


I then changed the Message Factory to an Axiom Message Factory with again XML Beans for databinding. However, this gave following error:

java.lang.IllegalArgumentException: Local name may not be null or empty
at org.apache.axiom.om.impl.llom.OMAttributeImpl.<ini t>(OMAttributeImpl.java:52)
at org.apache.axiom.om.impl.llom.OMElementImpl.addAtt ribute(OMElementImpl.java:532)
at org.apache.axiom.om.impl.builder.SAXOMBuilder.star tElement(SAXOMBuilder.java:111)
at org.apache.xmlbeans.impl.store.Saver$SaxSaver.emit Element(Saver.java:3344)
at org.apache.xmlbeans.impl.store.Saver.processElemen t(Saver.java:456)
at org.apache.xmlbeans.impl.store.Saver.process(Saver .java:307)
at org.apache.xmlbeans.impl.store.Saver$SaxSaver.<ini t>(Saver.java:3261)
at org.apache.xmlbeans.impl.store.Cursor._save(Cursor .java:559)
at org.apache.xmlbeans.impl.store.Cursor.save(Cursor. java:2508)
at org.apache.xmlbeans.impl.values.XmlObjectBase.save (XmlObjectBase.java:174)
at org.springframework.oxm.xmlbeans.XmlBeansMarshalle r.marshalSaxHandlers(XmlBeansMarshaller.java:110)
at org.springframework.oxm.AbstractMarshaller.marshal SaxResult(AbstractMarshaller.java:229)
at org.springframework.oxm.AbstractMarshaller.marshal (AbstractMarshaller.java:92)
at org.springframework.ws.support.MarshallingUtils.ma rshal(MarshallingUtils.java:76)
at org.springframework.ws.server.endpoint.AbstractMar shallingPayloadEndpoint.marshalResponse(AbstractMa rshallingPayloadEndpoint.java:150)
at org.springframework.ws.server.endpoint.AbstractMar shallingPayloadEndpoint.invoke(AbstractMarshalling PayloadEndpoint.java:134)
at org.springframework.ws.server.endpoint.adapter.Mes sageEndpointAdapter.invoke(MessageEndpointAdapter. java:41)
at org.springframework.ws.server.MessageDispatcher.di spatch(MessageDispatcher.java:211)
at org.springframework.ws.server.MessageDispatcher.re ceive(MessageDispatcher.java:158)
at org.springframework.ws.transport.support.WebServic eMessageReceiverObjectSupport.handleConnection(Web ServiceMessageReceiverObjectSupport.java:87)
at org.springframework.ws.transport.http.WebServiceMe ssageReceiverHandlerAdapter.handle(WebServiceMessa geReceiverHandlerAdapter.java:57)
at org.springframework.ws.transport.http.MessageDispa tcherServlet.doService(MessageDispatcherServlet.ja va:158)
at org.springframework.web.servlet.FrameworkServlet.p rocessRequest(FrameworkServlet.java:475)
at org.springframework.web.servlet.FrameworkServlet.d oPost(FrameworkServlet.java:440)
at javax.servlet.http.HttpServlet.service(HttpServlet .java:710)
at javax.servlet.http.HttpServlet.service(HttpServlet .java:803)
at org.apache.catalina.core.ApplicationFilterChain.in ternalDoFilter(ApplicationFilterChain.java:269)
at org.apache.catalina.core.ApplicationFilterChain.do Filter(ApplicationFilterChain.java:188)
at org.apache.catalina.core.StandardWrapperValve.invo ke(StandardWrapperValve.java:210)
at org.apache.catalina.core.StandardContextValve.invo ke(StandardContextValve.java:174)
at org.apache.catalina.core.StandardHostValve.invoke( StandardHostValve.java:127)
at org.apache.catalina.valves.ErrorReportValve.invoke (ErrorReportValve.java:117)
at org.apache.catalina.core.StandardEngineValve.invok e(StandardEngineValve.java:108)
at org.apache.catalina.connector.CoyoteAdapter.servic e(CoyoteAdapter.java:151)
at org.apache.coyote.http11.Http11Processor.process(H ttp11Processor.java:870)
at org.apache.coyote.http11.Http11BaseProtocol$Http11 ConnectionHandler.processConnection(Http11BaseProt ocol.java:665)
at org.apache.tomcat.util.net.PoolTcpEndpoint.process Socket(PoolTcpEndpoint.java:528)
at org.apache.tomcat.util.net.LeaderFollowerWorkerThr ead.runIt(LeaderFollowerWorkerThread.java:81)
at org.apache.tomcat.util.threads.ThreadPool$ControlR unnable.run(ThreadPool.java:685)
at java.lang.Thread.run(Thread.java:595)


After Googling a bit I found someone who had a similar problem and the cause was located somewhere in the XMLBeans code. So I checked out the sources from CVS and after changing some code (seems like the arguments were not set correctly giving an empty localname, hence the above error message) and rebuilding the jar the error would not show up anymore.  But the SOAP response would not validate anymore (in SOAPUI). 

It seems there where  2 namespaces now: 
[xmlns:ann=""http://annuleeruitschrijvingvooropleidingsonderdeel.inschrijvingdienst.dho.vlaanderen.be""] and  [xmlns=""http://annuleeruitschrijvingvooropleidingsonderdeel.inschrijvingdienst.dho.vlaanderen.be""]

Removing the line of code that added this default namespace (in XML Beans sources) makes the Axiom MessageFactory work fine until now.






<?xml version=""1.0"" encoding=""UTF-8""?>
<soapenv:Envelope xmlns:ann=""http://annuleeruitschrijvingvooropleidingsonderdeel.inschrijvingdienst.dho.vlaanderen.be"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">
<soapenv:Header>
<wsse:Security soapenv:mustUnderstand=""1"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""><wsse:BinarySecurityToken EncodingType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" wsu:Id=""CertId-2526487"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"">MIICejCCAeMCBEcUkMEwDQYJKoZIhvcNAQEEBQAwgYMxCzAJBgNVBAYTAkJFMREwDwYDVQQIEwhCcnVzc2VsczERMA8GA1UEBxMIQnJ1c3NlbHMxDDAKBgNVBAoTA01WRzEdMBsGA1UECxMUT25kZXJ3aWpzIGVuIFZvcm1pbmcxITAfBgNVBAMTGERhdGFiYXNlIEhvZ2VyIE9uZGVyd2lqczAeFw0wNzEwMTYxMDIxNTNaFw0wODAxMTQxMDIxNTNaMIGDMQswCQYDVQQGEwJCRTERMA8GA1UECBMIQnJ1c3NlbHMxETAPBgNVBAcTCEJydXNzZWxzMQwwCgYDVQQKEwNNVkcxHTAbBgNVBAsTFE9uZGVyd2lqcyBlbiBWb3JtaW5nMSEwHwYDVQQDExhEYXRhYmFzZSBIb2dlciBPbmRlcndpanMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAIoXWCwYhRj44qdqP44FYxQq40jPtR8Ol+QZT1rbnKt4DhO68Nz/LUtPsJ+4MexAwOF8v7SsfbCmyltJ85Ih+OHDbKVkHy9EbwbCMTp6zbqt1AvIq4vKpOhySvUqfiyQ2BMFjGwRTaEHEgv+tJ7Fi6Jztk51USXoClK8EJaTl3KRAgMBAAEwDQYJKoZIhvcNAQEEBQADgYEADQhKomyKfSMx8AcPswvmT4MrHwtiShdJWve/APG/nrOejcE1uv4UUmxy2r9arvE/wDTrBBkBieY9mNOYZTJRLjAegWv6TXhNoG9vNSEO5uv3nwJlDRQvmc1FnBsH1/+eJtGCjJpcOHDINFQm56mp/IrsB9VV0aQEujP8mngxepE=</wsse:BinarySecurityToken><ds:Signature Id=""Signature-3250652"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
<ds:SignedInfo xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
<ds:CanonicalizationMethod Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""/>
<ds:SignatureMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#rsa-sha1"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""/>
<ds:Reference URI=""#id-31544932"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
<ds:Transforms xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
<ds:Transform Algorithm=""http://www.w3.org/2001/10/xml-exc-c14n#"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""/>
</ds:Transforms>
<ds:DigestMethod Algorithm=""http://www.w3.org/2000/09/xmldsig#sha1"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""/>
<ds:DigestValue xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">4jfmibC9UU6pA1uTugXWDS4otiA=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
Wl8z/JuPvIKn0eKib1SMom+IeInmbcUEVy2BPmy67oYrMBb/xU0NAYP5xQbP1OtbEPlVQpZTZoEw
3BfkjziYLVaV59N63NGQ8QaRlbevuD78/iYM054WpTCQT30NVV75+6noFVhb72mjMWL0l5snJnuf
QybMeyGcfTFZGcj+eqk=
</ds:SignatureValue>
<ds:KeyInfo Id=""KeyId-7105761"" xmlns:ds=""http://www.w3.org/2000/09/xmldsig#"">
<wsse:SecurityTokenReference wsu:Id=""STRId-6306684"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""><wsse:Reference URI=""#CertId-2526487"" ValueType=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"" xmlns:wsse=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd""/></wsse:SecurityTokenReference>
</ds:KeyInfo>
</ds:Signature></wsse:Security></soapenv:Header><soapenv:Body wsu:Id=""id-31544932"" xmlns:wsu=""http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd""><ann:AnnuleerUitschrijvingVoorOpleidingsonderdeel>
         <Verzoek>
            <OperatieMetaData>
               <!--type: string-->
               <Versie>1.0</Versie>
               <!--type: string-->
               <Naam>AnnuleerUitschrijvingVoorOpleidingsonderdeel</Naam>
            </OperatieMetaData>
            <Context>
               <Bericht>
                  <!--type: BerichtTypeEnumType - enumeration: [VRAAG,ANTWOORD]-->
                  <Type>VRAAG</Type>
                  <Tijdstip>
                     <!--type: DatumType-->
                     <Datum>21.12.2007</Datum>
                     <!--type: TijdType-->
                     <Tijd>14:20:20.942</Tijd>
                  </Tijdstip>
                  <Afzender>
                     <!--type: NaamKortType-->
                     <Identificatie>std id</Identificatie>
                     <!--type: NaamKortType-->
                     <ToepassingsIdentificatie>std toepid</ToepassingsIdentificatie>
                     <!--type: ReferteType-->
                     <Referte>0001</Referte>
                  </Afzender>
               </Bericht>
            </Context>
            <Vragen>
               <!--1 to 99 repetitions:-->
               <Vraag>
                  <!--type: NaamKortType-->
                  <Referte>certo et premere</Referte>
                  <VraagInhoud>
                     <!--type: IDType-->
                     <InschrijvingsonderdeelID>20202020202020202020</InschrijvingsonderdeelID>
                  </VraagInhoud>
               </Vraag>
            </Vragen>
         </Verzoek>
      </ann:AnnuleerUitschrijvingVoorOpleidingsonderdeel></soapenv:Body></soapenv:Envelope>","05/May/08 8:48 AM;arjen.poutsma;So this issue can be closed?","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#440|https://github.com/spring-projects/spring-ws/issues/440]. ",,,,,,,,,,,,
SAXParseException WebServiceTemplate,SWS-280,20455,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Duplicate,arjen.poutsma,luc.neulens,luc.neulens,04/Feb/08 11:04 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,05/Feb/08 9:30 PM,1.0.2,,,,,,,,OXM,,,,,0,,,,,,,"Using the WebServiceTemplate with XML Beans marshaller gives me following error:

Exception in thread ""main"" org.springframework.ws.soap.saaj.SaajSoapEnvelopeException: Could not access envelope: org.xml.sax.SAXParseException: Premature end of file.; nested exception is javax.xml.soap.SOAPException: org.xml.sax.SAXParseException: Premature end of file.
Caused by: javax.xml.soap.SOAPException: org.xml.sax.SAXParseException: Premature end of file.
	at org.apache.axis.SOAPPart.getEnvelope(SOAPPart.java:1005)
	at org.springframework.ws.soap.saaj.Saaj12Implementation.getEnvelope(Saaj12Implementation.java:142)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.getEnvelope(SaajSoapMessage.java:86)
	at org.springframework.ws.soap.AbstractSoapMessage.getSoapBody(AbstractSoapMessage.java:36)
	at org.springframework.ws.soap.AbstractSoapMessage.hasFault(AbstractSoapMessage.java:56)
	at org.springframework.ws.client.core.WebServiceTemplate.hasFault(WebServiceTemplate.java:509)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:411)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:264)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:252)
	at org.springframework.ws.client.core.WebServiceTemplate.marshalSendAndReceive(WebServiceTemplate.java:244)
	at be.vlaanderen.dho.client.WebserviceClient.<init>(WebserviceClient.java:76)
	at be.vlaanderen.dho.client.WebserviceClient.main(WebserviceClient.java:81)
Caused by: org.xml.sax.SAXParseException: Premature end of file.
	at org.apache.axis.AxisFault.makeFault(AxisFault.java:101)
	at org.apache.axis.SOAPPart.getAsSOAPEnvelope(SOAPPart.java:701)
	at org.apache.axis.SOAPPart.getEnvelope(SOAPPart.java:1003)
	... 11 more
Caused by: org.xml.sax.SAXParseException: Premature end of file.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:236)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:215)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:386)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:316)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:230)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:798)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1242)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:375)
	at org.apache.axis.encoding.DeserializationContext.parse(DeserializationContext.java:227)
	at org.apache.axis.SOAPPart.getAsSOAPEnvelope(SOAPPart.java:696)
	... 12 more




TCPMon log showing the request:

<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
<soapenv:Body>
<ann:AnnuleerInschrijvingVoorOpleiding xmlns:ann=""http://annuleerinschrijvingvooropleiding.inschrijvingdienst.dho.vlaanderen.be"">
<Verzoek>
<Context>
<Bericht>
<Tijdstip>
<Datum>12-12-2008</Datum>
<Tijd>00:00:00.000</Tijd>
</Tijdstip>
<Afzender>
<Identificatie>34343</Identificatie>
<Hoedanigheid>hoe</Hoedanigheid>
<Naam>van de bos</Naam>
<OrganisatieEenheid>ICT</OrganisatieEenheid>
<Gebruiker>jos</Gebruiker>
<Referte>0004444</Referte>
</Afzender>
</Bericht>
</Context>
<Vragen>
<Vraag>
<VraagInhoud>
<InschrijvingID>007</InschrijvingID>
</VraagInhoud>
</Vraag>
</Vragen>
</Verzoek>
</ann:AnnuleerInschrijvingVoorOpleiding>
</soapenv:Body>
</soapenv:Envelope>


",JDK 1.5 OS Windows XP,,,,,,,,,,,,,,,SWS-245,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-04 23:41:00.591,7828,true,gregturn(gregturn),,,,"0|i01msn:",9570,9607,,,,,,,,"04/Feb/08 11:41 PM;arjen.poutsma;Can you try 1.0.3? It should be fixed in that release (see SWS-245).","05/Feb/08 9:15 PM;luc.neulens;just upgrade to 1.0.3 and I like you said it is working now!","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#437|https://github.com/spring-projects/spring-ws/issues/437]. ",,,,,,,,,,,,,,,
PayloadTransformingInterceptor has a typo in the example,SWS-276,20359,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,daneverton,daneverton,29/Jan/08 11:33 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,09/Feb/08 2:08 AM,1.0.3,,,,,,1.5 M2,,Documentation,,,,,0,,,,,,,"The example for the PayloadTransformingInterceptor is supposed to demonstrate using the requestXslt and responseXslt property but actually has the requestXslt property twice.

That is this:

    <property name=""requestXslt"" value=""/WEB-INF/oldRequests.xslt""/>
    <property name=""requestXslt"" value=""/WEB-INF/oldResponses.xslt""/>

should be 

    <property name=""requestXslt"" value=""/WEB-INF/oldRequests.xslt""/>
    <property name=""responseXslt"" value=""/WEB-INF/oldResponses.xslt""/>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-09 02:08:41.894,7832,true,gregturn(gregturn),,,,"0|i01q87:",10126,10122,,,,,,,,"09/Feb/08 2:08 AM;arjen.poutsma;Fixed. Thanks for pointing this out!","08/Mar/08 11:25 PM;arjen.poutsma;Closing 1.5 M2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#433|https://github.com/spring-projects/spring-ws/issues/433]. ",,,,,,,,,,,,,,,
NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.,SWS-275,20336,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,jpeterson,jpeterson,29/Jan/08 3:31 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 3:49 AM,1.0.2,1.0.3,,,,,1.0.4,1.5 M2,XML,,,,,0,,,,,,,"This error is the result of improper handing of namespaces and their prefixes.  Specifically, when using the default namespace attribute ""xmlns"".  For example:

<soap:Envelope>
<soap:Body>
<foo xmlns=""bar"" />
</soap:Body>
</soap:Envelope>

The full stack trace is as follows:

javax.xml.transform.TransformerException: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:501)
        at org.springframework.ws.server.endpoint.support.PayloadRootUtils.getPayloadRootQName(PayloadRootUtils.java:87)
        at org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping.resolveQName(PayloadRootQNameEndpointMapping.java:57)
        at org.springframework.ws.server.endpoint.mapping.AbstractQNameEndpointMapping.getLookupKeyForMessage(AbstractQNameEndpointMapping.java:33)
        at org.springframework.ws.server.endpoint.mapping.AbstractMapBasedEndpointMapping.getEndpointInternal(AbstractMapBasedEndpointMapping.java:106)
        at org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointMapping.java:83)
        at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:242)
        at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:195)
        at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
        at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
        at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
        at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:760)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1072)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:465)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:348)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:6981)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3892)
        at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2766)
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)
Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
        at org.apache.xml.utils.DOMBuilder.startElement(DOMBuilder.java:374)
        at org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1072)
        at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleElement(SaajXmlReader.java:140)
        at org.springframework.ws.soap.saaj.support.SaajXmlReader.handleNode(SaajXmlReader.java:123)
        at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:115)
        at org.springframework.ws.soap.saaj.support.SaajXmlReader.parse(SaajXmlReader.java:96)
        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)
        ... 25 more

Normally this error is associated with a buggy version of Xalan-J.  In this case, however, it appears to be an error in org.springframework.ws.soap.saaj.support.SaajXmlReader.

I have isolated the problem and will supply a patch.
","Weblogic 8.1.5, JDK1.4.2_08, SAAJ 1.1",,,,,,,,,,,,,,,,,,,,,,,"29/Jan/08 3:52 AM;jpeterson;SWS-275.patch;https://jira.spring.io/secure/attachment/13574/SWS-275.patch",,,,,,,,,,,,,24969600,,2008-02-02 03:02:49.306,7833,true,gregturn(gregturn),,,,"0|i01okf:",9857,9884,,,,,,,,"29/Jan/08 3:52 AM;jpeterson;Attached patch.

No unit test present because build uses SAAJ 1.3 and issue only occurs on SAAJ 1.1","02/Feb/08 3:02 AM;arjen.poutsma;Fixed, thanks for the patch!","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","15/Feb/08 3:49 AM;arjen.poutsma;Fixed in 1.0 branch.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#432|https://github.com/spring-projects/spring-ws/issues/432]. ",,,,,,,,,,,,
Soap headers with whitespace cause java.lang.ClassCastException: com.sun.xml.messaging.saaj.soap.impl.TextImpl - Part II,SWS-274,20307,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,lafondoo,lafondoo,28/Jan/08 3:00 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 4:59 AM,1.0.2,,,,,,1.0.4,1.5 M2,Core,,,,,0,,,,,,,"This bug is related to: http://jira.springframework.org/browse/SWS-244.  If white space appears in the header then a class cast exception is thrown.   Sun's SAAJ impl returns these whitespace nodes as TextImpl.  The class cast happens when the TextImpl's are cast as SOAPHeaderElement.  I've verified that this is a problem with Spring WS 1.0.3 as well even though I'm currently using 1.0.2.

org.springframework.ws.soap.saaj.SaajSoapHeader

        public Object next() {
            SOAPHeaderElement saajHeaderElement = (SOAPHeaderElement) iterator.next();   <-- class cast happens here.
            return new SaajSoapHeaderElement(saajHeaderElement);
        }
","Spring WS 1.0.2, Sun's SAAJ 1.2",,,,,,,,,,,,,,,,,,,SWS-244,,,,,,,,,,,,,,,,,24969600,,2008-01-31 10:56:23.655,7834,true,gregturn(gregturn),,,,"0|i040zb:",23533,20097,,,,,,,,"31/Jan/08 10:56 AM;arjen.poutsma;Fixed, thanks for spotting this!","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","15/Feb/08 4:59 AM;arjen.poutsma;Fixed in 1.0 branch.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#431|https://github.com/spring-projects/spring-ws/issues/431]. ",,,,,,,,,,,,,
cope typos in reference docs section 6.2.4 and 6.2.5,SWS-268,19089,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,barsimp47,barsimp47,09/Jan/08 7:36 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 9:46 PM,1.0.3,,,,,,1.5 M2,,Documentation,,,,,0,,,,,,,"1. In section 6.2.4, the method doInMessage(WebServiceMessage message) should instead be doWithMessage(WebServiceMessage message).

2. In section 6.2.5, the method doInMessage(WebServiceMessage message) should instead be doWithMessage(WebServiceMessage message).

3. In section 6.2.5, there is a closing brace ""}"" missing after the doWithMessage method.

4. In section 6.2.5, the code should be formatted so that it is not so hard to read, perhaps like:

public void marshalWithSoapActionHeader(final Source s) {
	final Transformer transformer = transformerFactory.newTransformer();
	webServiceTemplate.sendAndReceive(
		new WebServiceMessageCallback() {
			public void doWithMessage(WebServiceMessage message) {
				transformer.transform(s, message.getPayloadResult());
			}
		}, 
		new WebServiceMessageExtractor() {
			public Object extractData(WebServiceMessage message) throws IOException {
				// do your own transforms with message.getPayloadResult()
				// or message.getPayloadSource()
			}
		}
	);
}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-15 03:30:45.527,7839,true,gregturn(gregturn),,,,"0|i01q8f:",10127,10123,,,,,,,,"09/Jan/08 7:41 AM;barsimp47;Well, my tabs got stripped out of my code example, so lets try again with spaces:

public void marshalWithSoapActionHeader(final Source s) {
        final Transformer transformer = transformerFactory.newTransformer();
        webServiceTemplate.sendAndReceive(
                new WebServiceMessageCallback() {
                        public void doWithMessage(WebServiceMessage message) {
                                transformer.transform(s, message.getPayloadResult());
                        }
                }, 
                new WebServiceMessageExtractor() {
                        public Object extractData(WebServiceMessage message) throws IOException {
                                // do your own transforms with message.getPayloadResult()
                                // or message.getPayloadSource()
                        }
                }
        );
}
","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#425|https://github.com/spring-projects/spring-ws/issues/425]. ",,,,,,,,,,,,,,,
code bugs in Reference docs section 4.3.1,SWS-267,19088,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,barsimp47,barsimp47,09/Jan/08 5:56 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 9:46 PM,1.0.3,,,,,,1.5 M2,,Documentation,,,,,0,,,,,,,"In section 4.3.1 on page 22 of the v1.0.3 PDF ref manual, in the code sample following the line ""For a more flexible approach, you can use a NodeMapper...."":

1. In the method doXPath(Document document), the variable ""requestElement"" is used in the call to nameExpression.evaluate(). Yet ""requestElement"" is never defined.

2. Also in the method doXPath(Document document), I'm assuming the variable ""nameExpression"" should be ""contactExpression"".
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-02-06 23:55:56.072,3852,true,gregturn(gregturn),,,,"0|i01q8n:",10128,10124,,,,,,,,"06/Feb/08 11:55 PM;arjen.poutsma;Fixed, thanks for pointing this out to me!","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#424|https://github.com/spring-projects/spring-ws/issues/424]. ",,,,,,,,,,,,,,,
AxiomContentHandler should empty the response body before adding the transformation result,SWS-266,19074,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,lbihanic,lbihanic,08/Jan/08 8:28 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 4:56 AM,1.0.3,,,,,,1.0.4,1.5 M2,Core,,,,,0,,,,,,,"AxiomContentHandler append the result of the XSLT transformation without first emptying the response body. The resulting SOAP response ends up with 2 body child elements : the original (untransformed) endpoint response and the transformation result.

The following patch fixes the problem :

--- ../spring-ws-1.0.3/modules/core/src/main/java/org/springframework/ws/soap/axiom/AxiomContentHandler.java	2007-12-21 16:26:32.000000000 +0100
+++ AxiomContentHandler.java	2008-01-08 15:14:41.000000000 +0100
@@ -16,6 +16,7 @@
 
 package org.springframework.ws.soap.axiom;
 
+import org.apache.axiom.om.OMNode;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.impl.builder.SAXOMBuilder;
 import org.springframework.util.Assert;
@@ -39,6 +40,15 @@
 
     public void endDocument() throws SAXException {
         super.endDocument();
+
+        // Remove original (i.e. source) response body.
+        OMNode child = null;
+        while ((child = parentElement.getFirstOMChild()) != null)
+        {
+            child.detach();
+        }
+
+        // Set result (i.e. transformed) response body.
         parentElement.addChild(super.getRootElement());
     }
 }
",Java 5 (build 1.5.0_13-b05-241) + Axiom 1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2008-01-20 23:16:19.0,7840,true,gregturn(gregturn),,,,"0|i02p67:",15787,14964,,,,,,,,"20/Jan/08 11:16 PM;arjen.poutsma;I don't think adding this functionality to the ContentHandler is the right way to fix this. The ContentHandler is responsible for adding Axiom nodes to a OMContainer, and nothing more. It is used by getPayloadResult(), for instance.

Instead, code that uses the AxiomContentHandler (AxiomSoapBody, for instance) should remove the children before using the handler. This is the approach taken in the SAAJ code (SaajSoapBody), and the Axiom code should be similar.

Thanks for finding the bug, though!","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","15/Feb/08 4:56 AM;arjen.poutsma;Fixed in 1.0 branch.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#423|https://github.com/spring-projects/spring-ws/issues/423]. ",,,,,,,,,,,,,
XPathExpressionFactory should fallback to Jaxen if no JAXP 1.3 XPath implementation is available,SWS-264,19072,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,lbihanic,lbihanic,08/Jan/08 8:13 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,15/Feb/08 4:02 AM,1.0.3,,,,,,1.0.4,1.5 M2,XML,,,,,0,,,,,,,"When running with Java 5 without any JAXP 1.3 XPath implementation available but Jaxen present, XPathExpressionFactory fails to fallback to Jaxen.

The following patch fixes the problem :

--- ../spring-ws-1.0.3/modules/xml/src/main/java/org/springframework/xml/xpath/XPathExpressionFactory.java	2007-12-21 16:26:18.000000000 +0100
+++ XPathExpressionFactory.java	2008-01-08 18:12:38.000000000 +0100
@@ -42,10 +42,14 @@
 
     private static final String JAXEN_CLASS_NAME = ""org.jaxen.XPath"";
 
+    private static boolean jaxpAvailable;
     private static boolean jaxenAvailable;
 
     static {
         // Check whether Jaxen is available
+        jaxpAvailable = (JaxpVersion.getJaxpVersion() >= JaxpVersion.JAXP_13);
+
+        // Check whether Jaxen is available
         try {
             ClassUtils.forName(JAXEN_CLASS_NAME);
             jaxenAvailable = true;
@@ -81,11 +85,27 @@
     public static XPathExpression createXPathExpression(String expression, Map namespaces)
             throws IllegalStateException, XPathParseException {
         Assert.hasLength(expression, ""expression is empty"");
-        if (JaxpVersion.getJaxpVersion() >= JaxpVersion.JAXP_13) {
-            logger.trace(""Creating [javax.xml.xpath.XPathExpression]"");
-            return Jaxp13XPathExpressionFactory.createXPathExpression(expression, namespaces);
+        if (jaxpAvailable) {
+            try {
+                logger.trace(""Creating [javax.xml.xpath.XPathExpression]"");
+                return Jaxp13XPathExpressionFactory.createXPathExpression(expression, namespaces);
+            }
+            catch (XPathException e) {
+                throw e;
+            }
+            catch (Throwable e) {
+                // 'Cause we may get an ExceptionInInitializerError from JAXP
+                // XPathFactory
+                jaxpAvailable = false;
+
+                if (!jaxenAvailable) {
+                    throw new XPathParseException(
+                        ""Could not compile ["" + expression + ""] to a XPathExpression: "" + e.getMessage(), e);
+                }
+                // Else: try with Jaxen...
+            }
         }
-        else if (jaxenAvailable) {
+        if (jaxenAvailable) {
             logger.trace(""Creating [org.jaxen.XPath]"");
             return JaxenXPathExpressionFactory.createXPathExpression(expression, namespaces);
         }
",Java 5 (build 1.5.0_13-b05-241) with standalone Xerces (2.9.2),,,,,,,,,,,,,,,,,,,,,,,"20/Jan/08 8:34 PM;arjen.poutsma;SWS-264.patch;https://jira.spring.io/secure/attachment/13302/SWS-264.patch",,,,,,,,,,,,,24969600,,2008-01-20 20:34:25.0,7842,true,gregturn(gregturn),,,,"0|i01okv:",9859,9886,,,,,,,,"20/Jan/08 8:34 PM;arjen.poutsma;Added patch as attachment.","20/Jan/08 9:11 PM;arjen.poutsma;Fixed, thanks for the patch!","15/Feb/08 3:30 AM;arjen.poutsma;Reopening issues for 1.0.4","15/Feb/08 4:02 AM;arjen.poutsma;Backported to 1.0 branch.","05/May/08 9:14 PM;arjen.poutsma;Closing issues for 1.0.4","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#420|https://github.com/spring-projects/spring-ws/issues/420]. ",,,,,,,,,,,,
NPE when unmarshalling invalid request with Jaxb1Marshaller,SWS-260,18942,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Duplicate,arjen.poutsma,fbascheper,fbascheper,20/Dec/07 6:27 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,16/Feb/08 12:44 PM,1.0.2,,,,,,,,OXM,XML,,,,0,,,,,,,"When unmarshalling an invalid request a NullPointerException occurs in the AbstractStaxXmlReader.
The default exception resolver generates the following WARN debug log:


IWA-UM WARN  21-12-2007 09:19:00,009 [WebContainer : 0] (org.springframework.ws.soap.server.SoapMessageDispatcher) | Endpoint invocation resulted in exception - responding with SOAP Fault
java.lang.NullPointerException
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:70)
	at org.springframework.xml.stream.AbstractStaxXmlReader.parse(AbstractStaxXmlReader.java:50)
	at org.apache.xerces.jaxp.validation.ValidatorHandlerImpl.validate(Unknown Source)
	at org.apache.xerces.jaxp.validation.ValidatorImpl.validate(Unknown Source)
	at javax.xml.validation.Validator.validate(Validator.java:141)
	at org.springframework.xml.validation.Jaxp13ValidatorFactory$Jaxp13Validator.validate(Jaxp13ValidatorFactory.java:61)
	at org.springframework.ws.server.endpoint.interceptor.AbstractValidatingInterceptor.handleRequest(AbstractValidatingInterceptor.java:143)
	at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:207)
	at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
	at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
	at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1572)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1521)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:136)
	at nl.icscards.commons.monitoring.FlowTracerFilter.doFilter(FlowTracerFilter.java:69)
	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:142)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:121)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain._doFilter(WebAppFilterChain.java:82)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:759)
	at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3177)
	at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:253)
	at com.ibm.ws.webcontainer.VirtualHost.handleRequest(VirtualHost.java:229)
	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1970)
	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:114)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:472)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewInformation(HttpInboundLink.java:411)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:288)
	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminaters(NewConnectionInitialReadCallback.java:207)
	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:109)
	at com.ibm.ws.tcp.channel.impl.WorkQueueManager.requestComplete(WorkQueueManager.java:566)
	at com.ibm.ws.tcp.channel.impl.WorkQueueManager.attemptIO(WorkQueueManager.java:619)
	at com.ibm.ws.tcp.channel.impl.WorkQueueManager.workerRun(WorkQueueManager.java:952)
	at com.ibm.ws.tcp.channel.impl.WorkQueueManager$Worker.run(WorkQueueManager.java:1039)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1471)","*JDK 1.4
*Jaxb1 (with p:validating=""true"")
*Interceptor org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor
*Stax",,,,,,,,,,,,,,,SWS-230,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-20 19:55:35.0,7846,true,gregturn(gregturn),,,,"0|i01mt3:",9572,9609,,,,,,,,"20/Dec/07 6:31 PM;fbascheper;Note: the XML was invalid in this case.","20/Dec/07 7:55 PM;arjen.poutsma;Does the log show any more details of the stack trace? Most importantly, the location the NullpointerException occurred? ","01/Jan/08 10:33 PM;fbascheper;I've looked further into this. The NPE occurs exactly at line 70 of AbstractStaxXmlReader, where the following statement is executed:
            SAXParseException saxException = new SAXParseException(ex.getMessage(), null, null,
                    ex.getLocation().getLineNumber(), ex.getLocation().getColumnNumber(), ex);

The original exception (ex) is an XmlStreamException, as expected. But unfortunately ex.getLocation() returns null, so a NPE is produced.

Fortunately this is already fixed in 1.0.3 (as per SWS-230).

See also:
http://fisheye3.cenqua.com/browse/springframework/spring-ws/branches/spring-ws-1.0/xml/src/main/java/org/springframework/xml/stream/AbstractStaxXmlReader.java?r1=8941&r2=9163


","01/Jan/08 10:35 PM;fbascheper;Consequentially these issues can be linked, and this one can be added to the fix list of 1.0.3.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#417|https://github.com/spring-projects/spring-ws/issues/417]. ",,,,,,,,,,,,,
getting error when trying to use IBM MQ JMS implementation as transport.,SWS-258,18925,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,thapasya1,thapasya1,18/Dec/07 5:53 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,23/Jan/08 12:55 AM,1.5 M1,,,,,,1.5 M2,,Core,,,,,0,,,,,,,"I already have a working version of Spring 1.0 with JMS/MQ as transport. We extended 1.0 to add that support. Since 1.5 has built-in support, I am trying to use 1.5 M1. I am getting following error when I try to send a message. Including configuration file except and also exception trace.

This framework has been excellent help so far. It is well written. Thanks for developing this.

I will also be doing investigation regarding this issue.


Configuration :

    <bean id=""jndiTemplate"" class=""org.springframework.jndi.JndiTemplate"">
        <property name=""environment"">
            <props>
                <prop key=""java.naming.factory.initial"">com.ibm.mq.jms.context.WMQInitialContextFactory</prop>
                <prop key=""java.naming.provider.url"">QM_wwhq458m</prop>
            </props>
        </property>
    </bean>

    <!-- JMS Queue Connection Factory -->
    <bean id=""internalJmsQueueConnectionFactory""
        class=""org.springframework.jndi.JndiObjectFactoryBean"">
        <property name=""jndiTemplate"">
            <ref bean=""jndiTemplate""/>
        </property>
        <property name=""jndiName"">
            <value>QM_wwhq458m</value>
        </property>
    </bean>

    <!-- Spring JMS Queue Connection Factory -->
    <bean id=""jmsQueueConnectionFactory""
        class=""org.springframework.jms.connection.SingleConnectionFactory102"">
        <property name=""targetConnectionFactory"">
            <ref bean=""internalJmsQueueConnectionFactory""/>
        </property>
        <property name=""pubSubDomain"">
            <value>false</value>
        </property>
    </bean>

    <!-- JMS Destination Resolver -->
    <bean id=""jmsDestinationResolver""
        class=""org.springframework.jms.support.destination.JndiDestinationResolver"">
        <property name=""jndiTemplate"">
            <ref bean=""jndiTemplate""/>
        </property>
        <property name=""cache"">
            <value>true</value>
        </property>
    </bean>

 <bean id=""JMSMQSender"" class=""org.springframework.ws.transport.jms.JmsMessageSender"">
		      <property name=""connectionFactory"" ref=""jmsQueueConnectionFactory""/>
	 </bean>
     <bean id=""webServiceTemplate"" class=""org.springframework.ws.client.core.WebServiceTemplate"">
		<property name=""messageSenders"">
			<list>
				<ref local=""JMSMQSender"" />
				<ref local=""HttpUrlConnectionMessageSender"" />
			</list>
		</property>
		<property name=""defaultUri"" value=""jms:RequestQueue?deliveryMode=NON_PERSISTENT""/>
		<property name=""marshaller"">
			<ref local=""RequestPayloadMarshaller"" />
		</property>
		<property name=""unmarshaller"">
			<ref local=""ResponsePayloadUnmarshaller"" />
		</property>
     </bean>


Exception Trace : 

Caused by: org.springframework.ws.client.WebServiceTransportException: Could not use transport: Could not set property: MQJMS1058: Invalid message property name: Content-Type; nested exception is org.springframework.ws.transport.jms.JmsTransportException: Could not set property: MQJMS1058: Invalid message property name: Content-Type
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:430)
	at org.springframework.ws.client.core.WebServiceTemplate.doSendAndReceive(WebServiceTemplate.java:360)
	at org.springframework.ws.client.core.WebServiceTemplate.sendSourceAndReceiveToResult(WebServiceTemplate.java:306)
	at com.ual.caribou.transport.JMSTransportNew.invoke(JMSTransportNew.java:70)
	at com.ual.caribou.core.CaribouDispatchImpl.invoke(CaribouDispatchImpl.java:118)
	... 20 more
Caused by: org.springframework.ws.transport.jms.JmsTransportException: Could not set property: MQJMS1058: Invalid message property name: Content-Type
	at org.springframework.ws.transport.jms.JmsSenderConnection.addRequestHeader(JmsSenderConnection.java:152)
	at org.springframework.ws.transport.AbstractSenderConnection$RequestTransportOutputStream.addHeader(AbstractSenderConnection.java:108)
	at org.springframework.ws.soap.saaj.Saaj12Implementation.writeTo(Saaj12Implementation.java:247)
	at org.springframework.ws.soap.saaj.SaajSoapMessage.writeTo(SaajSoapMessage.java:118)
	at org.springframework.ws.transport.AbstractWebServiceConnection.send(AbstractWebServiceConnection.java:36)
	at org.springframework.ws.client.core.WebServiceTemplate.sendRequest(WebServiceTemplate.java:550)
	at org.springframework.ws.client.core.WebServiceTemplate.sendAndReceive(WebServiceTemplate.java:408)
	... 24 more
Caused by: javax.jms.MessageFormatException: MQJMS1058: Invalid message property name: Content-Type
	at com.ibm.jms.JMSMessage.newMessageFormatException(JMSMessage.java:4674)
	at com.ibm.jms.JMSMessage.setStringProperty(JMSMessage.java:5658)
	at org.springframework.ws.transport.jms.JmsSenderConnection.addRequestHeader(JmsSenderConnection.java:149)
	... 30 more
","Windows XP, JDK 1.5, Eclipse 3.3, IBM MQ  6.0.0.0 - j000-L050519.1, SAAJ 1.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-18 10:25:44.0,7848,true,gregturn(gregturn),,,,"0|i0410f:",23538,20102,,,,,,,,"18/Dec/07 10:25 AM;arjen.poutsma;It seems like JMS properties can only contain valid Java identifiers, and therefore not contain dashes. Guess we need some conversion mechanism to convert from JMS properties to transport headers.","18/Dec/07 10:59 AM;arjen.poutsma;The JMS over SOAP spec (http://mail-archives.apache.org/mod_mbox/ws-axis-dev/200701.mbox/raw/%3C80A43FC052CE3949A327527DCD5D6B27020FB65C@MAIL01.bedford.progress.com%3E/3#requester-states)  suggests using SOAPJMS_contentType as property name.

I'm not so sure whether that's a good solution, because it makes the transport SOAP-specific (though only in property names).","23/Jan/08 12:55 AM;arjen.poutsma;Fixed. 

Could you try a snapshot (http://static.springframework.org/spring-ws/sites/1.5/downloads/snapshots.html) and see if it works now with IBM MQ?

Make sure to get a recent snapshot: snapshots dated 2008-01-23 and higher contain the fix.","21/Feb/08 11:05 AM;thapasya1;Arjen,

It is working.

Thanks.","08/Mar/08 11:25 PM;arjen.poutsma;Closing 1.5 M2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#415|https://github.com/spring-projects/spring-ws/issues/415]. ",,,,,,,,,,,,
Infinite loop in XsdBasedSoap11Wsdl4jDefinitionBuilder#buildMessages method,SWS-257,18921,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,romaz,romaz,17/Dec/07 7:32 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,18/Dec/07 10:36 AM,1.0.2,,,,,,1.0.3,1.5 M2,Core,,,,,0,,,,,,,"When creating a WSDL based on XSD, the method XsdBasedSoap11Wsdl4jDefinitionBuilder#buildMessages goes in infinite loop trying to generate a new prefix for each namespace found in the XSD. It uses a very ugly while(true)/break implementation, forgetting to increment the counter i, so if you have more than one namespace it never reaches the break statement and loop indefinitely.

Very nasty bug with obvious fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-18 10:36:48.0,7849,true,gregturn(gregturn),,,,"0|i01w07:",11062,11041,,,,,,,,"18/Dec/07 10:36 AM;arjen.poutsma;Nasty bug indeed. Thanks for spotting it!","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#414|https://github.com/spring-projects/spring-ws/issues/414]. ",,,,,,,,,,,,,,,,
DomPoxMessage not clearing DOM on setting the result,SWS-248,18819,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,atifmk,atifmk,07/Dec/07 2:04 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,07/Dec/07 2:26 AM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"I am using the POX method to implement a simple XML service. The problem I am having has to do with the XML transformations. The way the PayloadTransformingInterceptor is implemented, it sets the transformation result on the same Document object in DomPoxMessage as the source dom. This is ending up just appending the transformed XML to the original XML.
I wrote my own interceptor and it ended up being the same result. I also tried to add a new method setDocument(Document) to the DomPoxMessage class. I then stored the result of transformation in a new DomResult and then set the resulting dom on the DomPoxMessage. It works fine upto this point, but then somewhere during the internals of Spring-WS it ends up causing a problem and starts throwing null pointer exceptions.

This has been really frustrating and considering that there is barely any documentation on the POX in general, this is really turning out to be a loosing cause.
Reply With Quote
atifmk

  #2  
Old 12-03-2007, 04:56 PM
Arjen Poutsma Arjen Poutsma is offline
Senior Member
Spring Team
	  	
Join Date: Jul 2005
Location: Rotterdam, the Netherlands
Posts: 1,166
Default
I think this is something I can fix by simply emptying the document if setPayloadResult() is called (similar to SOAP). If you create a JIRA issue, I will look at it.

I will also try and add some POX documentation in 1.5, or maybe a sample.
__________________
Arjen Poutsma
Spring Web Services Dev Lead
Please read the FAQ","Spring-WS 1.02, JDK 1.6.0_02",,,,,,,,,,,,,,,,,,,SWS-249,,,,,,,,,,,,,,,,,24969600,,2007-12-07 02:26:03.0,7858,true,gregturn(gregturn),,,,"0|i01w0f:",11063,11042,,,,,,,,"07/Dec/07 2:26 AM;arjen.poutsma;Fixed, both in 1.5 M1, and 1.0.3.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#403|https://github.com/spring-projects/spring-ws/issues/403]. ",,,,,,,,,,,,,,,
Exception thrown when schemaPrefix is empty in XsdBasedSoap11Wsdl4jDefinitionBuilder,SWS-247,18795,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,alankstewart,alankstewart,05/Dec/07 8:05 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,07/Dec/07 12:46 AM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"When the schemaPrefix is deliberately set to empty in the XsdBasedSoap11Wsdl4jDefinitionBuilder bean, the following exception is thrown:

org.springframework.ws.wsdl.WsdlDefinitionExceptio n: WSDLException: faultCode=PARSER_ERROR: Problem parsing '- WSDL Document -'.: org.xml.sax.SAXParseException: Element or attribute do not match QName production: QName::=(NCName':')?NCName.; nested excep
aused by:
avax.wsdl.WSDLException: WSDLException: faultCode=PARSER_ERROR: Problem parsing '- WSDL Document -'.: org.xml.sax.SAXParseException: Element or attribute do not match QName production: QName::=(NCName':')?NCName.
at com.ibm.wsdl.xml.WSDLWriterImpl.getDocument(Unknow n Source)


This did not occur in 1.0 and 1.0.1
Alan",JDK1.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-07 13:24:28.0,7859,true,gregturn(gregturn),,,,"0|i01w0n:",11064,11043,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","08/Jan/08 7:29 AM;alankstewart;Upgraded to 1.0.3, set schemaPrefix to empty (ie  <property name=""schemaPrefix"" value="""" />  ), but exception still thrown
","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#402|https://github.com/spring-projects/spring-ws/issues/402]. ",,,,,,,,,,,,,,,
SAXParseException when using HttpURLConnection,SWS-245,18774,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,03/Dec/07 7:17 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,06/Dec/07 6:15 AM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"When using the HttpUrlConnection in combination with the WebServiceTemplate, the following exception occurs:

org.xml.sax.SAXParseException: The root element is required in a well-formed document

This seems to occur in Java 1.4, using SAAJ 1.2. A detailed description of the issue is available at http://forum.springframework.org/showthread.php?t=40413&page=2


","JRE 1.4 Spring 2.0.7  JAXB 1 SAAJ 1.2 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:37.412,7861,true,gregturn(gregturn),,,,"0|i01w0v:",11065,11044,,,,,,,,"06/Dec/07 1:37 AM;arjen.poutsma;Fixed in 1.5 M1 and 1.0.3.","06/Dec/07 6:15 AM;arjen.poutsma;Fixed, for real this time.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#398|https://github.com/spring-projects/spring-ws/issues/398]. ",,,,,,,,,,,,,,
Soap headers with whitespace cause java.lang.ClassCastException: com.sun.xml.messaging.saaj.soap.impl.TextImpl,SWS-244,18770,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,lafondoo,lafondoo,03/Dec/07 4:31 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,05/Dec/07 11:09 PM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"Soap headers that contain whitespace between xml elements result in ClassCastExceptions when using Sun's SAAJ 1.2 jar (I'm using Sun's 1.1 soap message factory ""com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl"").  If you remove the whitespace between the xml elements on the Soap header on the request, the ClassCastException goes away.

The error is caused by the following code that assumes all nodes returned back are SOAPHeaderElement instances but the whitespace nodes are returned back as com.sun.xml.messaging.saaj.soap.impl.TextImpl instances.

org.springframework.ws.soap.saaj.SaajSoap11Header

    public Iterator examineHeaderElementsToProcess(String[] actors) {
        List result = new ArrayList();
        Iterator iterator = getImplementation().examineAllHeaderElements(getSaajHeader());
        while (iterator.hasNext()) {
            SOAPHeaderElement saajHeaderElement = (SOAPHeaderElement) iterator.next();   <- class cast happens here


Here's the stack trace:

java.lang.ClassCastException: com.sun.xml.messaging.saaj.soap.impl.TextImpl        
        at org.springframework.ws.soap.saaj.SaajSoap11Header.examineHeaderElementsToProcess(SaajSoap11Header.java:46)
        at org.springframework.ws.soap.server.SoapMessageDispatcher.handleHeaders(SoapMessageDispatcher.java:108)
        at org.springframework.ws.soap.server.SoapMessageDispatcher.handleRequest(SoapMessageDispatcher.java:92)
        at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:199)
        at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
        at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
        at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
        at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
        at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:763)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:856)
        at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:227)
        at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:125)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:175)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3231)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2002)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1908)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1362)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:209)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:181)","Spring WS 1.0.2, Sun's SAAJ 1.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-05 23:09:52.0,7862,true,gregturn(gregturn),,,,"0|i01w13:",11066,11045,,,,,,,,"05/Dec/07 11:09 PM;arjen.poutsma;Fixed.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#397|https://github.com/spring-projects/spring-ws/issues/397]. ",,,,,,,,,,,,,,,
Allow for custom ErrorHandler in PayloadValidatingInterceptor,SWS-242,18648,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,avthart,avthart,22/Nov/07 11:45 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,24/Mar/11 3:15 AM,1.0.2,,,,,,2.0.1,,Core,OXM,XML,,,0,,,,,,,"Validating a SOAP request or response with PayloadValidatingInterceptor or Jaxb2Marshaller fails when using MTOM.

The spring-ws MTOM sample fails when PayloadValidatingInterceptor is added to the endpoint interceptor chain.

Schema:
    <element name=""SendRequest"" type=""tns:SendMessage""/>

    <complexType name=""SendMessage"">
       	<sequence>
   		<element name=""sender"" type=""string""/>
   		<element name=""recipient"" type=""string""/>
            	<element name=""content"" type=""base64Binary"" xmime:expectedContentTypes=""*/*""/>
       	</sequence>
   </complexType>

SOAP request:
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:mail=""http://www.enovation.nl/ems/mailwebservice"">
   <soapenv:Header/>
   <soapenv:Body>
      <mail:SendRequest>
         <mail:sender>1</mail:sender>
         <mail:recipient>2</mail:recipient>
         <mail:content><inc:Include xmlns:inc=""http://www.w3.org/2004/08/xop/include"" href=""cid:768176637073""/></mail:content>
      </mail:SendRequest>
   </soapenv:Body>
</soapenv:Envelope>

SOAP response:
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SOAP-ENV:Fault>
         <faultcode>SOAP-ENV:Client</faultcode>
         <faultstring xml:lang=""en"">Validation error</faultstring>
         <detail>
            <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-type.3.1.2: Element 'mail:content' is a simple type, so it must have no element information item [children].</spring-ws:ValidationError>
         </detail>
      </SOAP-ENV:Fault>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>",,";24/Mar/11 3:12 AM;arjen.poutsma;2640",,,,0,2640,,,0,2640,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-23 00:05:41.0,3853,true,gregturn(gregturn),,,,"0|i01mtr:",9575,9612,,,,,,,,"23/Nov/07 12:05 AM;arjen.poutsma;I don't think this can't be fixed, because the underlying validation mechanism (i.e. javax.xml.validation) is not aware of XOM and MTOM. 

Unless a solution is suggested, I will resolve this as won't (or rather: can't) fix.
","23/Nov/07 12:55 AM;avthart;I already have looked in the source code for a possible fix and also think this can't be fixed easily.

","23/Nov/07 8:47 AM;arjen.poutsma;Can't fix, unless we find a way to let JAXP deal with XOM.","07/Jan/11 1:21 AM;epostaci;What about the suggested fix on this post.
http://forum.springsource.org/showthread.php?t=71974

Skip elements can be a workaround for this issue.","07/Jan/11 5:56 AM;arjen.poutsma;Perhaps that will work, I will take a look at it for 2.0.1","24/Mar/11 3:18 AM;arjen.poutsma;You can now provide your own error handler for the PayloadValidationInterceptor (which should implement org.springframework.xml.validation.ValidationErrorHandler). In that error handler, you can do anything you like (including skipping elements).

I did not provide a way to skip element by default, because it essentially comes down to stack-trace parsing, and I am reluctant to put fragile code like that in the SWS code base.","04/May/12 7:03 AM;arjen.poutsma;Closing old issues","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#395|https://github.com/spring-projects/spring-ws/issues/395]. ",,,,,,,,,,
NullPointerException during processing message with empty body,SWS-241,18617,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,macieq,macieq,20/Nov/07 9:36 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,21/Nov/07 9:32 PM,1.0.2,,,,,,1.0.3,1.5 M1,XML,,,,,0,,,,,,,"When I'm sending message with empty body, i receive this exception:

java.lang.NullPointerException
	org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:418)
	org.springframework.ws.server.endpoint.support.PayloadRootUtils.getPayloadRootQName(PayloadRootUtils.java:83)
	org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping.getLookupKeyForMessage(PayloadRootAnnotationMethodEndpointMapping.java:57)
	org.springframework.ws.server.endpoint.mapping.AbstractMethodEndpointMapping.getEndpointInternal(AbstractMethodEndpointMapping.java:54)
	org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointMapping.java:83)
	org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:242)
	org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:195)
	org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:162)
	org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(WebServiceMessageReceiverObjectSupport.java:87)
	org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessageReceiverHandlerAdapter.java:57)
	org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.java:197)
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:441)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)

And message causing this:
<soapenv:Envelope
	xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""
	xmlns:q0=""http://nevermind""
	xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	<soapenv:Header>
		<q0:sessionId>0PPAacL8UUACtCG7kdBp6MfNQ47FwUZd</q0:sessionId>
	</soapenv:Header>
	<soapenv:Body></soapenv:Body>
</soapenv:Envelope>","Linux, JBoss AS 4.2.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-07 13:24:27.0,7864,true,gregturn(gregturn),,,,"0|i01ol3:",9860,9887,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#393|https://github.com/spring-projects/spring-ws/issues/393]. ",,,,,,,,,,,,,,,,
Marshalling with Castor and Axiom results in a XMLStreamException,SWS-239,18608,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,arjen.poutsma,arjen.poutsma,20/Nov/07 11:28 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,06/Dec/07 6:17 AM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"Exception in thread ""main"" org.springframework.oxm.castor.CastorUnmarshalling FailureException: Castor unmarshalling exception: ParseError at [row,col]:[1,8192] 
Message: Unexpected end of stream; nested exception is javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,8192] 
Message: Unexpected end of stream 
Caused by: javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,8192] 
Message: Unexpected end of stream 

    at org.springframework.xml.stream.AbstractStaxXmlRead er.parse(AbstractStaxXmlReader.java:70) 
    at org.springframework.xml.stream.AbstractStaxXmlRead er.parse(AbstractStaxXmlReader.java:50) 
    at org.springframework.oxm.castor.CastorMarshaller.un marshalSaxReader(CastorMarshaller.java:286) 
    at org.springframework.oxm.castor.CastorMarshaller.un marshalXmlStreamReader(CastorMarshaller.java:297) 
    at org.springframework.oxm.AbstractMarshaller.unmarsh alStaxSource(AbstractMarshaller.java:301) 
    at org.springframework.oxm.AbstractMarshaller.unmarsh al(AbstractMarshaller.java:125) 
    at org.springframework.ws.support.MarshallingUtils.un marshal(MarshallingUtils.java:65) 
    at org.springframework.ws.client.core.WebServiceTempl ate$2.extractData(WebServiceTemplate.java:275) 
    at org.springframework.ws.client.core.WebServiceTempl ate.sendAndReceive(WebServiceTemplate.java:416) 
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 264) 
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 252) 
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 244) 

In my opinion this is the first bug. Also when payloadCaching is enabled, the same error message has to occur. 

To see where the stream ends I changed the code of org.springframework.ws.soap.axiom.AxiomSoapMessage : 

    public AxiomSoapMessage(SOAPMessage soapMessage, Attachments attachments, String soapAction, boolean payloadCaching) { 

        Assert.notNull(soapMessage, ""'soapMessage' must not be null""); 
        Assert.notNull(attachments, ""'attachments' must not be null""); 
        System.out.println(soapMessage.getOMDocumentElemen t().toString()); 
        ... 

And wow, it worked correctly. So I think there is a second bug. The SOAP message is not fully parsed. Possibly that is because of the size. The mssage has more than 1 MB, so maybe there is buffering problem or something 

",,,,,,,,,,,,,,,,SWS-245,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:36.062,7866,true,gregturn(gregturn),,,,"0|i01w1b:",11067,11046,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#391|https://github.com/spring-projects/spring-ws/issues/391]. ",,,,,,,,,,,,,,,,
AbstractMethodEndpointMapping does not support JDK Proxies,SWS-238,18606,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,katre,katre,20/Nov/07 5:50 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,20/Nov/07 10:59 AM,1.0.2,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"AbstractMethodEndpointMapping has a method, getEndpointClass, which attempts to determine the correct base class for an endpoint.  This method correctly deals with CGLIB-based proxies, but does not handle the more common JDK proxies.

One solution would be to use the AopUtils.getTargetClass method to perform this check.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-07 13:24:27.0,7867,true,gregturn(gregturn),,,,"0|i01w1j:",11068,11047,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#390|https://github.com/spring-projects/spring-ws/issues/390]. ",,,,,,,,,,,,,,,,
"If no BinarySecurityToken, i.e. IssuerSerial, no CertificateValidationCallback triggered for cert authentication by Acegi/JAAS - only signature check callback",SWS-234,18529,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,arjen.poutsma,dobytek,dobytek,14/Nov/07 10:37 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,14/Nov/07 10:57 PM,1.0.1,,,,,,,,,,,,,0,,,,,,,"From an old forum posting called ""ACEGI authorization with IssuerSerial-based certificates"" (below).
I have the same problem with 1.0.1 - but I'll try 1.0.2 to see if a fix was ever done.

>>
When the certificate is embedded in the message, only CertificateValidationCallbacks are passed to the callback handlers. Everything works (but is possibly redundant?), since both handlers deal with that callback. The KeyStore handler processes it first and the ACEGI handler looks up UserDetails and configures the security context.


The two handlers are not redundant. The first handler checks whether the certificate has not been expired, and whether a trust path can be created for it. The second one checks whether the certificate is valid in your context.


When the certificate is not embedded in the message (i.e., IssuerSerial), only SignatureVerificationKeyCallbacks are passed to the handlers. The KeyStore handler understands this one, and it does its job just fine: the certificate is found if already known to the server. The problem is that the ACEGI handler is not invoked, since it only understands the CertificateValidationCallback. So there is no way to configure the ACEGI security context unless the certificate is embedded in the message.

I figure I can make a custom callback handler that handles the SignatureVerificationKeyCallback and performs the desired ACEGI processing. However, the fact that the SignatureVerificationKeyCallback doesn't occur when the certificate is embedded make me think I'm not understanding something. Is this an XWSS feature, or something Spring-WS could control?


This sounds like an issue I can fix. Could you create a JIRA issue here: http://opensource.atlassian.com/projects/spring/browse/SWS

Thanks for spotting this!

",JDK6 on RHEL3,,,,,,,,,,,,,,,SWS-52,,,,,,,,,,,,,,,,,,,,,24969600,,2020-09-23 16:45:34.923,7871,true,gregturn(gregturn),,,,"0|i01yxz:",11538,11491,,,,,,,,"23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#384|https://github.com/spring-projects/spring-ws/issues/384]. ",,,,,,,,,,,,,,,,,
PayloadValidatingInterceptor refuses to validate correct message with a top-level attribute,SWS-232,18523,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,katre,katre,14/Nov/07 6:08 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,14/Nov/07 6:34 AM,1.0.2,,,,,,1.0.3,1.5 M1,XML,,,,,0,,,,,,,"With the following schema:
    <element name=""EchoMessageRequest"">
        <complexType>
            <attribute name=""message"" type=""string""/>
        </complexType>
    </element>


I attempt to submit the message:
<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:sch=""http://www.example.com/soap-test/schemas"">
   <soapenv:Header/>
   <soapenv:Body>
      <sch:EchoMessageRequest message=""hello world""/>
   </soapenv:Body>
</soapenv:Envelope>

And I get the response:
<SOAP-ENV:Envelope xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SOAP-ENV:Fault>
         <faultcode>SOAP-ENV:Client</faultcode>
         <faultstring xml:lang=""en"">Validation error</faultstring>
         <detail>
            <spring-ws:ValidationError xmlns:spring-ws=""http://springframework.org/spring-ws"">cvc-complex-type.3.2.2: Attribute 'message' is not allowed to appear in element 'sch:EchoMessageRequest'.</spring-ws:ValidationError>
         </detail>
      </SOAP-ENV:Fault>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>

I wrote a small handler that takes XML and attempts to validate it against the same schema the PayloadValidatingInterceptor uses, and it reports no problem.

I am attaching a minimal project which reproduces this issue.  I used SOAPui to test but this seems to be independent of the client.","Java 1.6.0_03 on amd64 linux
Running in JBoss 4.2.0.ga",,,,,,,,,,,,,,,,,,,,,,,"14/Nov/07 6:10 AM;katre;soap-test.zip;https://jira.spring.io/secure/attachment/13107/soap-test.zip",,,,,,,,,,,,,24969600,,2007-11-14 06:25:02.0,7873,true,gregturn(gregturn),,,,"0|i01olb:",9861,9888,,,,,,,,"14/Nov/07 6:10 AM;katre;This is a minimal maven project which creates soap-test-1.0.war.  I loaded it into JBoss as soap-test.war.

The WSDL is available at http://localhost:8080/soap-test/soap-test.wsdl

The custom validator is at http://localhost:8080/soap-test/validator
","14/Nov/07 6:12 AM;katre;As a note, I verified that JBoss has a recent version of both xerces and xalan available in the endorsed classpath.  I upgraded these to the latest (xalan 2.7.0 and xercesImpl 2.8.1) and the problem persisted.","14/Nov/07 6:18 AM;katre;After re-reading the FAQ, I have found the problem.  Because I am using Java 1.6, I need to _remove_ the xalan and xercesImpl jars from JBoss's lib/endorsed directory.

This issue is apparently due to a xerces/java6 incompatability.","14/Nov/07 6:25 AM;arjen.poutsma;And removing these from lib/endorsed fixes the problem?","14/Nov/07 6:30 AM;katre;Yes, it does.  It still doesn't explain why the validation worked when I did it in the custom handler, but not in the interceptor, but removing those makes the interceptor work properly.","14/Nov/07 6:34 AM;arjen.poutsma;Probably has to do with JBoss classloading. 

I'm marking this issue as resolved, thanks for the investigation!","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#382|https://github.com/spring-projects/spring-ws/issues/382]. ",,,,,,,,,,
AxiomSoapMessageFactory throws NPE,SWS-230,18494,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,mhausl,mhausl,12/Nov/07 8:11 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,20/Nov/07 11:34 AM,1.0.2,,,,,,1.0.3,1.5 M1,XML,,,,,0,,,,,,,"I used the following configuration for accessing a web service:

    <bean id=""webServiceTemplate"" class=""org.springframework.ws.client.core.WebServi ceTemplate"">

        <property name=""defaultUri"" value=""http://anyURL""/>
        <property name=""marshaller"" ref=""castorMarshaller""/>
        <property name=""unmarshaller"" ref=""castorMarshaller""/>

    </bean>

Due to the fact that the access occurs inside a JBoss running on JDK 1.5 I run into the problem that SAAJ is not available in the JDK and the JBoss version of the SAAJ-library led to SAAJ-version problems.

So I switched to Axiom using the following:

    <bean id=""axiom_MessageFactory"" class=""org.springframework.ws.soap.axiom.AxiomSoap MessageFactory"">

        <property name=""payloadCaching"" value=""true""/>

    </bean>
    <bean id=""webServiceTemplate"" class=""org.springframework.ws.client.core.WebServi ceTemplate"">

        <constructor-arg ref=""axiom_MessageFactory""/>
        <property name=""defaultUri"" value=""http://anyURI""/>
        <property name=""marshaller"" ref=""castorMarshaller""/>
        <property name=""unmarshaller"" ref=""castorMarshaller""/>

    </bean>

I have to access the web service three times. The first and second call were successful. The third failed with:
Exception in thread ""main"" java.lang.NullPointerException

    at org.springframework.xml.stream.AbstractStaxXmlRead er.parse(AbstractStaxXmlReader.java:70)
    at org.springframework.xml.stream.AbstractStaxXmlRead er.parse(AbstractStaxXmlReader.java:50)
    at org.springframework.oxm.castor.CastorMarshaller.un marshalSaxReader(CastorMarshaller.java:286)
    at org.springframework.oxm.castor.CastorMarshaller.un marshalXmlStreamReader(CastorMarshaller.java:297)
    at org.springframework.oxm.AbstractMarshaller.unmarsh alStaxSource(AbstractMarshaller.java:301)
    at org.springframework.oxm.AbstractMarshaller.unmarsh al(AbstractMarshaller.java:125)
    at org.springframework.ws.support.MarshallingUtils.un marshal(MarshallingUtils.java:65)
    at org.springframework.ws.client.core.WebServiceTempl ate$2.extractData(WebServiceTemplate.java:275)
    at org.springframework.ws.client.core.WebServiceTempl ate.sendAndReceive(WebServiceTemplate.java:416)
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 264)
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 252)
    at org.springframework.ws.client.core.WebServiceTempl ate.marshalSendAndReceive(WebServiceTemplate.java: 244)

The NullPointerException does not help very much. But i switched the payloadCaching property to:

    <property name=""payloadCaching"" value=""false""/>

fixed it.","Windows XP, JDK 1.5",,,,,,,,,,,,,,,,,,,SWS-239,,,,,,,,,,,,,,,,,24969600,,2007-11-20 11:29:55.0,7875,true,gregturn(gregturn),,,,"0|i01olj:",9862,9889,,,,,,,,"20/Nov/07 11:29 AM;arjen.poutsma;Split bug into two separate bugs.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#380|https://github.com/spring-projects/spring-ws/issues/380]. ",,,,,,,,,,,,,,,
JibxMarshaller should support marshalling/unmarshalling of all mapped classes,SWS-229,18493,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,imilina,imilina,12/Nov/07 6:14 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,20/Nov/07 11:07 AM,1.0.2,,,,,,1.0.3,1.5 M1,OXM,,,,,0,,,,,,,"The current version of JiBX (1.1.5) supports marshalling and unmarshalling of all classes defined in binding definition file, for single IBindingFactory instance. The class that is passed in to BindingDirectory to get the factory instance is just used to locate the generated class that contains binding information - it is not the only class that this factory can marshall/unmarshall.

The solution: The supports() method of org.springframework.oxm.jibx.JibxMarshaller should be modified to return true for all mapped classes of IBindingFactory.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-07 13:24:27.0,7876,true,gregturn(gregturn),,,,"0|i01muf:",9578,9615,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#379|https://github.com/spring-projects/spring-ws/issues/379]. ",,,,,,,,,,,,,,,,
"NPE when ""mustUnderstand"" attribute is in SOAP header and no Interceptors have been defined ",SWS-227,18465,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,luc.neulens,luc.neulens,09/Nov/07 12:31 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,14/Nov/07 4:23 AM,1.0.1,,,,,,1.0.3,1.5 M1,,,,,,0,,,,,,,"When the ""mustUnderstand"" attribute is set (to either ""0"" or ""1"") and no interceptors are defined a ""PayloadRootQNameEndpointMapping"" the org.springframework.ws.soap.server.SoapMessageDispatcher throw a NullPointerException when iterating over the mapped endpoint ´s Interceptors. 

Adding a ""org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"" temporarily fixes the problem (as the code just gets ""any"" EndpointInterceptor before checking via ""instanceof"" on SoapEndpointInterceptor.class).

Our Server might receive a SOAP Message with the mustUnderstand attribute set (to either ""0"" or ""1"") or not, but does not need to handle the attribute.

A nullpointer check would be appropriate here.


thx in advance.
","Tomcat 5.5, JDK 5.0",,,,60,60,,0%,60,60,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-14 04:23:53.0,7878,true,gregturn(gregturn),,,,"0|i01w1r:",11069,11048,,,,,,,,"14/Nov/07 4:23 AM;arjen.poutsma;Fixed.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#377|https://github.com/spring-projects/spring-ws/issues/377]. ",,,,,,,,,,,,,,,
Exception mapping corrupts the 'defaultFault' instance,SWS-226,18457,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,blmiller,blmiller,08/Nov/07 6:01 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,14/Nov/07 4:09 AM,1.0.1,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,"In AbstractSoapFaultDefinitionExceptionResolver (v. 1.0.1), have the following code fragment:

    protected final boolean resolveExceptionInternal(MessageContext messageContext, Object endpoint, Exception ex) {
        Assert.isTrue(messageContext.getResponse() instanceof SoapMessage,
                ""AbstractSoapFaultDefinitionExceptionResolver requires a SoapMessage"");

        SoapFaultDefinition definition = getFaultDefinition(endpoint, ex);
        if (definition == null) {
 1.           definition = defaultFault;
        }
        if (definition == null) {
            return false;
        }
        if (!StringUtils.hasLength(definition.getFaultStringOrReason())) {
2.            definition.setFaultStringOrReason(ex.getMessage());
        }
....


Problem is if (1.) and (2.) are hit on first exception handled by defaultFault, it is effectively calling 'defaultFault.setFaultOrReason(...)'.  This in essence sets the defaultFault faultOrReason field (as defnition points to the defaultFault instance), making it non-null.  Problem is that subsequent exceptions that are assigned the defaultFault will now have an already populated faultOrReason code (from the first exception), and thus statement (2.) will never be invoked.  This results in all subsequent defaultFault exceptions having the exception message from the first defaultFault.

Categorizing this as Major as all reported exceptions that map to 'defaultFault' will be incorrect, with exception of first mapped defaultFault exception.  Solution is trivial: use 'default fault factory' to create new instance of defaultFault for every use, or reset the faultOrReason code to null after the message has been constructed.

====================================================================================

Below test fragments found the behavior (the second test fails, as the returned exception has the message from the first test.  Yet running the second test standalone works fine:

  /**
   * This will happen on badly formed payload (validation error)
   */
  public void testInvalidXmlCharacter() throws NoSuchAlgorithmException, IOException, ServletException, DocumentException {
    // &#1 is illegal xml character
    String payload = buildEchoPayload(""foo""+ (char) 0x01);
    MockHttpServletResponse mockResp = invokeWebService(payload, ""guitest"", ""bugBgone"",
         HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    Element resp = getSoapBodyPayload(mockResp);

    assertEquals(""Invalid char preventing xml parsing"",
        ""\n"" +
            ""<SOAP-ENV:Fault xmlns:SOAP-ENV=\""http://schemas.xmlsoap.org/soap/envelope/\"">\n"" +
            ""  <faultcode>SOAP-ENV:Server</faultcode>\n"" +
            ""  <faultstring xml:lang=\""en\"">Could not access envelope: Unable to create envelope from given source: ; nested exception is com.sun.xml.messaging.saaj.SOAPExceptionImpl: Unable to create envelope from given source:</faultstring>\n"" +
            ""</SOAP-ENV:Fault>"",
        XmlUtils.toString(resp));
  }


  public void testThrownAppException() throws NoSuchAlgorithmException, IOException, ServletException, DocumentException {
    String payload = buildEchoPayload(EchoController.THROW_NULL_POINTER_CMD);
    MockHttpServletResponse mockResp = invokeWebService(payload, ""guitest"", ""bugBgone"",
        HttpServletResponse.SC_INTERNAL_SERVER_ERROR);

    Element resp = getSoapBodyPayload(mockResp);
    assertEquals(""\n"" +
        ""<SOAP-ENV:Fault xmlns:SOAP-ENV=\""http://schemas.xmlsoap.org/soap/envelope/\"">\n"" +
        ""  <faultcode>SOAP-ENV:Server</faultcode>\n"" +
        ""  <faultstring xml:lang=\""en\"">Thrown on purpose for testing...</faultstring>\n"" +
        ""</SOAP-ENV:Fault>"",
        XmlUtils.toString(resp));
  }

","Windows XP, java 5",,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-09 14:18:42.0,7879,true,gregturn(gregturn),,,,"0|i01w1z:",11070,11049,,,,,,,,"08/Nov/07 6:06 AM;blmiller;Disregard second possible solution (resetting defaultFault faultOrReason code to null), as not thread-safe.","09/Nov/07 2:18 PM;arjen.poutsma;Fixed. Thanks for pointing this out!","14/Nov/07 3:57 AM;arjen.poutsma;Also fixing in 1.0.3","14/Nov/07 3:57 AM;arjen.poutsma;Reopening for 1.0.3","14/Nov/07 4:09 AM;arjen.poutsma;Also fixed in 1.0 branch.","07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#376|https://github.com/spring-projects/spring-ws/issues/376]. ",,,,,,,,,,,
"Spring-WS doesn't send ""Content-Transfer-Encoding: binary"" with MTOM part and this creates interoperability issue with .NET 3.0",SWS-225,18454,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,serg1,serg1,08/Nov/07 2:27 AM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,22/Nov/07 2:03 AM,,,,,,,1.0.3,1.5 M1,Core,,,,,0,,,,,,,See details at  http://forum.springframework.org/showthread.php?t=45941,Found with Spring-WS 1.0.1 and .NET 3.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-12-07 13:24:27.0,7880,true,gregturn(gregturn),,,,"0|i01w27:",11071,11050,,,,,,,,"07/Dec/07 1:24 PM;arjen.poutsma;Closing issues for 1.5.0 M1","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#375|https://github.com/spring-projects/spring-ws/issues/375]. ",,,,,,,,,,,,,,,,
AbstractAnnotationMethodEndpointMapping doesn't allow proxies,SWS-222,18391,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Blocker,Fixed,arjen.poutsma,raykrueger,raykrueger,04/Nov/07 1:50 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,05/Nov/07 3:38 AM,,,,,,,1.0.2,,Core,,,,,0,,,,,,,"The AbstractAnnotationMethodEndpointMapping looks up annotated method endpoints in the BeanPostProcessor::postProcessBeforeInitialization method. It then holds a reference to the bean inside of a ""MethodEndpoint"" instance.

The problem is that proxies get created AFTER the postProcessBeforeInitialization method. The lifecycle goes...


BeanPostProcessor::postProcessBeforeInitialization
AbstractAutoProxyCreator::createProxy
BeanPostProcessor::postProcessAfterInitialization

The AbstractAnnotationMethodEndpointMapping should implement postProcessAfterInitialization, not postProcessBeforeInitialization ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-08 01:14:02.0,7883,true,gregturn(gregturn),,,,"0|i0411z:",23545,20112,,,,,,,,"04/Nov/07 9:55 PM;raykrueger;Just to be clear...
I made this a critical as AOP is used heavily in Spring applications and there is no workaround available for this bug. Whereas bug SWS-220 for example is critical because of the broken contract, but can be worked around by subclassing for a patch.  Unfortunately, both postProcessBeforeInitialization and postProcessAfterInitialization are final in the AbstractAnnotationMethodEndpointMapping.","04/Nov/07 9:56 PM;raykrueger;Sorry, I meant to say ""I made this a BLOCKER as...""","08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#373|https://github.com/spring-projects/spring-ws/issues/373]. ",,,,,,,,,,,,,,
Jaxb2Marshaller::supports method does not consider multiple marshallers,SWS-220,18356,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,raykrueger,raykrueger,30/Oct/07 2:06 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,05/Nov/07 8:59 AM,1.0,,,,,,1.0.2,,OXM,,,,,0,,,,,,,"When evaluating multiple MarshallingMethodEndpointAdapters, each with their own Jaxb2MarshallingEndpoint, the first MarshallingMethodEndpointAdapter::supports method is always true.

We are building a modular application; where each endpoint is packaged as it's own module.
Each of those endpoint modules has it's own MarshallingMethodEndpointAdapter and it's own Jaxb2Marshaller.
This means that when the webapp is packaged and running there will be multiple MarshallingMethodEndpointAdapters available to the MessageDispatcher.

The Jaxb2Marshaller::supports method is implemented to return true for any subclass of Jaxb2Element.

{code}
    public boolean supports(Class clazz) {
        if (JAXBElement.class.isAssignableFrom(clazz)) {
            return true;
        }
        ...
    }
{code}

The Jaxb2Marshaller should not even bother with this check, it should only return true if the JaxbContext is capable of supporting the given class.",,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/07 2:35 PM;raykrueger;Jaxb2Marshaller.patch.txt;https://jira.spring.io/secure/attachment/13052/Jaxb2Marshaller.patch.txt","31/Oct/07 2:46 AM;raykrueger;Jaxb2Marshaller.patch2.txt;https://jira.spring.io/secure/attachment/13060/Jaxb2Marshaller.patch2.txt","31/Oct/07 3:51 AM;raykrueger;Jaxb2Marshaller.patch3.txt;https://jira.spring.io/secure/attachment/13062/Jaxb2Marshaller.patch3.txt",,,,,,,,,,,24969600,,2007-11-02 00:30:03.0,7885,true,gregturn(gregturn),,,,"0|i01mv3:",9581,9618,,,,,,,,"30/Oct/07 2:36 PM;raykrueger;I've attached a patch that works a bit differently than the current implementation. Rather than using the Introspector, it uses the contextPath and classes to be bound.
","31/Oct/07 2:46 AM;raykrueger;Uploading Jaxb2Marshaller.patch2.txt to fix bugs in the first upload...","31/Oct/07 3:51 AM;raykrueger;Jaxb2Marshaller.patch3.txt is the latest

Removed the map and the synchronized block. Made the ""supports"" method defensive.

","31/Oct/07 4:29 AM;raykrueger;Assigned a fix version of 1.0.2. though Arjen is probably the one who should make that decision :)","02/Nov/07 12:30 AM;arjen.poutsma;The attached patch results in the marshaller not supporting types such as JAXBElement<FlightElement>, which should be supported.","02/Nov/07 1:03 AM;arjen.poutsma;Unfortunately, the generic information of JAXBElement is erased at runtime, so we can do nothing but:

        if (JAXBElement.class.isAssignableFrom(clazz)) { 
            return true; 
        } 

in the supports method. The problem is that we need to know whether the type is supported before the method is invoked, and the generic parameters are only available at runtime. Catch-22.

So it is not as simple as it seems. One possible solution is to create a ParameterizedMarshallingMethodEndpointAdapter in core-tiger, which has a different supportsInternal() implementation.","02/Nov/07 1:07 AM;raykrueger;Wouldn't it be possible to do that JAXBElement check at the end then?
Check the contextPath, check the classesToBeBound, and then fall back on the JAXBElement check.

It's unfortunate that the JaxbContext doesn't have some sort of ""supports"" method.","05/Nov/07 8:59 AM;arjen.poutsma;I've introduced a GenericMarshallingMethodEndpointAdapter, which supports the new java.lang.reflect.Type hierarchy introduced in Java 5. This GenericMarshallingMethodEndpointAdapter should be used instead of the plain MarshallingMethodEndpointAdapter in combination with Java 5 marshallers, such as the Jaxb2Marshaller. It's a drop-in replacement.

I've adapted the airline sample accordingly, and updated the reference docs.","05/Nov/07 9:59 PM;raykrueger;Arjen, I see you're checking the contextPath using ""getContextPath().startsWith(packageName)"". From what I read the ""contextPath"" for the JAXBContext can be a colon delimited string. Meaning that if my packageName isn't first in the list, this check will fail. Granted I used ""contains"" which wasn't added till 1.5 :P, but an indexOf check here might be necessary.

Or did I read that wrong?","05/Nov/07 10:11 PM;arjen.poutsma;Yes, you are right. The funny thing is that I was just thinking about the same thing. Great minds...

I will tokenize the context path first based on colon, and then use startsWith.","05/Nov/07 10:44 PM;arjen.poutsma;Done. I now tokenize the context path. 

Also, the spec says that supported classes should be in the package denoted by the context path (and not subpackages). So I now use equals rather than startsWith.","06/Nov/07 3:50 AM;arjen.poutsma;After some more testing, the supports() issue turned out to be even more difficult than I thought. All JAXB2 Marshallers must also support JAXBElements which are parameterized over a primitive or standard type, such as JAXBElement<String>, etc.","08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#371|https://github.com/spring-projects/spring-ws/issues/371]. ",,,,
Spring-ws reads the entier stream when logging set to debug,SWS-219,18355,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Critical,Fixed,arjen.poutsma,vbossica,vbossica,30/Oct/07 12:16 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,31/Oct/07 1:19 AM,1.0.1,,,,,,1.0.2,,Core,,,,,0,,,,,,,"Spring-ws reads the entire message for logging purposes (when logging is set to DEBUG) and Axiom complains that it has nothing else to process:

DEBUG org.springframework.ws.soap.server.SoapMessageDispatcher - MessageDispatcher with name 'testing-ws' received request [<?xml version='1.0' encoding='UTF-8'?><soapenv:Envelope xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""><soapenv:Body xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/""><ns1:echoRequest xmlns:ns1=""http://localhost:8080/testing-ws/services/echo"">Hello</ns1:echoRequest></soapenv:Body></soapenv:Envelope>]
DEBUG org.springframework.ws.soap.server.SoapMessageDispatcher - Endpoint mapping [org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMapping@11415c8] maps request to endpoint [com.testing.system.infrastructure.ws.EchoEndpoint@1a220e6]
DEBUG org.springframework.ws.soap.server.SoapMessageDispatcher - Testing endpoint adapter [org.springframework.ws.server.endpoint.adapter.MessageEndpointAdapter@11df164]
DEBUG org.springframework.ws.soap.server.SoapMessageDispatcher - Testing endpoint adapter [org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapter@67c1a6]
DEBUG org.springframework.ws.soap.server.SoapMessageDispatcher - Testing endpoint exception resolver [org.springframework.ws.soap.server.endpoint.SimpleSoapExceptionResolver@6279d]
WARN  org.springframework.ws.soap.server.SoapMessageDispatcher - Endpoint invocation resulted in exception - responding with SOAP Fault
org.springframework.ws.soap.axiom.AxiomSoapBodyException: Could not access envelope: javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,322]
Message: already reached end document; nested exception is org.apache.axiom.om.OMException: javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,322]
Message: already reached end document
Caused by: 
org.apache.axiom.om.OMException: javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,322]
Message: already reached end document
	at org.apache.axiom.om.impl.builder.StAXOMBuilder.next(StAXOMBuilder.java:239)
	at org.apache.axiom.om.impl.llom.OMElementImpl.buildNext(OMElementImpl.java:552)
	at org.apache.axiom.om.impl.llom.OMElementImpl.getFirstOMChild(OMElementImpl.java:563)
	at org.apache.axiom.om.impl.llom.OMElementImpl.getFirstElement(OMElementImpl.java:823)

Setting the log level to INFO solves the problem but the info is quite hard to find and very unpleasant during development/debugging","Tomcat 5.5, JDK 1.4.2, Axiom 1.2.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-10-31 01:19:25.0,7886,true,gregturn(gregturn),,,,"0|i01yyf:",11540,11493,,,,,,,,"30/Oct/07 12:19 PM;vbossica;credit where credit is due.

Original post detailing the problem http://forum.springframework.org/showpost.php?p=145934&postcount=6
","31/Oct/07 1:19 AM;arjen.poutsma;The message dispatcher logs incoming and outgoing messages to the commons log in two ways:

- if TRACE is enabled, it logs the complete message contents on the TRACE level,
- if DEBUG is enabled, it logs the message payload name on the DEBUG level

the problem you experienced had to do with commons logging facade for log4j. Recently, log4j introduced the TRACE level, which commons had for some time now. So what the commons facade for log4j did in 1.0.4 whenever trace() was invoked, was pass it along at DEBUG level. The good news is that this is fixed in commons logging 1.1. 

So upgrading to commons logging 1.1 solves your problem, because the message is not consumed anymore.

One thing I did change is the logging category for these messages to org.springframework.ws.server.MessageTracing for server-side logging and org.springframework.ws.client.MessageTracing for client-side logging. This makes it easier to enable/disable the log without getting rid of the standard MessageDispatcher messages.
","08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#351|https://github.com/spring-projects/spring-ws/issues/351]. ",,,,,,,,,,,,,,
"IllegalArgumentException ""faultString cannot be empty""",SWS-218,18340,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,rstoya05-aop,rstoya05-aop,28/Oct/07 1:02 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,29/Oct/07 12:42 AM,1.0.1,,,,,,1.0.2,,Core,,,,,0,,,,,,,"If there is a runtime exception on the server-side that doesn't have a message (e.g. NullPointerException) the client side
gets an IllegalArgumentException ""faultString cannot be empty"". The exception seems to be coming from SaajSoap11Body.java, line 50. 

Could this be configured so the client always gets SOAP response even if the server had a runtime exception?

Also in the above scenario the server-side doesn't show the original runtime exception but instead hides it by showing the IllegalArgumentException only.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-08 01:14:02.0,7887,true,gregturn(gregturn),,,,"0|i01yyn:",11541,11494,,,,,,,,"08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#370|https://github.com/spring-projects/spring-ws/issues/370]. ",,,,,,,,,,,,,,,,
Booking a flight for non-existent flight should result in NoSuchFlightException,SWS-217,18339,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,rstoya05-aop,rstoya05-aop,28/Oct/07 12:55 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,29/Oct/07 12:33 AM,1.0.1,,,,,,1.0.2,,Samples,,,,,0,,,,,,,"Submitting an invalid flight number (e.g. KL9999) bubbles up as an EmptyResultDataAccessException instead of NoSuchFlightException. This is because the JpaFlightDao uses query.getSingleResult(), which can throw a NoResultException instead of returning null. Submitting an invalid username has a similar issue. 

I've created a fix in the JPA DAO's to ensure they catch a NoResultException and re-throw it as a business exception. In the case of an invalid username I added a NoSuchUsernameException business exception.

See attached patch for a root-level Eclipse project named 'airline' created with 'mvn eclipse:eclipse' from the samples directory and connected to the Spring-WS SVN repository.",,,,,,,,,,,,,,,,,,,,,,,,"28/Oct/07 12:56 PM;rstoya05-aop;airline.patch;https://jira.spring.io/secure/attachment/13047/airline.patch",,,,,,,,,,,,,24969600,,2007-10-29 00:33:27.0,7888,true,gregturn(gregturn),,,,"0|i01n47:",9622,9659,,,,,,,,"28/Oct/07 12:56 PM;rstoya05-aop;Attaching eclipse patch file.","29/Oct/07 12:33 AM;arjen.poutsma;Fixed. 

Rather than throwing a business exception at the DAO level (which introduces a cyclic dependency between service and dao layer), all DAOs now return null when an object is not found.","08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#369|https://github.com/spring-projects/spring-ws/issues/369]. ",,,,,,,,,,,,,,
AbstractValidatingInterceptor.handleResponseValidationErrors's JavaDoc is wrong,SWS-216,18315,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Minor,Fixed,arjen.poutsma,jkuipers,jkuipers,25/Oct/07 5:27 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,26/Oct/07 9:42 PM,1.0.1,,,,,,1.0.2,,Core,,,,,0,,,,,,,"AbstractValidatingInterceptor.handleResponseValidationErrors's JavaDoc states the following:
    /**
     * Template method that is called when the response message contains validation errors. Default implementation logs
     * all errors, and returns <code>false</code>, i.e. do not send the response.
     *
     * @param messageContext the message context
     * @param errors         the validation errors @return <code>true</code> to continue sending the response,
     *                       <code>false</code> (the default) otherwise
     */

However, returning false here doesn't mean that the response won't be send. It means that the rest of the Interceptor chain won't be processed and that the response will be send out immediately (see MessageDispatcher.triggerHandleResponse). The docs should be changed to represent the actual behaviour.",N/A,,,,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,,,,,,,,,24969600,,2007-11-08 01:14:02.0,7889,true,gregturn(gregturn),,,,"0|i01yyv:",11542,11495,,,,,,,,"08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#368|https://github.com/spring-projects/spring-ws/issues/368]. ",,,,,,,,,,,,,,,,
SoapFaultDetailElement does not allow child elements,SWS-210,18240,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Won't Fix,raykrueger,raykrueger,raykrueger,17/Oct/07 5:52 AM,17/Oct/07 6:11 AM,10/Jul/21 8:38 AM,17/Oct/07 6:11 AM,1.0,,,,,,,,Core,,,,,0,,,,,,,"It is not possible to add child elements to the SoapFaultDetailElement interface.

I was hoping to customize my SoapFault with a complex detail element. The underlying SaajSoapFaultDetailElement is using the java.xml.soap.DetailElement interface. This interface allows for nested SOAPElement addChidElement calls.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,433296000,,,7895,false,raykrueger(raykrueger),,,,"0|i03bl3:",19419,20113,,,,,,,,"17/Oct/07 6:11 AM;raykrueger;Never mind...
That's what getResult() is for :P",,,,,,,,,,,,,,,,,
Namespace declarations may be removed from the wsdl when transformWsdlLocations = true,SWS-203,18137,Bug,Closed,SWS,Spring Web Services,software,gregturn,"This project has moved all of it's issues to <a href=""https://github.com/spring-projects/spring-ws/issues"">GitHub</a>. Please open new issues there.",https://spring.io/projects/spring-ws/,Major,Fixed,arjen.poutsma,fbascheper,fbascheper,04/Oct/07 5:53 PM,23/Sep/20 4:45 PM,10/Jul/21 8:38 AM,22/Oct/07 2:06 AM,1.0.1,,,,,,1.0.2,,,,,,,0,,,,,,,"See [http://forum.springframework.org/showthread.php?t=44599]

When a SimpleWsdl11Definition is used in combination with transformWsdlLocations=true, namespace declarations are removed which leads to an invalid wsdl. 

Resetting transfromWsdlLocations to false resolves the issue (with the penalty that the wsdl locations are no longer transformed).",,,,,,,,,,,,,,,,,,,,,,,,"07/Oct/07 9:09 PM;fbascheper;WsdlDefinitionHandlerAdapterTestExtension.zip;https://jira.spring.io/secure/attachment/12997/WsdlDefinitionHandlerAdapterTestExtension.zip","08/Oct/07 12:44 AM;fbascheper;sws-203-tests.patch;https://jira.spring.io/secure/attachment/12999/sws-203-tests.patch","07/Oct/07 11:27 PM;fbascheper;sws-203.patch;https://jira.spring.io/secure/attachment/12998/sws-203.patch",,,,,,,,,,,24969600,,2007-10-05 22:05:27.0,4069,true,gregturn(gregturn),,,,"0|i01z0f:",11549,11502,,,,,,,,"05/Oct/07 10:05 PM;arjen.poutsma;Could you try to use Xalan 2.7 and Xerces 2.8.1? That might solve this issue...","07/Oct/07 6:26 PM;fbascheper;That's why I tried to recreate the problem with the echo sample. 
AFAIK the echo sample already uses xalan 2.7 and xerxes 2.8.1. 
At least, if I build it then the echo.war in samples/echo/target already contains these jars.
Just to be sure, I copied xalan-2.7.0.jar and xercesImpl-2.8.1 to j2se-1.5.0_12/jre/lib/endorsed and re-ran mvn jetty:run but with the same results.","07/Oct/07 9:09 PM;fbascheper;I've created two extra testcases which can be added to the WsdlDefinitionHandlerAdapterTest. These demonstrate the problem. 

The first testcase (testHandleSimpleWsdl11DefinitionWithoutTransformLocations)  creates a WsdlDefinitionHandlerAdapter (using a SimpleWsdl11Definition) with transformlocations = false. The expected result is the input of the SimpleWsdlDefinition.

The second testcase (testHandleSimpleWsdl11DefinitionWithTransformLocations) creates the WsdlDefinitionHandlerAdapter (using a SimpleWsdl11Definition) with transformlocations = true. The expected result is a different (but valid) wsdl.
However, I get the following error upon validation by wsdl4j:

{noformat} 
javax.wsdl.WSDLException: WSDLException (at /wsdl:definitions/wsdl:message[1]/wsdl:part): faultCode=UNBOUND_PREFIX: Unable to determine namespace of 'schema:echoResponse'.
	at com.ibm.wsdl.util.xml.DOMUtils.getQName(Unknown Source)
	at com.ibm.wsdl.util.xml.DOMUtils.getQualifiedAttributeValue(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.getQualifiedAttributeValue(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.parsePart(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.parseMessage(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.parseDefinitions(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at com.ibm.wsdl.xml.WSDLReaderImpl.readWSDL(Unknown Source)
	at org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapterTest.testHandleSimpleWsdl11DefinitionWithTransformLocations(WsdlDefinitionHandlerAdapterTest.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
{noformat} 
","07/Oct/07 9:11 PM;fbascheper;BTW The System.out.println in both test methods can of course be removed from these tests, should you decide to include them.","07/Oct/07 9:18 PM;fbascheper;I just found that if I *remove* xalan-2.7.0.jar from the classpath that the testcase no longer fails (and my system out does indeed show the namespace prefixes that were removed previously.","07/Oct/07 10:53 PM;fbascheper;Verified the above with various supported runtimes:

IBM JDK 1.4.2 SR5 (default installation): not supported (spring-ws FAQ)
IBM JDK 1.4.2 SR5 (with endorsed libraries xalan-2.7.0, xercesImpl-2.8.1 and xml-apis-1.3.04): namespace prefixes removed

SUN JDK 1.4.2_15 (default installation): not supported (spring-ws FAQ)
SUN JDK 1.4.2_15 (with endorsed libraries xalan-2.7.0, xercesImpl-2.8.1 and xml-apis-1.3.04): namespace prefixes removed

SUN JDK 1.5.0_12 (default installation): works OK
SUN JDK 1.5.0_12 with xalan-2.7 in the classpath: namespace prefixes removed

SUN JDK 1.6.0_02 (default installation): works OK
SUN JDK 1.6.0_02 with xalan-2.7 in the classpath: not supported, nevertheless namespace prefixes are removed
","07/Oct/07 11:05 PM;arjen.poutsma;Thanks for the detailed report. It will surely help resolving this issue, if possible.","07/Oct/07 11:27 PM;fbascheper;Both testcases run successfully in my environment with the attached patch for SimpleWsdl11Definition.java","07/Oct/07 11:28 PM;fbascheper;(Verified on all the above runtimes)","08/Oct/07 12:44 AM;fbascheper;And a separate patch file for the new tests.

Note that I get one failing test if I run mvn package inside the core directory without having applied the patch for the SimpleWsdl11Definition. 
All tests succeed if I run mvn package after both patches have been applied.
Apparently mvn package always includes xalan in the path, since my default java version is 1.5.0_12.","22/Oct/07 2:06 AM;arjen.poutsma;Fixed. Thanks for the patch!","08/Nov/07 1:14 AM;arjen.poutsma;Closing 1.0.2 issues.","23/Sep/20 4:45 PM;gregturn;Spring Web Services has moved from Jira to GitHub Issues. This issue was migrated to [spring-projects/spring-ws#355|https://github.com/spring-projects/spring-ws/issues/355]. ",,,,,
